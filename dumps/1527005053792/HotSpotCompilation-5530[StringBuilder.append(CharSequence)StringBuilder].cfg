begin_compilation
  name " HotSpotCompilation-5530[java.lang.StringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5530[java.lang.StringBuilder.append(CharSequence)]"
  date 1527005223462
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?43 ?19 v7 v757 ?55 v756 j427 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v754 v762 ?43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v326 a388 v742 v792 i745 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v762 
=== Succesors ===
next: v351 
=== Usages ===
v449 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v762 #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v742 
y: v448 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v742 y: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v349 #falseSuccessor: v348  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a743 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a743  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
=== Succesors ===
next: v792 
=== Usages ===
a138 v792 v755 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 #next: v792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a743 
=== Succesors ===
next: a744 
=== Usages ===
=== Predecessor ===
a743 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a743 #next: a744  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a744 v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
=== Succesors ===
next: i745 
=== Usages ===
a149 v760 v758 
=== Predecessor ===
v792 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v757 #next: i745  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
i745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v758 
=== Succesors ===
next: i746 
=== Usages ===
i58 i92 i300 v278 
=== Predecessor ===
a744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v758 #next: i746  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a743 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
=== Succesors ===
next: i747 
=== Usages ===
i40 ?43 i181 j446 
=== Predecessor ===
i745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v755 #next: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i747 v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
=== Succesors ===
next: v63 
=== Usages ===
i40 j442 v163 v182 
=== Predecessor ===
i746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i746 
y: i747 
=== Succesors ===
=== Usages ===
v198 i58 i95 i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i746 y: i747  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i40 
y: i745 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i745  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 i92 v105 i364 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i59 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a388 v163 v96 v109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9530590961786755
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606759612726101105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a744 
=== Succesors ===
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a744  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i745 
y: i59 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i745 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i92 
y: i93 
=== Succesors ===
=== Usages ===
i95 i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i92 y: i93  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i94 
y: i40 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i94 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i44 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v96 
trueValue: i40 
falseValue: i94 
=== Succesors ===
=== Usages ===
j451 i108 v105 v373 v278 i300 a388 v415 i364 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v96 trueValue: i40 falseValue: i94  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i59 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i206 y: i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v229 #falseSuccessor: v227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] â‡Š00000000ffff38ed â‡ˆ00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] â‡Š000000007ffffff7 â‡ˆ000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i107 
y: i206 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i44 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i108 y: i44  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v233 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v233 #falseSuccessor: v231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219] â‡Š00000000ffff37ed â‡ˆ00000000ffff37ed
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j367 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v763 v764 
=== Predecessor ===
v231 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j367 
index: - 
=== Succesors ===
=== Usages ===
j412 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
=== Succesors ===
next: j413 
=== Usages ===
j371 v765 v766 a387 v771 v767 v768 v769 v770 
=== Predecessor ===
j367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v763 #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j367 
index: - 
=== Succesors ===
=== Usages ===
j413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: v376 
=== Usages ===
v377 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] â‡Š0000000000ffffff â‡ˆ0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i372 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i206 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 v462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
j413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v375 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586249228500189195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i206 
y: i59 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] â‡Š0000000000000017 â‡ˆ0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] â‡Š0000000000000001
=== Inputs ===
x: i364 
y: i395 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i364 y: i395  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] â‡Š00000000fffffff8 â‡ˆ00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i396 
y: i365 
=== Succesors ===
=== Usages ===
j370 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i396 y: i365  <|@  <|@
f <@~|@floating>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i366 
=== Succesors ===
=== Usages ===
j371 v767 v768 v769 v770 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i366  <|@  <|@
f <@~|@floating>@ <|@
tid j371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
=== Inputs ===
x: j370 
y: j412 
=== Succesors ===
=== Usages ===
v377 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j370 y: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j413 
y: j371 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j413 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v377 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v377 #trueSuccessor: v382 #falseSuccessor: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556428785198626264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586188344425545247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
value: j371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 value: j371 stateAfter: - lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v767 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v767 #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v768 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v768 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v769 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v769 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v770 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v770 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v765 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v765 value: i206 stateAfter: - lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
value: j363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v766 value: j363 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
value: v450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v771 value: v450 stateAfter: - lastLocationAccess: - #next: v386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j412 
=== Succesors ===
next: v389 
=== Usages ===
a392 
=== Predecessor ===
v386 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j412 #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
a387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572061939899811621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572549012496963202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v378 v380 
=== Succesors ===
next: a388 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v378 v380 #next: a388  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v362 i206 i44 
=== Succesors ===
next: v391 
=== Usages ===
a392 
=== Predecessor ===
v379 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v362 i206 i44 #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
a388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v390 
values: a387 a388 
=== Succesors ===
=== Usages ===
v775 a306 v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v390 values: a387 a388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v389 v391 
=== Succesors ===
next: v592 
=== Usages ===
a392 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v389 v391 #next: v592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v465 
=== Usages ===
j593 j595 
=== Predecessor ===
v390 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i745 
y: i206 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i745 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v278 
trueValue: i745 
falseValue: i206 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v278 trueValue: i745 falseValue: i206  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j657 v775 j456 v462 v589 j639 j645 j649 j653 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j363 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j452 y: j363  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j657 j708 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j612 j675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] â‡Šfffffffffffffffe â‡ˆfffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j653 j705 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j620 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] â‡Š0000000000000004 â‡ˆ0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j621 j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] â‡Šfffffffffffffffc â‡ˆfffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j649 j702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j687 j629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j645 j699 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j693 j637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] â‡Šfffffffffffffff0 â‡ˆfffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j639 j694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 v695 j622 j630 v640 j688 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v463 
falseSuccessor: v464 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v463 #falseSuccessor: v464  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a392 
index: - 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a392 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v592 
address: v761 
=== Succesors ===
=== Usages ===
v776 v778 v780 v782 v784 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v592 address: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
j593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@~|@floating>@ <|@
tid j593 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v592 
address: v760 
=== Succesors ===
=== Usages ===
v777 v779 v781 v783 v785 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v592 address: v760  <|@  <|@
f <@~|@floating>@ <|@
tid j639 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j452 
y: j638 
=== Succesors ===
=== Usages ===
v640 v642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j638  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j639 
y: j399 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j639 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v466 #falseSuccessor: v467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v466 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v470 
values: j399 j637 
=== Succesors ===
=== Usages ===
v785 j637 v784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v470 values: j399 j637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v469 
=== Succesors ===
next: v748 
=== Usages ===
v748 v474 v475 j630 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v469 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j630 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v470 
address: v785 
=== Succesors ===
next: v726 
=== Usages ===
v726 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v470 address: v785 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j630 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v784 
value: v748 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v784 value: v748 stateAfter: - lastLocationAccess: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j630 
y: j146 
=== Succesors ===
=== Usages ===
j622 j630 v642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j630 y: j146  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j639 
y: j637 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j639 y: j637  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v642 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v642 #trueSuccessor: v474 #falseSuccessor: v476  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v470 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v470 #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j622 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v479 
values: j399 j637 
=== Succesors ===
=== Usages ===
v783 j629 j613 v646 v782 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v479 values: j399 j637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v478 v480 
=== Succesors ===
next: v502 
=== Usages ===
j622 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v478 v480 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j452 
y: j644 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j644  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j645 
y: j622 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j645 y: j622  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v501 #falseSuccessor: v500  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
v749 
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j622 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v500 
address: v783 
=== Succesors ===
next: v724 
=== Usages ===
v724 
=== Predecessor ===
v500 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v500 address: v783 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j622 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v782 
value: v749 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v782 value: v749 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j622 
y: j358 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j613 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v490 
values: j629 j622 
=== Succesors ===
=== Usages ===
v781 j621 j605 v650 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v490 values: j629 j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v505 
=== Succesors ===
next: v508 
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v505 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j452 
y: j648 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j648  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j649 
y: j613 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j649 y: j613  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v507 #falseSuccessor: v506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
v750 
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j613 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v506 
address: v781 
=== Succesors ===
next: v722 
=== Usages ===
v722 
=== Predecessor ===
v506 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v506 address: v781 #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j613 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
value: v750 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 value: v750 stateAfter: - lastLocationAccess: - #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j613 
y: j620 
=== Succesors ===
=== Usages ===
j605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j613 y: j620  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j605 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v494 
values: j621 j613 
=== Succesors ===
=== Usages ===
v779 j612 j596 v654 v778 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: j621 j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v493 v511 
=== Succesors ===
next: v514 
=== Usages ===
j605 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v493 v511 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j452 
y: j652 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j652  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j653 
y: j605 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j653 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v654 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v654 #trueSuccessor: v513 #falseSuccessor: v512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
v751 
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j605 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v512 
address: v779 
=== Succesors ===
next: v720 
=== Usages ===
v720 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v512 address: v779 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j605 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
value: v751 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v778 value: v751 stateAfter: - lastLocationAccess: - #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j605 
y: j598 
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j605 y: j598  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j596 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v497 
values: j612 j605 
=== Succesors ===
=== Usages ===
v777 v658 v776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v497 values: j612 j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v496 v517 
=== Succesors ===
next: v520 
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v496 v517 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j452 
y: j656 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j657 
y: j596 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j657 y: j596  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v519 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i752 
=== Usages ===
i752 
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i752  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j596 
=== Succesors ===
=== Usages ===
i752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i752 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v518 
address: v777 
=== Succesors ===
next: v718 
=== Usages ===
v718 
=== Predecessor ===
v518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v518 address: v777 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j596 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
value: i752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
i752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v776 value: i752 stateAfter: - lastLocationAccess: - #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v482 v499 v523 
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v482 v499 v523 #next: v661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v530 
=== Usages ===
j663 
=== Predecessor ===
v483 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i206 
=== Succesors ===
=== Usages ===
j456 v589 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j451 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j452 y: j451  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v529 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v529 #falseSuccessor: v528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a392 
index: j452 
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a392 index: j452  <|@  <|@
f <@~|@floating>@ <|@
tid j663 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v661 
address: v775 
=== Succesors ===
=== Usages ===
v786 v787 v788 v789 v790 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v661 address: v775  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j451 
y: j452 
=== Succesors ===
=== Usages ===
j708 j694 j699 j702 j705 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j451 y: j452  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j456 
y: j638 
=== Succesors ===
=== Usages ===
v695 v697 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j638  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j399 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v695 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v695 #trueSuccessor: v531 #falseSuccessor: v532  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j688 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v535 
values: j399 j693 
=== Succesors ===
=== Usages ===
v790 j693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v535 values: j399 j693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v534 
=== Succesors ===
next: v736 
=== Usages ===
j688 v538 v539 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v534 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j688 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
value: v737 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v790 value: v737 stateAfter: - lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j688 
y: j146 
=== Succesors ===
=== Usages ===
j682 j688 v697 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j146  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j693 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j693  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v697 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v697 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v535 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v535 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v543 
values: j399 j693 
=== Succesors ===
=== Usages ===
v789 j687 j676 v700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v543 values: j399 j693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v542 v544 
=== Succesors ===
next: v565 
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v542 v544 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j456 
y: j644 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j644  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j699 
y: j682 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j699 y: j682  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v564 #falseSuccessor: v563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j682 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j682  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
value: v741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v789 value: v741 stateAfter: - lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j682 
y: j358 
=== Succesors ===
=== Usages ===
j676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j682 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
v735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v554 
values: j687 j682 
=== Succesors ===
=== Usages ===
v788 j681 j670 v703 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v554 values: j687 j682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v553 v568 
=== Succesors ===
next: v571 
=== Usages ===
j676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v553 v568 #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid j702 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j456 
y: j648 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j648  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j702 
y: j676 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j702 y: j676  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v569 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v570 #falseSuccessor: v569  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j676 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: v740 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: v740 stateAfter: - lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j676 
y: j620 
=== Succesors ===
=== Usages ===
j670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j676 y: j620  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j670 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v557 
values: j681 j676 
=== Succesors ===
=== Usages ===
v787 j675 j664 v706 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v557 values: j681 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v574 
=== Succesors ===
next: v577 
=== Usages ===
j670 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v574 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid j705 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j456 
y: j652 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j652  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j705 
y: j670 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j705 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v576 #falseSuccessor: v575  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j670 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j670  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: v739 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: v739 stateAfter: - lastLocationAccess: - #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid j675 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j670 
y: j598 
=== Succesors ===
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j670 y: j598  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j664 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v560 
values: j675 j670 
=== Succesors ===
=== Usages ===
v786 v709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v560 values: j675 j670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v559 v580 
=== Succesors ===
next: v583 
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v559 v580 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j456 
y: j656 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j708 
y: j664 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j708 y: j664  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v582 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v582 #falseSuccessor: v581  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j664 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j664  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] â‡ˆ0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
value: i738 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v786 value: i738 stateAfter: - lastLocationAccess: - #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v535 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v546 v562 v586 
=== Succesors ===
next: a306 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v546 v562 v586 #next: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a392 
=== Succesors ===
next: v202 
=== Usages ===
a116 a201 
=== Predecessor ===
v547 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a392 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a306 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
value: a201 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j427 
=== Usages ===
=== Predecessor ===
a306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 value: a201 stateAfter: - lastLocationAccess: - #next: j427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v433 
=== Usages ===
j429 
=== Predecessor ===
v202 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j427 
y: i428 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j427 y: i428  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] â‡Š00000001171be000 â‡ˆ00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j432 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j432  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
value: i434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
j427 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v772 value: i434 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a116 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v114 
values: a306 a149 
=== Succesors ===
=== Usages ===
v759 j441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: a306 a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v169 
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i747 
y: i44 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i747 y: i44  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v168 #falseSuccessor: v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i753 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
=== Succesors ===
next: v186 
=== Usages ===
i181 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v759 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i753 
y: i746 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i753 y: i746  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i747 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i747  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
i753 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v185 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: v791  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?23 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?19 
values: - - 
=== Succesors ===
=== Usages ===
?32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?19 values: - -  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?23 
values: - - 
=== Succesors ===
=== Usages ===
?55 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?23 values: - -  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?32 
values: a1 - 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?32 values: a1 -  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?55 
values: a1 a2 i746 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?55 values: a1 a2 i746  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 187
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j437 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j437  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a743 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
=== Inputs ===
object: a138 
=== Succesors ===
next: j441 
=== Usages ===
v773 
=== Predecessor ===
v183 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a138 #next: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
=== Inputs ===
object: a116 
=== Succesors ===
next: v447 
=== Usages ===
v774 
=== Predecessor ===
j437 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a116 #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j437 
index: - 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i747 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j441 
index: j442 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: j442  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i746 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v773 v774 j446 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
j441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v773 v774 j446 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
value: i40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 value: i40 stateAfter: - lastLocationAccess: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:167) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v470 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34323
stableDimension: 0
stamp: i32 [-34323] â‡Š00000000ffff79ed â‡ˆ00000000ffff79ed
stampKind: i32
value: int[-34323|0xffffffffffff79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-51219 - -34323] â‡Š00000000ffff20e5 â‡ˆ00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v320 
values: i332 i334 i322 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v320 values: i332 i334 i322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v331 v333 v356 
=== Succesors ===
next: v326 
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v331 v333 v356 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i324 
speculation: a323 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i324 speculation: a323  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?43 ?19 v7 v757 ?55 v756 j427 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v754 v762 ?43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v326 a388 v742 v792 i745 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v762 
=== Succesors ===
next: v351 
=== Usages ===
v449 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v762 #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v742 
y: v448 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v742 y: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v349 #falseSuccessor: v348  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f87ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a743 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a743  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a743 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
=== Succesors ===
next: v792 
=== Usages ===
a138 v792 v755 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 #next: v792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a743 
=== Succesors ===
next: a744 
=== Usages ===
=== Predecessor ===
a743 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a743 #next: a744  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a744 v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
=== Succesors ===
next: i745 
=== Usages ===
a149 v760 v758 
=== Predecessor ===
v792 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v757 #next: i745  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
i745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i745 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v758 
=== Succesors ===
next: i746 
=== Usages ===
i58 i92 i300 v278 
=== Predecessor ===
a744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v758 #next: i746  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a743 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i746 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
=== Succesors ===
next: i747 
=== Usages ===
i40 ?43 i181 j446 
=== Predecessor ===
i745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v755 #next: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i747 v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i747 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
=== Succesors ===
next: v63 
=== Usages ===
i40 j442 v163 v182 
=== Predecessor ===
i746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i746 
y: i747 
=== Succesors ===
=== Usages ===
v198 i58 i95 i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i746 y: i747  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i40 
y: i745 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i745  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 i92 v105 i364 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i59 
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a388 v163 v96 v109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9530590961786755
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530590961786755 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606759612726101105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid a149 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a744 
=== Succesors ===
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a744  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i745 
y: i59 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i745 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i92 
y: i93 
=== Succesors ===
=== Usages ===
i95 i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i92 y: i93  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i94 
y: i40 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i94 y: i40  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i44 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i95 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v96 
trueValue: i40 
falseValue: i94 
=== Succesors ===
=== Usages ===
j451 i108 v105 v373 v278 i300 a388 v415 i364 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v96 trueValue: i40 falseValue: i94  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i59 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i206 y: i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v229 
falseSuccessor: v227 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v229 #falseSuccessor: v227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: v11|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result int[-50963|0xffffffffffff38ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] â‡Š00000000ffff38ed â‡ˆ00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] â‡Š000000007ffffff7 â‡ˆ000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32
=== Inputs ===
x: i107 
y: i206 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i107 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i44 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i108 y: i44  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v233 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v233 #falseSuccessor: v231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v14|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
result int[-51219|0xffffffffffff37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219] â‡Š00000000ffff37ed â‡ˆ00000000ffff37ed
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51219|0xffffffffffff37ed]] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j367 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j367 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j412 
=== Usages ===
v763 v764 
=== Predecessor ===
v231 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j367 
index: - 
=== Succesors ===
=== Usages ===
j412 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j412 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
=== Succesors ===
next: j413 
=== Usages ===
j371 v765 v766 a387 v771 v767 v768 v769 v770 
=== Predecessor ===
j367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v763 #next: j413  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j367 
index: - 
=== Succesors ===
=== Usages ===
j413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j413 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: v376 
=== Usages ===
v377 
=== Predecessor ===
j412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] â‡Š0000000000ffffff â‡ˆ0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i206 
y: i372 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i206 y: i372  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 v462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v373 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
j413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v373 #trueSuccessor: v375 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586249228500189195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] â‡ˆ00000000fffffffe
=== Inputs ===
x: i206 
y: i59 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i206 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] â‡Š0000000000000017 â‡ˆ0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483647 - 2147483647] â‡Š0000000000000001
=== Inputs ===
x: i364 
y: i395 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i364 y: i395  <|@  <|@
f <@~|@floating>@ <|@
tid i365 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] â‡Š00000000fffffff8 â‡ˆ00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483648 - 2147483640] â‡ˆ00000000fffffff8
=== Inputs ===
x: i396 
y: i365 
=== Succesors ===
=== Usages ===
j370 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i396 y: i365  <|@  <|@
f <@~|@floating>@ <|@
tid j370 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] â‡ˆfffffffffffffff8
=== Inputs ===
value: i366 
=== Succesors ===
=== Usages ===
j371 v767 v768 v769 v770 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i366  <|@  <|@
f <@~|@floating>@ <|@
tid j371 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
=== Inputs ===
x: j370 
y: j412 
=== Succesors ===
=== Usages ===
v377 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j370 y: j412  <|@  <|@
f <@~|@floating>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j413 
y: j371 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j413 y: j371  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v377 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v381 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v377 #trueSuccessor: v382 #falseSuccessor: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND v19|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = ADD (x: v21|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556428785198626264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586188344425545247
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v763 
value: j371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v763 value: j371 stateAfter: - lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v21|QWORD + v16|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v767 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v767 #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [v21|QWORD + v16|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v768 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v768 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [v21|QWORD + v16|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v769 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v769 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v21|QWORD + v16|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j370 
index: j412 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j370 index: j412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
address: v770 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v770 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result [v16|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v765 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v765 value: i206 stateAfter: - lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
result [v16|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
value: j363 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v766 value: j363 stateAfter: - lastLocationAccess: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [v16|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j412 
index: - 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j412 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v771 
value: v450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v771 value: v450 stateAfter: - lastLocationAccess: - #next: v386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j412 
=== Succesors ===
next: v389 
=== Usages ===
a392 
=== Predecessor ===
v386 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j412 #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
a387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572061939899811621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572549012496963202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v378 v380 
=== Succesors ===
next: a388 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v378 v380 #next: a388  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a388 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v362 i206 i44 
=== Succesors ===
next: v391 
=== Usages ===
a392 
=== Predecessor ===
v379 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v362 i206 i44 #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
a388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a392 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v390 
values: a387 a388 
=== Succesors ===
=== Usages ===
v775 a306 v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v390 values: a387 a388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v389 v391 
=== Succesors ===
next: v592 
=== Usages ===
a392 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v389 v391 #next: v592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v465 
=== Usages ===
j593 j595 
=== Predecessor ===
v390 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i745 
y: i206 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i745 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v278 
trueValue: i745 
falseValue: i206 
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v278 trueValue: i745 falseValue: i206  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i300 
=== Succesors ===
=== Usages ===
j657 v775 j456 v462 v589 j639 j645 j649 j653 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i300  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j363 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j452 y: j363  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j657 j708 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j612 j675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j652 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] â‡Šfffffffffffffffe â‡ˆfffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j653 j705 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j620 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] â‡Š0000000000000004 â‡ˆ0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j621 j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] â‡Šfffffffffffffffc â‡ˆfffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j649 j702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:483) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] â‡Š0000000000000008 â‡ˆ0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j687 j629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] â‡Šfffffffffffffff8 â‡ˆfffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j645 j699 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] â‡Š0000000000000010 â‡ˆ0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j693 j637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] â‡Šfffffffffffffff0 â‡ˆfffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j639 j694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] â‡ˆ0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 v695 j622 j630 v640 j688 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v463 
falseSuccessor: v464 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v463 #falseSuccessor: v464  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: v13|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
result [v26|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a392 
index: - 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a392 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v592 
address: v761 
=== Succesors ===
=== Usages ===
v776 v778 v780 v782 v784 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v592 address: v761  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
j593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@~|@floating>@ <|@
tid j593 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v592 
address: v760 
=== Succesors ===
=== Usages ===
v777 v779 v781 v783 v785 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v592 address: v760  <|@  <|@
f <@~|@floating>@ <|@
tid j639 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j452 
y: j638 
=== Succesors ===
=== Usages ===
v640 v642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j638  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j639 
y: j399 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j639 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v466 
falseSuccessor: v467 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v466 #falseSuccessor: v467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = LEA [v26|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v478  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v466 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v470 
values: j399 j637 
=== Succesors ===
=== Usages ===
v785 j637 v784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v470 values: j399 j637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v469 
=== Succesors ===
next: v748 
=== Usages ===
v748 v474 v475 j630 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v469 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v30|QWORD[*] + v32|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j630 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
result v33|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v470 
address: v785 
=== Succesors ===
next: v726 
=== Usages ===
v726 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v470 address: v785 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [v29|QWORD[.] + v32|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j630 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v784 
value: v748 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v784 value: v748 stateAfter: - lastLocationAccess: - #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j630 
y: j146 
=== Succesors ===
=== Usages ===
j622 j630 v642 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j630 y: j146  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j639 
y: j637 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j639 y: j637  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v642 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v642 #trueSuccessor: v474 #falseSuccessor: v476  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V256_WORD = H [v30|QWORD[*] + v32|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v32|QWORD * 2], input: v33|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v32|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v470 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v470 #next: v480  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j622 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v479 
values: j399 j637 
=== Succesors ===
=== Usages ===
v783 j629 j613 v646 v782 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v479 values: j399 j637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v478 v480 
=== Succesors ===
next: v502 
=== Usages ===
j622 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v478 v480 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j452 
y: j644 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j644  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j645 
y: j622 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j645 y: j622  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v501 #falseSuccessor: v500  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v28|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
v749 
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v30|QWORD[*] + v35|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j622 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
result v37|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v500 
address: v783 
=== Succesors ===
next: v724 
=== Usages ===
v724 
=== Predecessor ===
v500 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v500 address: v783 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v29|QWORD[.] + v35|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j622 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v782 
value: v749 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v782 value: v749 stateAfter: - lastLocationAccess: - #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j622 
y: j358 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V128_WORD = H [v30|QWORD[*] + v35|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v35|QWORD * 2], input: v37|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j613 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v490 
values: j629 j622 
=== Succesors ===
=== Usages ===
v781 j621 j605 v650 v780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v490 values: j629 j622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v505 
=== Succesors ===
next: v508 
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v505 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid j649 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j452 
y: j648 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j648  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j649 
y: j613 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j649 y: j613  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v650 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v650 #trueSuccessor: v507 #falseSuccessor: v506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v28|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v750 
=== Usages ===
v750 
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [v30|QWORD[*] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j613 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
result v41|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v506 
address: v781 
=== Succesors ===
next: v722 
=== Usages ===
v722 
=== Predecessor ===
v506 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v506 address: v781 #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [v29|QWORD[.] + v39|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j613 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
value: v750 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 value: v750 stateAfter: - lastLocationAccess: - #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j613 
y: j620 
=== Succesors ===
=== Usages ===
j605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j613 y: j620  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V64_WORD = H [v30|QWORD[*] + v39|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v39|QWORD * 2], input: v41|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j605 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v494 
values: j621 j613 
=== Succesors ===
=== Usages ===
v779 j612 j596 v654 v778 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: j621 j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v493 v511 
=== Succesors ===
next: v514 
=== Usages ===
j605 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v493 v511 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j452 
y: j652 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j652  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j653 
y: j605 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j653 y: j605  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v654 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v654 #trueSuccessor: v513 #falseSuccessor: v512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v28|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v513 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
v751 
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v30|QWORD[*] + v43|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j605 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
result v45|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v512 
address: v779 
=== Succesors ===
next: v720 
=== Usages ===
v720 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v512 address: v779 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [v29|QWORD[.] + v43|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j605 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
value: v751 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v778 value: v751 stateAfter: - lastLocationAccess: - #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j605 
y: j598 
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j605 y: j598  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V32_WORD = H [v30|QWORD[*] + v43|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v43|QWORD * 2], input: v45|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j596 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v497 
values: j612 j605 
=== Succesors ===
=== Usages ===
v777 v658 v776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v497 values: j612 j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v496 v517 
=== Succesors ===
next: v520 
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v496 v517 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j452 
y: j656 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j452 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j657 
y: j596 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j657 y: j596  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v658 
=== Succesors ===
trueSuccessor: v519 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v658 #trueSuccessor: v519 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = DEC v28|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v523  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i752 
=== Usages ===
i752 
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i752  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v30|QWORD[*] + v47|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j593 
index: j596 
=== Succesors ===
=== Usages ===
i752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j593 index: j596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i752 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v518 
address: v777 
=== Succesors ===
next: v718 
=== Usages ===
v718 
=== Predecessor ===
v518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v518 address: v777 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v29|QWORD[.] + v47|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j595 
index: j596 
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: j596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
value: i752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
i752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v776 value: i752 stateAfter: - lastLocationAccess: - #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
v718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSX [v30|QWORD[*] + v47|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + v47|QWORD * 2], y: v49|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v482 v499 v523 
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v482 v499 v523 #next: v661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v530 
=== Usages ===
j663 
=== Predecessor ===
v483 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i206 
=== Succesors ===
=== Usages ===
j456 v589 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j451 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j452 y: j451  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v529 
falseSuccessor: v528 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v529 #falseSuccessor: v528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v26|QWORD[.] + v28|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a392 
index: j452 
=== Succesors ===
=== Usages ===
j663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a392 index: j452  <|@  <|@
f <@~|@floating>@ <|@
tid j663 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v661 
address: v775 
=== Succesors ===
=== Usages ===
v786 v787 v788 v789 v790 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v661 address: v775  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j451 
y: j452 
=== Succesors ===
=== Usages ===
j708 j694 j699 j702 j705 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j451 y: j452  <|@  <|@
f <@~|@floating>@ <|@
tid j694 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j456 
y: j638 
=== Succesors ===
=== Usages ===
v695 v697 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j638  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j399 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v695 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v532 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v695 #trueSuccessor: v531 #falseSuccessor: v532  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = LEA [v26|QWORD[.] + v28|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = SUB (x: v50|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
result v54|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j688 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v535 
values: j399 j693 
=== Succesors ===
=== Usages ===
v790 j693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v535 values: j399 j693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v534 
=== Succesors ===
next: v736 
=== Usages ===
j688 v538 v539 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v534 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
result [v51|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j688 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
value: v737 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v790 value: v737 stateAfter: - lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid j693 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j688 
y: j146 
=== Succesors ===
=== Usages ===
j682 j688 v697 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j688 y: j146  <|@  <|@
f <@~|@floating>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j694 
y: j693 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j694 y: j693  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v697 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v697 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v55|QWORD * 2], input: v54|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v535 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v535 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j682 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v543 
values: j399 j693 
=== Succesors ===
=== Usages ===
v789 j687 j676 v700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v543 values: j399 j693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v542 v544 
=== Succesors ===
next: v565 
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v542 v544 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid j699 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j456 
y: j644 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j644  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j699 
y: j682 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j699 y: j682  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v564 #falseSuccessor: v563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
result [v51|QWORD[.] + v57|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j682 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j682  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
result v59|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v789 
value: v741 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v789 value: v741 stateAfter: - lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j682 
y: j358 
=== Succesors ===
=== Usages ===
j676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j682 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
v735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v57|QWORD * 2], input: v59|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j676 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v554 
values: j687 j682 
=== Succesors ===
=== Usages ===
v788 j681 j670 v703 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v554 values: j687 j682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v553 v568 
=== Succesors ===
next: v571 
=== Usages ===
j676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v553 v568 #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid j702 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j456 
y: j648 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j648  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j702 
y: j676 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j702 y: j676  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v569 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v570 #falseSuccessor: v569  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v52|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
result [v51|QWORD[.] + v61|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j676 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j676  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
result v63|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: v740 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: v740 stateAfter: - lastLocationAccess: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j676 
y: j620 
=== Succesors ===
=== Usages ===
j670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j676 y: j620  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v61|QWORD * 2], input: v63|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j670 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v557 
values: j681 j676 
=== Succesors ===
=== Usages ===
v787 j675 j664 v706 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v557 values: j681 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v574 
=== Succesors ===
next: v577 
=== Usages ===
j670 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v574 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid j705 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j456 
y: j652 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j652  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j705 
y: j670 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j705 y: j670  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v576 #falseSuccessor: v575  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v52|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result [v51|QWORD[.] + v65|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j670 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j670  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
result v67|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] â‡ˆ0000000000000000,i16 [0] â‡ˆ0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: v739 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: v739 stateAfter: - lastLocationAccess: - #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid j675 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j670 
y: j598 
=== Succesors ===
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j670 y: j598  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v65|QWORD * 2], input: v67|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j664 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v560 
values: j675 j670 
=== Succesors ===
=== Usages ===
v786 v709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v560 values: j675 j670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v559 v580 
=== Succesors ===
next: v583 
=== Usages ===
j664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v559 v580 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j708 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j456 
y: j656 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j456 y: j656  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j708 
y: j664 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j708 y: j664  <|@  <|@
f <@*|@fixed>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v582 
falseSuccessor: v581 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v582 #falseSuccessor: v581  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = DEC v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
v582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result [v51|QWORD[.] + v69|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j663 
index: j664 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j663 index: j664  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] â‡ˆ0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v786 
value: i738 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v786 value: i738 stateAfter: - lastLocationAccess: - #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v69|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v535 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B50 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
v528 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v546 v562 v586 
=== Succesors ===
next: a306 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v546 v562 v586 #next: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a306 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a392 
=== Succesors ===
next: v202 
=== Usages ===
a116 a201 
=== Predecessor ===
v547 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a392 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid a201 <|@
result v71|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: Compress
stamp: n! -
=== Inputs ===
value: a306 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
value: a201 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j427 
=== Usages ===
=== Predecessor ===
a306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 value: a201 stateAfter: - lastLocationAccess: - #next: j427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v433 
=== Usages ===
j429 
=== Predecessor ===
v202 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] â‡Š0000000000000009 â‡ˆ0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64 [0 - 36028797018963967] â‡ˆ007fffffffffffff
=== Inputs ===
x: j427 
y: i428 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j427 y: i428  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] â‡Š00000001171be000 â‡ˆ00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v72|QWORD[*] + v73|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j432 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j432  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] â‡ˆ0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
value: i434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
j427 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v772 value: i434 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|QWORD[*] + v73|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a116 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v114 
values: a306 a149 
=== Succesors ===
=== Usages ===
v759 j441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v114 values: a306 a149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v113 v115 
=== Succesors ===
next: v169 
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v113 v115 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i747 
y: i44 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i747 y: i44  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v168 #falseSuccessor: v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i753 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
result [v74|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a116 
index: - 
=== Succesors ===
=== Usages ===
i753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i753 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
=== Succesors ===
next: v186 
=== Usages ===
i181 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v759 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i753 
y: i746 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i753 y: i746  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i747 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i747  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
i753 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v185 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: v791  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?23 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
tid ?23 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?19 
values: - - 
=== Succesors ===
=== Usages ===
?32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?19 values: - -  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?23 
values: - - 
=== Succesors ===
=== Usages ===
?55 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?23 values: - -  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?32 
values: a1 - 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?32 values: a1 -  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?55 
values: a1 a2 i746 
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?55 values: a1 a2 i746  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 187
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -47969 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j437 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j437  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a743 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a743  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
=== Inputs ===
object: a138 
=== Succesors ===
next: j441 
=== Usages ===
v773 
=== Predecessor ===
v183 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a138 #next: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: i64
=== Inputs ===
object: a116 
=== Succesors ===
next: v447 
=== Usages ===
v774 
=== Predecessor ===
j437 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a116 #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v78|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j437 
index: - 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i747 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i747  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v79|QWORD[*] + v80|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j441 
index: j442 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: j442  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i746 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v773 v774 j446 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
j441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v773 v774 j446 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
value: i40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 value: i40 stateAfter: - lastLocationAccess: - #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:167) [bci: 7]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v79|QWORD[*] + v80|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v81|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v470 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B59 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result int[-34323|0xffffffffffff79ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34323
stableDimension: 0
stamp: i32 [-34323] â‡Š00000000ffff79ed â‡ˆ00000000ffff79ed
stampKind: i32
value: int[-34323|0xffffffffffff79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34323|0xffffffffffff79ed]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i324 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-51219 - -34323] â‡Š00000000ffff20e5 â‡ˆ00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v320 
values: i332 i334 i322 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v320 values: i332 i334 i322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v331 v333 v356 
=== Succesors ===
next: v326 
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v331 v333 v356 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i324 
speculation: a323 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i324 speculation: a323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f87ff74 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v1|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v2|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v7|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9530590961786755 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606759612726101105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v78|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v79|QWORD[*] + v80|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v81|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = CMOVE (falseValue: v11|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v14|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586249228500189195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHL v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA [v18|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND v19|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v20|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = ADD (x: v21|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586188344425545247
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v21|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = CMOVE (falseValue: v13|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = LEA [v26|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v28|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V128_WORD = H [v30|QWORD[*] + v35|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v35|QWORD * 2], input: v37|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v28|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V64_WORD = H [v30|QWORD[*] + v39|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v39|QWORD * 2], input: v41|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v39|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v28|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V32_WORD = H [v30|QWORD[*] + v43|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v43|QWORD * 2], input: v45|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = DEC v28|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVSX [v30|QWORD[*] + v47|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + v47|QWORD * 2], y: v49|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|QWORD[*] + v73|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = LEA [v26|QWORD[.] + v28|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = SUB (x: v50|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v57|QWORD * 2], input: v59|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v52|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v61|QWORD * 2], input: v63|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v61|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v52|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v65|QWORD * 2], input: v67|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v65|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = DEC v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v69|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -47969 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: v0|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B50 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[.] + v55|QWORD * 2], input: v54|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B59 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V256_WORD = H [v30|QWORD[*] + v32|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v29|QWORD[.] + v32|QWORD * 2], input: v33|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v32|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572061939899811621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572549012496963202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556428785198626264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34323|0xffffffffffff79ed]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51219|0xffffffffffff37ed]] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #9          // java.lang.AbstractStringBuilder.append:(java.lang.CharSequence)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f87ff74 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.9530590961786755 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606759612726101105
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  536  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr   56  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4586249228500189195
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586188344425545247
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  220  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  268  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  292  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  316  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  318  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B14" "B31" "B30" 
    successors "B33" "B51" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B52" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  502  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  506  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B32" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B14 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  408  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  410  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  432  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  434  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  456  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  460  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r15|QWORD + 668] y: -47969 size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: rsi|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  374  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B50 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B50" 
    successors "B37" "B50" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  380  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  382  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580730894295419571
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B59 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B59" 
    successors "B19" "B59" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  238  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  240  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  242  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4572061939899811621
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572549012496963202
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [stack:0, stack:12, stack:16, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: stack:32|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556428785198626264
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r10|DWORD = MOVE input: int[-34323|0xffffffffffff79ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #9          // java.lang.AbstractStringBuilder.append:(java.lang.CharSequence)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f87ff74 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r10:0, r13:0, r14:0, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.9530590961786755 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4606759612726101105
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B2 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B2" 
    successors "B57" "B55" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B57 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  536  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B57 falseDestination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  564  <|@ instruction r11|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  566  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr   50  <|@ instruction rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr   56  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4586925718218455280
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4586249228500189195
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4586188344425545247
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B32" "B15" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B32 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B18" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  220  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  268  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  292  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B23" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  316  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  318  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B26" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B13" "B31" "B29" 
    successors "B33" "B52" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  348  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  350  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B47" 
    successors "B53" 
    xhandlers
    flags 
    probability 4586925718218455279
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  502  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  504  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  506  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  508  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  396  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  408  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  410  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  412  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  432  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  434  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  436  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  444  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  456  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  458  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  460  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4582422118591084783
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B52 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580730894295419571
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B49 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B55" 
    successors 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r15|QWORD + 668] y: -47969 size: DWORD <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: rsi|QWORD[.] r13|QWORD[.] r8|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rsi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:24, 2, 2, 21, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4573414919336343791
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  374  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  380  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  382  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582422118591084783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  238  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  240  <|@ instruction J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  242  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4572549012496963202
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  186  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [stack:0, stack:12, stack:16, stack:32]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: stack:32|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r10|DWORD = MOVE input: int[-34323|0xffffffffffff79ed] <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  596  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [rsi:0, r13:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B4 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokespecial #9          // java.lang.AbstractStringBuilder.append:(java.lang.CharSequence)java.lang.AbstractStringBuilder
     5: pop           
     6: aload_0       
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea41817d08addeadde0f8571030000458b750c438504f4448b5610468b1cd50c000000468b04f50c000000448b4e0c418bc84103c9894c241c8bf9412bfb83ff010f8d5b00000049c1e2034585c90f8c8e020000418b7a0c412bf8443bcf0f8f7e02000049c1e6034963d1458bd8498d7e10498d745210498bd3e80000000090488b7424208b4c241c894e0c488bc6488b6c24304883c438850500000000c5f877c3418bd3d1e28d52028bda2bd985db0f4cd183fa010f8ce6020000bbf7ffff7f2bda85db0f8ccf020000498b5f60498b7f7081faffffff000f83640200008bc2d1e08d401783e0f84863c0488be84803eb483bef0f874802000049896f600f188418c00000000f188418000100000f188418400100000f1884188001000089530c48c70301000000c74308addeadde488bc344894c241844894424144489542410448974240c4c892c24448bea458bf3453bee418bd5410f4fd64c63d24983fa010f8c9e000000448b5c24104c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8d9c0100004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63dd4d3bda0f8f44000000488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a4c8bd08b4c241c448b4c2418448b442414448b74240c4c8b2c24e9f5fdffff4e8d4450104d2bda4d8d53f04d85d20f8d8f00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f3affffff6647892448e930ffffff41c7879c0200009f44ffff4d89a7a8020000e80000000090c5f9efc049c7c1000000000f1f4000c4817e7f04484d8d49104d3bca7ef1e955ffffff660f1f440000660f1f440000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe94afeffff44894c241844894424144489542410448974240c4c892c2448bbaddeaddeaddeadde488bf38bdab900000000458bf3448bebe80000000090e9d1fdffff41baed79ffff4589979c0200004d89a7a8020000e8000000009041baed37ffffebe441baed38ffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f87ff74 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 64 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60  <||@
  Comment 70 block B1 null  <||@
  Comment 70 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 16 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 74 18 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 74 [rsi:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 82 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rsi:0, r10:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 24 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 98 26 r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 102 28 rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 108 30 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 112 32 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 117 34 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 120 36 BRANCH trueDestinationProbability: 0.9530590961786755 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 126 block B2 null  <||@
  Comment 126 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3  <||@
  Comment 130 42 JUMP ~[] destination: B2 -> B53  <||@
  Comment 130 block B53 null  <||@
  Comment 130 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 130 524 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 133 526 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B57 falseDestination: B53 -> B55  <||@
  Comment 139 block B55 null  <||@
  Comment 139 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 534 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 143 536 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 146 538 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 149 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B57 falseDestination: B55 -> B58  <||@
  Comment 155 block B58 null  <||@
  Comment 155 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 556 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3  <||@
  Comment 159 558 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 159 560 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 159 562 rdx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 162 564 r11|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 165 566 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 169 568 rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 174 570 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 177 572 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 177 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 183 574 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 188 576 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 192 578 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 195 580 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 198 582 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 207 12  <||@
  Comment 217 block B3 null  <||@
  Comment 217 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 46 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 222 48 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 225 50 rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 229 52 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 231 54 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 234 56 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 237 58 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 243 block B5 null  <||@
  Comment 243 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 68 rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 248 70 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 250 72 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 252 74 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 258 block B7 null  <||@
  Comment 258 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 84 rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 262 86 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 266 88 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 272 90 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 278 block B8 null  <||@
  Comment 278 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 94 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 282 96 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 285 98 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 288 100 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 291 102 rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 297 104 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 300 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 306 block B10 null  <||@
  Comment 306 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 124 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 310 126 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0  <||@
  Comment 318 128 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 326 130 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 334 132 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 342 134 MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 345 136 MOV [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 352 138 MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 359 140 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 359 142 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 144 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 367 146 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 372 148 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 377 150 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 382 152 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 386 154 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 389 156 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 392 158 JUMP ~[] destination: B10 -> B13  <||@
  Comment 392 block B13 null  <||@
  Comment 392 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 392 196 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 395 198 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 402 200 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 405 202 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 409 204 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B32 falseDestination: B13 -> B15  <||@
  Comment 415 block B15 null  <||@
  Comment 415 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 212 r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 420 214 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 424 216 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 432 218 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 436 220 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 439 226 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 446 222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18  <||@
  Comment 452 block B20 null  <||@
  Comment 452 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 452 254 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 456 256 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 459 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 465 block B22 null  <||@
  Comment 465 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 266 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 471 268 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 477 270 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 481 272 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 484 274 JUMP ~[] destination: B22 -> B23  <||@
  Comment 484 block B23 null  <||@
  Comment 484 276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 484 278 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 488 280 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 491 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 497 block B25 null  <||@
  Comment 497 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 290 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 503 292 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 509 294 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 513 296 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 516 298 JUMP ~[] destination: B25 -> B26  <||@
  Comment 516 block B26 null  <||@
  Comment 516 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 302 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 520 304 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 523 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 529 block B28 null  <||@
  Comment 529 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 314 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 535 316 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 541 318 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 545 320 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 548 322 JUMP ~[] destination: B28 -> B29  <||@
  Comment 548 block B29 null  <||@
  Comment 548 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 548 326 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 554 328 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 557 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 563 block B31 null  <||@
  Comment 563 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 338 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 568 340 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 573 342 JUMP ~[] destination: B31 -> B32  <||@
  Comment 573 block B32 null  <||@
  Comment 573 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 346 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 576 348 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 350 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B52  <||@
  Comment 585 block B52 null  <||@
  Comment 585 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 492 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 590 498 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3  <||@
  Comment 597 500 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 601 502 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 608 504 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 618 506 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 622 508 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 625 510 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 629 512 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 634 514 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 639 516 r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 644 518 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 648 520 JUMP ~[] destination: B52 -> B53  <||@
  Comment 653 block B33 null  <||@
  Comment 653 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 354 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 658 356 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 661 358 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 665 360 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 668 362 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 674 block B34 null  <||@
  Comment 674 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 674 366 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 681 368 JUMP ~[] destination: B34 -> B38  <||@
  Comment 681 block B38 null  <||@
  Comment 681 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 394 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 685 396 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 688 398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 694 block B40 null  <||@
  Comment 694 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 406 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 698 408 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 704 410 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 708 412 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 711 414 JUMP ~[] destination: B40 -> B41  <||@
  Comment 711 block B41 null  <||@
  Comment 711 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 418 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 715 420 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 718 422 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 724 block B43 null  <||@
  Comment 724 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 430 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 728 432 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 734 434 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 738 436 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 741 438 JUMP ~[] destination: B43 -> B44  <||@
  Comment 741 block B44 null  <||@
  Comment 741 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 741 442 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 745 444 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 748 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 754 block B46 null  <||@
  Comment 754 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 454 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 758 456 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 764 458 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 768 460 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 771 462 JUMP ~[] destination: B46 -> B47  <||@
  Comment 771 block B47 null  <||@
  Comment 771 464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 771 466 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 774 468 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 777 470 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B52 falseDestination: B47 -> B49  <||@
  Comment 783 block B49 null  <||@
  Comment 783 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 480 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 788 484 JUMP ~[] destination: B49 -> B52  <||@
  Comment 793 block B57 null  <||@
  Comment 793 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 548 MOV [r15|QWORD + 668] y: -47969 size: DWORD  <||@
  Comment 804 550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 811 552 DEOPT info [bci:24, 2, 2, 21, 2]  <||@
  Comment 811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 816 [rsi:0, r13:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 817 block B35 null  <||@
  Comment 817 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 372 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 821 374 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 828 376 JUMP ~[] destination: B35 -> B36  <||@
  Comment 828 block B36 loop 1 depth 1 header:535|LoopBegin  <||@
  Comment 828 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 380 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 838 382 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 842 384 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 845 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 852 block B18 loop 0 depth 1 header:470|LoopBegin  <||@
  Comment 852 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 238 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 870 240 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 876 242 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 880 244 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 883 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 890 block B12 null  <||@
  Comment 890 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 162 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 895 164 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 900 166 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 905 168 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 910 170 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 914 176 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 914 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 924 178 rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 927 180 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 929 184 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 934 186 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 937 188 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 940 190 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 940 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 945 [stack:0, stack:12, stack:16, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD[.]   <||@
  Comment 946 192 JUMP ~[] destination: B12 -> B13  <||@
  Comment 951 block B60 null  <||@
  Comment 951 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 951 590 r10|DWORD = MOVE input: int[-34323|0xffffffffffff79ed]  <||@
  Comment 957 592 JUMP ~[] destination: B60 -> B61  <||@
  Comment 957 block B61 null  <||@
  Comment 957 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 596 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 964 598 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 971 600 DEOPT info [bci:0]  <||@
  Comment 971 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 976 [rsi:0, r13:0]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 977 block B6 null  <||@
  Comment 977 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 977 78 r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 983 80 JUMP ~[] destination: B6 -> B61  <||@
  Comment 985 block B4 null  <||@
  Comment 985 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 62 r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 991 64 JUMP ~[] destination: B4 -> B61  <||@
  Comment 993 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 993 4  <||@
  Comment 999 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 999 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5530[java.lang.StringBuilder.append(CharSequence)]"
  method "HotSpotCompilation-5530[java.lang.StringBuilder.append(CharSequence)]"
  date 1527005223811
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c27680 448b560849c1e203493bc20f85cfe7bdfe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c243048897424204c8bea41817d08da0200f80f8571030000458b750c438504f4448b5610468b1cd50c000000468b04f50c000000448b4e0c418bc84103c9894c241c8bf9412bfb83ff010f8d5b00000049c1e2034585c90f8c8e020000418b7a0c412bf8443bcf0f8f7e02000049c1e6034963d1458bd8498d7e10498d745210498bd3e80ab6befe90488b7424208b4c241c894e0c488bc6488b6c24304883c4388505b178c6fcc5f877c3418bd3d1e28d52028bda2bd985db0f4cd183fa010f8ce6020000bbf7ffff7f2bda85db0f8ccf020000498b5f60498b7f7081faffffff000f83640200008bc2d1e08d401783e0f84863c0488be84803eb483bef0f874802000049896f600f188418c00000000f188418000100000f188418400100000f1884188001000089530c48c70301000000c74308410000f8488bc344894c241844894424144489542410448974240c4c892c24448bea458bf3453bee418bd5410f4fd64c63d24983fa010f8c9e000000448b5c24104c8d40104e8d1cdd100000004d8d4af04d85c948c7c1000000000f8d9c0100004d8d4af8493bc90f8f13000000c4c17a6f044bc4c17a7f04484c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e044bc4c1f97e04484c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e044bc4c1797e04484c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf1c4b6645891c484d63dd4d3bda0f8f44000000488b7424204c8bd049c1ea03448956104c8bd649c1ea0949bb00e01b17010000004788241a4c8bd08b4c241c448b4c2418448b442414448b74240c4c8b2c24e9f5fdffff4e8d4450104d2bda4d8d53f04d85d20f8d8f00000049c7c1000000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f3affffff6647892448e930ffffff41c7879c0200009f44ffff4d89a7a8020000e84efcbdfe90c5f9efc049c7c1000000000f1f4000c4817e7f04484d8d49104d3bca7ef1e955ffffff660f1f440000660f1f440000c4c17e6f044bc4c17e7f0448488d4910493bc97eebe94afeffff44894c241844894424144489542410448974240c4c892c2448bb080200c007000000488bf38bdab900000000458bf3448bebe8aff336ff90e9d1fdffff41baed79ffff4589979c0200004d89a7a8020000e8aefbbdfe9041baed37ffffebe441baed38ffffebdce8ba2b02ff90e894fabdfe90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f87ff74 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 56 [rsi:0, r13:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 64 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B60  <||@
  Comment 70 block B1 null  <||@
  Comment 70 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 16 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 74 18 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:0]  <||@
  Comment 74 [rsi:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 20 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 82 22 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rsi:0, r10:0, r13:0, r14:0, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 24 r8|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 98 26 r9|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 102 28 rcx|DWORD = ADD (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 108 30 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 112 32 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 117 34 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 120 36 BRANCH trueDestinationProbability: 0.9530590961786755 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 126 block B2 null  <||@
  Comment 126 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3  <||@
  Comment 130 42 JUMP ~[] destination: B2 -> B53  <||@
  Comment 130 block B53 null  <||@
  Comment 130 522 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 130 524 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 133 526 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B57 falseDestination: B53 -> B55  <||@
  Comment 139 block B55 null  <||@
  Comment 139 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 139 534 rdi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 143 536 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 146 538 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 149 540 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B55 -> B57 falseDestination: B55 -> B58  <||@
  Comment 155 block B58 null  <||@
  Comment 155 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 556 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3  <||@
  Comment 159 558 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 159 560 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 159 562 rdx|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 162 564 r11|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 165 566 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 169 568 rsi|QWORD = LEA [r10|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 174 570 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 177 572 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 177 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 183 574 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 188 576 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 192 578 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 195 580 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 198 582 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 207 12  <||@
  Comment 217 block B3 null  <||@
  Comment 217 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 46 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 222 48 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 225 50 rbx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 229 52 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 231 54 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 234 56 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 237 58 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 243 block B5 null  <||@
  Comment 243 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 68 rbx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 248 70 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 250 72 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 252 74 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 258 block B7 null  <||@
  Comment 258 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 84 rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 262 86 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 266 88 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 272 90 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 278 block B8 null  <||@
  Comment 278 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 94 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 282 96 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 285 98 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 288 100 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 291 102 rbp|QWORD = ADD (x: rax|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 297 104 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 300 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 306 block B10 null  <||@
  Comment 306 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 124 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 310 126 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 192] instr: 0  <||@
  Comment 318 128 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 326 130 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 334 132 AMD64PREFETCH ~[rax|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 342 134 MOV (x: [rbx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 345 136 MOV [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 352 138 MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 359 140 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 359 142 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 362 144 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 367 146 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 372 148 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 377 150 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 382 152 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 386 154 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 389 156 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 392 158 JUMP ~[] destination: B10 -> B13  <||@
  Comment 392 block B13 null  <||@
  Comment 392 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 392 196 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 395 198 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 402 200 r10|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 405 202 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 409 204 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B32 falseDestination: B13 -> B15  <||@
  Comment 415 block B15 null  <||@
  Comment 415 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 212 r11|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 420 214 r8|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 424 216 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 432 218 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 436 220 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 439 226 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 446 222 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18  <||@
  Comment 452 block B20 null  <||@
  Comment 452 252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 452 254 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 456 256 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 459 258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 465 block B22 null  <||@
  Comment 465 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 266 xmm0|V128_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 471 268 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 477 270 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 481 272 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 484 274 JUMP ~[] destination: B22 -> B23  <||@
  Comment 484 block B23 null  <||@
  Comment 484 276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 484 278 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 488 280 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 491 282 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 497 block B25 null  <||@
  Comment 497 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 290 xmm0|V64_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 503 292 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 509 294 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 513 296 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 516 298 JUMP ~[] destination: B25 -> B26  <||@
  Comment 516 block B26 null  <||@
  Comment 516 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 302 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 520 304 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 523 306 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 529 block B28 null  <||@
  Comment 529 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 314 xmm0|V32_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 535 316 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 541 318 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 545 320 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 548 322 JUMP ~[] destination: B28 -> B29  <||@
  Comment 548 block B29 null  <||@
  Comment 548 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 548 326 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 554 328 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 557 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 563 block B31 null  <||@
  Comment 563 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 338 r11|DWORD = MOVSX [r11|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 568 340 MOV (x: [r8|QWORD[.] + rcx|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 573 342 JUMP ~[] destination: B31 -> B32  <||@
  Comment 573 block B32 null  <||@
  Comment 573 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 346 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 576 348 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 350 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B52  <||@
  Comment 585 block B52 null  <||@
  Comment 585 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 492 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 590 498 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@16b64db4 encoding: base: 0 shift: 3  <||@
  Comment 597 500 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 601 502 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 608 504 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 618 506 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 622 508 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 625 510 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 629 512 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 634 514 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 639 516 r14|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 644 518 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 648 520 JUMP ~[] destination: B52 -> B53  <||@
  Comment 653 block B33 null  <||@
  Comment 653 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 354 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 658 356 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 661 358 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 665 360 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 668 362 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 674 block B34 null  <||@
  Comment 674 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 674 366 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 681 368 JUMP ~[] destination: B34 -> B38  <||@
  Comment 681 block B38 null  <||@
  Comment 681 392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 394 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 685 396 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 688 398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 694 block B40 null  <||@
  Comment 694 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 406 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 698 408 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 704 410 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 708 412 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 711 414 JUMP ~[] destination: B40 -> B41  <||@
  Comment 711 block B41 null  <||@
  Comment 711 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 711 418 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 715 420 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 718 422 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 724 block B43 null  <||@
  Comment 724 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 430 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 728 432 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 734 434 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 738 436 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 741 438 JUMP ~[] destination: B43 -> B44  <||@
  Comment 741 block B44 null  <||@
  Comment 741 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 741 442 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 745 444 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 748 446 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 754 block B46 null  <||@
  Comment 754 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 454 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 758 456 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 764 458 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 768 460 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 771 462 JUMP ~[] destination: B46 -> B47  <||@
  Comment 771 block B47 null  <||@
  Comment 771 464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 771 466 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 774 468 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 777 470 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B52 falseDestination: B47 -> B49  <||@
  Comment 783 block B49 null  <||@
  Comment 783 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 480 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 788 484 JUMP ~[] destination: B49 -> B52  <||@
  Comment 793 block B57 null  <||@
  Comment 793 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 548 MOV [r15|QWORD + 668] y: -47969 size: DWORD  <||@
  Comment 804 550 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 811 552 DEOPT info [bci:24, 2, 2, 21, 2]  <||@
  Comment 811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 816 [rsi:0, r13:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r8|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 817 block B35 null  <||@
  Comment 817 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 372 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 821 374 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 828 376 JUMP ~[] destination: B35 -> B36  <||@
  Comment 828 block B36 loop 1 depth 1 header:535|LoopBegin  <||@
  Comment 828 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 380 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 838 382 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 842 384 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 845 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 852 block B18 loop 0 depth 1 header:470|LoopBegin  <||@
  Comment 852 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 238 xmm0|V256_WORD = H [r11|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 870 240 J (address: [r8|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 876 242 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 880 244 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 883 246 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 890 block B12 null  <||@
  Comment 890 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 162 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 895 164 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 900 166 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 905 168 stack:52|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 910 170 stack:64|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 914 176 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 914 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 924 178 rsi|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 927 180 rbx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 929 184 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 934 186 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 937 188 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 940 190 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 940 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 945 [stack:0, stack:12, stack:16, stack:32]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:64|QWORD[.]   <||@
  Comment 946 192 JUMP ~[] destination: B12 -> B13  <||@
  Comment 951 block B60 null  <||@
  Comment 951 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 951 590 r10|DWORD = MOVE input: int[-34323|0xffffffffffff79ed]  <||@
  Comment 957 592 JUMP ~[] destination: B60 -> B61  <||@
  Comment 957 block B61 null  <||@
  Comment 957 594 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 596 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 964 598 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 971 600 DEOPT info [bci:0]  <||@
  Comment 971 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 976 [rsi:0, r13:0]at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]   <||@
  Comment 977 block B6 null  <||@
  Comment 977 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 977 78 r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 983 80 JUMP ~[] destination: B6 -> B61  <||@
  Comment 985 block B4 null  <||@
  Comment 985 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 62 r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 991 64 JUMP ~[] destination: B4 -> B61  <||@
  Comment 993 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 993 4  <||@
  Comment 999 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 999 5  <||@
  HexCodeFile>>> <|@
end_nmethod
