begin_compilation
  name " HotSpotCompilation-9839[java.util.ArrayList.add(int, Object)]"
  method "HotSpotCompilation-9839[java.util.ArrayList.add(int, Object)]"
  date 1527005223873
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a839 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a839  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v850 v849 v851 ?67 ?44 j564 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a839 v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
=== Succesors ===
next: v888 
=== Usages ===
a161 v888 v288 v852 v855 v857 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v30 v33 ?44 i16 i18 v278 v255 v854 v218 v192 v853 j437 j838 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a226 ?44 a831 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.add(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 477
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v401 v888 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a839 
=== Succesors ===
next: i840 
=== Usages ===
=== Predecessor ===
a839 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a839 #next: i840  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i840 v228 v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
=== Succesors ===
next: v304 
=== Usages ===
v30 i10 i18 
=== Predecessor ===
v888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i840 
y: i2 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i840 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a411 v401 a411 a411 a411 a411 a411 a411 a411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v303 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39955
stableDimension: 0
stamp: i32 [-39955] ⇊00000000ffff63ed ⇈00000000ffff63ed
stampKind: i32
value: int[-39955|0xffffffffffff63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 v89 v333 v249 v242 v554 a488 v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i32 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v307 #falseSuccessor: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40211
stableDimension: 0
stamp: i32 [-40211] ⇊00000000ffff62ed ⇈00000000ffff62ed
stampKind: i32
value: int[-40211|0xffffffffffff62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-42763 - -39955] ⇊00000000ffff40e5 ⇈00000000ffff7bfd
valueDescription: i32
=== Inputs ===
merge: v396 
values: i403 i405 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v396 values: i403 i405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v402 v404 
=== Succesors ===
next: v401 
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v402 v404 #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i399 
speculation: a357 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i399 speculation: a357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:479) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 i16 v100 i65 v71 i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:479) [bci: 11]
stamp: i32
=== Inputs ===
x: i840 
y: i9 
=== Succesors ===
=== Usages ===
i61 v52 i61 v286 v228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i840 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a839 
y: a287 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a839 y: a287  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.20650950898262133
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v47 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608309472156204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i51 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.7308682437974003
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594605891378051401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588170493412213646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322346504612213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v59 
values: i10 i50 i10 
=== Succesors ===
=== Usages ===
i88 i292 ?67 i70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: i10 i50 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v62 v63 
=== Succesors ===
next: i841 
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v62 v63 #next: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i841 v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
=== Succesors ===
next: v165 
=== Usages ===
i65 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v851 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i841 
y: i9 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i841 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
value: i65 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i842 
=== Usages ===
=== Predecessor ===
i841 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v851 value: i65 stateAfter: - lastLocationAccess: - #next: i842  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a839 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
=== Succesors ===
next: v843 
=== Usages ===
i70 i86 i87 i376 i197 v218 v349 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a839 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
=== Succesors ===
next: v74 
=== Usages ===
v435 v584 v521 
=== Predecessor ===
i842 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i61 
y: i842 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i61 y: i842  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i9 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i9  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ArrayList.add(int, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 479
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
?80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 0
=== Inputs ===
outerFrameState: ?44 
values: - - 
=== Succesors ===
=== Usages ===
?67 ?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?44 values: - -  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: a1 i61 
=== Succesors ===
=== Usages ===
a488 v412 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: a1 i61  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:480) [bci: 32]
stamp: i32
=== Inputs ===
x: i840 
y: i2 
=== Succesors ===
=== Usages ===
i197 j446 i260 v249 j832 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i840 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i32 
=== Succesors ===
=== Usages ===
v253 v190 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid a409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1338938642
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1338938642]
=== Inputs ===
=== Succesors ===
=== Usages ===
a411 a411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 v568 v580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j450 j534 j541 j565 j577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 j556 v871 v874 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:480) [bci: 26]
stamp: i32
=== Inputs ===
x: i2 
y: i9 
=== Succesors ===
=== Usages ===
v242 j442 v261 v198 j835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i32 
=== Succesors ===
=== Usages ===
v248 v185 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i16 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 v585 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.7755166514016273
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v843 
y: v583 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v843 y: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v309 #falseSuccessor: v311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i842 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i842  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v313 #falseSuccessor: v315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
v227 
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -52065
stableDimension: 0
stamp: i32 [-52065] ⇊00000000ffff349f ⇈00000000ffff349f
stampKind: i32
value: int[-52065|0xffffffffffff349f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 i410 i410 i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v184 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591120399499230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090600219774943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v189 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501709417041066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021446413029958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i32
=== Inputs ===
x: i842 
y: i18 
=== Succesors ===
=== Usages ===
v198 v192 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i842 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i2 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v195 #falseSuccessor: v193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413192544407486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952984144352423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i16 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v201 #falseSuccessor: v199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325560840500241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885206498361663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@~|@floating>@ <|@
tid a161 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a839 
=== Succesors ===
=== Usages ===
v853 j441 j436 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a161 
=== Succesors ===
next: j441 
=== Usages ===
v858 
=== Predecessor ===
v199 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a161 #next: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a161 
=== Succesors ===
next: v447 
=== Usages ===
v859 
=== Predecessor ===
j436 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a161 #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j436 
index: j437 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j437  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i16 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j441 
index: j442 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: j442  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i18 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v858 v859 j446 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
j441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v858 v859 j446 #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a161 
index: i2 
=== Succesors ===
=== Usages ===
v227 j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a161 index: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v313 
address: v853 
value: a226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j448 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v313 address: v853 value: a226 stateAfter: - lastLocationAccess: - #next: j448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v853 
=== Succesors ===
next: v454 
=== Usages ===
j450 
=== Predecessor ===
v227 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v853 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j448 
y: i449 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j448 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j450 
index: j453 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
value: i455 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
j448 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v860 value: i455 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v849 value: i10 stateAfter: - lastLocationAccess: - #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:484) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56091
stableDimension: 0
stamp: i32 [-56091] ⇊00000000ffff24e5 ⇈00000000ffff24e5
stampKind: i32
value: int[-56091|0xffffffffffff24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55100
stableDimension: 0
stamp: i32 [-55100] ⇊00000000ffff28c4 ⇈00000000ffff28c4
stampKind: i32
value: int[-55100|0xffffffffffff28c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i842 
y: i9 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i842 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i86 
y: i842 
=== Succesors ===
=== Usages ===
i88 i292 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i86 y: i842  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i87 
y: i61 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i32 
=== Succesors ===
=== Usages ===
i292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i88 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v89 
trueValue: i61 
falseValue: i87 
=== Succesors ===
=== Usages ===
i260 v278 i99 j587 v333 v349 i376 a488 v517 i537 v529 i472 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v89 trueValue: i61 falseValue: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i292 
y: i98 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i292 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i9 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i99 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v317 #falseSuccessor: v319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i292 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i292  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v321 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v321 #falseSuccessor: v323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
v285 
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i292 
y: i32 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i292 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v338 #falseSuccessor: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88417
stableDimension: 0
stamp: i32 [-88417] ⇊00000000fffea69f ⇈00000000fffea69f
stampKind: i32
value: int[-88417|0xfffffffffffea69f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j475 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j514 
=== Usages ===
v861 v862 
=== Predecessor ===
v334 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j514 v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
=== Succesors ===
next: j515 
=== Usages ===
j479 v863 v864 a487 v869 v865 v866 v867 v868 
=== Predecessor ===
j475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 #next: j515  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
=== Succesors ===
next: v483 
=== Usages ===
v480 
=== Predecessor ===
j514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i472 i538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i292 
y: i222 
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i292 y: i222  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i472 
y: i495 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i472 y: i495  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i496 
y: i473 
=== Succesors ===
=== Usages ===
j478 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i496 y: i473  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i474 
=== Succesors ===
=== Usages ===
j479 v865 v866 v867 v868 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i474  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j478 
y: j514 
=== Succesors ===
=== Usages ===
v480 v516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j478 y: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j515 
y: j479 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j515 y: j479  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 j543 v549 v598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a488 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a488  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v843 
=== Succesors ===
=== Usages ===
a488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?67 
arguments: v435 i292 i32 
=== Succesors ===
next: v491 
=== Usages ===
a492 
=== Predecessor ===
v481 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?67 arguments: v435 i292 i32 #next: v491  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
a488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
value: j479 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v861 value: j479 stateAfter: - lastLocationAccess: - #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v865 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v865 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v866 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v866 #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v867 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v867 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v868 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v868 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
value: i292 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 value: i292 stateAfter: - lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
value: j459 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 value: j459 stateAfter: - lastLocationAccess: - #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
value: v843 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v869 value: v843 stateAfter: - lastLocationAccess: - #next: v486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a487 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j514 
=== Succesors ===
next: v489 
=== Usages ===
a492 
=== Predecessor ===
v486 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j514 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
a487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v490 
values: a487 a488 
=== Succesors ===
=== Usages ===
v875 a382 v856 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v490 values: a487 a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v491 
=== Succesors ===
next: v709 
=== Usages ===
a492 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v491 #next: v709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v601 
=== Usages ===
j710 j712 
=== Predecessor ===
v490 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a492 
index: - 
=== Succesors ===
=== Usages ===
j712 j535 j533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a492 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i842 
y: i292 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i842 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v349 
trueValue: i842 
falseValue: i292 
=== Succesors ===
=== Usages ===
j588 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v349 trueValue: i842 falseValue: i292  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
j761 v875 j592 v598 v706 j748 j754 j758 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j588 
y: j459 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j588 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j548 j761 j803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j729 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j730 j779 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j758 j800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j738 j785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j754 j797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 j746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j747 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j748 j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j780 v793 j731 j739 v749 j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v709 
address: v856 
=== Succesors ===
=== Usages ===
v876 v878 v880 v882 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v709 address: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a839 
=== Succesors ===
=== Usages ===
j710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a839  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v709 
address: v855 
=== Succesors ===
=== Usages ===
v877 v879 v881 v883 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v709 address: v855  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j588 
y: j747 
=== Succesors ===
=== Usages ===
v749 v751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j747  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j748 
y: j499 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j748 y: j499  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v602 #falseSuccessor: v603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v606 
values: j499 j746 
=== Succesors ===
=== Usages ===
v883 j746 v882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: j499 j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v605 
=== Succesors ===
next: v844 
=== Usages ===
v844 v610 v611 j739 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v605 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j739 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v606 
address: v883 
=== Succesors ===
next: v818 
=== Usages ===
v818 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v606 address: v883 #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j739 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
value: v844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v882 value: v844 stateAfter: - lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j739 
y: j432 
=== Succesors ===
=== Usages ===
j731 j739 v751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j739 y: j432  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j748 
y: j746 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j748 y: j746  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v610 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v606 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v606 #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j731 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v615 
values: j499 j746 
=== Succesors ===
=== Usages ===
v881 j738 j722 v755 v880 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v615 values: j499 j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v614 v616 
=== Succesors ===
next: v634 
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v614 v616 #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j588 
y: j753 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j753  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j754 
y: j731 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j754 y: j731  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v755 
=== Succesors ===
trueSuccessor: v633 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v755 #trueSuccessor: v633 #falseSuccessor: v632  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v845 
=== Usages ===
v845 
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j731 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v632 
address: v881 
=== Succesors ===
next: v816 
=== Usages ===
v816 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v632 address: v881 #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j731 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
value: v845 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v880 value: v845 stateAfter: - lastLocationAccess: - #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j731 
y: j715 
=== Succesors ===
=== Usages ===
j722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j731 y: j715  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j722 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v626 
values: j738 j731 
=== Succesors ===
=== Usages ===
v879 j730 j713 v759 v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v626 values: j738 j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v625 v637 
=== Succesors ===
next: v640 
=== Usages ===
j722 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v625 v637 #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid j758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j588 
y: j757 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j758 
y: j722 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j758 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v639 #falseSuccessor: v638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
v846 
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j722 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v638 
address: v879 
=== Succesors ===
next: v814 
=== Usages ===
v814 
=== Predecessor ===
v638 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v638 address: v879 #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j722 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
value: v846 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v878 value: v846 stateAfter: - lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j722 
y: j729 
=== Succesors ===
=== Usages ===
j713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j722 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j713 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v629 
values: j730 j722 
=== Succesors ===
=== Usages ===
v877 v762 v876 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v629 values: j730 j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v628 v643 
=== Succesors ===
next: v646 
=== Usages ===
j713 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v628 v643 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid j761 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j588 
y: j547 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j713 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j713  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v645 #falseSuccessor: v644  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a847 
=== Usages ===
a847 
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a847  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j713 
=== Succesors ===
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a847 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v644 
address: v877 
=== Succesors ===
next: v812 
=== Usages ===
v812 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v644 address: v877 #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j713 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
value: a847 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
a847 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v876 value: a847 stateAfter: - lastLocationAccess: - #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v812 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v631 v649 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v631 v649 #next: v765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v656 
=== Usages ===
j767 
=== Predecessor ===
v619 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i292 
=== Succesors ===
=== Usages ===
j592 v706 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i292  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j588 
y: j587 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j588 y: j587  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v654 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v655 #falseSuccessor: v654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a492 
index: j588 
=== Succesors ===
=== Usages ===
j767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a492 index: j588  <|@  <|@
f <@~|@floating>@ <|@
tid j767 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v765 
address: v875 
=== Succesors ===
=== Usages ===
v884 v885 v886 v887 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v765 address: v875  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j587 
y: j588 
=== Succesors ===
=== Usages ===
j803 j792 j797 j800 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j587 y: j588  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j592 
y: j747 
=== Succesors ===
=== Usages ===
v793 v795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j747  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j792 
y: j499 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j792 y: j499  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v793 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v793 #trueSuccessor: v657 #falseSuccessor: v658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v661 
values: j499 j791 
=== Succesors ===
=== Usages ===
v887 j791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v661 values: j499 j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v660 
=== Succesors ===
next: v826 
=== Usages ===
j786 v664 v665 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v660 #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j786 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
value: v827 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v887 value: v827 stateAfter: - lastLocationAccess: - #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j786 
y: j432 
=== Succesors ===
=== Usages ===
j780 j786 v795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j786 y: j432  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j792 
y: j791 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j792 y: j791  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v795 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v795 #trueSuccessor: v664 #falseSuccessor: v666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v661 
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v661 #next: v670  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v669 
values: j499 j791 
=== Succesors ===
=== Usages ===
v886 j785 j774 v798 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: j499 j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v668 v670 
=== Succesors ===
next: v688 
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v668 v670 #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j592 
y: j753 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j753  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j797 
y: j780 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j797 y: j780  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v687 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v687 #falseSuccessor: v686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j780 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j780  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
value: v830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v886 value: v830 stateAfter: - lastLocationAccess: - #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j780 
y: j715 
=== Succesors ===
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j780 y: j715  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v680 
values: j785 j780 
=== Succesors ===
=== Usages ===
v885 j779 j768 v801 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v680 values: j785 j780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v679 v691 
=== Succesors ===
next: v694 
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v679 v691 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j592 
y: j757 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j774 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j800 y: j774  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v693 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v693 #falseSuccessor: v692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j774 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j774  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v885 
value: v829 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v885 value: v829 stateAfter: - lastLocationAccess: - #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid j779 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j774 
y: j729 
=== Succesors ===
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j774 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j768 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v683 
values: j779 j774 
=== Succesors ===
=== Usages ===
v884 v804 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v683 values: j779 j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v682 v697 
=== Succesors ===
next: v700 
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v682 v697 #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j592 
y: j547 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j768 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j768  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v699 #falseSuccessor: v698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j768 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j768  <|@  <|@
f <@~|@floating>@ <|@
tid a828 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
value: a828 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v884 value: a828 stateAfter: - lastLocationAccess: - #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v661 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v661  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v672 v685 v703 
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v672 v685 v703 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i292 
y: i32 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i292 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v531 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v530 #falseSuccessor: v531  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j533 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v856 
=== Succesors ===
next: j535 
=== Usages ===
j534 
=== Predecessor ===
v531 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v856 #next: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v856 
=== Succesors ===
next: v544 
=== Usages ===
j540 
=== Predecessor ===
j533 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v856 #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i292 
y: i536 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i292 y: i536  <|@  <|@
f <@~|@floating>@ <|@
tid i538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i537 
y: i222 
=== Succesors ===
=== Usages ===
j539 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i537 y: i222  <|@  <|@
f <@~|@floating>@ <|@
tid j539 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i538 
=== Succesors ===
=== Usages ===
j540 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i538  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j535 
y: j539 
=== Succesors ===
=== Usages ===
j541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j535 y: j539  <|@  <|@
f <@~|@floating>@ <|@
tid j541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j540 
y: i449 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j540 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j533 
y: i449 
=== Succesors ===
=== Usages ===
j542 j556 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j533 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j541 
y: j534 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j541 y: j534  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j542 
y: j459 
=== Succesors ===
=== Usages ===
j546 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j542 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
j535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255885291323524
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v545 
values: j543 j548 
=== Succesors ===
=== Usages ===
j548 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v545 values: j543 j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v544 
=== Succesors ===
next: v552 
=== Usages ===
j546 v550 v555 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v544 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j546 
y: j459 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j546 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v549 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v549 #trueSuccessor: v550 #falseSuccessor: v551  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v545 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v545 #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v558 v559 
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v558 v559 #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a492 
=== Succesors ===
next: v848 
=== Usages ===
v870 a232 j571 j573 v854 
=== Predecessor ===
v557 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a492 #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a382 
index: - 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: v328 
=== Usages ===
v585 
=== Predecessor ===
a382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v848 
y: v583 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v848 y: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v585 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v585 #trueSuccessor: v325 #falseSuccessor: v327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid a232 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: Compress
stamp: n! -
=== Inputs ===
value: a382 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
value: a232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j564 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v850 value: a232 stateAfter: - lastLocationAccess: - #next: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v568 
=== Usages ===
j565 
=== Predecessor ===
v233 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid j565 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j564 
y: i449 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j564 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j565 
index: j453 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j565 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
value: i455 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
j564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v871 value: i455 stateAfter: - lastLocationAccess: - #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v247 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v252 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270893790811793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094936777807841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i32
=== Inputs ===
x: i292 
y: i18 
=== Succesors ===
=== Usages ===
v261 v255 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i292 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i260 
y: i2 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i260 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v258 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219649078166799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015667612935117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i260 
y: i16 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i260 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v264 
falseSuccessor: v262 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v264 #falseSuccessor: v262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168916812648256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252728206851913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v246 v251 v257 v263 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v246 v251 v257 v263 #next: v266  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - -  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?109 
values: - - - - 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?109 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937191139711120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j571 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a382 
=== Succesors ===
next: j573 
=== Usages ===
v872 
=== Predecessor ===
v262 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a382 #next: j573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a382 
=== Succesors ===
next: v575 
=== Usages ===
v873 
=== Predecessor ===
j571 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a382 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j571 
index: j838 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: j838  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i16 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j573 
index: j835 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: j835  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i18 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v872 v873 j832 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
j573 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v872 v873 j832 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a382 
index: i2 
=== Succesors ===
=== Usages ===
v285 j576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a382 index: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a831 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v321 
address: v854 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v321 address: v854 value: a831 stateAfter: - lastLocationAccess: - #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v854 
=== Succesors ===
next: v580 
=== Usages ===
j577 
=== Predecessor ===
v285 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v854 #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid j577 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j576 
y: i449 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j576 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j577 
index: j453 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j577 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
value: i455 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v874 value: i455 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v849 value: i10 stateAfter: - lastLocationAccess: - #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:484) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70972
stableDimension: 0
stamp: i32 [-70972] ⇊00000000fffeeac4 ⇈00000000fffeeac4
stampKind: i32
value: int[-70972|0xfffffffffffeeac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j546 
y: j547 
=== Succesors ===
=== Usages ===
j546 j553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j546 y: j547  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j534 
y: j453 
=== Succesors ===
=== Usages ===
j553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j534 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j548 
y: j556 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j548 y: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: j553 
value: i32 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j553 value: i32 #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v545 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v545  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v606 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71451
stableDimension: 0
stamp: i32 [-71451] ⇊00000000fffee8e5 ⇈00000000fffee8e5
stampKind: i32
value: int[-71451|0xfffffffffffee8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58643
stableDimension: 0
stamp: i32 [-58643] ⇊00000000ffff1aed ⇈00000000ffff1aed
stampKind: i32
value: int[-58643|0xffffffffffff1aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465095055102998
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i410 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-88417 - -52065] ⇊00000000fffe0084 ⇈00000000fffffeff
valueDescription: i32
=== Inputs ===
merge: v406 
values: i408 i414 i416 i418 i420 i422 i424 i422 i422 i422 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v406 values: i408 i414 i416 i418 i420 i422 i424 i422 i422 i422  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v406 
values: a409 a357 a357 a357 a409 a357 a357 a357 a357 a357 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v406 values: a409 a357 a357 a357 a409 a357 a357 a357 a357 a357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v407 v413 v415 v417 v419 v421 v423 v425 v426 v427 
=== Succesors ===
next: v412 
=== Usages ===
i410 a411 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v407 v413 v415 v417 v419 v421 v423 v425 v426 v427 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
actionAndReason: i410 
speculation: a411 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?67 actionAndReason: i410 speculation: a411  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a839 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a839  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v850 v849 v851 ?67 ?44 j564 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a839 v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a839 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
=== Succesors ===
next: v888 
=== Usages ===
a161 v888 v288 v852 v855 v857 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v30 v33 ?44 i16 i18 v278 v255 v854 v218 v192 v853 j437 j838 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a226 ?44 a831 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.add(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 477
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v401 v888 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a839 
=== Succesors ===
next: i840 
=== Usages ===
=== Predecessor ===
a839 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a839 #next: i840  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i840 v228 v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i840 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
=== Succesors ===
next: v304 
=== Usages ===
v30 i10 i18 
=== Predecessor ===
v888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i840 
y: i2 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i840 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a411 v401 a411 a411 a411 a411 a411 a411 a411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v303 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46ae8478 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result int[-39955|0xffffffffffff63ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39955
stableDimension: 0
stamp: i32 [-39955] ⇊00000000ffff63ed ⇈00000000ffff63ed
stampKind: i32
value: int[-39955|0xffffffffffff63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39955|0xffffffffffff63ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 v89 v333 v249 v242 v554 a488 v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i32 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v307 #falseSuccessor: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i405 <|@
result int[-40211|0xffffffffffff62ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40211
stableDimension: 0
stamp: i32 [-40211] ⇊00000000ffff62ed ⇈00000000ffff62ed
stampKind: i32
value: int[-40211|0xffffffffffff62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40211|0xffffffffffff62ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i399 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-42763 - -39955] ⇊00000000ffff40e5 ⇈00000000ffff7bfd
valueDescription: i32
=== Inputs ===
merge: v396 
values: i403 i405 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v396 values: i403 i405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v402 v404 
=== Succesors ===
next: v401 
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v402 v404 #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i399 
speculation: a357 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i399 speculation: a357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:479) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 i16 v100 i65 v71 i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:479) [bci: 11]
stamp: i32
=== Inputs ===
x: i840 
y: i9 
=== Succesors ===
=== Usages ===
i61 v52 i61 v286 v228 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i840 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid a287 <|@
result NarrowOop[Object[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a839 
y: a287 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a839 y: a287  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.20650950898262133
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v47 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20650950898262133 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608309472156204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i51 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.7308682437974003
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308682437974003 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594605891378051401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588170493412213646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322346504612213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i61 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v59 
values: i10 i50 i10 
=== Succesors ===
=== Usages ===
i88 i292 ?67 i70 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v59 values: i10 i50 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v60 v62 v63 
=== Succesors ===
next: i841 
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v60 v62 v63 #next: i841  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i841 v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i841 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
=== Succesors ===
next: v165 
=== Usages ===
i65 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v851 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i841 
y: i9 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i841 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
value: i65 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i842 
=== Usages ===
=== Predecessor ===
i841 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v851 value: i65 stateAfter: - lastLocationAccess: - #next: i842  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a839 
=== Succesors ===
=== Usages ===
i842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i842 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
=== Succesors ===
next: v843 
=== Usages ===
i70 i86 i87 i376 i197 v218 v349 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 #next: v843  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v3|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a839 
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
=== Succesors ===
next: v74 
=== Usages ===
v435 v584 v521 
=== Predecessor ===
i842 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i61 
y: i842 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i61 y: i842  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i9 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i9  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ArrayList.add(int, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 479
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
?80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 0
=== Inputs ===
outerFrameState: ?44 
values: - - 
=== Succesors ===
=== Usages ===
?67 ?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?44 values: - -  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: a1 i61 
=== Succesors ===
=== Usages ===
a488 v412 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: a1 i61  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:480) [bci: 32]
stamp: i32
=== Inputs ===
x: i840 
y: i2 
=== Succesors ===
=== Usages ===
i197 j446 i260 v249 j832 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i840 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i32 
=== Succesors ===
=== Usages ===
v253 v190 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid a409 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1338938642
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1338938642]
=== Inputs ===
=== Succesors ===
=== Usages ===
a411 a411 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 v568 v580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j450 j534 j541 j565 j577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v860 j556 v871 v874 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:480) [bci: 26]
stamp: i32
=== Inputs ===
x: i2 
y: i9 
=== Succesors ===
=== Usages ===
v242 j442 v261 v198 j835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i32 
=== Succesors ===
=== Usages ===
v248 v185 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i16 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 v585 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.7755166514016273
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v3|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v7|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7755166514016273 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v843 
y: v583 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v843 y: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v309 #falseSuccessor: v311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i842 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i842  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v313 #falseSuccessor: v315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
v227 
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
result int[-52065|0xffffffffffff349f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -52065
stableDimension: 0
stamp: i32 [-52065] ⇊00000000ffff349f ⇈00000000ffff349f
stampKind: i32
value: int[-52065|0xffffffffffff349f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 i410 i410 i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v184 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591120399499230
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090600219774943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v189 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501709417041066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021446413029958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i32
=== Inputs ===
x: i842 
y: i18 
=== Succesors ===
=== Usages ===
v198 v192 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i842 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i2 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v195 #falseSuccessor: v193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413192544407486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952984144352423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i16 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i197 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v201 #falseSuccessor: v199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325560840500241
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885206498361663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@~|@floating>@ <|@
tid a161 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a839 
=== Succesors ===
=== Usages ===
v853 j441 j436 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
result v19|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a161 
=== Succesors ===
next: j441 
=== Usages ===
v858 
=== Predecessor ===
v199 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a161 #next: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a161 
=== Succesors ===
next: v447 
=== Usages ===
v859 
=== Predecessor ===
j436 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a161 #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v19|QWORD[*] + v21|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j436 
index: j437 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: j437  <|@  <|@
f <@~|@floating>@ <|@
tid j442 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i16 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v20|QWORD[*] + v22|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j441 
index: j442 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: j442  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i18 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v858 v859 j446 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
j441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v858 v859 j446 #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v18|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a161 
index: i2 
=== Succesors ===
=== Usages ===
v227 j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a161 index: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v313 
address: v853 
value: a226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j448 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v313 address: v853 value: a226 stateAfter: - lastLocationAccess: - #next: j448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
result [v18|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v853 
=== Succesors ===
next: v454 
=== Usages ===
j450 
=== Predecessor ===
v227 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v853 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j448 
y: i449 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j448 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v25|QWORD[*] + v15|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j450 
index: j453 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j450 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
value: i455 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
j448 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v860 value: i455 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v849 value: i10 stateAfter: - lastLocationAccess: - #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:484) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v19|QWORD[*] + v21|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v20|QWORD[*] + v22|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v1|DWORD * 4 + 16], y: v24|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = LEA [v18|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v25|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
result int[-56091|0xffffffffffff24e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -56091
stableDimension: 0
stamp: i32 [-56091] ⇊00000000ffff24e5 ⇈00000000ffff24e5
stampKind: i32
value: int[-56091|0xffffffffffff24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56091|0xffffffffffff24e5], Object[null]] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid i408 <|@
result int[-55100|0xffffffffffff28c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -55100
stableDimension: 0
stamp: i32 [-55100] ⇊00000000ffff28c4 ⇈00000000ffff28c4
stampKind: i32
value: int[-55100|0xffffffffffff28c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55100|0xffffffffffff28c4], v14|QWORD[.]] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i842 
y: i9 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i842 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i86 
y: i842 
=== Succesors ===
=== Usages ===
i88 i292 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i86 y: i842  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i87 
y: i61 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i32 
=== Succesors ===
=== Usages ===
i292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i88 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v89 
trueValue: i61 
falseValue: i87 
=== Succesors ===
=== Usages ===
i260 v278 i99 j587 v333 v349 i376 a488 v517 i537 v529 i472 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v89 trueValue: i61 falseValue: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result int[-2147483639|0xffffffff80000009] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i99 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i292 
y: i98 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i292 y: i98  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i99 
y: i9 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i99 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v317 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v317 #falseSuccessor: v319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHR v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v27|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA [v30|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i292 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i292  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v321 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v321 #falseSuccessor: v323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
v285 
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i292 
y: i32 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i292 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v338 #falseSuccessor: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result int[-88417|0xfffffffffffea69f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88417
stableDimension: 0
stamp: i32 [-88417] ⇊00000000fffea69f ⇈00000000fffea69f
stampKind: i32
value: int[-88417|0xfffffffffffea69f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88417|0xfffffffffffea69f], Object[null]] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j475 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j475 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j514 
=== Usages ===
v861 v862 
=== Predecessor ===
v334 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j514 v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
=== Succesors ===
next: j515 
=== Usages ===
j479 v863 v864 a487 v869 v865 v866 v867 v868 
=== Predecessor ===
j475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 #next: j515  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j515 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
=== Succesors ===
next: v483 
=== Usages ===
v480 
=== Predecessor ===
j514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i472 i538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i292 
y: i222 
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i292 y: i222  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i472 
y: i495 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i472 y: i495  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i496 
y: i473 
=== Succesors ===
=== Usages ===
j478 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i496 y: i473  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i474 
=== Succesors ===
=== Usages ===
j479 v865 v866 v867 v868 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i474  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j478 
y: j514 
=== Succesors ===
=== Usages ===
v480 v516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j478 y: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j515 
y: j479 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j515 y: j479  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 j543 v549 v598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v30|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND v34|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a488 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a488  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v843 
=== Succesors ===
=== Usages ===
a488 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a488 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?67 
arguments: v435 i292 i32 
=== Succesors ===
next: v491 
=== Usages ===
a492 
=== Predecessor ===
v481 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?67 arguments: v435 i292 i32 #next: v491  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
a488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v7|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
value: j479 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v861 value: j479 stateAfter: - lastLocationAccess: - #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v36|QWORD + v32|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v865 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v865 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result [v36|QWORD + v32|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v866 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v866 #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
result [v36|QWORD + v32|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v867 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v867 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result [v36|QWORD + v32|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j478 
index: j514 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j478 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: v868 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v868 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v32|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
value: i292 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 value: i292 stateAfter: - lastLocationAccess: - #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v32|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
value: j459 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 value: j459 stateAfter: - lastLocationAccess: - #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
result [v32|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
value: v843 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v869 value: v843 stateAfter: - lastLocationAccess: - #next: v486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a487 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a487 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j514 
=== Succesors ===
next: v489 
=== Usages ===
a492 
=== Predecessor ===
v486 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j514 #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
a487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 8], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a492 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v490 
values: a487 a488 
=== Succesors ===
=== Usages ===
v875 a382 v856 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v490 values: a487 a488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v489 v491 
=== Succesors ===
next: v709 
=== Usages ===
a492 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v489 v491 #next: v709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v601 
=== Usages ===
j710 j712 
=== Predecessor ===
v490 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v41|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a492 
index: - 
=== Succesors ===
=== Usages ===
j712 j535 j533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a492 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i842 
y: i292 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i842 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v349 
trueValue: i842 
falseValue: i292 
=== Succesors ===
=== Usages ===
j588 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v349 trueValue: i842 falseValue: i292  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
j761 v875 j592 v598 v706 j748 j754 j758 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i376  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j588 
y: j459 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j588 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j548 j761 j803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j729 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j730 j779 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j758 j800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j738 j785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j753 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j754 j797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j791 j746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j747 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j748 j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j780 v793 j731 j739 v749 j786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v598 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v598 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = CMOVE (falseValue: v30|DWORD, ~trueValue: v10|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v709 
address: v856 
=== Succesors ===
=== Usages ===
v876 v878 v880 v882 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v709 address: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a839 
=== Succesors ===
=== Usages ===
j710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a839  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v709 
address: v855 
=== Succesors ===
=== Usages ===
v877 v879 v881 v883 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v709 address: v855  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j588 
y: j747 
=== Succesors ===
=== Usages ===
v749 v751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j747  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j748 
y: j499 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j748 y: j499  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v749 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v749 #trueSuccessor: v602 #falseSuccessor: v603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = LEA [v41|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j739 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v606 
values: j499 j746 
=== Succesors ===
=== Usages ===
v883 j746 v882 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: j499 j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v605 
=== Succesors ===
next: v844 
=== Usages ===
v844 v610 v611 j739 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v605 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result [v45|QWORD[*] + v47|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j739 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
result v48|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v606 
address: v883 
=== Succesors ===
next: v818 
=== Usages ===
v818 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v606 address: v883 #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
result [v44|QWORD[.] + v47|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j739 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
value: v844 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v882 value: v844 stateAfter: - lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid j746 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j739 
y: j432 
=== Succesors ===
=== Usages ===
j731 j739 v751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j739 y: j432  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j748 
y: j746 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j748 y: j746  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v610 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|V256_DWORD[........] = H [v45|QWORD[*] + v47|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v47|QWORD * 4], input: v48|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v606 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v606 #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j731 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v615 
values: j499 j746 
=== Succesors ===
=== Usages ===
v881 j738 j722 v755 v880 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v615 values: j499 j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v614 v616 
=== Succesors ===
next: v634 
=== Usages ===
j731 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v614 v616 #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid j754 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j588 
y: j753 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j753  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j754 
y: j731 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j754 y: j731  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v755 
=== Succesors ===
trueSuccessor: v633 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v755 #trueSuccessor: v633 #falseSuccessor: v632  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v43|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v845 
=== Usages ===
v845 
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
result [v45|QWORD[*] + v50|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j731 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
result v52|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v632 
address: v881 
=== Succesors ===
next: v816 
=== Usages ===
v816 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v632 address: v881 #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
result [v44|QWORD[.] + v50|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j731 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
value: v845 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v880 value: v845 stateAfter: - lastLocationAccess: - #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j731 
y: j715 
=== Succesors ===
=== Usages ===
j722 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j731 y: j715  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
v816 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V128_DWORD[....] = H [v45|QWORD[*] + v50|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v50|QWORD * 4], input: v52|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j722 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v626 
values: j738 j731 
=== Succesors ===
=== Usages ===
v879 j730 j713 v759 v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v626 values: j738 j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v625 v637 
=== Succesors ===
next: v640 
=== Usages ===
j722 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v625 v637 #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid j758 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j588 
y: j757 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j758 
y: j722 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j758 y: j722  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v639 #falseSuccessor: v638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v43|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
v846 
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
result [v45|QWORD[*] + v54|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j722 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
result v56|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v638 
address: v879 
=== Succesors ===
next: v814 
=== Usages ===
v814 
=== Predecessor ===
v638 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v638 address: v879 #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
result [v44|QWORD[.] + v54|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j722 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v878 
value: v846 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v878 value: v846 stateAfter: - lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid j730 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j722 
y: j729 
=== Succesors ===
=== Usages ===
j713 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j722 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v814 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V64_DWORD[..] = H [v45|QWORD[*] + v54|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v54|QWORD * 4], input: v56|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v54|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j713 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v629 
values: j730 j722 
=== Succesors ===
=== Usages ===
v877 v762 v876 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v629 values: j730 j722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v628 v643 
=== Succesors ===
next: v646 
=== Usages ===
j713 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v628 v643 #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid j761 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j588 
y: j547 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j588 y: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j713 
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j761 y: j713  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v644 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v645 #falseSuccessor: v644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a847 
=== Usages ===
a847 
=== Predecessor ===
v646 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a847  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result [v45|QWORD[*] + v58|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j710 
index: j713 
=== Succesors ===
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j710 index: j713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a847 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v644 
address: v877 
=== Succesors ===
next: v812 
=== Usages ===
v812 
=== Predecessor ===
v644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v644 address: v877 #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result [v44|QWORD[.] + v58|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j712 
index: j713 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
value: a847 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
a847 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v876 value: a847 stateAfter: - lastLocationAccess: - #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v812 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v45|QWORD[*] + v58|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[.] + v58|QWORD * 4], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v631 v649 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v631 v649 #next: v765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v656 
=== Usages ===
j767 
=== Predecessor ===
v619 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i292 
=== Succesors ===
=== Usages ===
j592 v706 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i292  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j588 
y: j587 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j588 y: j587  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v706 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v654 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v706 #trueSuccessor: v655 #falseSuccessor: v654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result [v41|QWORD[.] + v43|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a492 
index: j588 
=== Succesors ===
=== Usages ===
j767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a492 index: j588  <|@  <|@
f <@~|@floating>@ <|@
tid j767 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v765 
address: v875 
=== Succesors ===
=== Usages ===
v884 v885 v886 v887 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v765 address: v875  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j587 
y: j588 
=== Succesors ===
=== Usages ===
j803 j792 j797 j800 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j587 y: j588  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j592 
y: j747 
=== Succesors ===
=== Usages ===
v793 v795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j747  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j792 
y: j499 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j792 y: j499  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v793 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v793 #trueSuccessor: v657 #falseSuccessor: v658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v41|QWORD[.] + v43|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = SUB (x: v61|QWORD, ~y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
result v65|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j786 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v661 
values: j499 j791 
=== Succesors ===
=== Usages ===
v887 j791 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v661 values: j499 j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v660 
=== Succesors ===
next: v826 
=== Usages ===
j786 v664 v665 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v660 #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
result [v62|QWORD[.] + v66|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j786 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
value: v827 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v887 value: v827 stateAfter: - lastLocationAccess: - #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid j791 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j786 
y: j432 
=== Succesors ===
=== Usages ===
j780 j786 v795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j786 y: j432  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j792 
y: j791 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j792 y: j791  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v795 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v795 #trueSuccessor: v664 #falseSuccessor: v666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v66|QWORD * 4], input: v65|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v66|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v661 
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v661 #next: v670  <|@  <|@
f <@*|@fixed>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j780 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v669 
values: j499 j791 
=== Succesors ===
=== Usages ===
v886 j785 j774 v798 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: j499 j791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v668 v670 
=== Succesors ===
next: v688 
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v668 v670 #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j592 
y: j753 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j753  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j797 
y: j780 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j797 y: j780  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v798 
=== Succesors ===
trueSuccessor: v687 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v798 #trueSuccessor: v687 #falseSuccessor: v686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v63|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result [v62|QWORD[.] + v68|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j780 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j780  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
result v70|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
value: v830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v886 value: v830 stateAfter: - lastLocationAccess: - #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid j785 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j780 
y: j715 
=== Succesors ===
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j780 y: j715  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v68|QWORD * 4], input: v70|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v68|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j774 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v680 
values: j785 j780 
=== Succesors ===
=== Usages ===
v885 j779 j768 v801 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v680 values: j785 j780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v679 v691 
=== Succesors ===
next: v694 
=== Usages ===
j774 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v679 v691 #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j592 
y: j757 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j774 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j800 y: j774  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v801 
=== Succesors ===
trueSuccessor: v693 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v801 #trueSuccessor: v693 #falseSuccessor: v692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v63|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
result [v62|QWORD[.] + v72|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j774 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j774  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
result v74|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v885 
value: v829 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v885 value: v829 stateAfter: - lastLocationAccess: - #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid j779 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j774 
y: j729 
=== Succesors ===
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j774 y: j729  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v72|QWORD * 4], input: v74|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j768 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v683 
values: j779 j774 
=== Succesors ===
=== Usages ===
v884 v804 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v683 values: j779 j774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v682 v697 
=== Succesors ===
next: v700 
=== Usages ===
j768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v682 v697 #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j592 
y: j547 
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j592 y: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j803 
y: j768 
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j803 y: j768  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v804 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v804 #trueSuccessor: v699 #falseSuccessor: v698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = DEC v63|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
result [v62|QWORD[.] + v76|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j767 
index: j768 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j768  <|@  <|@
f <@~|@floating>@ <|@
tid a828 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
value: a828 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v884 value: a828 stateAfter: - lastLocationAccess: - #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v821 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + v76|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v661 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v661  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B62 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v672 v685 v703 
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v672 v685 v703 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i292 
y: i32 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i292 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v531 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v530 #falseSuccessor: v531  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j533 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j533 <|@
result [v41|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v856 
=== Succesors ===
next: j535 
=== Usages ===
j534 
=== Predecessor ===
v531 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v856 #next: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j535 <|@
result [v41|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v856 
=== Succesors ===
next: v544 
=== Usages ===
j540 
=== Predecessor ===
j533 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v856 #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32
=== Inputs ===
x: i292 
y: i536 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i292 y: i536  <|@  <|@
f <@~|@floating>@ <|@
tid i538 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i537 
y: i222 
=== Succesors ===
=== Usages ===
j539 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i537 y: i222  <|@  <|@
f <@~|@floating>@ <|@
tid j539 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i538 
=== Succesors ===
=== Usages ===
j540 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i538  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j535 
y: j539 
=== Succesors ===
=== Usages ===
j541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j535 y: j539  <|@  <|@
f <@~|@floating>@ <|@
tid j541 <|@
result v83|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j540 
y: i449 
=== Succesors ===
=== Usages ===
j542 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j540 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
result v84|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j533 
y: i449 
=== Succesors ===
=== Usages ===
j542 j556 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j533 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j541 
y: j534 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j541 y: j534  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result v87|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j542 
y: j459 
=== Succesors ===
=== Usages ===
j546 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j542 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
j535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = SHL v78|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LEA [v41|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = ADD (x: v81|QWORD[.], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = SHR v82|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = LEA [v41|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = SHR v85|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SUB (x: v83|QWORD[*], ~y: v84|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = INC v86|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[*]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255885291323524
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j546 <|@
result v88|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v545 
values: j543 j548 
=== Succesors ===
=== Usages ===
j548 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v545 values: j543 j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v544 
=== Succesors ===
next: v552 
=== Usages ===
j546 v550 v555 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v544 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j546 
y: j459 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j546 y: j459  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v549 
=== Succesors ===
trueSuccessor: v550 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v549 #trueSuccessor: v550 #falseSuccessor: v551  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v545 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v545 #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v558 v559 
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v558 v559 #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a492 
=== Succesors ===
next: v848 
=== Usages ===
v870 a232 j571 j573 v854 
=== Predecessor ===
v557 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a492 #next: v848  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v41|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a382 
index: - 
=== Succesors ===
=== Usages ===
v848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: v328 
=== Usages ===
v585 
=== Predecessor ===
a382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v848 
y: v583 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v848 y: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v585 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v585 #trueSuccessor: v325 #falseSuccessor: v327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v41|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid a232 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
op: Compress
stamp: n! -
=== Inputs ===
value: a382 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
value: a232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j564 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v850 value: a232 stateAfter: - lastLocationAccess: - #next: j564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v568 
=== Usages ===
j565 
=== Predecessor ===
v233 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid j565 <|@
result v90|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j564 
y: i449 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j564 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
result [v90|QWORD[*] + v15|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j565 
index: j453 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j565 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
value: i455 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
j564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v871 value: i455 stateAfter: - lastLocationAccess: - #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v247 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v41|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v252 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270893790811793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094936777807841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i32
=== Inputs ===
x: i292 
y: i18 
=== Succesors ===
=== Usages ===
v261 v255 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i292 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i260 
y: i2 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i260 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v258 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v258 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v30|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219649078166799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015667612935117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i260 
y: i16 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i260 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v264 
falseSuccessor: v262 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v264 #falseSuccessor: v262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168916812648256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
v264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252728206851913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v246 v251 v257 v263 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v246 v251 v257 v263 #next: v266  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - 
=== Succesors ===
=== Usages ===
?107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - -  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?109 
values: - - - - 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?109 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -68193 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937191139711120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j571 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j571 <|@
result v92|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a382 
=== Succesors ===
next: j573 
=== Usages ===
v872 
=== Predecessor ===
v262 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a382 #next: j573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j573 <|@
result v93|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: i64
=== Inputs ===
object: a382 
=== Succesors ===
next: v575 
=== Usages ===
v873 
=== Predecessor ===
j571 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a382 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result [v92|QWORD[*] + v94|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j571 
index: j838 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j571 index: j838  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i16 
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
result [v93|QWORD[*] + v95|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j573 
index: j835 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j573 index: j835  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i18 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v872 v873 j832 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
j573 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v872 v873 j832 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v41|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a382 
index: i2 
=== Succesors ===
=== Usages ===
v285 j576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a382 index: i2  <|@  <|@
f <@~|@floating>@ <|@
tid a831 <|@
result v97|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v321 
address: v854 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j576 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v321 address: v854 value: a831 stateAfter: - lastLocationAccess: - #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
result [v41|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v854 
=== Succesors ===
next: v580 
=== Usages ===
j577 
=== Predecessor ===
v285 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v854 #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid j577 <|@
result v98|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j576 
y: i449 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j576 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result [v98|QWORD[*] + v15|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j577 
index: j453 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j577 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
value: i455 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v874 value: i455 stateAfter: - lastLocationAccess: - #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v849 value: i10 stateAfter: - lastLocationAccess: - #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:484) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v92|QWORD[*] + v94|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v1|DWORD * 4 + 16], y: v97|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = LEA [v41|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[*] = SHR v99|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v98|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result int[-70972|0xfffffffffffeeac4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70972
stableDimension: 0
stamp: i32 [-70972] ⇊00000000fffeeac4 ⇈00000000fffeeac4
stampKind: i32
value: int[-70972|0xfffffffffffeeac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70972|0xfffffffffffeeac4], v14|QWORD[.]] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
result v100|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j546 
y: j547 
=== Succesors ===
=== Usages ===
j546 j553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j546 y: j547  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
result v101|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j534 
y: j453 
=== Succesors ===
=== Usages ===
j553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j534 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result v102|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: i64
=== Inputs ===
x: j548 
y: j556 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j548 y: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
address: j553 
value: i32 
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j553 value: i32 #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v545 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v545  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = DEC v88|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[*] = ADD (x: v84|QWORD[*], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = ADD (x: v101|QWORD[*], y: v100|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v102|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD[*]] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v606 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B82 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v417 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result int[-71451|0xfffffffffffee8e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71451
stableDimension: 0
stamp: i32 [-71451] ⇊00000000fffee8e5 ⇈00000000fffee8e5
stampKind: i32
value: int[-71451|0xfffffffffffee8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71451|0xfffffffffffee8e5], Object[null]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
result int[-58643|0xffffffffffff1aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -58643
stableDimension: 0
stamp: i32 [-58643] ⇊00000000ffff1aed ⇈00000000ffff1aed
stampKind: i32
value: int[-58643|0xffffffffffff1aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58643|0xffffffffffff1aed], Object[null]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465095055102998
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i410 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-88417 - -52065] ⇊00000000fffe0084 ⇈00000000fffffeff
valueDescription: i32
=== Inputs ===
merge: v406 
values: i408 i414 i416 i418 i420 i422 i424 i422 i422 i422 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v406 values: i408 i414 i416 i418 i420 i422 i424 i422 i422 i422  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v406 
values: a409 a357 a357 a357 a409 a357 a357 a357 a357 a357 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v406 values: a409 a357 a357 a357 a409 a357 a357 a357 a357 a357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v407 v413 v415 v417 v419 v421 v423 v425 v426 v427 
=== Succesors ===
next: v412 
=== Usages ===
i410 a411 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v407 v413 v415 v417 v419 v421 v423 v425 v426 v427 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?67 
actionAndReason: i410 
speculation: a411 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?67 actionAndReason: i410 speculation: a411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD, v104|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v7|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 9, 12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46ae8478 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20650950898262133 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322346504612213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v8|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v3|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v7|DWORD, ~y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SUB (x: v4|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7755166514016273 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090600219774943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021446413029958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952984144352423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885206498361663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v19|QWORD[*] + v21|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v20|QWORD[*] + v22|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v1|DWORD * 4 + 16], y: v24|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = LEA [v18|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = SHR v26|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v25|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SHR v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = ADD (x: v27|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v28|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v7|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = LEA [v30|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v31|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v30|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND v34|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 8], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = CMOVE (falseValue: v30|DWORD, ~trueValue: v10|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v43|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = LEA [v41|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v43|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V128_DWORD[....] = H [v45|QWORD[*] + v50|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v50|QWORD * 4], input: v52|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v43|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V64_DWORD[..] = H [v45|QWORD[*] + v54|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v54|QWORD * 4], input: v56|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v54|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v45|QWORD[*] + v58|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[.] + v58|QWORD * 4], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVSXD v30|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = DEC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = SHL v78|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LEA [v41|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = ADD (x: v81|QWORD[.], y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = SHR v82|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = LEA [v41|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[*] = SHR v85|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SUB (x: v83|QWORD[*], ~y: v84|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = INC v86|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[*]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = DEC v88|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[*] = ADD (x: v84|QWORD[*], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = ADD (x: v101|QWORD[*], y: v100|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v102|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|QWORD[*]] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v88|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608309472156204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308682437974003 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594605891378051401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v41|QWORD[.] + v43|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = SUB (x: v61|QWORD, ~y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v63|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|QWORD, y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v68|QWORD * 4], input: v70|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v68|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v63|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v72|QWORD * 4], input: v74|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = DEC v63|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + v76|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v41|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = COMPRESSPOINTER (input: v41|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094936777807841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v30|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015667612935117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937191139711120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v92|QWORD[*] + v94|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v1|DWORD * 4 + 16], y: v97|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = LEA [v41|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[*] = SHR v99|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v98|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588170493412213646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B82 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|V256_DWORD[........] = H [v45|QWORD[*] + v47|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v47|QWORD * 4], input: v48|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v47|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B62 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v62|QWORD[.] + v66|QWORD * 4], input: v65|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v66|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591120399499230
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465095055102998
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD, v104|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v103|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v104|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v7|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 9, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501709417041066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413192544407486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325560840500241
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-52065|0xffffffffffff349f], Object[null]] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v7|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252728206851913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -68193 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270893790811793
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219649078166799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168916812648256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-56091|0xffffffffffff24e5], Object[null]] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39955|0xffffffffffff63ed]] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70972|0xfffffffffffeeac4], v105|QWORD[.]] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-55100|0xffffffffffff28c4], v106|QWORD[.]] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-58643|0xffffffffffff1aed], Object[null]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88417|0xfffffffffffea69f], Object[null]] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40211|0xffffffffffff62ed]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71451|0xfffffffffffee8e5], Object[null]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #29         // rangeCheckForAdd:(int)void
     5: aload_0       
     6: aload_0       
     7: getfield      #0          // size:int
    10: iconst_1      
    11: iadd          
    12: invokespecial #28         // ensureCapacityInternal:(int)void
    15: aload_0       
    16: getfield      #2          // elementData:java.lang.Object[]
    19: iload_1       
    20: aload_0       
    21: getfield      #2          // elementData:java.lang.Object[]
    24: iload_1       
    25: iconst_1      
    26: iadd          
    27: aload_0       
    28: getfield      #0          // size:int
    31: iload_1       
    32: isub          
    33: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    36: aload_0       
    37: getfield      #2          // elementData:java.lang.Object[]
    40: iload_1       
    41: aload_2       
    42: aastore       
    43: aload_0       
    44: dup           
    45: getfield      #0          // size:int
    48: iconst_1      
    49: iadd          
    50: putfield      #0          // size:int
    53: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46ae8478 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r13:0, stack:48, stack:64]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r10|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.20650950898262133 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322346504612213
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  104  <|@ instruction stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.7755166514016273 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090600219774943
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021446413029958
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952984144352423
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885206498361663
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction r11|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction r9|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction rbp|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = LEA [r11|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  222  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction r13|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r13|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = LEA [r13|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction r9|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r14|DWORD) condition: < <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = LEA [r9|DWORD - 2147483639] size: DWORD <|@ <|@
      nr  290  <|@ instruction CMP rbp|DWORD y: 1 size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  324  <|@ instruction r14|DWORD = SHL r9|DWORD y: 2 size: DWORD <|@ <|@
      nr  326  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  328  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  330  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  386  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  388  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  390  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rbp|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [rbp|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  410  <|@ instruction r11|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  414  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rbp|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction r13|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r14|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r13|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V128_DWORD[....] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  476  <|@ instruction J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  478  <|@ instruction r13|QWORD = LEA [r14|QWORD + 4] size: QWORD <|@ <|@
      nr  480  <|@ instruction r14|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r13|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction xmm0|V64_DWORD[..] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  500  <|@ instruction J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  502  <|@ instruction r13|QWORD = LEA [r14|QWORD + 2] size: QWORD <|@ <|@
      nr  504  <|@ instruction r14|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r13|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbp|DWORD[.] = MOV [rbp|QWORD[*] + r14|QWORD * 4] size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r8|QWORD[.] + r14|QWORD * 4], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction r11|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction r11|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  670  <|@ instruction r8|QWORD[.] = ADD (x: r8|QWORD[.], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  674  <|@ instruction r11|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  676  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  678  <|@ instruction r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction r8|QWORD[*] = INC r8|QWORD[*] size: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  830  <|@ instruction r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD <|@ <|@
      nr  832  <|@ instruction rbp|QWORD[*] = ADD (x: r11|QWORD[*], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  834  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD[*], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  836  <|@ instruction MOVB (x: [rbp|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255885291323524
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  686  <|@ instruction CMP r8|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  688  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608309472156204
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.7308682437974003 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594605891378051401
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r14|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rbp|QWORD[.] = LEA [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction r11|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  578  <|@ instruction r11|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  580  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  592  <|@ instruction J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  594  <|@ instruction r11|QWORD = LEA [r13|QWORD + 4] size: QWORD <|@ <|@
      nr  596  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  602  <|@ instruction r11|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  604  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  616  <|@ instruction J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  618  <|@ instruction r11|QWORD = LEA [r13|QWORD + 2] size: QWORD <|@ <|@
      nr  620  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r8|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: r13|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [rbp|QWORD[.] + r13|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  704  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  710  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094936777807841
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015667612935117
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937191139711120
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r8|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r9|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rbp|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  776  <|@ instruction r13|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  778  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rbp|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  782  <|@ instruction rdx|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  788  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction MOV (x: [r10|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  806  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588170493412213646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r14|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B82 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  446  <|@ instruction xmm0|V256_DWORD[........] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  450  <|@ instruction r14|QWORD = LEA [r14|QWORD + 8] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  558  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730319413756003
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B62 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  564  <|@ instruction J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  566  <|@ instruction r13|QWORD = LEA [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  568  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591120399499230
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  134  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465095055102998
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  870  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: rsi|QWORD[.] stack:68|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: rsi|QWORD[.] rdx|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 9, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501709417041066
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  152  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413192544407486
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  172  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325560840500241
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  190  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction stack:84|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  356  <|@ instruction stack:96|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48, stack:64]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:32|QWORD[.] stack:68|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:32|QWORD[.] stack:36|DWORD r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12] <|@ <|@
      nr  360  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rax|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252728206851913
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction MOV [r15|QWORD + 668] y: -68193 size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [r14:0, stack:64]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:32|QWORD[.] stack:36|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270893790811793
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219649078166799
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168916812648256
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  252  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: int[-56091|0xffffffffffff24e5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-39955|0xffffffffffff63ed] <|@ <|@
      nr   26  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [r14:0, stack:64]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: stack:32|QWORD[.] stack:36|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642] <|@ <|@
      nr  820  <|@ instruction rcx|DWORD = MOVE input: int[-70972|0xfffffffffffeeac4] <|@ <|@
      nr  822  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642] <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: int[-55100|0xffffffffffff28c4] <|@ <|@
      nr  270  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  860  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rcx|DWORD = MOVE input: int[-58643|0xffffffffffff1aed] <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  310  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: int[-88417|0xfffffffffffea69f] <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-40211|0xffffffffffff62ed] <|@ <|@
      nr   40  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  848  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: int[-71451|0xfffffffffffee8e5] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #29         // rangeCheckForAdd:(int)void
     5: aload_0       
     6: aload_0       
     7: getfield      #0          // size:int
    10: iconst_1      
    11: iadd          
    12: invokespecial #28         // ensureCapacityInternal:(int)void
    15: aload_0       
    16: getfield      #2          // elementData:java.lang.Object[]
    19: iload_1       
    20: aload_0       
    21: getfield      #2          // elementData:java.lang.Object[]
    24: iload_1       
    25: iconst_1      
    26: iadd          
    27: aload_0       
    28: getfield      #0          // size:int
    31: iload_1       
    32: isub          
    33: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    36: aload_0       
    37: getfield      #2          // elementData:java.lang.Object[]
    40: iload_1       
    41: aload_2       
    42: aastore       
    43: aload_0       
    44: dup           
    45: getfield      #0          // size:int
    48: iconst_1      
    49: iadd          
    50: putfield      #0          // size:int
    53: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46ae8478 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r13:0, stack:48, stack:64]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r10|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.20650950898262133 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322346504612213
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  104  <|@ instruction stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.7755166514016273 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160452549820383
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090600219774943
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021446413029958
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952984144352423
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885206498361663
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction r11|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction r8|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction r9|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  210  <|@ instruction rbp|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = LEA [r11|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  222  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  226  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction r13|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction MOV (x: [r13|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = LEA [r13|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  236  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r9|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr  280  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  282  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction r9|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r14|DWORD) condition: < <|@ <|@
      nr  288  <|@ instruction rbp|DWORD = LEA [r9|DWORD - 2147483639] size: DWORD <|@ <|@
      nr  290  <|@ instruction CMP rbp|DWORD y: 1 size: DWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  324  <|@ instruction r14|DWORD = SHL r9|DWORD y: 2 size: DWORD <|@ <|@
      nr  326  <|@ instruction r14|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  328  <|@ instruction r14|DWORD = AND r14|DWORD y: -8 size: DWORD <|@ <|@
      nr  330  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  334  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  386  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  388  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  390  <|@ instruction AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rbp|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  396  <|@ instruction MOV (x: [rbp|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  398  <|@ instruction rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B47" "B33" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  406  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction r8|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  410  <|@ instruction r11|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr  414  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B47 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B38" "B36" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  424  <|@ instruction rbp|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction r13|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  428  <|@ instruction TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction r14|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r13|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V128_DWORD[....] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  476  <|@ instruction J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  478  <|@ instruction r13|QWORD = LEA [r14|QWORD + 4] size: QWORD <|@ <|@
      nr  480  <|@ instruction r14|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r13|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  488  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction xmm0|V64_DWORD[..] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  500  <|@ instruction J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  502  <|@ instruction r13|QWORD = LEA [r14|QWORD + 2] size: QWORD <|@ <|@
      nr  504  <|@ instruction r14|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction r13|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rbp|DWORD[.] = MOV [rbp|QWORD[*] + r14|QWORD * 4] size: DWORD <|@ <|@
      nr  524  <|@ instruction MOV (x: [r8|QWORD[.] + r14|QWORD * 4], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B31" "B46" "B44" 
    successors "B48" "B64" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r8|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B59" 
    successors "B69" "B66" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction r11|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction r11|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr  666  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  670  <|@ instruction r8|QWORD[.] = ADD (x: r8|QWORD[.], y: r11|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  674  <|@ instruction r11|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  676  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  678  <|@ instruction r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r11|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction r8|QWORD[*] = INC r8|QWORD[*] size: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  830  <|@ instruction r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD <|@ <|@
      nr  832  <|@ instruction rbp|QWORD[*] = ADD (x: r11|QWORD[*], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  834  <|@ instruction rbp|QWORD[*] = ADD (x: rbp|QWORD[*], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  836  <|@ instruction MOVB (x: [rbp|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B69" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255885291323524
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  686  <|@ instruction CMP r8|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  688  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B69 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608309472156204
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP r10|DWORD y: 11 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.7308682437974003 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594605891378051401
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r14|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rbp|QWORD[.] = LEA [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  540  <|@ instruction r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction r11|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  544  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B56" "B55" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  578  <|@ instruction r11|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  580  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  592  <|@ instruction J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  594  <|@ instruction r11|QWORD = LEA [r13|QWORD + 4] size: QWORD <|@ <|@
      nr  596  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B53" 
    successors "B59" "B58" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  602  <|@ instruction r11|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  604  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  616  <|@ instruction J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  618  <|@ instruction r11|QWORD = LEA [r13|QWORD + 2] size: QWORD <|@ <|@
      nr  620  <|@ instruction r13|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B64" "B61" 
    xhandlers
    flags 
    probability 4592752285663953028
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r8|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: r13|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B64 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730319413756003
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [rbp|QWORD[.] + r13|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B78" "B72" 
    xhandlers
    flags 
    probability 4597255885291323524
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  704  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  706  <|@ instruction r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  710  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B78 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" "B74" 
    xhandlers
    flags 
    probability 4597175006641315643
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B78 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" "B76" 
    xhandlers
    flags 
    probability 4597094936777807841
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B78 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4597015667612935117
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B78 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937191139711120
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r8|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r9|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rbp|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  774  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  776  <|@ instruction r13|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  778  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rbp|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  782  <|@ instruction rdx|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  788  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  792  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction MOV (x: [r10|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = LEA [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  800  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  802  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  806  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588170493412213646
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  446  <|@ instruction xmm0|V256_DWORD[........] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  448  <|@ instruction J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  450  <|@ instruction r14|QWORD = LEA [r14|QWORD + 8] size: QWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745086409212036
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  558  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B51" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752285663953028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  564  <|@ instruction J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  566  <|@ instruction r13|QWORD = LEA [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  568  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B53 falseDestination: B51 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591120399499230
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  134  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465095055102998
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  870  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  874  <|@ st <@st|@reference-map: [rsi:0, r14:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: rsi|QWORD[.] stack:68|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: rsi|QWORD[.] rdx|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 9, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501709417041066
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  152  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413192544407486
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  172  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325560840500241
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  190  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f] <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322656126816837
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction stack:84|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  356  <|@ instruction stack:96|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:48, stack:64]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:32|QWORD[.] stack:68|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:32|QWORD[.] stack:36|DWORD r14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12] <|@ <|@
      nr  360  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rax|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B74" "B76" 
    successors 
    xhandlers
    flags 
    probability 4576252728206851913
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction MOV [r15|QWORD + 668] y: -68193 size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@reference-map: [r14:0, stack:64]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:32|QWORD[.] stack:36|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  252  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVE input: int[-56091|0xffffffffffff24e5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-39955|0xffffffffffff63ed] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [r14:0, stack:64]
live-base-pointers: []
java.util.ArrayList.add(ArrayList.java:477) [bci: 0]
locals: stack:32|QWORD[.] stack:36|DWORD r14|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642] <|@ <|@
      nr  820  <|@ instruction rcx|DWORD = MOVE input: int[-70972|0xfffffffffffeeac4] <|@ <|@
      nr  824  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642] <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: int[-55100|0xffffffffffff28c4] <|@ <|@
      nr  272  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  860  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rcx|DWORD = MOVE input: int[-58643|0xffffffffffff1aed] <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  310  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|DWORD = MOVE input: int[-88417|0xfffffffffffea69f] <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-40211|0xffffffffffff62ed] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  848  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  850  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: int[-71451|0xfffffffffffee8e5] <|@ <|@
      nr  854  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #29         // rangeCheckForAdd:(int)void
     5: aload_0       
     6: aload_0       
     7: getfield      #0          // size:int
    10: iconst_1      
    11: iadd          
    12: invokespecial #28         // ensureCapacityInternal:(int)void
    15: aload_0       
    16: getfield      #2          // elementData:java.lang.Object[]
    19: iload_1       
    20: aload_0       
    21: getfield      #2          // elementData:java.lang.Object[]
    24: iload_1       
    25: iconst_1      
    26: iadd          
    27: aload_0       
    28: getfield      #0          // size:int
    31: iload_1       
    32: isub          
    33: invokestatic  #25         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    36: aload_0       
    37: getfield      #2          // elementData:java.lang.Object[]
    40: iload_1       
    41: aload_2       
    42: aastore       
    43: aload_0       
    44: dup           
    45: getfield      #0          // size:int
    48: iconst_1      
    49: iadd          
    50: putfield      #0          // size:int
    53: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424408954243c48894c2430448b6e14438504ec8b7e103bd70f8f4405000085d20f8cce050000448bd741ffc2448954242c4181fdaddeadde0f848b020000458bf241bb0100000044035e0c44895e0c468b1ced0c000000468b04ed08000000458bce452bcb2bfa48bb00e01b170100000048895c24208bc2ffc04183f9010f8db00000004181f8addeadde0f850a050000443bda0f86ac04000085c00f8cc003000085ff0f8ce3030000442bdf413bd30f8ff0030000413bc30f8f0004000049c1e5034d8bdd4d8bc54c63ca4863c04863ef4b8d7c8b10498d748010488bd54c896c2410e80000000090488b4c243048c1e9038b54243c4c8b6c241041894c9510498d7c951048c1ef09488b5c24204488241f488b742440448b54242c44895610488b6c24504883c458850500000000c5f877c3458bcb41d1e94503cb418be9412bee85ed450f4cce418da90900008083fd010f8d63040000443bca0f869d0400004585c90f8c6d040000448974241c498b6f60458bf141c1e602458d76174183e6f84d63f64d8bd64c03d54d3b57700f87420300004d895760410f18842ec0000000410f18842e00010000410f18842e40010000410f18842e8001000044894d0c48c7450001000000448945084c8bd5453bcb458bc1450f4fc34d63d84983fb010f8c7a0000004d8d42104a8d2ced100000004d8d6bf84d85ed49c7c6000000000f8d150200004d8d6bfc4d3bf50f8f14000000c4a17a6f44b500c4817a7f04b04d8d6e044d8bf54d8d6bfe4d3bf50f8f14000000c4a1f96e44b500c481f97e04b04d8d6e024d8bf54d8beb49ffcd4d3bf50f8f09000000428b6cb50043892cb04d63c14d3bc30f8f700000004585c90f84d7000000458bd941ffcb41c1e3024d63db4d8d42104d03c349c1e8094d8d5a1049c1eb094d2bc349ffc0e91b0000006666660f1f84000000000049ffc8498beb4803eb4903e8448865004983f8010f8c87000000ebe44183fa0b0f8d3801000041be0a000000e963fdffff4b8d6c9a104d2bc34d8d58f84d85db0f8d4501000049c7c5000000004d8d58fc4d3beb0f8f12000000c5f9efc0c4a17a7f44ad004d8d5d044d8beb4d8d58fe4d3beb0f8f12000000c5f9efc0c4a1f97e44ad004d8d5d024d8beb49ffc84d3be80f8f2affffff468964ad00e920ffffff41817a08addeadde0f85230200004d8bda49c1eb0344895e144c8bde49c1eb094588241b85c00f8cb101000085ff0f8ca9010000442bcf413bd10f8f9d010000413bc10f8f940100004d8bc24d8bca4863ea4863c04c63ef498d7ca810498d748110498bd54c89542410e800000000904c8b742430498bce48c1e9038b54243c4c8b54241041894c9210498d74921048c1ee09488b5c24204488241e488b742440448b54242c44895610488b6c24504883c458850500000000c5f877c3458bf2e92efcffff66660f1f840000000000c4a17e6f44b500c4817e7f04b04d8d76084d3bf57eeae9d0fdffffc5f9efc049c7c50000000066660f1f840000000000c4a17e7f44ad004d8d6d084d3beb7ef0e998feffff49ba0000000000000000448974241c4c8bf1b99f34ffff41898f9c0200004d8997a8020000e8000000009049ba0000000000000000448974241c4c8bf1b99f34ffffebd349ba0000000000000000448974241c4c8bf1b99f34ffffebba49ba0000000000000000448974241c4c8bf1b99f34ffffeba18944240c897c240844895c24044c8bf149c1e003498bf0418bd1b90000000044890c24e800000000904c8bd0448b0c248b44240c488b5c24208b7c2408448b5c2404498bce8b54243c488b742440e9a6fcffff4c8bf141c7879c0200009ff5feff4d89a7a8020000e8000000009049ba0000000000000000448974241c4c8bf1b9e524ffffe917ffffff41baed63ffff4c8bf14589979c0200004d89a7a8020000e800000000904c8bf149baaddeaddeaddeaddeb9c4eafeff488b742440e9defeffff448974241c4c8bf149baaddeaddeaddeaddeb9c428ffff488b742440e9bdfeffff49ba0000000000000000448974241c4c8bf1b9ed1affffe9a1feffff49ba0000000000000000448974241c4c8bf1b99fa6feffe985feffff41baed62ffffe969ffffff49ba0000000000000000448974241c4c8bf1b9e5e8feffe95efeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46ae8478 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 57 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 62 12 r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 66 14 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0]  <||@
  Comment 66 [rcx:0, rsi:0, r13:0, stack:48, stack:64]at java.util.ArrayList.add(ArrayList.java:477) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 16 rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 73 18 CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 81 block B2 null  <||@
  Comment 81 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 32 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 83 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 89 block B5 null  <||@
  Comment 89 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 54 r10|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 95 56 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 100 58 CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 100 {NarrowOop[Object[0]{}]}  <||@
  Comment 107 60 BRANCH trueDestinationProbability: 0.20650950898262133 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 113 block B9 null  <||@
  Comment 113 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 82 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 116 84 JUMP ~[] destination: B9 -> B10  <||@
  Comment 116 block B10 null  <||@
  Comment 116 86 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 116 88 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 122 90 r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 126 92 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 130 94 r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 138 96 r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 146 98 r9|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 152 100 rdi|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 154 102 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 164 104 stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 169 106 rax|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 173 108 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 177 110 BRANCH trueDestinationProbability: 0.7755166514016273 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 183 block B11 null  <||@
  Comment 183 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 114 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 183 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 190 116 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23  <||@
  Comment 196 block B12 null  <||@
  Comment 196 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 120 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 199 122 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22  <||@
  Comment 205 block B13 null  <||@
  Comment 205 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 126 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 207 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 213 block B15 null  <||@
  Comment 213 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 144 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 215 146 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 221 block B17 null  <||@
  Comment 221 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 162 r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 224 164 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 227 166 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 233 block B19 null  <||@
  Comment 233 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 182 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 236 184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 242 block B21 null  <||@
  Comment 242 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 200 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 246 202 r11|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 249 204 r8|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 252 206 r9|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 255 208 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 258 210 rbp|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 261 212 rdi|QWORD = LEA [r11|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 266 214 rsi|QWORD = LEA [r8|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD  <||@
  Comment 271 216 rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 274 218 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 279 220 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 279 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 285 222 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 290 224 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 294 226 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 298 228 r13|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 303 230 MOV (x: [r13|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 308 232 rdi|QWORD[.] = LEA [r13|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 313 234 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 317 236 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 322 238 MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 326 240 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 331 242 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 336 244 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 340 246 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 349 12  <||@
  Comment 359 block B24 null  <||@
  Comment 359 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 278 r9|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 365 280 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 368 282 rbp|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 374 284 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 376 286 r9|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r14|DWORD) condition: <  <||@
  Comment 380 288 rbp|DWORD = LEA [r9|DWORD - 2147483639] size: DWORD  <||@
  Comment 387 290 CMP rbp|DWORD y: 1 size: DWORD  <||@
  Comment 390 292 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84  <||@
  Comment 396 block B25 null  <||@
  Comment 396 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 296 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 399 298 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83  <||@
  Comment 405 block B26 null  <||@
  Comment 405 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 302 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 408 304 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 414 block B28 null  <||@
  Comment 414 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 320 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 419 322 rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 423 324 r14|DWORD = SHL r9|DWORD y: 2 size: DWORD  <||@
  Comment 430 326 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 434 328 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 438 330 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 441 332 r10|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 447 334 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 451 336 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 457 block B30 null  <||@
  Comment 457 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 382 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 461 384 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 192] instr: 0  <||@
  Comment 470 386 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 256] instr: 0  <||@
  Comment 479 388 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 320] instr: 0  <||@
  Comment 488 390 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 384] instr: 0  <||@
  Comment 497 392 MOV (x: [rbp|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 501 394 MOV [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 509 396 MOV (x: [rbp|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 513 398 rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 513 400 r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 516 402 JUMP ~[] destination: B30 -> B31  <||@
  Comment 516 block B31 null  <||@
  Comment 516 404 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 406 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 519 408 r8|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 526 410 r11|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 529 412 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 533 414 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B47 falseDestination: B31 -> B33  <||@
  Comment 539 block B33 null  <||@
  Comment 539 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 422 r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 543 424 rbp|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 551 426 r13|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 555 428 TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 558 434 r14|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 565 430 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 571 block B38 null  <||@
  Comment 571 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 571 462 r13|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 575 464 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 578 466 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 584 block B40 null  <||@
  Comment 584 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 474 xmm0|V128_DWORD[....] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 591 476 J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 597 478 r13|QWORD = LEA [r14|QWORD + 4] size: QWORD  <||@
  Comment 601 480 r14|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 604 482 JUMP ~[] destination: B40 -> B41  <||@
  Comment 604 block B41 null  <||@
  Comment 604 484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 604 486 r13|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 608 488 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 611 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 617 block B43 null  <||@
  Comment 617 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 617 498 xmm0|V64_DWORD[..] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 624 500 J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 630 502 r13|QWORD = LEA [r14|QWORD + 2] size: QWORD  <||@
  Comment 634 504 r14|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 637 506 JUMP ~[] destination: B43 -> B44  <||@
  Comment 637 block B44 null  <||@
  Comment 637 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 637 510 r13|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 643 512 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 646 514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 652 block B46 null  <||@
  Comment 652 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 522 rbp|DWORD[.] = MOV [rbp|QWORD[*] + r14|QWORD * 4] size: DWORD  <||@
  Comment 657 524 MOV (x: [r8|QWORD[.] + r14|QWORD * 4], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 661 526 JUMP ~[] destination: B46 -> B47  <||@
  Comment 661 block B47 null  <||@
  Comment 661 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 530 r8|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 664 532 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 667 534 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B64  <||@
  Comment 673 block B64 null  <||@
  Comment 673 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 652 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 676 654 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66  <||@
  Comment 682 block B66 null  <||@
  Comment 682 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 662 r11|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 688 664 r11|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 692 666 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 695 668 r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 699 670 r8|QWORD[.] = ADD (x: r8|QWORD[.], y: r11|QWORD) size: QWORD  <||@
  Comment 702 672 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 706 674 r11|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 710 676 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 714 678 r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r11|QWORD[*]) size: QWORD  <||@
  Comment 717 680 r8|QWORD[*] = INC r8|QWORD[*] size: QWORD  <||@
  Comment 720 682 JUMP ~[] destination: B66 -> B67  <||@
  Comment 725 block B81 loop 2 depth 1 header:545|LoopBegin  <||@
  Comment 725 828 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 736 830 r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD  <||@
  Comment 739 832 rbp|QWORD[*] = ADD (x: r11|QWORD[*], y: rbx|QWORD) size: QWORD  <||@
  Comment 745 834 rbp|QWORD[*] = ADD (x: rbp|QWORD[*], y: r8|QWORD[*]) size: QWORD  <||@
  Comment 748 836 MOVB (x: [rbp|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 752 838 JUMP ~[] destination: B81 -> B67  <||@
  Comment 752 block B67 loop 2 depth 1 header:545|LoopBegin  <||@
  Comment 752 684 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 752 686 CMP r8|QWORD[*] y: 1 size: QWORD  <||@
  Comment 756 688 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B69 falseDestination: B67 -> B81  <||@
  Comment 764 block B6 null  <||@
  Comment 764 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 764 64 CMP r10|DWORD y: 11 size: DWORD  <||@
  Comment 768 66 BRANCH trueDestinationProbability: 0.7308682437974003 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 774 block B7 null  <||@
  Comment 774 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 70 r14|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 780 72 JUMP ~[] destination: B7 -> B10  <||@
  Comment 785 block B48 null  <||@
  Comment 785 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 538 rbp|QWORD[.] = LEA [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD  <||@
  Comment 790 540 r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 793 542 r11|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 797 544 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 800 546 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 806 block B49 null  <||@
  Comment 806 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 550 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 813 552 JUMP ~[] destination: B49 -> B53  <||@
  Comment 813 block B53 null  <||@
  Comment 813 576 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 813 578 r11|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 817 580 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 820 582 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 826 block B55 null  <||@
  Comment 826 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 590 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 830 592 J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 837 594 r11|QWORD = LEA [r13|QWORD + 4] size: QWORD  <||@
  Comment 841 596 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 844 598 JUMP ~[] destination: B55 -> B56  <||@
  Comment 844 block B56 null  <||@
  Comment 844 600 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 844 602 r11|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 848 604 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 851 606 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 857 block B58 null  <||@
  Comment 857 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 614 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 861 616 J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 868 618 r11|QWORD = LEA [r13|QWORD + 2] size: QWORD  <||@
  Comment 872 620 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 875 622 JUMP ~[] destination: B58 -> B59  <||@
  Comment 875 block B59 null  <||@
  Comment 875 624 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 626 r8|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 878 628 CMP (x: r13|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 881 630 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B64 falseDestination: B59 -> B61  <||@
  Comment 887 block B61 null  <||@
  Comment 887 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 638 MOV (x: [rbp|QWORD[.] + r13|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 892 640 JUMP ~[] destination: B61 -> B64  <||@
  Comment 897 block B69 null  <||@
  Comment 897 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 696 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 897 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 905 698 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80  <||@
  Comment 911 block B70 null  <||@
  Comment 911 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 702 r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 918 704 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 922 706 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 929 708 MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 933 710 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 935 712 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B78 falseDestination: B70 -> B72  <||@
  Comment 941 block B72 null  <||@
  Comment 941 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 941 722 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 943 724 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B78 falseDestination: B72 -> B74  <||@
  Comment 949 block B74 null  <||@
  Comment 949 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 734 r9|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 952 736 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 955 738 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B78 falseDestination: B74 -> B76  <||@
  Comment 961 block B76 null  <||@
  Comment 961 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 748 CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 964 750 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B78 falseDestination: B76 -> B79  <||@
  Comment 970 block B79 null  <||@
  Comment 970 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 970 768 r8|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 973 770 r9|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 976 772 rbp|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 979 774 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 982 776 r13|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 985 778 rdi|QWORD = LEA [r8|QWORD[*] + rbp|QWORD * 4 + 16] size: QWORD  <||@
  Comment 990 780 rsi|QWORD = LEA [r9|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD  <||@
  Comment 995 782 rdx|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 998 784 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1003 786 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1003 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 1009 788 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 790 rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 1021 792 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1025 794 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 796 MOV (x: [r10|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1035 798 rsi|QWORD[.] = LEA [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1040 800 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1044 802 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1049 804 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1053 806 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1058 808 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1063 810 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1067 812 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1076 12  <||@
  Comment 1086 block B8 null  <||@
  Comment 1086 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 76 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1089 78 JUMP ~[] destination: B8 -> B10  <||@
  Comment 1094 block B36 loop 0 depth 1 header:606|LoopBegin  <||@
  Comment 1094 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 446 xmm0|V256_DWORD[........] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1111 448 J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1117 450 r14|QWORD = LEA [r14|QWORD + 8] size: QWORD  <||@
  Comment 1121 452 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1124 454 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1131 block B50 null  <||@
  Comment 1131 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 556 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1135 558 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1142 560 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1142 block B51 loop 1 depth 1 header:661|LoopBegin  <||@
  Comment 1142 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1152 564 J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1159 566 r13|QWORD = LEA [r13|QWORD + 8] size: QWORD  <||@
  Comment 1163 568 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1166 570 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B53 falseDestination: B51 -> B51  <||@
  Comment 1173 block B14 null  <||@
  Comment 1173 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 132 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1183 134 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1188 136 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 138 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1196 140 JUMP ~[] destination: B14 -> B85  <||@
  Comment 1196 block B85 null  <||@
  Comment 1196 868 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1196 870 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1203 872 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1210 874 DEOPT info [bci:10, 9, 12]  <||@
  Comment 1210 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1215 [rsi:0, r14:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:68|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r14|QWORD[.]   <||@
  Comment 1216 block B16 null  <||@
  Comment 1216 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 150 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1226 152 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1231 154 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 156 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1239 158 JUMP ~[] destination: B16 -> B85  <||@
  Comment 1241 block B18 null  <||@
  Comment 1241 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 170 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1251 172 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1256 174 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1259 176 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1264 178 JUMP ~[] destination: B18 -> B85  <||@
  Comment 1266 block B20 null  <||@
  Comment 1266 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1266 188 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1276 190 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1281 192 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 194 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1289 196 JUMP ~[] destination: B20 -> B85  <||@
  Comment 1291 block B29 null  <||@
  Comment 1291 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 340 stack:84|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1295 342 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1299 344 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1304 346 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 348 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 1311 350 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1314 352 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1317 354 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1322 356 stack:96|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1326 358 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12]  <||@
  Comment 1326 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1331 [r13:0, r14:0, stack:48, stack:64]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:68|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |r14|QWORD[.]   <||@
  Comment 1332 360 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 362 r9|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1339 364 rax|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1343 366 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1348 368 rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1352 370 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1357 372 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1360 374 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1364 376 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1369 378 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1374 block B78 null  <||@
  Comment 1374 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 716 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 760 MOV [r15|QWORD + 668] y: -68193 size: DWORD  <||@
  Comment 1388 762 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1395 764 DEOPT info [bci:44, 22, 9, 12]  <||@
  Comment 1395 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1400 [r14:0, stack:64]at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |r14|QWORD[.]   <||@
  Comment 1401 block B22 null  <||@
  Comment 1401 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1401 250 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1411 252 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1416 254 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 256 rcx|DWORD = MOVE input: int[-56091|0xffffffffffff24e5]  <||@
  Comment 1424 258 JUMP ~[] destination: B22 -> B85  <||@
  Comment 1429 block B1 null  <||@
  Comment 1429 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 24 r10|DWORD = MOVE input: int[-39955|0xffffffffffff63ed]  <||@
  Comment 1435 28 JUMP ~[] destination: B1 -> B4  <||@
  Comment 1435 block B4 null  <||@
  Comment 1435 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1435 26 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1445 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1452 50 DEOPT info [bci:0]  <||@
  Comment 1452 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1457 [r14:0, stack:64]at java.util.ArrayList.add(ArrayList.java:477) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |r14|QWORD[.]   <||@
  Comment 1458 block B80 null  <||@
  Comment 1458 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1458 816 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 818 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642]  <||@
  Comment 1461 {Object[d.a@1338938642]}  <||@
  Comment 1471 820 rcx|DWORD = MOVE input: int[-70972|0xfffffffffffeeac4]  <||@
  Comment 1476 824 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 826 JUMP ~[] destination: B80 -> B85  <||@
  Comment 1486 block B23 null  <||@
  Comment 1486 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 262 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1491 264 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1494 266 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642]  <||@
  Comment 1494 {Object[d.a@1338938642]}  <||@
  Comment 1504 268 rcx|DWORD = MOVE input: int[-55100|0xffffffffffff28c4]  <||@
  Comment 1509 272 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1514 274 JUMP ~[] destination: B23 -> B85  <||@
  Comment 1519 block B84 null  <||@
  Comment 1519 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1519 858 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1529 860 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1534 862 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1537 864 rcx|DWORD = MOVE input: int[-58643|0xffffffffffff1aed]  <||@
  Comment 1542 866 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1547 block B27 null  <||@
  Comment 1547 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 308 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1557 310 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1562 312 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1565 314 rcx|DWORD = MOVE input: int[-88417|0xfffffffffffea69f]  <||@
  Comment 1570 316 JUMP ~[] destination: B27 -> B85  <||@
  Comment 1575 block B3 null  <||@
  Comment 1575 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 38 r10|DWORD = MOVE input: int[-40211|0xffffffffffff62ed]  <||@
  Comment 1581 42 JUMP ~[] destination: B3 -> B4  <||@
  Comment 1586 block B83 null  <||@
  Comment 1586 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 846 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1596 848 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1601 850 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1604 852 rcx|DWORD = MOVE input: int[-71451|0xfffffffffffee8e5]  <||@
  Comment 1609 854 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1614 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1614 4  <||@
  Comment 1620 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1620 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9839[java.util.ArrayList.add(int, Object)]"
  method "HotSpotCompilation-9839[java.util.ArrayList.add(int, Object)]"
  date 1527005224244
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c29f40 448b560849c1e203493bc20f850fbfbdfe900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424408954243c48894c2430448b6e14438504ec8b7e103bd70f8f4405000085d20f8cce050000448bd741ffc2448954242c4181fdf7a700d80f848b020000458bf241bb0100000044035e0c44895e0c468b1ced0c000000468b04ed08000000458bce452bcb2bfa48bb00e01b170100000048895c24208bc2ffc04183f9010f8db00000004181f8f52200f80f850a050000443bda0f86ac04000085c00f8cc003000085ff0f8ce3030000442bdf413bd30f8ff0030000413bc30f8f0004000049c1e5034d8bdd4d8bc54c63ca4863c04863ef4b8d7c8b10498d748010488bd54c896c2410e8c490befe90488b4c243048c1e9038b54243c4c8b6c241041894c9510498d7c951048c1ef09488b5c24204488241f488b742440448b54242c44895610488b6c24504883c4588505634fc6fcc5f877c3458bcb41d1e94503cb418be9412bee85ed450f4cce418da90900008083fd010f8d63040000443bca0f869d0400004585c90f8c6d040000448974241c498b6f60458bf141c1e602458d76174183e6f84d63f64d8bd64c03d54d3b57700f87420300004d895760410f18842ec0000000410f18842e00010000410f18842e40010000410f18842e8001000044894d0c48c7450001000000448945084c8bd5453bcb458bc1450f4fc34d63d84983fb010f8c7a0000004d8d42104a8d2ced100000004d8d6bf84d85ed49c7c6000000000f8d150200004d8d6bfc4d3bf50f8f14000000c4a17a6f44b500c4817a7f04b04d8d6e044d8bf54d8d6bfe4d3bf50f8f14000000c4a1f96e44b500c481f97e04b04d8d6e024d8bf54d8beb49ffcd4d3bf50f8f09000000428b6cb50043892cb04d63c14d3bc30f8f700000004585c90f84d7000000458bd941ffcb41c1e3024d63db4d8d42104d03c349c1e8094d8d5a1049c1eb094d2bc349ffc0e91b0000006666660f1f84000000000049ffc8498beb4803eb4903e8448865004983f8010f8c87000000ebe44183fa0b0f8d3801000041be0a000000e963fdffff4b8d6c9a104d2bc34d8d58f84d85db0f8d4501000049c7c5000000004d8d58fc4d3beb0f8f12000000c5f9efc0c4a17a7f44ad004d8d5d044d8beb4d8d58fe4d3beb0f8f12000000c5f9efc0c4a1f97e44ad004d8d5d024d8beb49ffc84d3be80f8f2affffff468964ad00e920ffffff41817a08f52200f80f85230200004d8bda49c1eb0344895e144c8bde49c1eb094588241b85c00f8cb101000085ff0f8ca9010000442bcf413bd10f8f9d010000413bc10f8f940100004d8bc24d8bca4863ea4863c04c63ef498d7ca810498d748110498bd54c89542410e8f08dbefe904c8b742430498bce48c1e9038b54243c4c8b54241041894c9210498d74921048c1ee09488b5c24204488241e488b742440448b54242c44895610488b6c24504883c45885058c4cc6fcc5f877c3458bf2e92efcffff66660f1f840000000000c4a17e6f44b500c4817e7f04b04d8d76084d3bf57eeae9d0fdffffc5f9efc049c7c50000000066660f1f840000000000c4a17e7f44ad004d8d6d084d3beb7ef0e998feffff49ba0000000000000000448974241c4c8bf1b99f34ffff41898f9c0200004d8997a8020000e8ffd1bdfe9049ba0000000000000000448974241c4c8bf1b99f34ffffebd349ba0000000000000000448974241c4c8bf1b99f34ffffebba49ba0000000000000000448974241c4c8bf1b99f34ffffeba18944240c897c240844895c24044c8bf149c1e003498bf0418bd1b90000000044890c24e86dc936ff904c8bd0448b0c248b44240c488b5c24208b7c2408448b5c2404498bce8b54243c488b742440e9a6fcffff4c8bf141c7879c0200009ff5feff4d89a7a8020000e846d1bdfe9049ba0000000000000000448974241c4c8bf1b9e524ffffe917ffffff41baed63ffff4c8bf14589979c0200004d89a7a8020000e80dd1bdfe904c8bf149ba18c9f0bd07000000b9c4eafeff488b742440e9defeffff448974241c4c8bf149ba18c9f0bd07000000b9c428ffff488b742440e9bdfeffff49ba0000000000000000448974241c4c8bf1b9ed1affffe9a1feffff49ba0000000000000000448974241c4c8bf1b99fa6feffe985feffff41baed62ffffe969ffffff49ba0000000000000000448974241c4c8bf1b9e5e8feffe95efeffffe88d0002ff90e867cfbdfe90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@46ae8478 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 57 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 62 12 r13|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 66 14 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0]  <||@
  Comment 66 [rcx:0, rsi:0, r13:0, stack:48, stack:64]at java.util.ArrayList.add(ArrayList.java:477) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 16 rdi|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 73 18 CMP (x: rdx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 81 block B2 null  <||@
  Comment 81 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 32 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 83 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B5  <||@
  Comment 89 block B5 null  <||@
  Comment 89 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 54 r10|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 95 56 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 100 58 CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 100 {NarrowOop[Object[0]{}]}  <||@
  Comment 107 60 BRANCH trueDestinationProbability: 0.20650950898262133 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 113 block B9 null  <||@
  Comment 113 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 82 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 116 84 JUMP ~[] destination: B9 -> B10  <||@
  Comment 116 block B10 null  <||@
  Comment 116 86 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 116 88 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 122 90 r11|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 126 92 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 130 94 r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 138 96 r8|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 146 98 r9|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 152 100 rdi|DWORD = SUB (x: rdi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 154 102 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 164 104 stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 169 106 rax|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 173 108 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 177 110 BRANCH trueDestinationProbability: 0.7755166514016273 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 183 block B11 null  <||@
  Comment 183 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 114 CMP r8|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 183 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 190 116 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23  <||@
  Comment 196 block B12 null  <||@
  Comment 196 118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 120 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 199 122 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22  <||@
  Comment 205 block B13 null  <||@
  Comment 205 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 126 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 207 128 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 213 block B15 null  <||@
  Comment 213 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 144 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 215 146 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 221 block B17 null  <||@
  Comment 221 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 221 162 r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 224 164 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 227 166 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 233 block B19 null  <||@
  Comment 233 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 182 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 236 184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 242 block B21 null  <||@
  Comment 242 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 200 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 246 202 r11|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 249 204 r8|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 252 206 r9|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 255 208 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 258 210 rbp|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 261 212 rdi|QWORD = LEA [r11|QWORD[*] + r9|QWORD * 4 + 16] size: QWORD  <||@
  Comment 266 214 rsi|QWORD = LEA [r8|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD  <||@
  Comment 271 216 rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 274 218 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 279 220 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 279 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 285 222 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 290 224 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 294 226 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 298 228 r13|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 303 230 MOV (x: [r13|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 308 232 rdi|QWORD[.] = LEA [r13|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 313 234 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 317 236 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 322 238 MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 326 240 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 331 242 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 336 244 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 340 246 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 349 12  <||@
  Comment 359 block B24 null  <||@
  Comment 359 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 278 r9|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 365 280 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 368 282 rbp|DWORD = SUB (x: r9|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 374 284 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 376 286 r9|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r14|DWORD) condition: <  <||@
  Comment 380 288 rbp|DWORD = LEA [r9|DWORD - 2147483639] size: DWORD  <||@
  Comment 387 290 CMP rbp|DWORD y: 1 size: DWORD  <||@
  Comment 390 292 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84  <||@
  Comment 396 block B25 null  <||@
  Comment 396 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 296 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 399 298 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83  <||@
  Comment 405 block B26 null  <||@
  Comment 405 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 302 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 408 304 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 414 block B28 null  <||@
  Comment 414 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 320 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 419 322 rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 423 324 r14|DWORD = SHL r9|DWORD y: 2 size: DWORD  <||@
  Comment 430 326 r14|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 434 328 r14|DWORD = AND r14|DWORD y: -8 size: DWORD  <||@
  Comment 438 330 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 441 332 r10|QWORD = ADD (x: r14|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 447 334 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 451 336 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 457 block B30 null  <||@
  Comment 457 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 382 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 461 384 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 192] instr: 0  <||@
  Comment 470 386 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 256] instr: 0  <||@
  Comment 479 388 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 320] instr: 0  <||@
  Comment 488 390 AMD64PREFETCH ~[r14|QWORD + rbp|QWORD * 1 + 384] instr: 0  <||@
  Comment 497 392 MOV (x: [rbp|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 501 394 MOV [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 509 396 MOV (x: [rbp|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 513 398 rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 513 400 r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 516 402 JUMP ~[] destination: B30 -> B31  <||@
  Comment 516 block B31 null  <||@
  Comment 516 404 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 516 406 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 519 408 r8|DWORD = CMOVE (falseValue: r9|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 526 410 r11|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 529 412 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 533 414 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B47 falseDestination: B31 -> B33  <||@
  Comment 539 block B33 null  <||@
  Comment 539 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 539 422 r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 543 424 rbp|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 551 426 r13|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 555 428 TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 558 434 r14|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 565 430 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 571 block B38 null  <||@
  Comment 571 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 571 462 r13|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 575 464 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 578 466 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 584 block B40 null  <||@
  Comment 584 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 474 xmm0|V128_DWORD[....] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 591 476 J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 597 478 r13|QWORD = LEA [r14|QWORD + 4] size: QWORD  <||@
  Comment 601 480 r14|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 604 482 JUMP ~[] destination: B40 -> B41  <||@
  Comment 604 block B41 null  <||@
  Comment 604 484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 604 486 r13|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 608 488 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 611 490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 617 block B43 null  <||@
  Comment 617 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 617 498 xmm0|V64_DWORD[..] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 624 500 J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 630 502 r13|QWORD = LEA [r14|QWORD + 2] size: QWORD  <||@
  Comment 634 504 r14|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 637 506 JUMP ~[] destination: B43 -> B44  <||@
  Comment 637 block B44 null  <||@
  Comment 637 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 637 510 r13|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 643 512 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 646 514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 652 block B46 null  <||@
  Comment 652 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 522 rbp|DWORD[.] = MOV [rbp|QWORD[*] + r14|QWORD * 4] size: DWORD  <||@
  Comment 657 524 MOV (x: [r8|QWORD[.] + r14|QWORD * 4], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 661 526 JUMP ~[] destination: B46 -> B47  <||@
  Comment 661 block B47 null  <||@
  Comment 661 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 530 r8|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 664 532 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 667 534 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B64  <||@
  Comment 673 block B64 null  <||@
  Comment 673 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 652 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 676 654 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66  <||@
  Comment 682 block B66 null  <||@
  Comment 682 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 662 r11|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 688 664 r11|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 692 666 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 695 668 r8|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 699 670 r8|QWORD[.] = ADD (x: r8|QWORD[.], y: r11|QWORD) size: QWORD  <||@
  Comment 702 672 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 706 674 r11|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 710 676 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 714 678 r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: r11|QWORD[*]) size: QWORD  <||@
  Comment 717 680 r8|QWORD[*] = INC r8|QWORD[*] size: QWORD  <||@
  Comment 720 682 JUMP ~[] destination: B66 -> B67  <||@
  Comment 725 block B81 loop 2 depth 1 header:545|LoopBegin  <||@
  Comment 725 828 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 736 830 r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD  <||@
  Comment 739 832 rbp|QWORD[*] = ADD (x: r11|QWORD[*], y: rbx|QWORD) size: QWORD  <||@
  Comment 745 834 rbp|QWORD[*] = ADD (x: rbp|QWORD[*], y: r8|QWORD[*]) size: QWORD  <||@
  Comment 748 836 MOVB (x: [rbp|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 752 838 JUMP ~[] destination: B81 -> B67  <||@
  Comment 752 block B67 loop 2 depth 1 header:545|LoopBegin  <||@
  Comment 752 684 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 752 686 CMP r8|QWORD[*] y: 1 size: QWORD  <||@
  Comment 756 688 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B69 falseDestination: B67 -> B81  <||@
  Comment 764 block B6 null  <||@
  Comment 764 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 764 64 CMP r10|DWORD y: 11 size: DWORD  <||@
  Comment 768 66 BRANCH trueDestinationProbability: 0.7308682437974003 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 774 block B7 null  <||@
  Comment 774 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 70 r14|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 780 72 JUMP ~[] destination: B7 -> B10  <||@
  Comment 785 block B48 null  <||@
  Comment 785 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 538 rbp|QWORD[.] = LEA [r10|QWORD[.] + r11|QWORD * 4 + 16] size: QWORD  <||@
  Comment 790 540 r8|QWORD = SUB (x: r8|QWORD, ~y: r11|QWORD) size: QWORD  <||@
  Comment 793 542 r11|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 797 544 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 800 546 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 806 block B49 null  <||@
  Comment 806 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 550 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 813 552 JUMP ~[] destination: B49 -> B53  <||@
  Comment 813 block B53 null  <||@
  Comment 813 576 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 813 578 r11|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 817 580 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 820 582 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 826 block B55 null  <||@
  Comment 826 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 590 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 830 592 J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 837 594 r11|QWORD = LEA [r13|QWORD + 4] size: QWORD  <||@
  Comment 841 596 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 844 598 JUMP ~[] destination: B55 -> B56  <||@
  Comment 844 block B56 null  <||@
  Comment 844 600 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 844 602 r11|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 848 604 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 851 606 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 857 block B58 null  <||@
  Comment 857 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 614 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 861 616 J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 868 618 r11|QWORD = LEA [r13|QWORD + 2] size: QWORD  <||@
  Comment 872 620 r13|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 875 622 JUMP ~[] destination: B58 -> B59  <||@
  Comment 875 block B59 null  <||@
  Comment 875 624 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 626 r8|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 878 628 CMP (x: r13|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 881 630 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B64 falseDestination: B59 -> B61  <||@
  Comment 887 block B61 null  <||@
  Comment 887 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 638 MOV (x: [rbp|QWORD[.] + r13|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 892 640 JUMP ~[] destination: B61 -> B64  <||@
  Comment 897 block B69 null  <||@
  Comment 897 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 696 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 897 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 905 698 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80  <||@
  Comment 911 block B70 null  <||@
  Comment 911 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 702 r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 918 704 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 922 706 r11|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 929 708 MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 933 710 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 935 712 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B78 falseDestination: B70 -> B72  <||@
  Comment 941 block B72 null  <||@
  Comment 941 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 941 722 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 943 724 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B78 falseDestination: B72 -> B74  <||@
  Comment 949 block B74 null  <||@
  Comment 949 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 734 r9|DWORD = SUB (x: r9|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 952 736 CMP (x: rdx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 955 738 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B78 falseDestination: B74 -> B76  <||@
  Comment 961 block B76 null  <||@
  Comment 961 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 961 748 CMP (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 964 750 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B78 falseDestination: B76 -> B79  <||@
  Comment 970 block B79 null  <||@
  Comment 970 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 970 768 r8|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 973 770 r9|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 976 772 rbp|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 979 774 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 982 776 r13|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 985 778 rdi|QWORD = LEA [r8|QWORD[*] + rbp|QWORD * 4 + 16] size: QWORD  <||@
  Comment 990 780 rsi|QWORD = LEA [r9|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD  <||@
  Comment 995 782 rdx|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 998 784 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1003 786 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1003 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 1009 788 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 790 rcx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 1021 792 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1025 794 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 796 MOV (x: [r10|QWORD[.] + rdx|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1035 798 rsi|QWORD[.] = LEA [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1040 800 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1044 802 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1049 804 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1053 806 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1058 808 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1063 810 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1067 812 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1076 12  <||@
  Comment 1086 block B8 null  <||@
  Comment 1086 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 76 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1089 78 JUMP ~[] destination: B8 -> B10  <||@
  Comment 1094 block B36 loop 0 depth 1 header:606|LoopBegin  <||@
  Comment 1094 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1104 446 xmm0|V256_DWORD[........] = H [rbp|QWORD[*] + r14|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1111 448 J (address: [r8|QWORD[.] + r14|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1117 450 r14|QWORD = LEA [r14|QWORD + 8] size: QWORD  <||@
  Comment 1121 452 CMP (x: r14|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1124 454 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1131 block B50 null  <||@
  Comment 1131 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 556 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1135 558 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1142 560 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1142 block B51 loop 1 depth 1 header:661|LoopBegin  <||@
  Comment 1142 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1152 564 J (address: [rbp|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1159 566 r13|QWORD = LEA [r13|QWORD + 8] size: QWORD  <||@
  Comment 1163 568 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1166 570 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B53 falseDestination: B51 -> B51  <||@
  Comment 1173 block B14 null  <||@
  Comment 1173 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 132 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1183 134 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1188 136 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 138 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1196 140 JUMP ~[] destination: B14 -> B85  <||@
  Comment 1196 block B85 null  <||@
  Comment 1196 868 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1196 870 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1203 872 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1210 874 DEOPT info [bci:10, 9, 12]  <||@
  Comment 1210 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1215 [rsi:0, r14:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:68|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |r14|QWORD[.]   <||@
  Comment 1216 block B16 null  <||@
  Comment 1216 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1216 150 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1226 152 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1231 154 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1234 156 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1239 158 JUMP ~[] destination: B16 -> B85  <||@
  Comment 1241 block B18 null  <||@
  Comment 1241 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 170 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1251 172 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1256 174 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1259 176 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1264 178 JUMP ~[] destination: B18 -> B85  <||@
  Comment 1266 block B20 null  <||@
  Comment 1266 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1266 188 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1276 190 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1281 192 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1284 194 rcx|DWORD = MOVE input: int[-52065|0xffffffffffff349f]  <||@
  Comment 1289 196 JUMP ~[] destination: B20 -> B85  <||@
  Comment 1291 block B29 null  <||@
  Comment 1291 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 340 stack:84|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1295 342 stack:88|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1299 344 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1304 346 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 348 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6870538c encoding: base: 0 shift: 3  <||@
  Comment 1311 350 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1314 352 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1317 354 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1322 356 stack:96|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1326 358 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12]  <||@
  Comment 1326 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1331 [r13:0, r14:0, stack:48, stack:64]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:32|QWORD[.]  |stack:68|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |r14|QWORD[.]   <||@
  Comment 1332 360 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1335 362 r9|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1339 364 rax|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1343 366 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1348 368 rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1352 370 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1357 372 rcx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1360 374 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1364 376 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1369 378 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1374 block B78 null  <||@
  Comment 1374 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 716 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 760 MOV [r15|QWORD + 668] y: -68193 size: DWORD  <||@
  Comment 1388 762 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1395 764 DEOPT info [bci:44, 22, 9, 12]  <||@
  Comment 1395 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1400 [r14:0, stack:64]at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |r14|QWORD[.]   <||@
  Comment 1401 block B22 null  <||@
  Comment 1401 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1401 250 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1411 252 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1416 254 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 256 rcx|DWORD = MOVE input: int[-56091|0xffffffffffff24e5]  <||@
  Comment 1424 258 JUMP ~[] destination: B22 -> B85  <||@
  Comment 1429 block B1 null  <||@
  Comment 1429 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1429 24 r10|DWORD = MOVE input: int[-39955|0xffffffffffff63ed]  <||@
  Comment 1435 28 JUMP ~[] destination: B1 -> B4  <||@
  Comment 1435 block B4 null  <||@
  Comment 1435 44 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1435 26 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 46 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1445 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1452 50 DEOPT info [bci:0]  <||@
  Comment 1452 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1457 [r14:0, stack:64]at java.util.ArrayList.add(ArrayList.java:477) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |r14|QWORD[.]   <||@
  Comment 1458 block B80 null  <||@
  Comment 1458 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1458 816 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 818 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642]  <||@
  Comment 1461 {Object[d.a@1338938642]}  <||@
  Comment 1471 820 rcx|DWORD = MOVE input: int[-70972|0xfffffffffffeeac4]  <||@
  Comment 1476 824 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1481 826 JUMP ~[] destination: B80 -> B85  <||@
  Comment 1486 block B23 null  <||@
  Comment 1486 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1486 262 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1491 264 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1494 266 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1338938642]  <||@
  Comment 1494 {Object[d.a@1338938642]}  <||@
  Comment 1504 268 rcx|DWORD = MOVE input: int[-55100|0xffffffffffff28c4]  <||@
  Comment 1509 272 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1514 274 JUMP ~[] destination: B23 -> B85  <||@
  Comment 1519 block B84 null  <||@
  Comment 1519 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1519 858 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1529 860 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1534 862 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1537 864 rcx|DWORD = MOVE input: int[-58643|0xffffffffffff1aed]  <||@
  Comment 1542 866 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1547 block B27 null  <||@
  Comment 1547 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 308 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1557 310 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1562 312 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1565 314 rcx|DWORD = MOVE input: int[-88417|0xfffffffffffea69f]  <||@
  Comment 1570 316 JUMP ~[] destination: B27 -> B85  <||@
  Comment 1575 block B3 null  <||@
  Comment 1575 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 38 r10|DWORD = MOVE input: int[-40211|0xffffffffffff62ed]  <||@
  Comment 1581 42 JUMP ~[] destination: B3 -> B4  <||@
  Comment 1586 block B83 null  <||@
  Comment 1586 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 846 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1596 848 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1601 850 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1604 852 rcx|DWORD = MOVE input: int[-71451|0xfffffffffffee8e5]  <||@
  Comment 1609 854 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1614 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1614 4  <||@
  Comment 1620 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1620 5  <||@
  HexCodeFile>>> <|@
end_nmethod
