begin_compilation
  name " HotSpotCompilation-10074[java.lang.Double.toString()]"
  method "HotSpotCompilation-10074[java.lang.Double.toString()]"
  date 1527005234726
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: d2698 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: d2698  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Double;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2739 ?7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2739 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
d2698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d2698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Double.value
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2739 
=== Succesors ===
next: a2699 
=== Usages ===
j15 ?8 ?9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2739 #next: a2699  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v2738 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2738 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j101 
index: - 
=== Succesors ===
=== Usages ===
a2699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j101 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: a2700 
=== Usages ===
v2742 
=== Predecessor ===
d2698 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: a2700  <|@  <|@
f <@~|@floating>@ <|@
tid v2742 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a2699 
index: - 
=== Succesors ===
=== Usages ===
a2700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2700 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2742 
=== Succesors ===
next: v33 
=== Usages ===
a965 v1477 v2697 v2743 
=== Predecessor ===
a2699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2742 #next: v33  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Double.toString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 204
stackSize: 0
=== Inputs ===
outerFrameState: ?7 
values: d2698 - 
=== Succesors ===
=== Usages ===
?9 ?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?7 values: d2698 -  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: - - 
=== Succesors ===
=== Usages ===
?141 ?798 ?793 ?781 ?792 ?783 ?784 ?794 ?800 ?787 ?796 ?802 ?790 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: - -  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: d2698 - 
=== Succesors ===
=== Usages ===
?637 ?80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: d2698 -  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 0
=== Inputs ===
outerFrameState: ?9 
values: - - 
=== Succesors ===
=== Usages ===
?531 ?533 ?529 ?137 ?508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
value: d2698 
=== Succesors ===
=== Usages ===
v18 j21 j23 v34 j2696 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d2698  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j16 
=== Succesors ===
=== Usages ===
i19 v1599 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j16  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v30 v1280 v180 v1153 i598 v273 v408 v418 v2235 v2132 i599 v859 i599 i598 v1022 v1273 v1142 v1269 v1099 a2159 v1110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 1]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 i19 ?531 ?533 a2205 i598 v193 i228 i234 i477 i605 i310 i318 i469 i330 i344 v404 i2135 ?508 ?529 a2097 i599 v596 v627 i603 i903 v920 i603 i605 i940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v18 
trueValue: i17 
falseValue: i4 
=== Succesors ===
=== Usages ===
?531 ?533 i1005 ?508 ?529 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i17 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 30]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j15 
y: j22 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j22  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 36]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j23 
y: i24 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j23 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 37]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j25 
=== Succesors ===
=== Usages ===
v28 v30 i519 i562 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j25  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i17 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j2501 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2502 j2563 j2614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2591 v2553 j2544 v2604 v2503 j2536 j2456 j2597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2134 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2183 v2254 v2325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1580 j2566 j2617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1780 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1793 j1793 j1807 j1807 j2456 j2527 j2584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 i468 i476 i609 i611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1799 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1801 j1803 j1803 j1811 j1812 j1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j950 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2602 j2551 j1801 j1811 j1801 j1811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v306 i380 i381 i611 i390 i391 i482 i492 i603 i609 i605 i609 i611 a2205 a2097 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1203 v1224 v1236 v2631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 109]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1181 i377 ?1784 i373 i2837 i345 i2836 i362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1094 v1193 v1215 v1244 v1338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1030 v1462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$1;
stampKind: a -
value: Object[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1000 v988 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 i332 i316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1886 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1889 v1931 v1921 v1985 v1999 v1897 v1957 v1967 v1939 v1909 v1977 ?571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 23]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 v34 j2696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.13709283671618888
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
a2700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v31 #falseSuccessor: v1592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 79]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j20  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997455902306649
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 86]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1599 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1599  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v1596 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v1596 #falseSuccessor: v1598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2701 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2701  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 97]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal.BinaryToASCIIBuffer@1898887381
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
stampKind: a -
value: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2740 v2741 a729 a728 a730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2740 
=== Succesors ===
next: v183 
=== Usages ===
i958 
=== Predecessor ===
v1596 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2740 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i958 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2701 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2701  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i958 
y: i17 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i958 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: char[26]{0, ., 0,  ,  , ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[26]{0, ., 0,  ,  , ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a639 a640 a641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i2701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2702 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2702  <|@  <|@
f <@~|@floating>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2741 
=== Succesors ===
next: v630 
=== Usages ===
v627 i589 i904 i1814 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2741 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2702 
y: i4 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2702 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v627 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
i2702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v627 #trueSuccessor: v628 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592799363640258986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582612474071634943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1890 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1890  <|@  <|@
f <@~|@floating>@ <|@
tid i1891 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244243
stableDimension: 0
stamp: i32 [-244243] ⇊00000000fffc45ed ⇈00000000fffc45ed
stampKind: i32
value: int[-244243|0xfffffffffffc45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 101]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2700 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2700  <|@  <|@
f <@~|@floating>@ <|@
tid i564 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1011
stableDimension: 0
stamp: i32 [-1011] ⇊00000000fffffc0d ⇈00000000fffffc0d
stampKind: i32
value: int[-1011|0xfffffffffffffc0d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i565 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
i41 j44 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfLeadingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 103]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [12 - 64] ⇈000000000000007f
=== Inputs ===
value: j21 
=== Succesors ===
=== Usages ===
i43 i46 i79 i565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: j21  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1075 - -1023] ⇊00000000fffff800
=== Inputs ===
x: i564 
y: i41 
=== Succesors ===
=== Usages ===
i535 i536 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i564 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -11
stableDimension: 0
stamp: i32 [-11] ⇊00000000fffffff5 ⇈00000000fffffff5
stampKind: i32
value: int[-11|0xfffffffffffffff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [1 - 53] ⇈000000000000003f
=== Inputs ===
x: i41 
y: i42 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1774) [bci: 119]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j21 
y: i43 
=== Succesors ===
=== Usages ===
j514 j515 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j21 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 128]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 132]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 52] ⇈000000000000003f
=== Inputs ===
x: i45 
y: i41 
=== Succesors ===
=== Usages ===
i522 i523 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i45 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v1477 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1477 #trueSuccessor: v107 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-52 - 0]
=== Inputs ===
x: i78 
y: i41 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i78 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 42]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2047
stableDimension: 0
stamp: i32 [2047] ⇊00000000000007ff ⇈00000000000007ff
stampKind: i32
value: int[2047|0x7ff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i27 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1594 #falseSuccessor: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1884 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid i1885 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243987
stableDimension: 0
stamp: i32 [-243987] ⇊00000000fffc46ed ⇈00000000fffc46ed
stampKind: i32
value: int[-243987|0xfffffffffffc46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1887 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-244243 - -243987] ⇊00000000fffc44ed ⇈00000000fffc47ed
valueDescription: i32
=== Inputs ===
merge: v1883 
values: i1885 i1891 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1883 values: i1885 i1891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1884 v1890 
=== Succesors ===
next: v1889 
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1884 v1890 #next: v1889  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1887 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1887 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 138]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2700 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2700  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i562 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i26 
y: i57 
=== Succesors ===
=== Usages ===
i535 i536 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i26 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid j2696 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 140]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 143]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j2696 
y: j47 
=== Succesors ===
=== Usages ===
j514 j515 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j2696 y: j47  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1779) [bci: 146]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i522 i523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v2697 
=== Succesors ===
trueSuccessor: v556 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2697 #trueSuccessor: v556 #falseSuccessor: v557  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B217" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v506 
values: i565 i562 
=== Succesors ===
=== Usages ===
i534 i536 ?529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: i565 i562  <|@  <|@
f <@~|@floating>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v506 
values: i46 i49 
=== Succesors ===
=== Usages ===
i521 i523 ?508 ?529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: i46 i49  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v506 
values: j44 j48 
=== Succesors ===
=== Usages ===
j513 j515 ?508 ?529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: j44 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-52 - 2047]
valueDescription: i32
=== Inputs ===
merge: v506 
values: i79 i26 
=== Succesors ===
=== Usages ===
?508 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: i79 i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a2703 
=== Usages ===
i535 i522 j514 i519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a2703  <|@  <|@
f <@~|@floating>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2700 
=== Succesors ===
=== Usages ===
a2703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2743 
=== Succesors ===
next: i2704 
=== Usages ===
a972 v2744 
=== Predecessor ===
v506 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2743 #next: i2704  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1781
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j514 - i519 i522 - - 
=== Succesors ===
=== Usages ===
v1967 i2704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j514 - i519 i522 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2744 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2703 
=== Succesors ===
=== Usages ===
i2704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?508 
guard: - 
address: v2744 
=== Succesors ===
next: v1607 
=== Usages ===
i154 v979 
=== Predecessor ===
a2703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?508 guard: - address: v2744 #next: v1607  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2704 
y: i153 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2704 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1401181199
stableDimension: 0
stamp: i32 [-1401181199] ⇊00000000ac7babf1 ⇈00000000ac7babf1
stampKind: i32
value: int[-1401181199|0xffffffffac7babf1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 746302449] ⇈00000000ac7babf1
=== Inputs ===
x: i154 
y: i172 
=== Succesors ===
=== Usages ===
v2745 v988 v979 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i154 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i2704 
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i2704  <|@  <|@
f <@*|@fixed>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v1604 
falseSuccessor: v1606 
=== Usages ===
=== Predecessor ===
i2704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v1604 #falseSuccessor: v1606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2705 
=== Usages ===
a2705 
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2705  <|@  <|@
f <@~|@floating>@ <|@
tid a972 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2703 
=== Succesors ===
=== Usages ===
v2745 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2703  <|@  <|@
f <@~|@floating>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a972 
index: i173 
=== Succesors ===
=== Usages ===
a2705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a972 index: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2705 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1604 
address: v2745 
=== Succesors ===
next: v160 
=== Usages ===
a987 v1480 v2746 
=== Predecessor ===
v1604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1604 address: v2745 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid a987 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2705 
=== Succesors ===
=== Usages ===
a574 v988 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2705  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2705 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2705  <|@  <|@
tid ?529 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j514 - i535 i522 - - 
=== Succesors ===
=== Usages ===
?526 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j514 - i535 i522 - -  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?529 
=== Succesors ===
=== Usages ===
?112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?529  <|@  <|@
f <@~|@floating>@ <|@
tid a965 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a2700 
=== Succesors ===
=== Usages ===
?112 v988 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2700  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?526 
values: a59 - a965 - - 
=== Succesors ===
=== Usages ===
?571 ?174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: a59 - a965 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v1480 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
a2705 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1480 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a169 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a169  <|@  <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@f3244a0
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a965 a59 i173 a987 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a965 a59 i173 a987  <|@  <|@
tid ?174 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?112 
values: - - 
=== Succesors ===
=== Usages ===
?1781 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - -  <|@  <|@
tid ?1781 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?174 
values: - - - - 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?174 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v988 
stateDuring: ?1781 
=== Succesors ===
next: v120 
=== Usages ===
v114 a574 
=== Predecessor ===
v158 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v988 stateDuring: ?1781 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a169 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a169  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.364582267253437E-4
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
a169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v119 #falseSuccessor: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j515 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v116 
values: j44 j514 j48 
=== Succesors ===
=== Usages ===
j513 ?531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: j44 j514 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i523 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v116 
values: i46 i522 i49 
=== Succesors ===
=== Usages ===
i521 ?531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i46 i522 i49  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v116 
values: i565 i535 i562 
=== Succesors ===
=== Usages ===
i534 ?531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i565 i535 i562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v115 v117 v563 
=== Succesors ===
next: a125 
=== Usages ===
j515 i523 i536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v117 v563 #next: a125  <|@  <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@2881507c
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a59 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a59  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j515 - i536 i523 - - 
=== Succesors ===
=== Usages ===
?528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j515 - i536 i523 - -  <|@  <|@
tid ?528 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
=== Succesors ===
=== Usages ===
?1782 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531  <|@  <|@
tid ?1782 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?528 
values: - - - - - 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?528 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1000 
stateDuring: ?1782 
=== Succesors ===
next: v132 
=== Usages ===
a131 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1000 stateDuring: ?1782 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B216" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2706 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2706  <|@  <|@
f <@~|@floating>@ <|@
tid v2746 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2705 
=== Succesors ===
=== Usages ===
a2706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2706 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2746 
=== Succesors ===
next: v1611 
=== Usages ===
v1482 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2746 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid a1481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: n!# Lsun/misc/FloatingDecimal$1;
stampKind: n -
value: NarrowOop[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2706 
y: a1481 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2706 y: a1481  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1482 
=== Succesors ===
trueSuccessor: v1608 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
a2706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1482 #trueSuccessor: v1608 #falseSuccessor: v1610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v569 
values: a169 a987 
=== Succesors ===
=== Usages ===
v2747 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v569 values: a169 a987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v572 
=== Succesors ===
next: a2707 
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v572 #next: a2707  <|@  <|@
tid ?571 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?112 
values: - - a1886 
=== Succesors ===
=== Usages ===
a2707 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - - a1886  <|@  <|@
f <@~|@floating>@ <|@
tid v2747 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
a2707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2707 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?571 
guard: - 
address: v2747 
=== Succesors ===
next: v130 
=== Usages ===
a999 
=== Predecessor ===
v569 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?571 guard: - address: v2747 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid a999 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2707 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2707  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a2707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a131 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v129 
values: a999 a125 
=== Succesors ===
=== Usages ===
?532 v2784 ?137 v67 v2750 v2748 a728 a729 v2749 v1008 a730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: a999 a125  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v129 
values: j514 j515 
=== Succesors ===
=== Usages ===
?533 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: j514 j515  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v129 
values: i522 i523 
=== Succesors ===
=== Usages ===
?533 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i522 i523  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v129 
values: i535 i536 
=== Succesors ===
=== Usages ===
?533 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i535 i536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 
=== Succesors ===
next: v1740 
=== Usages ===
a131 j513 i521 i534 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 #next: v1740  <|@  <|@
tid ?533 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j513 - i534 i521 - - 
=== Succesors ===
=== Usages ===
?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j513 - i534 i521 - -  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: false
localsSize: 0
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 1
=== Inputs ===
outerFrameState: ?533 
values: a131 
=== Succesors ===
=== Usages ===
v1977 v1007 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?533 values: a131  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v1739 
falseSuccessor: v1738 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v1739 #falseSuccessor: v1738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2016  <|@  <|@
f <@*|@fixed>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
v1739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B215" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2708 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2708  <|@  <|@
f <@~|@floating>@ <|@
tid v2784 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v2708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2708 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2784 
=== Succesors ===
next: v2689 
=== Usages ===
v2237 
=== Predecessor ===
v1738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2784 #next: v2689  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2708 
y: v2236 
=== Succesors ===
=== Usages ===
v2689 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2708 y: v2236  <|@  <|@
f <@*|@fixed>@ <|@
tid v2689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2237 
=== Succesors ===
trueSuccessor: v2688 
falseSuccessor: v2021 
=== Usages ===
=== Predecessor ===
v2708 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2237 #trueSuccessor: v2688 #falseSuccessor: v2021  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2024 
=== Usages ===
=== Predecessor ===
v2689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2024  <|@  <|@
f <@*|@fixed>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
v2688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2016 v2024 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2016 v2024 #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v2748 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v1007 i2709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i19 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?532 
guard: - 
address: v2748 
value: i1005 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v2014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?532 guard: - address: v2748 value: i1005 stateAfter: - lastLocationAccess: - #next: v134  <|@  <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6c9e57b2
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
=== Inputs ===
arguments: a131 i534 j513 i521 i4 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a131 i534 j513 i521 i4  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - - - - - - - - - a131 - 
=== Succesors ===
=== Usages ===
?1783 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - - - - - - - - - a131 -  <|@  <|@
tid ?1783 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 259
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.dtoa
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1008 
stateDuring: ?1783 
=== Succesors ===
next: i2709 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1008 stateDuring: ?1783 #next: i2709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2709 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2748 
=== Succesors ===
next: a2710 
=== Usages ===
i1014 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2748 #next: a2710  <|@  <|@
f <@~|@floating>@ <|@
tid v2749 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
a2710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2710 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2749 
=== Succesors ===
next: v862 
=== Usages ===
a1012 
=== Predecessor ===
i2709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2749 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2710 
=== Succesors ===
=== Usages ===
a641 a640 a639 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2710  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2709 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2709  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1014 
y: i17 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1014 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v859 
=== Succesors ===
trueSuccessor: v860 
falseSuccessor: v861 
=== Usages ===
=== Predecessor ===
a2710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v859 #trueSuccessor: v860 #falseSuccessor: v861  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2711 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2711  <|@  <|@
f <@~|@floating>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
i2711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2711 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2750 
=== Succesors ===
next: v923 
=== Usages ===
v920 i589 i904 i1814 
=== Predecessor ===
v860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2750 #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2711 
y: i4 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2711 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v920 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
i2711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v920 #trueSuccessor: v921 #falseSuccessor: v922  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B83" 
    xhandlers
    flags 
    probability 4604577606124749407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641963553957399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a640 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v635 
values: a864 a1012 
=== Succesors ===
=== Usages ===
a639 a641 v2752 v2751 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v635 values: a864 a1012  <|@  <|@
f <@~|@floating>@ <|@
tid a729 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v635 
values: a39 a131 
=== Succesors ===
=== Usages ===
a728 a730 ?637 v2753 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v635 values: a39 a131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v636 v638 
=== Succesors ===
next: i2712 
=== Usages ===
a640 a729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v636 v638 #next: i2712  <|@  <|@
tid ?637 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 1
=== Inputs ===
outerFrameState: ?9 
values: - - a729 
=== Succesors ===
=== Usages ===
v1999 i2712 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - - a729  <|@  <|@
f <@~|@floating>@ <|@
tid v2751 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a640 
index: - 
=== Succesors ===
=== Usages ===
i2712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2712 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?637 
guard: - 
address: v2751 
=== Succesors ===
next: v1631 
=== Usages ===
v1022 
=== Predecessor ===
v635 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?637 guard: - address: v2751 #next: v1631  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2712 
y: i17 
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2712 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1022 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1628 
=== Usages ===
=== Predecessor ===
i2712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1022 #trueSuccessor: v1630 #falseSuccessor: v1628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1999 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1999  <|@  <|@
f <@~|@floating>@ <|@
tid i2001 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -379675
stableDimension: 0
stamp: i32 [-379675] ⇊00000000fffa34e5 ⇈00000000fffa34e5
stampKind: i32
value: int[-379675|0xfffffffffffa34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?637 
actionAndReason: i2001 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1630 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?637 actionAndReason: i2001 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
v1030 
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v2752 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a640 
index: - 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1628 
address: v2752 
value: i1485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2713 
=== Usages ===
=== Predecessor ===
v1628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1628 address: v2752 value: i1485 stateAfter: - lastLocationAccess: - #next: i2713  <|@  <|@
f <@~|@floating>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
i2713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2713 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2753 
=== Succesors ===
next: v196 
=== Usages ===
v193 i1814 i589 i903 
=== Predecessor ===
v1030 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2753 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2713 
y: i4 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2713 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j1791 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1793 j1807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1803 j1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
i2713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v194 #falseSuccessor: v195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i903 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2713 
y: i4 
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2713 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B82" 
    xhandlers
    flags 
    probability 4595512854586415623
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1814 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v584 
values: i2713 i2702 i2711 
=== Succesors ===
=== Usages ===
i1066 v1567 i246 v430 v217 i222 i589 j2041 i1060 ?236 i243 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i2713 i2702 i2711  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v584 
values: i4 i17 i17 
=== Succesors ===
=== Usages ===
v2790 v1165 ?214 i215 i599 ?586 v1067 v2786 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i4 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i605 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v584 
values: i305 i4 i4 
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i305 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v584 
values: i392 i305 i305 
=== Succesors ===
=== Usages ===
i609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i392 i305 i305  <|@  <|@
f <@~|@floating>@ <|@
tid a641 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v584 
values: a640 a864 a1012 
=== Succesors ===
=== Usages ===
a639 ?586 v2840 v2757 ?214 v1181 ?1785 ?236 v2761 v2762 v2763 j2057 j2048 j2036 v2759 v2760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: a640 a864 a1012  <|@  <|@
f <@~|@floating>@ <|@
tid a730 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v584 
values: a729 a39 a131 
=== Succesors ===
=== Usages ===
a728 a733 a733 a733 v2754 v2756 ?784 v2755 ?214 ?236 ?586 ?781 ?787 ?783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: a729 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v584 
values: i903 i2702 i2711 
=== Succesors ===
=== Usages ===
v2757 i234 v1086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i903 i2702 i2711  <|@  <|@
f <@~|@floating>@ <|@
tid j1812 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v584 
values: j969 j1799 j1799 
=== Succesors ===
=== Usages ===
j1803 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: j969 j1799 j1799  <|@  <|@
f <@~|@floating>@ <|@
tid j1807 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v584 
values: j1791 j1780 j1780 
=== Succesors ===
=== Usages ===
j1793 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: j1791 j1780 j1780  <|@  <|@
f <@~|@floating>@ <|@
tid j1811 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v584 
values: j1799 j950 j950 
=== Succesors ===
=== Usages ===
j1801 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: j1799 j950 j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v585 v587 v925 
=== Succesors ===
next: v205 
=== Usages ===
i1814 i598 i605 i611 a641 a730 i904 j1812 j1807 j1811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v585 v587 v925 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1814 
y: i198 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1814 y: i198  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9952842720510096
=== Inputs ===
condition: v1567 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1567 #trueSuccessor: v200 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482934073994828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2840 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2840  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?586 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?586 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?781 
values: a730 a641 i598 - - 
=== Succesors ===
=== Usages ===
v1985 v2840 i2715 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?781 values: a730 a641 i598 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?586 
object: a641 
=== Succesors ===
next: a2714 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?586 object: a641 #next: a2714  <|@  <|@
f <@~|@floating>@ <|@
tid v2755 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a730 
index: - 
=== Succesors ===
=== Usages ===
a2714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
=== Succesors ===
next: i2715 
=== Usages ===
a1037 v2758 
=== Predecessor ===
v2840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2755 #next: i2715  <|@  <|@
f <@~|@floating>@ <|@
tid v2758 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2714 
=== Succesors ===
=== Usages ===
i2715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2715 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?586 
guard: - 
address: v2758 
=== Succesors ===
next: i2716 
=== Usages ===
i1115 i1060 i1158 
=== Predecessor ===
a2714 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?586 guard: - address: v2758 #next: i2716  <|@  <|@
f <@~|@floating>@ <|@
tid v2761 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a641 
index: - 
=== Succesors ===
=== Usages ===
i2716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2761 
=== Succesors ===
next: i2717 
=== Usages ===
v1208 v1217 i1066 v1086 i1164 v1186 v1195 i1121 
=== Predecessor ===
i2715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2761 #next: i2717  <|@  <|@
f <@~|@floating>@ <|@
tid v2756 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a730 
index: - 
=== Succesors ===
=== Usages ===
i2717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2717 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2756 
=== Succesors ===
next: i2718 
=== Usages ===
j2032 i246 v1142 v1159 v1061 
=== Predecessor ===
i2716 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2756 #next: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a730 
index: - 
=== Succesors ===
=== Usages ===
i2718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2718 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2754 
=== Succesors ===
next: v433 
=== Usages ===
v217 v430 i1164 i243 i222 j2059 ?214 i215 v1153 i1158 
=== Predecessor ===
i2717 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2754 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1814 
y: i2718 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1814 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid j2032 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2717 
=== Succesors ===
=== Usages ===
v2789 v2785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2717  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2717 
y: i17 
=== Succesors ===
=== Usages ===
v1145 v1047 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2717 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a1037 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2714 
=== Succesors ===
=== Usages ===
j2031 j2043 j2055 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2714  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.4466454034221034
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
i2718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v431 #falseSuccessor: v432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i904 
y: i2716 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i904 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1086 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1642 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1086 #trueSuccessor: v1640 #falseSuccessor: v1642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
v1094 
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid i1991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274529
stableDimension: 0
stamp: i32 [-274529] ⇊00000000fffbcf9f ⇈00000000fffbcf9f
stampKind: i32
value: int[-274529|0xfffffffffffbcf9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1983 i1983 i1983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1046 
falseSuccessor: v1045 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1046 #falseSuccessor: v1045  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560359772940407372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1990 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1990  <|@  <|@
f <@*|@fixed>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590249064547655201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid i1060 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2715 
y: i1814 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2715 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1060 
y: i2717 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1060 y: i2717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1064 
falseSuccessor: v1062 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1064 #falseSuccessor: v1062  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560287567443719012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2003 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2003  <|@  <|@
f <@*|@fixed>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1064 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590193218108810298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid i1066 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2716 
y: i1814 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2716 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1066 
y: i598 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1066 y: i598  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1067 
=== Succesors ===
trueSuccessor: v1070 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1067 #trueSuccessor: v1070 #falseSuccessor: v1068  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560216084001997536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2002  <|@  <|@
f <@*|@fixed>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1070 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590137930134353844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2031 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1037 
=== Succesors ===
next: j2036 
=== Usages ===
v2785 
=== Predecessor ===
v1068 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1037 #next: j2036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a641 
=== Succesors ===
next: v2042 
=== Usages ===
v2786 
=== Predecessor ===
j2031 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a641 #next: v2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2031 
index: j2032 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2031 index: j2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2036 
index: i598 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2036 index: i598  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i1814 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2785 v2786 j2041 
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
j2036 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2785 v2786 j2041 #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v2757 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i904 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1640 
address: v2757 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1640 address: v2757 value: i1489 stateAfter: - lastLocationAccess: - #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i1814 
y: i2717 
=== Succesors ===
=== Usages ===
j2044 v1099 v1116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1814 y: i2717  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i17 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i904 
y: i4 
=== Succesors ===
=== Usages ===
?236 i249 v1122 j2049 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i904 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1099 
=== Succesors ===
trueSuccessor: v1101 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1099 #trueSuccessor: v1101 #falseSuccessor: v1100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560145315394693275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590083195039641955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2718 
y: i1814 
=== Succesors ===
=== Usages ===
j2053 i1121 i249 v1110 i1115 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2718 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i17 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1113 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1113 #falseSuccessor: v1111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560075254473462057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590029007295877185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid i1115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2715 
y: i243 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2715 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1115 
y: i246 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1115 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1119 #falseSuccessor: v1117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560005894161443151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589975361429550062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid i1121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2716 
y: i243 
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2716 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1121 
y: i234 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1121 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1125 
falseSuccessor: v1123 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1125 #falseSuccessor: v1123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559937227452544434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1124  <|@  <|@
f <@*|@fixed>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569048122125276722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1105 v1112 v1118 v1124 
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1105 v1112 v1118 v1124 #next: v1127  <|@  <|@
tid ?787 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?787 
values: a730 a641 i234 i1814 - 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?787 values: a730 a641 i234 i1814 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?236 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B146" 
    xhandlers
    flags 
    probability 4589922252021886211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2043 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1037 
=== Succesors ===
next: j2048 
=== Usages ===
v2787 
=== Predecessor ===
v1123 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1037 #next: j2048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a641 
=== Succesors ===
next: v2054 
=== Usages ===
v2788 
=== Predecessor ===
j2043 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a641 #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid j2044 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
v2787 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2043 
index: j2044 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2043 index: j2044  <|@  <|@
f <@~|@floating>@ <|@
tid j2049 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i234 
=== Succesors ===
=== Usages ===
v2788 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v2788 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2048 
index: j2049 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2048 index: j2049  <|@  <|@
f <@~|@floating>@ <|@
tid j2053 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i243 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2787 v2788 j2053 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
j2048 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2787 v2788 j2053 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i234 
y: i243 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i234 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v2054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1988 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1988  <|@  <|@
f <@~|@floating>@ <|@
tid i1989 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278299
stableDimension: 0
stamp: i32 [-278299] ⇊00000000fffbc0e5 ⇈00000000fffbc0e5
stampKind: i32
value: int[-278299|0xfffffffffffbc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591653193801305682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid i1993 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299617
stableDimension: 0
stamp: i32 [-299617] ⇊00000000fffb6d9f ⇈00000000fffb6d9f
stampKind: i32
value: int[-299617|0xfffffffffffb6d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1983 i1983 i1983 i1983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1144 
falseSuccessor: v1143 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1144 #falseSuccessor: v1143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 4562084852888391629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1992 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1992  <|@  <|@
f <@*|@fixed>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4591583306069924274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2718 
y: i17 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2718 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v1156 
falseSuccessor: v1154 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v1156 #falseSuccessor: v1154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561995396592223427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2006 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591514117215856680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1163 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2715 
y: i2718 
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2715 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i2717 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1158 y: i2717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1162 
falseSuccessor: v1160 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1162 #falseSuccessor: v1160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561906834859016906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2005 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2005  <|@  <|@
f <@*|@fixed>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4591445620250329762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid i1164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2716 
y: i2718 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2716 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1164 
y: i598 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1164 y: i598  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1165 
=== Succesors ===
trueSuccessor: v1168 
falseSuccessor: v1166 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1165 #trueSuccessor: v1168 #falseSuccessor: v1166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561819158743142451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2004 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2004  <|@  <|@
f <@*|@fixed>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B45" "B62" "B49" "B47" "B68" "B66" "B64" 
    successors 
    xhandlers
    flags 
    probability 4573736910224670211
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1983 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-398859 - -274529] ⇊00000000fff94085 ⇈00000000fffbefff
valueDescription: i32
=== Inputs ===
merge: v1980 
values: i1989 i1991 i1993 i1991 i1991 i1993 i1993 i1993 
=== Succesors ===
=== Usages ===
v1985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1980 values: i1989 i1991 i1993 i1991 i1991 i1993 i1993 i1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1988 v1990 v1992 v2002 v2003 v2004 v2005 v2006 
=== Succesors ===
next: v1985 
=== Usages ===
i1983 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1988 v1990 v1992 v2002 v2003 v2004 v2005 v2006 #next: v1985  <|@  <|@
f <@*|@fixed>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?586 
actionAndReason: i1983 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?586 actionAndReason: i1983 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B76" 
    xhandlers
    flags 
    probability 4591377808254458114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2055 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1037 
=== Succesors ===
next: j2057 
=== Usages ===
v2789 
=== Predecessor ===
v1166 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1037 #next: j2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a641 
=== Succesors ===
next: v2060 
=== Usages ===
v2790 
=== Predecessor ===
j2055 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a641 #next: v2060  <|@  <|@
f <@~|@floating>@ <|@
tid v2789 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2055 
index: j2032 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2055 index: j2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2790 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2057 
index: i598 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2057 index: i598  <|@  <|@
f <@~|@floating>@ <|@
tid j2059 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2718 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2789 v2790 j2059 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
j2057 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2789 v2790 j2059 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i598 
y: i2718 
=== Succesors ===
=== Usages ===
?1785 i381 i223 v1181 i940 v2762 v1208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i598 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2718 
y: i1814 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2718 y: i1814  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.3347570742128223E-4
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v2060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v218 #falseSuccessor: v219  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B75" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 97]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i1814 
y: i2718 
=== Succesors ===
=== Usages ===
i223 ?1785 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1814 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 108]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i215 
y: i222 
=== Succesors ===
=== Usages ===
v1181 i228 v2759 i380 v1186 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i215 y: i222  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i223 
y: i2716 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i223 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1186 
=== Succesors ===
trueSuccessor: v1644 
falseSuccessor: v1646 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1186 #trueSuccessor: v1644 #falseSuccessor: v1646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
v1193 
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i223 
y: i4 
=== Succesors ===
=== Usages ===
v1195 v2760 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i223 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i2716 
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i228 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1648 
falseSuccessor: v1650 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1648 #falseSuccessor: v1650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B146" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
v1203 
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6f078acb
stamp: void
targetMethod: HotSpotMethod<Arrays.fill(char[], int, int, char)>
=== Inputs ===
arguments: a641 i215 i223 i224 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a641 i215 i223 i224  <|@  <|@
tid ?784 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?1785 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?1785 <|@
d <@d|@=== Debug Properties ===
bci: 111
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 919
stackSize: 0
=== Inputs ===
outerFrameState: ?784 
values: - a641 i215 i222 - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?784 values: - a641 i215 i222 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
bci: 111
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.fill
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1181 
stateDuring: ?1785 
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1181 stateDuring: ?1785 #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid v2759 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i223 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1644 
address: v2759 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1644 address: v2759 value: i1489 stateAfter: - lastLocationAccess: - #next: v1203  <|@  <|@
f <@~|@floating>@ <|@
tid v2760 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i228 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1648 
address: v2760 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1648 address: v2760 value: i1492 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 128]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i223 
y: i305 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i223 y: i305  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1910 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1910  <|@  <|@
f <@~|@floating>@ <|@
tid i1911 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306203
stableDimension: 0
stamp: i32 [-306203] ⇊00000000fffb53e5 ⇈00000000fffb53e5
stampKind: i32
value: int[-306203|0xfffffffffffb53e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303899
stableDimension: 0
stamp: i32 [-303899] ⇊00000000fffb5ce5 ⇈00000000fffb5ce5
stampKind: i32
value: int[-303899|0xfffffffffffb5ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B80" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 137]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i2716 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i215 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1208 
=== Succesors ===
trueSuccessor: v1652 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1208 #trueSuccessor: v1652 #falseSuccessor: v1654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
v1215 
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i215 
y: i4 
=== Succesors ===
=== Usages ===
v1217 v2763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i215 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i940 
y: i2716 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i940 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1217 
=== Succesors ===
trueSuccessor: v1656 
falseSuccessor: v1658 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1217 #trueSuccessor: v1656 #falseSuccessor: v1658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1215 
=== Usages ===
v1224 
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i215 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1652 
address: v2762 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1652 address: v2762 value: i1489 stateAfter: - lastLocationAccess: - #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i940 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2763 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2763 value: i1492 stateAfter: - lastLocationAccess: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i215 
y: i305 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i215 y: i305  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1914 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1914  <|@  <|@
f <@~|@floating>@ <|@
tid i1915 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -311835
stableDimension: 0
stamp: i32 [-311835] ⇊00000000fffb3de5 ⇈00000000fffb3de5
stampKind: i32
value: int[-311835|0xfffffffffffb3de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1912 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1912  <|@  <|@
f <@~|@floating>@ <|@
tid i1913 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -309531
stableDimension: 0
stamp: i32 [-309531] ⇊00000000fffb46e5 ⇈00000000fffb46e5
stampKind: i32
value: int[-309531|0xfffffffffffb46e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" "B80" "B79" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1907 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-311835 - -303899] ⇊00000000fffb00e5 ⇈00000000fffb7fe5
valueDescription: i32
=== Inputs ===
merge: v1904 
values: i1906 i1911 i1913 i1915 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1904 values: i1906 i1911 i1913 i1915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1905 v1910 v1912 v1914 
=== Succesors ===
next: v1909 
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1905 v1910 v1912 v1914 #next: v1909  <|@  <|@
tid ?783 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?214 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
bci: 85
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 916
stackSize: 0
=== Inputs ===
outerFrameState: ?783 
values: a730 a641 i598 i2718 - 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?783 values: a730 a641 i598 i2718 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?214 
actionAndReason: i1907 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1904 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?214 actionAndReason: i1907 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560798874451295069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B39" "B82" "B5" "B33" 
    successors "B84" "B121" 
    xhandlers
    flags 
    probability 4605603690354152556
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v202 
values: i2713 i1814 i2702 i2711 
=== Succesors ===
=== Usages ===
i330 v260 v273 i278 i332 v596 i1577 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i2713 i1814 i2702 i2711  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v202 
values: i4 i598 i17 i17 
=== Succesors ===
=== Usages ===
?252 v1329 v1230 ?296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i4 i598 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i305 i605 i4 i4 
=== Succesors ===
=== Usages ===
v1238 v1335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i305 i605 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i392 i611 i305 i305 
=== Succesors ===
=== Usages ===
?271 i278 v2782 ?466 i283 i287 ?303 v1584 ?1784 i317 v1246 v1587 v1368 v2794 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i392 i611 i305 i305  <|@  <|@
f <@~|@floating>@ <|@
tid a639 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v202 
values: a640 a641 a864 a1012 
=== Succesors ===
=== Usages ===
?338 ?252 j2066 ?1784 ?321 ?271 ?303 ?466 ?288 v2777 ?296 v2776 v2764 v2765 v2766 v2782 v2775 v2778 j2078 v2774 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a640 a641 a864 a1012  <|@  <|@
f <@~|@floating>@ <|@
tid a728 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v202 
values: a729 a730 a39 a131 
=== Succesors ===
=== Usages ===
?288 v2768 a733 a733 a733 a733 ?796 v2769 ?321 v2770 ?798 ?802 ?790 ?296 ?252 ?792 ?303 ?794 ?271 ?800 ?793 ?466 v2767 v2841 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a729 a730 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid j1793 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1791 j1807 j1780 j1780 
=== Succesors ===
=== Usages ===
j1581 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1791 j1807 j1780 j1780  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v202 
values: j969 j1812 j1799 j1799 
=== Succesors ===
=== Usages ===
v2766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j969 j1812 j1799 j1799  <|@  <|@
f <@~|@floating>@ <|@
tid j1801 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1799 j1811 j950 j950 
=== Succesors ===
=== Usages ===
v2765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1799 j1811 j950 j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 v631 v924 
=== Succesors ===
next: v257 
=== Usages ===
i589 i599 i603 i609 a639 a728 j1793 j1803 j1801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 v631 v924 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2722 i2727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2768 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
a2721 a2725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a639 
index: j1803 
=== Succesors ===
=== Usages ===
v1244 v1338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: j1803  <|@  <|@
f <@~|@floating>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a639 
index: j1801 
=== Succesors ===
=== Usages ===
v1236 v1333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: j1801  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a639 
index: - 
=== Succesors ===
=== Usages ===
i2719 i2728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i4 
=== Succesors ===
=== Usages ===
v326 v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i589 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v255 #falseSuccessor: v256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4605596209411378873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i259 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i589 y: i259  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B122" 
    xhandlers
    flags 
    probability 4575429410860470575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B119" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2719 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2719  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?790 
values: a728 a639 i599 - - 
=== Succesors ===
=== Usages ===
v1921 i2719 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?790 values: a728 a639 i599 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2719 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?252 
guard: - 
address: v2764 
=== Succesors ===
next: v1667 
=== Usages ===
v1230 v1238 v1246 v1584 i1291 j1574 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?252 guard: - address: v2764 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i2719 
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i599 y: i2719  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v1664 
falseSuccessor: v1666 
=== Usages ===
=== Predecessor ===
i2719 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v1664 #falseSuccessor: v1666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1671 
=== Usages ===
v1236 
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i603 
y: i2719 
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i603 y: i2719  <|@  <|@
f <@*|@fixed>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1238 
=== Succesors ===
trueSuccessor: v1668 
falseSuccessor: v1670 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1238 #trueSuccessor: v1668 #falseSuccessor: v1670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
v1244 
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1664 
address: v2765 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1664 address: v2765 value: i1492 stateAfter: - lastLocationAccess: - #next: v1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1668 
address: v2766 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1668 address: v2766 value: i1489 stateAfter: - lastLocationAccess: - #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i17 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i589 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B106" 
    xhandlers
    flags 
    probability 4604199603166572522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B97" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2675 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2675  <|@  <|@
f <@~|@floating>@ <|@
tid i1577 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i589 
=== Succesors ===
=== Usages ===
j1578 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i589  <|@  <|@
f <@~|@floating>@ <|@
tid j1578 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1577 
=== Succesors ===
=== Usages ===
j1580 j2502 v2254 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1577  <|@  <|@
f <@~|@floating>@ <|@
tid j1580 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1578 
y: j1579 
=== Succesors ===
=== Usages ===
j1581 v2505 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1578 y: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 243]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i609 
y: i589 
=== Succesors ===
=== Usages ===
v1587 v1246 ?1784 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i609 y: i589  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i278 
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i609 y: i278  <|@  <|@
f <@*|@fixed>@ <|@
tid v2675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1587 
=== Succesors ===
trueSuccessor: v2674 
falseSuccessor: v2671 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1587 #trueSuccessor: v2674 #falseSuccessor: v2671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
v2675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2683  <|@  <|@
f <@~|@floating>@ <|@
tid j1581 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j1580 
y: j1793 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1580 y: j1793  <|@  <|@
f <@~|@floating>@ <|@
tid j1574 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2719 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2719  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1581 
y: j1574 
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1581 y: j1574  <|@  <|@
f <@*|@fixed>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1583 
=== Succesors ===
trueSuccessor: v2682 
falseSuccessor: v2679 
=== Usages ===
=== Predecessor ===
v2674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1583 #trueSuccessor: v2682 #falseSuccessor: v2679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2681 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i2719 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i609 y: i2719  <|@  <|@
f <@*|@fixed>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1584 
=== Succesors ===
trueSuccessor: v2672 
falseSuccessor: v2680 
=== Usages ===
=== Predecessor ===
v2682 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1584 #trueSuccessor: v2672 #falseSuccessor: v2680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2670 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2670  <|@  <|@
f <@*|@fixed>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2668 
=== Predecessor ===
v2672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2678 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2678  <|@  <|@
f <@*|@fixed>@ <|@
tid v2678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
v2680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2677 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2677  <|@  <|@
f <@*|@fixed>@ <|@
tid v2677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
v2679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2677 v2678 
=== Succesors ===
next: v1673 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2677 v2678 #next: v1673  <|@  <|@
tid ?792 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?271 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?792 
values: a728 a639 i609 - - 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?792 values: a728 a639 i609 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1249
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[d.a@1565248032]
stamp: void
=== Inputs ===
stateBefore: ?271 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2676 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2669 
=== Usages ===
=== Predecessor ===
v2675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2669  <|@  <|@
f <@*|@fixed>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2668 
=== Predecessor ===
v2671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2669 v2670 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2669 v2670 #next: v450  <|@  <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@720dc4cf
stamp: void
targetMethod: HotSpotMethod<Arrays.rangeCheck(int, int, int)>
=== Inputs ===
arguments: i2719 i609 i278 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i2719 i609 i278  <|@  <|@
tid ?793 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?466 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: ?793 
values: a728 a639 i609 - - 
=== Succesors ===
=== Usages ===
?1784 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?793 values: a728 a639 i609 - -  <|@  <|@
tid ?1784 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Arrays.fill(char[], int, int, char)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 2973
stackSize: 0
=== Inputs ===
outerFrameState: ?466 
values: a639 i609 i278 i224 - 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?466 values: a639 i609 i278 i224 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.rangeCheck
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1246 
stateDuring: ?1784 
=== Succesors ===
next: v2453 
=== Usages ===
=== Predecessor ===
v2668 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1246 stateDuring: ?1784 #next: v2453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i2720 
=== Usages ===
j2455 
=== Predecessor ===
v450 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i2720  <|@  <|@
f <@~|@floating>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2720 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 251]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2767 
=== Succesors ===
next: v2257 
=== Usages ===
i283 
=== Predecessor ===
v2453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2767 #next: v2257  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i609 
y: i2720 
=== Succesors ===
=== Usages ===
i287 i287 i287 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i609 y: i2720  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1578 
y: j2134 
=== Succesors ===
=== Usages ===
v2257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1578 y: j2134  <|@  <|@
f <@*|@fixed>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2254 
=== Succesors ===
trueSuccessor: v2255 
falseSuccessor: v2256 
=== Usages ===
=== Predecessor ===
i2720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2254 #trueSuccessor: v2255 #falseSuccessor: v2256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B106" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v2257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v2255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v2257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2305  <|@  <|@
f <@~|@floating>@ <|@
tid v2782 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i609 
=== Succesors ===
=== Usages ===
j2455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i609  <|@  <|@
f <@~|@floating>@ <|@
tid j2455 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2453 
address: v2782 
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2453 address: v2782  <|@  <|@
f <@~|@floating>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2455 
index: - 
=== Succesors ===
=== Usages ===
v2631 v2633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2455 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1578 
y: j2501 
=== Succesors ===
=== Usages ===
v2503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1578 y: j2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2502 
y: j1755 
=== Succesors ===
=== Usages ===
v2305 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2502 y: j1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2503 
=== Succesors ===
trueSuccessor: v2304 
falseSuccessor: v2303 
=== Usages ===
=== Predecessor ===
v2256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2503 #trueSuccessor: v2304 #falseSuccessor: v2303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2308 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2308  <|@  <|@
f <@*|@fixed>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2288 
=== Predecessor ===
v2304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2633 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2633  <|@  <|@
f <@~|@floating>@ <|@
tid v2660 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2820 
value: v2660 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2287 
=== Usages ===
=== Predecessor ===
v2303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2820 value: v2660 stateAfter: - lastLocationAccess: - #next: v2287  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2288 
=== Predecessor ===
v2633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2456 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v2288 
values: j1780 j1755 
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2288 values: j1780 j1755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2287 v2308 
=== Succesors ===
next: v2311 
=== Usages ===
j2456 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2287 v2308 #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1580 
y: j2456 
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1580 y: j2456  <|@  <|@
f <@*|@fixed>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2505 
=== Succesors ===
trueSuccessor: v2310 
falseSuccessor: v2309 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2505 #trueSuccessor: v2310 #falseSuccessor: v2309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2620 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2620  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v2310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2631 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2820 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2621 
=== Usages ===
=== Predecessor ===
v2309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2820 value: i1492 stateAfter: - lastLocationAccess: - #next: v2621  <|@  <|@
f <@*|@fixed>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v2631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B89" "B99" "B104" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v285 
values: i609 i283 i283 i283 
=== Succesors ===
=== Usages ===
?288 j2067 v1292 i295 v1273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v285 values: i609 i283 i283 i283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v284 v286 v2620 v2621 
=== Succesors ===
next: a2721 
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v284 v286 v2620 v2621 #next: a2721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2721 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
=== Succesors ===
next: v2839 
=== Usages ===
a1260 v2839 v2771 
=== Predecessor ===
v285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2768 #next: v2839  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?794 
values: a728 a639 i287 - - 
=== Succesors ===
=== Usages ===
v1931 v2839 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?794 values: a728 a639 i287 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?288 
object: a2721 
=== Succesors ===
next: i2722 
=== Usages ===
=== Predecessor ===
a2721 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?288 object: a2721 #next: i2722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2722 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 261]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
=== Succesors ===
next: v1272 
=== Usages ===
j2062 v1269 v1286 
=== Predecessor ===
v2839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2769 #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2722 
y: i17 
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2722 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i1933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332129
stableDimension: 0
stamp: i32 [-332129] ⇊00000000fffaee9f ⇈00000000fffaee9f
stampKind: i32
value: int[-332129|0xfffffffffffaee9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1929 i1929 i1929 i1929 i1929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1269 
=== Succesors ===
trueSuccessor: v1271 
falseSuccessor: v1270 
=== Usages ===
=== Predecessor ===
i2722 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1269 #trueSuccessor: v1271 #falseSuccessor: v1270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575859158351825079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4605454096428188788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i17 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i287 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1273 
=== Succesors ===
trueSuccessor: v1278 
falseSuccessor: v1274 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1273 #trueSuccessor: v1278 #falseSuccessor: v1274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575812102986117362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2010 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2010  <|@  <|@
f <@*|@fixed>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4605381307659359664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2723 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2723  <|@  <|@
f <@~|@floating>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2723 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 267]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2770 
=== Succesors ===
next: v1284 
=== Usages ===
j2071 i295 v1280 i1285 i1291 
=== Predecessor ===
v1274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2770 #next: v1284  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2723 
y: i17 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2723 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1280 
=== Succesors ===
trueSuccessor: v1283 
falseSuccessor: v1281 
=== Usages ===
=== Predecessor ===
i2723 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1280 #trueSuccessor: v1283 #falseSuccessor: v1281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575765518174066723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2009 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2009  <|@  <|@
f <@*|@fixed>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4605309246778218831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2724 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2724  <|@  <|@
f <@~|@floating>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2721 
=== Succesors ===
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2724 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2771 
=== Succesors ===
next: v1290 
=== Usages ===
i1285 
=== Predecessor ===
v1281 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2771 #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2724 
y: i2723 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2724 y: i2723  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1285 
y: i2722 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1285 y: i2722  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1286 
=== Succesors ===
trueSuccessor: v1289 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
i2724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1286 #trueSuccessor: v1289 #falseSuccessor: v1287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575719399210136590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2008  <|@  <|@
f <@*|@fixed>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4605237906505889407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1296 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1296  <|@  <|@
f <@~|@floating>@ <|@
tid i1291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2719 
y: i2723 
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2719 y: i2723  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1291 
y: i287 
=== Succesors ===
=== Usages ===
v1296 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1291 y: i287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v1295 
falseSuccessor: v1293 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v1295 #falseSuccessor: v1293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575673741435845758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2007 
=== Usages ===
=== Predecessor ===
v1296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2007  <|@  <|@
f <@*|@fixed>@ <|@
tid v2007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B107" "B115" "B113" "B111" "B109" 
    successors 
    xhandlers
    flags 
    probability 4585926273848975510
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1929 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-332811 - -332129] ⇊00000000fffaea95 ⇈00000000fffaefff
valueDescription: i32
=== Inputs ===
merge: v1926 
values: i1933 i1933 i1933 i1933 i1933 
=== Succesors ===
=== Usages ===
v1931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1926 values: i1933 i1933 i1933 i1933 i1933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1932 v2007 v2008 v2009 v2010 
=== Succesors ===
next: v1931 
=== Usages ===
i1929 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1932 v2007 v2008 v2009 v2010 #next: v1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?288 
actionAndReason: i1929 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?288 actionAndReason: i1929 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B146" 
    xhandlers
    flags 
    probability 4605167279636283277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2061 
=== Usages ===
=== Predecessor ===
v1296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2061  <|@  <|@
f <@~|@floating>@ <|@
tid a1260 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2721 
=== Succesors ===
=== Usages ===
j2061 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1260 
=== Succesors ===
next: j2066 
=== Usages ===
v2791 
=== Predecessor ===
v1293 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1260 #next: j2066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a639 
=== Succesors ===
next: v2072 
=== Usages ===
v2792 
=== Predecessor ===
j2061 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a639 #next: v2072  <|@  <|@
f <@~|@floating>@ <|@
tid j2062 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2722 
=== Succesors ===
=== Usages ===
v2791 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2722  <|@  <|@
f <@~|@floating>@ <|@
tid v2791 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2061 
index: j2062 
=== Succesors ===
=== Usages ===
v2072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2061 index: j2062  <|@  <|@
f <@~|@floating>@ <|@
tid j2067 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i287 
=== Succesors ===
=== Usages ===
v2792 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i287  <|@  <|@
f <@~|@floating>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2066 
index: j2067 
=== Succesors ===
=== Usages ===
v2072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2066 index: j2067  <|@  <|@
f <@~|@floating>@ <|@
tid j2071 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2723 
=== Succesors ===
=== Usages ===
v2072 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2791 v2792 j2071 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
j2066 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2791 v2792 j2071 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i287 
y: i2723 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i287 y: i2723  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v2072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid i1925 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317211
stableDimension: 0
stamp: i32 [-317211] ⇊00000000fffb28e5 ⇈00000000fffb28e5
stampKind: i32
value: int[-317211|0xfffffffffffb28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
v1670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1922  <|@  <|@
f <@~|@floating>@ <|@
tid i1923 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315163
stableDimension: 0
stamp: i32 [-315163] ⇊00000000fffb30e5 ⇈00000000fffb30e5
stampKind: i32
value: int[-315163|0xfffffffffffb30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
v1666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1919 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317211 - -313867] ⇊00000000fffb20e5 ⇈00000000fffb3df5
valueDescription: i32
=== Inputs ===
merge: v1916 
values: i1923 i1925 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1916 values: i1923 i1925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1922 v1924 
=== Succesors ===
next: v1921 
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1922 v1924 #next: v1921  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?252 
actionAndReason: i1919 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1916 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?252 actionAndReason: i1919 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B122" 
    xhandlers
    flags 
    probability 4560799708671823202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B85" 
    successors "B123" "B213" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v263 
=== Succesors ===
next: a2725 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v263 #next: a2725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2725 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
=== Succesors ===
next: i2726 
=== Usages ===
a1309 v2772 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2768 #next: i2726  <|@  <|@
tid ?796 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?796 
values: a728 a639 i599 - - 
=== Succesors ===
=== Usages ===
v1939 i2726 i2728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?796 values: a728 a639 i599 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2772 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2725 
=== Succesors ===
=== Usages ===
i2726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2726 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?296 
guard: - 
address: v2772 
=== Succesors ===
next: i2727 
=== Usages ===
i1361 v1316 
=== Predecessor ===
a2725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?296 guard: - address: v2772 #next: i2727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2727 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 293]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
=== Succesors ===
next: v1687 
=== Usages ===
v2773 i310 v1316 
=== Predecessor ===
i2726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2769 #next: v1687  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2727 
y: i2726 
=== Succesors ===
=== Usages ===
v1687 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2727 y: i2726  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1316 
=== Succesors ===
trueSuccessor: v1684 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
i2727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1316 #trueSuccessor: v1684 #falseSuccessor: v1686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B212" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2728 
=== Usages ===
i2730 
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2728 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?296 
guard: - 
address: v2764 
=== Succesors ===
next: v1695 
=== Usages ===
i1367 v1329 v1335 v1385 v1455 v1445 v1435 v1425 
=== Predecessor ===
v1684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?296 guard: - address: v2764 #next: v1695  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i2728 
=== Succesors ===
=== Usages ===
v1695 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i599 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1329 
=== Succesors ===
trueSuccessor: v1692 
falseSuccessor: v1694 
=== Usages ===
=== Predecessor ===
i2728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1329 #trueSuccessor: v1692 #falseSuccessor: v1694  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B211" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1699 
=== Usages ===
v1333 
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1699  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i603 
y: i2728 
=== Succesors ===
=== Usages ===
v1699 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i603 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1335 
=== Succesors ===
trueSuccessor: v1696 
falseSuccessor: v1698 
=== Usages ===
=== Predecessor ===
v1692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1335 #trueSuccessor: v1696 #falseSuccessor: v1698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2729 
=== Usages ===
v1338 
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2729  <|@  <|@
f <@~|@floating>@ <|@
tid v2841 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2729 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 307]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2841 
=== Succesors ===
next: v1703 
=== Usages ===
v306 i316 
=== Predecessor ===
v1696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2841 #next: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2729 
y: i305 
=== Succesors ===
=== Usages ===
v1703 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2729 y: i305  <|@  <|@
f <@*|@fixed>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1702 
falseSuccessor: v1700 
=== Usages ===
=== Predecessor ===
i2729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1702 #falseSuccessor: v1700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid i1945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -343059
stableDimension: 0
stamp: i32 [-343059] ⇊00000000fffac3ed ⇈00000000fffac3ed
stampKind: i32
value: int[-343059|0xfffffffffffac3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B210" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2729 
y: i153 
=== Succesors ===
=== Usages ===
i317 j2080 i1367 i1361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2729 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i316 
y: i609 
=== Succesors ===
=== Usages ===
i318 v2774 i390 v1385 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i316 y: i609  <|@  <|@
f <@~|@floating>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i317 
y: i2728 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i317 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1385 
=== Succesors ===
trueSuccessor: v1704 
falseSuccessor: v1706 
=== Usages ===
=== Predecessor ===
v1700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1385 #trueSuccessor: v1704 #falseSuccessor: v1706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2730 
=== Usages ===
v1393 
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2730  <|@  <|@
f <@~|@floating>@ <|@
tid a1309 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2725 
=== Succesors ===
=== Usages ===
j2073 v2773 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2725  <|@  <|@
f <@~|@floating>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1309 
index: i2727 
=== Succesors ===
=== Usages ===
i2730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1309 index: i2727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2730 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1684 
address: v2773 
=== Succesors ===
next: v1333 
=== Usages ===
v1333 
=== Predecessor ===
v1704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1684 address: v2773 #next: v1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1692 
address: v2765 
value: i2730 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
i2730 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1692 address: v2765 value: i2730 stateAfter: - lastLocationAccess: - #next: v1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1696 
address: v2766 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1696 address: v2766 value: i1489 stateAfter: - lastLocationAccess: - #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i1361 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2726 
y: i316 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2726 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2727 
y: i4 
=== Succesors ===
=== Usages ===
j2074 v1362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2727 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1361 
y: i310 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1361 y: i310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1362 
=== Succesors ===
trueSuccessor: v1365 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1362 #trueSuccessor: v1365 #falseSuccessor: v1363  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
v1365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B133" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid i1367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2728 
y: i316 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2728 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1367 
y: i609 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1367 y: i609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1368 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1368 #trueSuccessor: v1371 #falseSuccessor: v1369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1364 v1370 
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1364 v1370 #next: v1373  <|@  <|@
tid ?798 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?303 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?798 
values: a728 a639 i609 - - 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?798 values: a728 a639 i609 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" "B137" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2073 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1309 
=== Succesors ===
next: j2078 
=== Usages ===
v2793 
=== Predecessor ===
v1369 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1309 #next: j2078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a639 
=== Succesors ===
next: v2081 
=== Usages ===
v2794 
=== Predecessor ===
j2073 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a639 #next: v2081  <|@  <|@
f <@~|@floating>@ <|@
tid j2074 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i310 
=== Succesors ===
=== Usages ===
v2793 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i310  <|@  <|@
f <@~|@floating>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2073 
index: j2074 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2073 index: j2074  <|@  <|@
f <@~|@floating>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2078 
index: i609 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: i609  <|@  <|@
f <@~|@floating>@ <|@
tid j2080 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i316 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2793 v2794 j2080 
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
j2078 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2793 v2794 j2080 #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i317 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i317  <|@  <|@
f <@~|@floating>@ <|@
tid i1501 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1704 
address: v2774 
value: i1501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v2081 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1704 address: v2774 value: i1501 stateAfter: - lastLocationAccess: - #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i317 
y: i4 
=== Succesors ===
=== Usages ===
?321 v2778 i336 v1455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i317 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i2728 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i318 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1455 
=== Succesors ===
trueSuccessor: v1708 
falseSuccessor: v1710 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1455 #trueSuccessor: v1708 #falseSuccessor: v1710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1462 
=== Usages ===
v1462 
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid v2778 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i318 
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1708 
address: v2778 
value: i1485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1708 address: v2778 value: i1485 stateAfter: - lastLocationAccess: - #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i317 
y: i305 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i317 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i4 
y: i589 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4 y: i589  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v1462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1709 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1709  <|@  <|@
tid ?800 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?321 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?800 
values: a728 a639 i318 - - 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?800 values: a728 a639 i318 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1456
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?321 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i589 
y: i153 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i589 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B139" "B208" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i390 i318 
=== Succesors ===
=== Usages ===
?338 i344 i393 v1425 v2775 i391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i390 i318  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i330 i332 
=== Succesors ===
=== Usages ===
?338 v340 i345 i498 v351 i499 i474 i471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i330 i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v335 
=== Succesors ===
next: v1715 
=== Usages ===
i336 i337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v335 #next: v1715  <|@  <|@
f <@~|@floating>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i336 
y: i2728 
=== Succesors ===
=== Usages ===
v1715 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i336 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1425 
=== Succesors ===
trueSuccessor: v1712 
falseSuccessor: v1714 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1425 #trueSuccessor: v1712 #falseSuccessor: v1714  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
v1413 v1403 v1433 
=== Predecessor ===
v1715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i336 
y: i4 
=== Succesors ===
=== Usages ===
i397 v2776 v1435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2775 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i336 
=== Succesors ===
=== Usages ===
v1433 v1413 v1403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i336  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i339 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i337 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
v1712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1403 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1403  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i337 
y: i224 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i337 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i345 
=== Succesors ===
=== Usages ===
v1403 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1712 
address: v2775 
value: i346 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1712 address: v2775 value: i346 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B207" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1719 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i2728 
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i344 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1435 
=== Succesors ===
trueSuccessor: v1716 
falseSuccessor: v1718 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1435 #trueSuccessor: v1716 #falseSuccessor: v1718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
v1443 v1423 
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid i391 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i336 
y: i305 
=== Succesors ===
=== Usages ===
v1445 i397 v2777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid v2776 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i344 
=== Succesors ===
=== Usages ===
v1443 v1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i344  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i350 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i337 y: i350  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 i500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v1716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v352 #falseSuccessor: v353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1413  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i337 
y: i480 
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i337 y: i480  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i498 
y: i305 
=== Succesors ===
=== Usages ===
i468 i2836 i469 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i498 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid i2836 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i482 
y: i224 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2836 
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1712 
address: v2775 
value: i357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1712 address: v2775 value: i357 stateAfter: - lastLocationAccess: - #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i482 
y: i392 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i482 y: i392  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i482 
y: i4 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i482 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i468 
y: i469 
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i468 y: i469  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i337 
y: i470 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i471 
y: i224 
=== Succesors ===
=== Usages ===
i1422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i471 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i1422 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i362 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1716 
address: v2776 
value: i1422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v1413 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1716 address: v2776 value: i1422 stateAfter: - lastLocationAccess: - #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B206" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i2728 
=== Succesors ===
=== Usages ===
v1723 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i391 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1445 
=== Succesors ===
trueSuccessor: v1720 
falseSuccessor: v1722 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1445 #trueSuccessor: v1720 #falseSuccessor: v1722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1433 
=== Usages ===
v1453 
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1433  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i499 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i337 
y: i486 
=== Succesors ===
=== Usages ===
i489 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i337 y: i486  <|@  <|@
f <@~|@floating>@ <|@
tid i488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i499 
y: i488 
=== Succesors ===
=== Usages ===
i473 i2837 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i499 y: i488  <|@  <|@
f <@~|@floating>@ <|@
tid i2837 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i489 
y: i224 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i489 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2837 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1712 
address: v2775 
value: i367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1443 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1712 address: v2775 value: i367 stateAfter: - lastLocationAccess: - #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i489 
y: i350 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i489 y: i350  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i337 
y: i473 
=== Succesors ===
=== Usages ===
i493 i500 i479 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i473  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i474 
y: i480 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i474 y: i480  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i500 
y: i305 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i500 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i474 
y: i483 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i474 y: i483  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i492 
y: i493 
=== Succesors ===
=== Usages ===
i373 i476 i477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i492 y: i493  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i494 
y: i224 
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i494 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i1442 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i373 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1716 
address: v2776 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1716 address: v2776 value: i1442 stateAfter: - lastLocationAccess: - #next: v1453  <|@  <|@
f <@~|@floating>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i391 
=== Succesors ===
=== Usages ===
v1453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i391  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i494 
y: i392 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i494 y: i392  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i494 
y: i4 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i494 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i476 
y: i477 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i476 y: i477  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i474 
y: i478 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i474 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i479 
y: i224 
=== Succesors ===
=== Usages ===
i1452 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i479 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i377 
=== Succesors ===
=== Usages ===
v1453 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1720 
address: v2777 
value: i1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1720 address: v2777 value: i1452 stateAfter: - lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i336 
y: i392 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i392  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B73" "B117" "B140" "B143" "B145" "B78" "B59" 
    successors "B147" "B153" 
    xhandlers
    flags 
    probability 4606738238130731344
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v395 
values: i380 i295 i344 i391 i393 i381 i249 
=== Succesors ===
=== Usages ===
?141 j2315 v404 v408 i417 a2159 v1834 i1856 v2182 i2135 v2144 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: i380 i295 i344 i391 i393 i381 i249  <|@  <|@
f <@~|@floating>@ <|@
tid a733 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v395 
values: a730 a728 a728 a728 a728 a730 a730 
=== Succesors ===
=== Usages ===
v2779 ?141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: a730 a728 a728 a728 a728 a730 a730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v396 v398 v399 v400 v401 v402 v403 
=== Succesors ===
next: a2731 
=== Usages ===
i397 a733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v396 v398 v399 v400 v401 v402 v403 #next: a2731  <|@  <|@
f <@~|@floating>@ <|@
tid v2779 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a733 
index: - 
=== Succesors ===
=== Usages ===
a2731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a733 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2731 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 14]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2779 
=== Succesors ===
next: v2838 
=== Usages ===
v2781 v2838 v2780 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2779 #next: v2838  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: ?148 
values: a733 - i397 
=== Succesors ===
=== Usages ===
v1897 a2159 a2205 a2097 v2838 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a733 - i397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
object: a2731 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
a2731 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?141 object: a2731 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i397 
y: i4 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i397 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 v2229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2221 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2116 
=== Succesors ===
=== Usages ===
v2810 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2810 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2221 
index: - 
=== Succesors ===
=== Usages ===
j2225 j2122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2221 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2097 a2205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j955 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2245 j2238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
v2838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i397 
y: i17 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i397 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v1730 
falseSuccessor: v1728 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v1730 #falseSuccessor: v1728  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1898 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1898  <|@  <|@
f <@~|@floating>@ <|@
tid i1899 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -375315
stableDimension: 0
stamp: i32 [-375315] ⇊00000000fffa45ed ⇈00000000fffa45ed
stampKind: i32
value: int[-375315|0xfffffffffffa45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
v1730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2085 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2085 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2104 
=== Usages ===
v2795 v2796 
=== Predecessor ===
v1728 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2104  <|@  <|@
f <@~|@floating>@ <|@
tid v2795 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2085 
index: - 
=== Succesors ===
=== Usages ===
j2104 v2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2795 
=== Succesors ===
next: j2105 
=== Usages ===
j2238 j2110 v2813 
=== Predecessor ===
j2085 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2795 #next: j2105  <|@  <|@
f <@~|@floating>@ <|@
tid v2796 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2085 
index: - 
=== Succesors ===
=== Usages ===
j2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2796 
=== Succesors ===
next: v2093 
=== Usages ===
v2090 
=== Predecessor ===
j2104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2796 #next: v2093  <|@  <|@
f <@~|@floating>@ <|@
tid j2238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2104 
y: j955 
=== Succesors ===
=== Usages ===
v2090 v2106 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2104 y: j955  <|@  <|@
f <@~|@floating>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2105 
y: j2238 
=== Succesors ===
=== Usages ===
v2093 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2105 y: j2238  <|@  <|@
f <@*|@fixed>@ <|@
tid v2093 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2090 
=== Succesors ===
trueSuccessor: v2091 
falseSuccessor: v2092 
=== Usages ===
=== Predecessor ===
j2105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2090 #trueSuccessor: v2091 #falseSuccessor: v2092  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4561279963840610618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2097 
=== Usages ===
=== Predecessor ===
v2093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2097 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2083 i305 i4 
=== Succesors ===
next: j2098 
=== Usages ===
j2098 
=== Predecessor ===
v2091 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2083 i305 i4 #next: j2098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2098 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2097 
=== Succesors ===
next: v2111 
=== Usages ===
j2110 
=== Predecessor ===
a2097 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2097 #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
j2098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4590960774697031150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2795 
value: j2238 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2102 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2795 value: j2238 stateAfter: - lastLocationAccess: - #next: v2102  <|@  <|@
f <@~|@floating>@ <|@
tid v2813 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2104 
index: - 
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2813 
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2813 #next: v2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
v2102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2110 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2108 
values: j2104 j2098 
=== Succesors ===
=== Usages ===
v2798 v2797 a1757 v2814 v2815 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2108 values: j2104 j2098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2109 v2111 
=== Succesors ===
next: a1757 
=== Usages ===
j2110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2109 v2111 #next: a1757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1757 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2110 
=== Succesors ===
next: j2122 
=== Usages ===
a1763 
=== Predecessor ===
v2108 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2110 #next: j2122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2810 
=== Succesors ===
next: v2123 
=== Usages ===
v2123 
=== Predecessor ===
a1757 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2810 #next: v2123  <|@  <|@
f <@~|@floating>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2797 
value: j2122 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
j2122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2797 value: j2122 stateAfter: - lastLocationAccess: - #next: v2126  <|@  <|@
f <@~|@floating>@ <|@
tid v2798 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2798 
value: v2241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2130 
=== Usages ===
=== Predecessor ===
v2123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2798 value: v2241 stateAfter: - lastLocationAccess: - #next: v2130  <|@  <|@
f <@~|@floating>@ <|@
tid v2814 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1779 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2814 
value: a1779 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2132 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2814 value: a1779 stateAfter: - lastLocationAccess: - #next: v2132  <|@  <|@
f <@~|@floating>@ <|@
tid v2815 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2815 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1763 
=== Usages ===
=== Predecessor ===
v2130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2815 value: i17 stateAfter: - lastLocationAccess: - #next: a1763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1763 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1757 
=== Succesors ===
next: v1764 
=== Usages ===
v440 
=== Predecessor ===
v2132 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1757 #next: v1764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
a1763 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1763 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1763 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" "B156" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2732 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2732  <|@  <|@
f <@~|@floating>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2731 
=== Succesors ===
=== Usages ===
i2732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2732 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2780 
=== Succesors ===
next: v1735 
=== Usages ===
i417 i1856 v1834 
=== Predecessor ===
v406 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2780 #next: v1735  <|@  <|@
f <@~|@floating>@ <|@
tid i417 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2732 
y: i397 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2732 y: i397  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i417 
y: i17 
=== Succesors ===
=== Usages ===
v1735 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i417 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v418 
=== Succesors ===
trueSuccessor: v1734 
falseSuccessor: v1732 
=== Usages ===
=== Predecessor ===
i2732 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v418 #trueSuccessor: v1734 #falseSuccessor: v1732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1900 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid i1901 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -377875
stableDimension: 0
stamp: i32 [-377875] ⇊00000000fffa3bed ⇈00000000fffa3bed
stampKind: i32
value: int[-377875|0xfffffffffffa3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
v1734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B148" "B154" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1895 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-399883 - -375315] ⇊00000000fff801e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1892 
values: i1899 i1901 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1892 values: i1899 i1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1898 v1900 
=== Succesors ===
next: v1897 
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1898 v1900 #next: v1897  <|@  <|@
f <@*|@fixed>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
actionAndReason: i1895 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?141 actionAndReason: i1895 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" "B160" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2138 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2138 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2179 
=== Usages ===
v2799 v2800 
=== Predecessor ===
v1732 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2799 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2179 v2181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2799 
=== Succesors ===
next: j2180 
=== Usages ===
j2142 v2801 v2802 a2158 v2807 v2803 v2804 v2805 v2806 
=== Predecessor ===
j2138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2799 #next: j2180  <|@  <|@
f <@~|@floating>@ <|@
tid v2800 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2800 
=== Succesors ===
next: v2147 
=== Usages ===
v2148 
=== Predecessor ===
j2179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2800 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid i2143 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i397 
y: i2143 
=== Succesors ===
=== Usages ===
v2147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i397 y: i2143  <|@  <|@
f <@*|@fixed>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2144 
=== Succesors ===
trueSuccessor: v2146 
falseSuccessor: v2145 
=== Usages ===
=== Predecessor ===
j2180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2144 #trueSuccessor: v2146 #falseSuccessor: v2145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4605166441495610144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2154 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2154  <|@  <|@
f <@~|@floating>@ <|@
tid i2135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i397 
y: i4 
=== Succesors ===
=== Usages ===
i2167 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i397 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2167 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2135 
y: i2166 
=== Succesors ===
=== Usages ===
i2137 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2135 y: i2166  <|@  <|@
f <@~|@floating>@ <|@
tid i2136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2167 
y: i2136 
=== Succesors ===
=== Usages ===
j2141 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2167 y: i2136  <|@  <|@
f <@~|@floating>@ <|@
tid j2141 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2137 
=== Succesors ===
=== Usages ===
j2142 v2803 v2804 v2805 v2806 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2137  <|@  <|@
f <@~|@floating>@ <|@
tid j2142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
x: j2141 
y: j2179 
=== Succesors ===
=== Usages ===
v2148 v2181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2141 y: j2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2180 
y: j2142 
=== Succesors ===
=== Usages ===
v2154 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2180 y: j2142  <|@  <|@
f <@*|@fixed>@ <|@
tid v2154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2148 
=== Succesors ===
trueSuccessor: v2153 
falseSuccessor: v2152 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2148 #trueSuccessor: v2153 #falseSuccessor: v2152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B161" 
    xhandlers
    flags 
    probability 4575598786250110124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2151 
=== Usages ===
=== Predecessor ===
v2154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2151  <|@  <|@
f <@*|@fixed>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
v2153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4605096529276106807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v2154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2799 
value: j2142 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2152 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2799 value: j2142 stateAfter: - lastLocationAccess: - #next: v2169  <|@  <|@
f <@~|@floating>@ <|@
tid v2803 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2803 
=== Succesors ===
next: v2171 
=== Usages ===
=== Predecessor ===
v2181 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2803 #next: v2171  <|@  <|@
f <@~|@floating>@ <|@
tid v2804 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2804 
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
v2169 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2804 #next: v2174  <|@  <|@
f <@~|@floating>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2805 
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
v2171 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2805 #next: v2177  <|@  <|@
f <@~|@floating>@ <|@
tid v2806 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2806 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v2174 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2806 #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v2801 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2179 
index: - 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2179 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2801 
value: i397 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2183 
=== Usages ===
=== Predecessor ===
v2177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2801 value: i397 stateAfter: - lastLocationAccess: - #next: v2183  <|@  <|@
f <@~|@floating>@ <|@
tid v2802 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2179 
index: - 
=== Succesors ===
=== Usages ===
v2183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2179 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2802 
value: j2134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2186 
=== Usages ===
=== Predecessor ===
v2182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2802 value: j2134 stateAfter: - lastLocationAccess: - #next: v2186  <|@  <|@
f <@~|@floating>@ <|@
tid v2807 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2179 
index: - 
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2179 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2807 
value: v2244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2157 
=== Usages ===
=== Predecessor ===
v2183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2807 value: v2244 stateAfter: - lastLocationAccess: - #next: v2157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2158 
=== Usages ===
=== Predecessor ===
v2186 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2179 
=== Succesors ===
next: v2160 
=== Usages ===
a2163 
=== Predecessor ===
v2157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2179 #next: v2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
a2158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    probability 4590878840174572685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2149 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2149  <|@  <|@
f <@*|@fixed>@ <|@
tid v2149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
v2145 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B158" 
    successors "B162" 
    xhandlers
    flags 
    probability 4591438137930599384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2149 v2151 
=== Succesors ===
next: a2159 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2149 v2151 #next: a2159  <|@  <|@
f <@~|@floating>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2159 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2133 i397 i17 
=== Succesors ===
next: v2162 
=== Usages ===
a2163 
=== Predecessor ===
v2150 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2133 i397 i17 #next: v2162  <|@  <|@
f <@*|@fixed>@ <|@
tid v2162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
a2159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B159" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2161 
values: a2158 a2159 
=== Succesors ===
=== Usages ===
v2819 a1868 v2783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2161 values: a2158 a2159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2160 v2162 
=== Succesors ===
next: v2508 
=== Usages ===
a2163 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2160 v2162 #next: v2508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2328 
=== Usages ===
j2509 j2511 
=== Predecessor ===
v2161 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2328  <|@  <|@
f <@~|@floating>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2732 
y: i397 
=== Succesors ===
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2732 y: i397  <|@  <|@
f <@~|@floating>@ <|@
tid i1856 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1834 
trueValue: i2732 
falseValue: i397 
=== Succesors ===
=== Usages ===
j2316 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1834 trueValue: i2732 falseValue: i397  <|@  <|@
f <@~|@floating>@ <|@
tid j2316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1856 
=== Succesors ===
=== Usages ===
j2566 v2819 j2320 v2325 v2450 j2552 j2557 j2560 j2563 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1856  <|@  <|@
f <@~|@floating>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2316 
y: j2134 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2316 y: j2134  <|@  <|@
f <@~|@floating>@ <|@
tid j2473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2590 j2535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2611 j2560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2027 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2543 j2596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2493 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2608 j2557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2487 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2603 j2552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2325 
=== Succesors ===
trueSuccessor: v2326 
falseSuccessor: v2327 
=== Usages ===
=== Predecessor ===
v2508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2325 #trueSuccessor: v2326 #falseSuccessor: v2327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2344 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2344  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2163 
index: - 
=== Succesors ===
=== Usages ===
j2511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2163 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2511 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2508 
address: v2783 
=== Succesors ===
=== Usages ===
v2821 v2823 v2825 v2827 v2829 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2508 address: v2783  <|@  <|@
f <@~|@floating>@ <|@
tid v2781 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2731 
=== Succesors ===
=== Usages ===
j2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2731  <|@  <|@
f <@~|@floating>@ <|@
tid j2509 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2508 
address: v2781 
=== Succesors ===
=== Usages ===
v2822 v2824 v2826 v2828 v2830 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2508 address: v2781  <|@  <|@
f <@~|@floating>@ <|@
tid j2552 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2316 
y: j2487 
=== Succesors ===
=== Usages ===
v2553 v2555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2552 
y: j1755 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2552 y: j1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2553 
=== Succesors ===
trueSuccessor: v2329 
falseSuccessor: v2330 
=== Usages ===
=== Predecessor ===
v2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2553 #trueSuccessor: v2329 #falseSuccessor: v2330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B169" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2332 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2332  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
v2330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B205" 
    successors "B168" "B205" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2544 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2333 
values: j1755 j2551 
=== Succesors ===
=== Usages ===
v2830 j2551 v2829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2333 values: j1755 j2551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2332 
=== Succesors ===
next: v2733 
=== Usages ===
v2733 v2336 v2337 j2544 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2332 #next: v2733  <|@  <|@
f <@~|@floating>@ <|@
tid v2830 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2544 
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2333 
address: v2830 
=== Succesors ===
next: v2648 
=== Usages ===
v2648 
=== Predecessor ===
v2333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2333 address: v2830 #next: v2648  <|@  <|@
f <@~|@floating>@ <|@
tid v2829 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2544 
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2829 
value: v2733 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2339 
=== Usages ===
=== Predecessor ===
v2733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2829 value: v2733 stateAfter: - lastLocationAccess: - #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid j2551 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2544 
y: j950 
=== Succesors ===
=== Usages ===
j2536 j2544 v2555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2544 y: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2552 
y: j2551 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2552 y: j2551  <|@  <|@
f <@*|@fixed>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2555 
=== Succesors ===
trueSuccessor: v2336 
falseSuccessor: v2338 
=== Usages ===
=== Predecessor ===
v2648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2555 #trueSuccessor: v2336 #falseSuccessor: v2338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2333 
=== Succesors ===
next: v2342 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2333 #next: v2342  <|@  <|@
f <@*|@fixed>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B165" "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2536 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2341 
values: j1755 j2551 
=== Succesors ===
=== Usages ===
v2828 j2543 j2528 v2558 v2827 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2341 values: j1755 j2551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2340 v2342 
=== Succesors ===
next: v2363 
=== Usages ===
j2536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2340 v2342 #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid j2557 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2316 
y: j2493 
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2493  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2557 
y: j2536 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2557 y: j2536  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2558 
=== Succesors ===
trueSuccessor: v2362 
falseSuccessor: v2361 
=== Usages ===
=== Predecessor ===
v2341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2558 #trueSuccessor: v2362 #falseSuccessor: v2361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2366 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2734 
=== Usages ===
v2734 
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2734  <|@  <|@
f <@~|@floating>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2536 
=== Succesors ===
=== Usages ===
v2734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2361 
address: v2828 
=== Succesors ===
next: v2646 
=== Usages ===
v2646 
=== Predecessor ===
v2361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2361 address: v2828 #next: v2646  <|@  <|@
f <@~|@floating>@ <|@
tid v2827 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2536 
=== Succesors ===
=== Usages ===
v2646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2827 
value: v2734 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2734 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2827 value: v2734 stateAfter: - lastLocationAccess: - #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid j2543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2536 
y: j2027 
=== Succesors ===
=== Usages ===
j2528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2536 y: j2027  <|@  <|@
f <@*|@fixed>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2528 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2352 
values: j2543 j2536 
=== Succesors ===
=== Usages ===
v2826 j2535 j2520 v2561 v2825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2352 values: j2543 j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2351 v2366 
=== Succesors ===
next: v2369 
=== Usages ===
j2528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2351 v2366 #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid j2560 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2316 
y: j2497 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2560 
y: j2528 
=== Succesors ===
=== Usages ===
v2369 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2560 y: j2528  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2561 
=== Succesors ===
trueSuccessor: v2368 
falseSuccessor: v2367 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2561 #trueSuccessor: v2368 #falseSuccessor: v2367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2735 
=== Usages ===
v2735 
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2735  <|@  <|@
f <@~|@floating>@ <|@
tid v2826 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2528 
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2367 
address: v2826 
=== Succesors ===
next: v2644 
=== Usages ===
v2644 
=== Predecessor ===
v2367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2367 address: v2826 #next: v2644  <|@  <|@
f <@~|@floating>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2528 
=== Succesors ===
=== Usages ===
v2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2825 
value: v2735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2354 
=== Usages ===
=== Predecessor ===
v2735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2825 value: v2735 stateAfter: - lastLocationAccess: - #next: v2354  <|@  <|@
f <@~|@floating>@ <|@
tid j2535 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2528 
y: j2473 
=== Succesors ===
=== Usages ===
j2520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2528 y: j2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B173" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2520 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2355 
values: j2535 j2528 
=== Succesors ===
=== Usages ===
v2824 j2527 j2512 v2564 v2823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2355 values: j2535 j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2354 v2372 
=== Succesors ===
next: v2375 
=== Usages ===
j2520 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2354 v2372 #next: v2375  <|@  <|@
f <@~|@floating>@ <|@
tid j2563 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2316 
y: j2501 
=== Succesors ===
=== Usages ===
v2564 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2563 
y: j2520 
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2563 y: j2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2564 
=== Succesors ===
trueSuccessor: v2374 
falseSuccessor: v2373 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2564 #trueSuccessor: v2374 #falseSuccessor: v2373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2378 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2378  <|@  <|@
f <@*|@fixed>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2736 
=== Usages ===
v2736 
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2736  <|@  <|@
f <@~|@floating>@ <|@
tid v2824 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2520 
=== Succesors ===
=== Usages ===
v2736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2373 
address: v2824 
=== Succesors ===
next: v2642 
=== Usages ===
v2642 
=== Predecessor ===
v2373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2373 address: v2824 #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2823 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2520 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2823 
value: v2736 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2823 value: v2736 stateAfter: - lastLocationAccess: - #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid j2527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2520 
y: j1780 
=== Succesors ===
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2520 y: j1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B176" 
    successors "B179" "B180" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2512 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2358 
values: j2527 j2520 
=== Succesors ===
=== Usages ===
v2822 v2567 v2821 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2358 values: j2527 j2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2357 v2378 
=== Succesors ===
next: v2381 
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2357 v2378 #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid j2566 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2316 
y: j1579 
=== Succesors ===
=== Usages ===
v2567 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2566 
y: j2512 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2566 y: j2512  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2567 
=== Succesors ===
trueSuccessor: v2380 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
v2358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2567 #trueSuccessor: v2380 #falseSuccessor: v2379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2737 
=== Usages ===
i2737 
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2737  <|@  <|@
f <@~|@floating>@ <|@
tid v2822 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2512 
=== Succesors ===
=== Usages ===
i2737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2737 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2379 
address: v2822 
=== Succesors ===
next: v2640 
=== Usages ===
v2640 
=== Predecessor ===
v2379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2379 address: v2822 #next: v2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2821 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2512 
=== Succesors ===
=== Usages ===
v2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2821 
value: i2737 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
i2737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2821 value: i2737 stateAfter: - lastLocationAccess: - #next: v2360  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B163" "B180" "B179" 
    successors "B182" "B200" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2344 v2360 v2384 
=== Succesors ===
next: v2570 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2344 v2360 v2384 #next: v2570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2391 
=== Usages ===
j2572 
=== Predecessor ===
v2345 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2391  <|@  <|@
f <@~|@floating>@ <|@
tid j2315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i397 
=== Succesors ===
=== Usages ===
j2320 v2450 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i397  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2316 
y: j2315 
=== Succesors ===
=== Usages ===
v2391 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2316 y: j2315  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2450 
=== Succesors ===
trueSuccessor: v2390 
falseSuccessor: v2389 
=== Usages ===
=== Predecessor ===
v2570 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2450 #trueSuccessor: v2390 #falseSuccessor: v2389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2394 
=== Usages ===
=== Predecessor ===
v2391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2394  <|@  <|@
f <@~|@floating>@ <|@
tid v2819 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2163 
index: j2316 
=== Succesors ===
=== Usages ===
j2572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2163 index: j2316  <|@  <|@
f <@~|@floating>@ <|@
tid j2572 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2570 
address: v2819 
=== Succesors ===
=== Usages ===
v2831 v2832 v2833 v2834 v2835 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2570 address: v2819  <|@  <|@
f <@~|@floating>@ <|@
tid j2320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2315 
y: j2316 
=== Succesors ===
=== Usages ===
j2617 j2603 j2608 j2611 j2614 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2315 y: j2316  <|@  <|@
f <@~|@floating>@ <|@
tid j2603 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2320 
y: j2487 
=== Succesors ===
=== Usages ===
v2604 v2606 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2603 
y: j1755 
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2603 y: j1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2604 
=== Succesors ===
trueSuccessor: v2392 
falseSuccessor: v2393 
=== Usages ===
=== Predecessor ===
v2390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2604 #trueSuccessor: v2392 #falseSuccessor: v2393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B187" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2403 
=== Usages ===
=== Predecessor ===
v2394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2403  <|@  <|@
f <@*|@fixed>@ <|@
tid v2403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2404 
=== Predecessor ===
v2392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2395 
=== Usages ===
=== Predecessor ===
v2394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2395  <|@  <|@
f <@~|@floating>@ <|@
tid v2663 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2658 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2396 
=== Predecessor ===
v2393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B199" 
    successors "B186" "B199" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2597 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2396 
values: j1755 j2602 
=== Succesors ===
=== Usages ===
v2835 j2602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2396 values: j1755 j2602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2395 
=== Succesors ===
next: v2658 
=== Usages ===
j2597 v2399 v2400 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2395 #next: v2658  <|@  <|@
f <@~|@floating>@ <|@
tid v2835 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2597 
=== Succesors ===
=== Usages ===
v2658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2835 
value: v2663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
v2396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2835 value: v2663 stateAfter: - lastLocationAccess: - #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid j2602 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2597 
y: j950 
=== Succesors ===
=== Usages ===
j2591 j2597 v2606 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2597 y: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2603 
y: j2602 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2603 y: j2602  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2606 
=== Succesors ===
trueSuccessor: v2399 
falseSuccessor: v2401 
=== Usages ===
=== Predecessor ===
v2658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2606 #trueSuccessor: v2399 #falseSuccessor: v2401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2396 
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2396 #next: v2405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2404 
=== Predecessor ===
v2399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2591 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2404 
values: j1755 j2602 
=== Succesors ===
=== Usages ===
v2834 j2596 j2585 v2609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2404 values: j1755 j2602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2403 v2405 
=== Succesors ===
next: v2426 
=== Usages ===
j2591 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2403 v2405 #next: v2426  <|@  <|@
f <@~|@floating>@ <|@
tid j2608 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2320 
y: j2493 
=== Succesors ===
=== Usages ===
v2609 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2493  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2608 
y: j2591 
=== Succesors ===
=== Usages ===
v2426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2608 y: j2591  <|@  <|@
f <@*|@fixed>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2609 
=== Succesors ===
trueSuccessor: v2425 
falseSuccessor: v2424 
=== Usages ===
=== Predecessor ===
v2404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2609 #trueSuccessor: v2425 #falseSuccessor: v2424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2429 
=== Usages ===
=== Predecessor ===
v2426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2429  <|@  <|@
f <@*|@fixed>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2415 
=== Predecessor ===
v2425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2657 
=== Usages ===
=== Predecessor ===
v2426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2834 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2591 
=== Succesors ===
=== Usages ===
v2657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2591  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2657 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2834 
value: v2667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2414 
=== Usages ===
=== Predecessor ===
v2424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2834 value: v2667 stateAfter: - lastLocationAccess: - #next: v2414  <|@  <|@
f <@~|@floating>@ <|@
tid j2596 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2591 
y: j2027 
=== Succesors ===
=== Usages ===
j2585 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2591 y: j2027  <|@  <|@
f <@*|@fixed>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2415 
=== Predecessor ===
v2657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2585 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2415 
values: j2596 j2591 
=== Succesors ===
=== Usages ===
v2833 j2590 j2579 v2612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2415 values: j2596 j2591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2414 v2429 
=== Succesors ===
next: v2432 
=== Usages ===
j2585 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2414 v2429 #next: v2432  <|@  <|@
f <@~|@floating>@ <|@
tid j2611 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2320 
y: j2497 
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2611 
y: j2585 
=== Succesors ===
=== Usages ===
v2432 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2611 y: j2585  <|@  <|@
f <@*|@fixed>@ <|@
tid v2432 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2612 
=== Succesors ===
trueSuccessor: v2431 
falseSuccessor: v2430 
=== Usages ===
=== Predecessor ===
v2415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2612 #trueSuccessor: v2431 #falseSuccessor: v2430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2435 
=== Usages ===
=== Predecessor ===
v2432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2435  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2418 
=== Predecessor ===
v2431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2655 
=== Usages ===
=== Predecessor ===
v2432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2655  <|@  <|@
f <@~|@floating>@ <|@
tid v2833 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2585 
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2585  <|@  <|@
f <@~|@floating>@ <|@
tid v2666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2833 
value: v2666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2417 
=== Usages ===
=== Predecessor ===
v2430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2833 value: v2666 stateAfter: - lastLocationAccess: - #next: v2417  <|@  <|@
f <@~|@floating>@ <|@
tid j2590 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2585 
y: j2473 
=== Succesors ===
=== Usages ===
j2579 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2585 y: j2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2418 
=== Predecessor ===
v2655 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" "B191" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2579 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2418 
values: j2590 j2585 
=== Succesors ===
=== Usages ===
v2832 j2584 j2573 v2615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2418 values: j2590 j2585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2417 v2435 
=== Succesors ===
next: v2438 
=== Usages ===
j2579 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2417 v2435 #next: v2438  <|@  <|@
f <@~|@floating>@ <|@
tid j2614 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2320 
y: j2501 
=== Succesors ===
=== Usages ===
v2615 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2614 
y: j2579 
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2614 y: j2579  <|@  <|@
f <@*|@fixed>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2615 
=== Succesors ===
trueSuccessor: v2437 
falseSuccessor: v2436 
=== Usages ===
=== Predecessor ===
v2418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2615 #trueSuccessor: v2437 #falseSuccessor: v2436  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2441 
=== Usages ===
=== Predecessor ===
v2438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2441  <|@  <|@
f <@*|@fixed>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2421 
=== Predecessor ===
v2437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2653 
=== Usages ===
=== Predecessor ===
v2438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2653  <|@  <|@
f <@~|@floating>@ <|@
tid v2832 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2579 
=== Succesors ===
=== Usages ===
v2653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2579  <|@  <|@
f <@~|@floating>@ <|@
tid v2665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2832 
value: v2665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2420 
=== Usages ===
=== Predecessor ===
v2436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2832 value: v2665 stateAfter: - lastLocationAccess: - #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid j2584 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2579 
y: j1780 
=== Succesors ===
=== Usages ===
j2573 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2579 y: j1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2421 
=== Predecessor ===
v2653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" "B194" 
    successors "B197" "B198" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2573 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2421 
values: j2584 j2579 
=== Succesors ===
=== Usages ===
v2831 v2618 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2421 values: j2584 j2579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2420 v2441 
=== Succesors ===
next: v2444 
=== Usages ===
j2573 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2420 v2441 #next: v2444  <|@  <|@
f <@~|@floating>@ <|@
tid j2617 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2320 
y: j1579 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2617 
y: j2573 
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2617 y: j2573  <|@  <|@
f <@*|@fixed>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2618 
=== Succesors ===
trueSuccessor: v2443 
falseSuccessor: v2442 
=== Usages ===
=== Predecessor ===
v2421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2618 #trueSuccessor: v2443 #falseSuccessor: v2442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2447 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
v2443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2651 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2651  <|@  <|@
f <@~|@floating>@ <|@
tid v2831 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2573 
=== Succesors ===
=== Usages ===
v2651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2573  <|@  <|@
f <@~|@floating>@ <|@
tid i2664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2831 
value: i2664 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2423 
=== Usages ===
=== Predecessor ===
v2442 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2831 value: i2664 stateAfter: - lastLocationAccess: - #next: v2423  <|@  <|@
f <@*|@fixed>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
v2651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B185" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2400 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2400  <|@  <|@
f <@*|@fixed>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2396 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2401 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B201" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2407 
=== Usages ===
=== Predecessor ===
v2391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2407  <|@  <|@
f <@*|@fixed>@ <|@
tid v2407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
v2389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B197" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2407 v2423 v2447 
=== Succesors ===
next: a1868 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2407 v2423 v2447 #next: a1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2163 
=== Succesors ===
next: j2194 
=== Usages ===
a1770 
=== Predecessor ===
v2408 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2163 #next: j2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2194 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2209 
=== Usages ===
v2808 v2809 
=== Predecessor ===
a1868 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2209  <|@  <|@
f <@~|@floating>@ <|@
tid v2808 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2209 v2211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2808 
=== Succesors ===
next: j2210 
=== Usages ===
j2245 j2215 v2816 
=== Predecessor ===
j2194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2808 #next: j2210  <|@  <|@
f <@~|@floating>@ <|@
tid v2809 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2809 
=== Succesors ===
next: v2202 
=== Usages ===
v2199 
=== Predecessor ===
j2209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2809 #next: v2202  <|@  <|@
f <@~|@floating>@ <|@
tid j2245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2209 
y: j955 
=== Succesors ===
=== Usages ===
v2199 v2211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2209 y: j955  <|@  <|@
f <@~|@floating>@ <|@
tid v2199 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2210 
y: j2245 
=== Succesors ===
=== Usages ===
v2202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2210 y: j2245  <|@  <|@
f <@*|@fixed>@ <|@
tid v2202 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2199 
=== Succesors ===
trueSuccessor: v2200 
falseSuccessor: v2201 
=== Usages ===
=== Predecessor ===
j2210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2199 #trueSuccessor: v2200 #falseSuccessor: v2201  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4576125157390179651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2205 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2205 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2083 i305 i4 
=== Succesors ===
next: j2206 
=== Usages ===
j2206 
=== Predecessor ===
v2200 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2083 i305 i4 #next: j2206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2206 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2205 
=== Succesors ===
next: v2216 
=== Usages ===
j2215 
=== Predecessor ===
a2205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2205 #next: v2216  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
j2206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4605865563690643517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2211 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2808 
value: j2245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2208 
=== Usages ===
=== Predecessor ===
v2201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2808 value: j2245 stateAfter: - lastLocationAccess: - #next: v2208  <|@  <|@
f <@~|@floating>@ <|@
tid v2816 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2209 
index: - 
=== Succesors ===
=== Usages ===
v2208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2816 
=== Succesors ===
next: v2214 
=== Usages ===
=== Predecessor ===
v2211 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2816 #next: v2214  <|@  <|@
f <@*|@fixed>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
v2208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B202" 
    successors 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2215 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2213 
values: j2209 j2206 
=== Succesors ===
=== Usages ===
v2812 v2811 a1767 v2817 v2818 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2213 values: j2209 j2206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2214 v2216 
=== Succesors ===
next: a1767 
=== Usages ===
j2215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2214 v2216 #next: a1767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1767 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2215 
=== Succesors ===
next: j2225 
=== Usages ===
a1773 
=== Predecessor ===
v2213 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2215 #next: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2810 
=== Succesors ===
next: v2226 
=== Usages ===
v2226 
=== Predecessor ===
a1767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2810 #next: v2226  <|@  <|@
f <@~|@floating>@ <|@
tid v2811 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2811 
value: j2225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2229 
=== Usages ===
=== Predecessor ===
j2225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2811 value: j2225 stateAfter: - lastLocationAccess: - #next: v2229  <|@  <|@
f <@~|@floating>@ <|@
tid v2812 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2812 
value: v2241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2233 
=== Usages ===
=== Predecessor ===
v2226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2812 value: v2241 stateAfter: - lastLocationAccess: - #next: v2233  <|@  <|@
f <@~|@floating>@ <|@
tid v2817 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1770 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1868 
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2817 
value: a1770 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2235 
=== Usages ===
=== Predecessor ===
v2229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2817 value: a1770 stateAfter: - lastLocationAccess: - #next: v2235  <|@  <|@
f <@~|@floating>@ <|@
tid v2818 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2818 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1773 
=== Usages ===
=== Predecessor ===
v2233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2818 value: i17 stateAfter: - lastLocationAccess: - #next: a1773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1773 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1767 
=== Succesors ===
next: v1774 
=== Usages ===
v441 
=== Predecessor ===
v2235 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1767 #next: v1774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
a1773 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1773 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1774 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1773 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B167" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2337  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2333 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1960 
=== Usages ===
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1960  <|@  <|@
f <@~|@floating>@ <|@
tid i1961 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -370203
stableDimension: 0
stamp: i32 [-370203] ⇊00000000fffa59e5 ⇈00000000fffa59e5
stampKind: i32
value: int[-370203|0xfffffffffffa59e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
v1722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid i1959 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -399643
stableDimension: 0
stamp: i32 [-399643] ⇊00000000fff9e6e5 ⇈00000000fff9e6e5
stampKind: i32
value: int[-399643|0xfffffffffff9e6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
v1718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid i1954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -401435
stableDimension: 0
stamp: i32 [-401435] ⇊00000000fff9dfe5 ⇈00000000fff9dfe5
stampKind: i32
value: int[-401435|0xfffffffffff9dfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
v1714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B207" "B206" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1955 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-401435 - -370203] ⇊00000000fff840e5 ⇈00000000fffbffe5
valueDescription: i32
=== Inputs ===
merge: v1952 
values: i1954 i1959 i1961 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1952 values: i1954 i1959 i1961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1953 v1958 v1960 
=== Succesors ===
next: v1957 
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1953 v1958 v1960 #next: v1957  <|@  <|@
tid ?802 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?338 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?802 
values: - a639 i336 i337 - 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?802 values: - a639 i336 i337 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?338 
actionAndReason: i1955 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1952 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?338 actionAndReason: i1955 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1950 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1950  <|@  <|@
f <@~|@floating>@ <|@
tid i1951 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354843
stableDimension: 0
stamp: i32 [-354843] ⇊00000000fffa95e5 ⇈00000000fffa95e5
stampKind: i32
value: int[-354843|0xfffffffffffa95e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@~|@floating>@ <|@
tid i1949 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342043
stableDimension: 0
stamp: i32 [-342043] ⇊00000000fffac7e5 ⇈00000000fffac7e5
stampKind: i32
value: int[-342043|0xfffffffffffac7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@~|@floating>@ <|@
tid i1947 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340507
stableDimension: 0
stamp: i32 [-340507] ⇊00000000fffacde5 ⇈00000000fffacde5
stampKind: i32
value: int[-340507|0xfffffffffffacde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337179
stableDimension: 0
stamp: i32 [-337179] ⇊00000000fffadae5 ⇈00000000fffadae5
stampKind: i32
value: int[-337179|0xfffffffffffadae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1686 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B126" "B212" "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1937 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-354843 - -335883] ⇊00000000fffa80e5 ⇈00000000fffadffd
valueDescription: i32
=== Inputs ===
merge: v1934 
values: i1943 i1945 i1947 i1949 i1951 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1934 values: i1943 i1945 i1947 i1949 i1951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1942 v1944 v1946 v1948 v1950 
=== Succesors ===
next: v1939 
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1942 v1944 v1946 v1948 v1950 #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?296 
actionAndReason: i1937 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?296 actionAndReason: i1937 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1977 
=== Usages ===
=== Predecessor ===
v2689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1977  <|@  <|@
f <@~|@floating>@ <|@
tid i1979 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -256803
stableDimension: 0
stamp: i32 [-256803] ⇊00000000fffc14dd ⇈00000000fffc14dd
stampKind: i32
value: int[-256803|0xfffffffffffc14dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1977 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?532 
actionAndReason: i1979 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2021 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?532 actionAndReason: i1979 speculation: a1886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid i1971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253971
stableDimension: 0
stamp: i32 [-253971] ⇊00000000fffc1fed ⇈00000000fffc1fed
stampKind: i32
value: int[-253971|0xfffffffffffc1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1968 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid i1969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250907
stableDimension: 0
stamp: i32 [-250907] ⇊00000000fffc2be5 ⇈00000000fffc2be5
stampKind: i32
value: int[-250907|0xfffffffffffc2be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
v1606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1965 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-253971 - -249355] ⇊00000000fffc01e5 ⇈00000000fffc3ffd
valueDescription: i32
=== Inputs ===
merge: v1962 
values: i1969 i1971 
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1962 values: i1969 i1971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1968 v1970 
=== Succesors ===
next: v1967 
=== Usages ===
i1965 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1968 v1970 #next: v1967  <|@  <|@
f <@*|@fixed>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?508 
actionAndReason: i1965 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?508 actionAndReason: i1965 speculation: a1886  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: d2698 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: d2698  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Double;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2739 ?7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2739 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
d2698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d2698 <|@
result v1|DOUBLE <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Double.value
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2739 
=== Succesors ===
next: a2699 
=== Usages ===
j15 ?8 ?9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2739 #next: a2699  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v2738 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2738 <|@
result [r15|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j101 
index: - 
=== Succesors ===
=== Usages ===
a2699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j101 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2699 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: a2700 
=== Usages ===
v2742 
=== Predecessor ===
d2698 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: a2700  <|@  <|@
f <@~|@floating>@ <|@
tid v2742 <|@
result [v2|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a2699 
index: - 
=== Succesors ===
=== Usages ===
a2700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2699 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2700 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2742 
=== Succesors ===
next: v33 
=== Usages ===
a965 v1477 v2697 v2743 
=== Predecessor ===
a2699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2742 #next: v33  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Double.toString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 204
stackSize: 0
=== Inputs ===
outerFrameState: ?7 
values: d2698 - 
=== Succesors ===
=== Usages ===
?9 ?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?7 values: d2698 -  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: - - 
=== Succesors ===
=== Usages ===
?141 ?798 ?793 ?781 ?792 ?783 ?784 ?794 ?800 ?787 ?796 ?802 ?790 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: - -  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: d2698 - 
=== Succesors ===
=== Usages ===
?637 ?80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: d2698 -  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 0
=== Inputs ===
outerFrameState: ?9 
values: - - 
=== Succesors ===
=== Usages ===
?531 ?533 ?529 ?137 ?508 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
value: d2698 
=== Succesors ===
=== Usages ===
v18 j21 j23 v34 j2696 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d2698  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j16 
=== Succesors ===
=== Usages ===
i19 v1599 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j16  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v30 v1280 v180 v1153 i598 v273 v408 v418 v2235 v2132 i599 v859 i599 i598 v1022 v1273 v1142 v1269 v1099 a2159 v1110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 1]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 i19 ?531 ?533 a2205 i598 v193 i228 i234 i477 i605 i310 i318 i469 i330 i344 v404 i2135 ?508 ?529 a2097 i599 v596 v627 i603 i903 v920 i603 i605 i940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v18 
trueValue: i17 
falseValue: i4 
=== Succesors ===
=== Usages ===
?531 ?533 i1005 ?508 ?529 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i17 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 30]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j15 
y: j22 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j22  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 36]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j23 
y: i24 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j23 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 37]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j25 
=== Succesors ===
=== Usages ===
v28 v30 i519 i562 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j25  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i17 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j2501 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2502 j2563 j2614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1755 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2591 v2553 j2544 v2604 v2503 j2536 j2456 j2597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2134 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2183 v2254 v2325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1579 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1580 j2566 j2617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1780 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1793 j1793 j1807 j1807 j2456 j2527 j2584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 i468 i476 i609 i611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1799 <|@
result long[18|0x12] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1801 j1803 j1803 j1811 j1812 j1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j950 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2602 j2551 j1801 j1811 j1801 j1811 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v306 i380 i381 i611 i390 i391 i482 i492 i603 i609 i605 i609 i611 a2205 a2097 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1492 <|@
result short[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1203 v1224 v1236 v2631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 109]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1181 i377 ?1784 i373 i2837 i345 i2836 i362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1489 <|@
result short[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1094 v1193 v1215 v1244 v1338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1485 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1030 v1462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$1;
stampKind: a -
value: Object[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1000 v988 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 i332 i316 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1886 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1889 v1931 v1921 v1985 v1999 v1897 v1957 v1967 v1939 v1909 v1977 ?571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 23]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 v34 j2696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.13709283671618888
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
a2700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v31 #falseSuccessor: v1592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50ad6842 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DOUBLE = H [v0|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = VMOVQ v1|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND (x: v4|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR v9|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 79]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j20  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997455902306649
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 86]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1599 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1599  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v1596 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v1596 #falseSuccessor: v1598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2701 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2701  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 97]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal.BinaryToASCIIBuffer@1898887381
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
stampKind: a -
value: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2740 v2741 a729 a728 a730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
result [v14|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2701 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2740 
=== Succesors ===
next: v183 
=== Usages ===
i958 
=== Predecessor ===
v1596 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2740 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i958 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2701 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2701  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i958 
y: i17 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i958 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a864 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: char[26]{0, ., 0,  ,  , ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[26]{0, ., 0,  ,  , ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a639 a640 a641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i2701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVZXB [v14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2702 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2702  <|@  <|@
f <@~|@floating>@ <|@
tid v2741 <|@
result [v14|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2702 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2741 
=== Succesors ===
next: v630 
=== Usages ===
v627 i589 i904 i1814 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2741 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2702 
y: i4 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2702 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v627 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
i2702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v627 #trueSuccessor: v628 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592799363640258986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B5 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582612474071634943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v587  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], v17|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.], v14|QWORD[.]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1890 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1890  <|@  <|@
f <@~|@floating>@ <|@
tid i1891 <|@
result int[-244243|0xfffffffffffc45ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244243
stableDimension: 0
stamp: i32 [-244243] ⇊00000000fffc45ed ⇈00000000fffc45ed
stampKind: i32
value: int[-244243|0xfffffffffffc45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244243|0xfffffffffffc45ed]] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 101]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2700 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2700  <|@  <|@
f <@~|@floating>@ <|@
tid i564 <|@
result int[-1011|0xfffffffffffffc0d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1011
stableDimension: 0
stamp: i32 [-1011] ⇊00000000fffffc0d ⇈00000000fffffc0d
stampKind: i32
value: int[-1011|0xfffffffffffffc0d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i565 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
i41 j44 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfLeadingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 103]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [12 - 64] ⇈000000000000007f
=== Inputs ===
value: j21 
=== Succesors ===
=== Usages ===
i43 i46 i79 i565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: j21  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1075 - -1023] ⇊00000000fffff800
=== Inputs ===
x: i564 
y: i41 
=== Succesors ===
=== Usages ===
i535 i536 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i564 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-11|0xfffffffffffffff5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -11
stableDimension: 0
stamp: i32 [-11] ⇊00000000fffffff5 ⇈00000000fffffff5
stampKind: i32
value: int[-11|0xfffffffffffffff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [1 - 53] ⇈000000000000003f
=== Inputs ===
x: i41 
y: i42 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1774) [bci: 119]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j21 
y: i43 
=== Succesors ===
=== Usages ===
j514 j515 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j21 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 128]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 132]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 52] ⇈000000000000003f
=== Inputs ===
x: i45 
y: i41 
=== Succesors ===
=== Usages ===
i522 i523 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i45 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v1477 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1477 #trueSuccessor: v107 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LZCNT v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v19|DWORD - 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHL (x: v18|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v24|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD, v25|DWORD, v21|DWORD] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-52 - 0]
=== Inputs ===
x: i78 
y: i41 
=== Succesors ===
=== Usages ===
i519 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i78 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v25|DWORD, v23|QWORD, v27|DWORD] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[2047|0x7ff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 42]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2047
stableDimension: 0
stamp: i32 [2047] ⇊00000000000007ff ⇈00000000000007ff
stampKind: i32
value: int[2047|0x7ff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i27 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1594 #falseSuccessor: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 2047 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1884 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid i1885 <|@
result int[-243987|0xfffffffffffc46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243987
stableDimension: 0
stamp: i32 [-243987] ⇊00000000fffc46ed ⇈00000000fffc46ed
stampKind: i32
value: int[-243987|0xfffffffffffc46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243987|0xfffffffffffc46ed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1887 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-244243 - -243987] ⇊00000000fffc44ed ⇈00000000fffc47ed
valueDescription: i32
=== Inputs ===
merge: v1883 
values: i1885 i1891 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1883 values: i1885 i1891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1884 v1890 
=== Succesors ===
next: v1889 
=== Usages ===
i1887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1884 v1890 #next: v1889  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v1889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1887 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1887 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Double.toString(Double.java:644) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 138]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2700 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2700  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i562 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i562 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i26 
y: i57 
=== Succesors ===
=== Usages ===
i535 i536 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i26 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid j2696 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 140]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 143]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j2696 
y: j47 
=== Succesors ===
=== Usages ===
j514 j515 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j2696 y: j47  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[53|0x35] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1779) [bci: 146]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i522 i523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v2697 
=== Succesors ===
trueSuccessor: v556 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2697 #trueSuccessor: v556 #falseSuccessor: v557  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v11|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = OR (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD, int[53|0x35], v29|DWORD] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD, int[53|0x35], v32|QWORD, v11|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B217" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i535 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v506 
values: i565 i562 
=== Succesors ===
=== Usages ===
i534 i536 ?529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: i565 i562  <|@  <|@
f <@~|@floating>@ <|@
tid i522 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v506 
values: i46 i49 
=== Succesors ===
=== Usages ===
i521 i523 ?508 ?529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: i46 i49  <|@  <|@
f <@~|@floating>@ <|@
tid j514 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v506 
values: j44 j48 
=== Succesors ===
=== Usages ===
j513 j515 ?508 ?529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: j44 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i519 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-52 - 2047]
valueDescription: i32
=== Inputs ===
merge: v506 
values: i79 i26 
=== Succesors ===
=== Usages ===
?508 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v506 values: i79 i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v509 
=== Succesors ===
next: a2703 
=== Usages ===
i535 i522 j514 i519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v509 #next: a2703  <|@  <|@
f <@~|@floating>@ <|@
tid v2743 <|@
result [v3|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2700 
=== Succesors ===
=== Usages ===
a2703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2703 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2743 
=== Succesors ===
next: i2704 
=== Usages ===
a972 v2744 
=== Predecessor ===
v506 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2743 #next: i2704  <|@  <|@
tid ?508 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1781
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j514 - i519 i522 - - 
=== Succesors ===
=== Usages ===
v1967 i2704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j514 - i519 i522 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2744 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2703 
=== Succesors ===
=== Usages ===
i2704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2704 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?508 
guard: - 
address: v2744 
=== Succesors ===
next: v1607 
=== Usages ===
i154 v979 
=== Predecessor ===
a2703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?508 guard: - address: v2744 #next: v1607  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2704 
y: i153 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2704 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result int[-1401181199|0xffffffffac7babf1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1401181199
stableDimension: 0
stamp: i32 [-1401181199] ⇊00000000ac7babf1 ⇈00000000ac7babf1
stampKind: i32
value: int[-1401181199|0xffffffffac7babf1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 746302449] ⇈00000000ac7babf1
=== Inputs ===
x: i154 
y: i172 
=== Succesors ===
=== Usages ===
v2745 v988 v979 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i154 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i2704 
=== Succesors ===
=== Usages ===
v1607 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i2704  <|@  <|@
f <@*|@fixed>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v1604 
falseSuccessor: v1606 
=== Usages ===
=== Predecessor ===
i2704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v1604 #falseSuccessor: v1606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|QWORD, v36|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = DEC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND v39|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2705 
=== Usages ===
a2705 
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2705  <|@  <|@
f <@~|@floating>@ <|@
tid a972 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2703 
=== Succesors ===
=== Usages ===
v2745 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2703  <|@  <|@
f <@~|@floating>@ <|@
tid v2745 <|@
result [v41|QWORD[.] + v40|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a972 
index: i173 
=== Succesors ===
=== Usages ===
a2705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a972 index: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2705 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1604 
address: v2745 
=== Succesors ===
next: v160 
=== Usages ===
a987 v1480 v2746 
=== Predecessor ===
v1604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1604 address: v2745 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid a987 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2705 
=== Succesors ===
=== Usages ===
a574 v988 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2705  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2705 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2705  <|@  <|@
tid ?529 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j514 - i535 i522 - - 
=== Succesors ===
=== Usages ===
?526 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j514 - i535 i522 - -  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?529 
=== Succesors ===
=== Usages ===
?112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?529  <|@  <|@
f <@~|@floating>@ <|@
tid a965 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a2700 
=== Succesors ===
=== Usages ===
?112 v988 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2700  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?526 
values: a59 - a965 - - 
=== Succesors ===
=== Usages ===
?571 ?174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: a59 - a965 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v1480 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
a2705 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1480 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v41|QWORD[.] + v40|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a169 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a169  <|@  <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@f3244a0
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a965 a59 i173 a987 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a965 a59 i173 a987  <|@  <|@
tid ?174 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?112 
values: - - 
=== Succesors ===
=== Usages ===
?1781 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - -  <|@  <|@
tid ?1781 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?174 
values: - - - - 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?174 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v988 
stateDuring: ?1781 
=== Succesors ===
next: v120 
=== Usages ===
v114 a574 
=== Predecessor ===
v158 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v988 stateDuring: ?1781 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a169 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a169  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.364582267253437E-4
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
a169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v119 #falseSuccessor: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|QWORD[.], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD, v34|DWORD, v33|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j515 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v116 
values: j44 j514 j48 
=== Succesors ===
=== Usages ===
j513 ?531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: j44 j514 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i523 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v116 
values: i46 i522 i49 
=== Succesors ===
=== Usages ===
i521 ?531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i46 i522 i49  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v116 
values: i565 i535 i562 
=== Succesors ===
=== Usages ===
i534 ?531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i565 i535 i562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v115 v117 v563 
=== Succesors ===
next: a125 
=== Usages ===
j515 i523 i536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v117 v563 #next: a125  <|@  <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@2881507c
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a59 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a59  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j515 - i536 i523 - - 
=== Succesors ===
=== Usages ===
?528 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j515 - i536 i523 - -  <|@  <|@
tid ?528 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
=== Succesors ===
=== Usages ===
?1782 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531  <|@  <|@
tid ?1782 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?528 
values: - - - - - 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?528 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1000 
stateDuring: ?1782 
=== Succesors ===
next: v132 
=== Usages ===
a131 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1000 stateDuring: ?1782 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD, v47|DWORD, v48|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v46|QWORD - v48|DWORD v47|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.], v46|QWORD, v47|DWORD, v48|DWORD] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v570 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B216" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2706 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2706  <|@  <|@
f <@~|@floating>@ <|@
tid v2746 <|@
result [v42|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2705 
=== Succesors ===
=== Usages ===
a2706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2706 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2746 
=== Succesors ===
next: v1611 
=== Usages ===
v1482 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2746 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid a1481 <|@
result NarrowOop[FloatingDecimal$1@1399508980] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: n!# Lsun/misc/FloatingDecimal$1;
stampKind: n -
value: NarrowOop[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2706 
y: a1481 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2706 y: a1481  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1482 
=== Succesors ===
trueSuccessor: v1608 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
a2706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1482 #trueSuccessor: v1608 #falseSuccessor: v1610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v42|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a574 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v569 
values: a169 a987 
=== Succesors ===
=== Usages ===
v2747 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v569 values: a169 a987  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v572 
=== Succesors ===
next: a2707 
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v572 #next: a2707  <|@  <|@
tid ?571 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?112 
values: - - a1886 
=== Succesors ===
=== Usages ===
a2707 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - - a1886  <|@  <|@
f <@~|@floating>@ <|@
tid v2747 <|@
result [v50|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
a2707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2707 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?571 
guard: - 
address: v2747 
=== Succesors ===
next: v130 
=== Usages ===
a999 
=== Predecessor ===
v569 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?571 guard: - address: v2747 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid a999 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2707 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2707  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a2707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v51|DWORD[.] = MOV [v50|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.], v35|QWORD, v34|DWORD, v33|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a131 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v129 
values: a999 a125 
=== Succesors ===
=== Usages ===
?532 v2784 ?137 v67 v2750 v2748 a728 a729 v2749 v1008 a730 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: a999 a125  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v129 
values: j514 j515 
=== Succesors ===
=== Usages ===
?533 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: j514 j515  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v129 
values: i522 i523 
=== Succesors ===
=== Usages ===
?533 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i522 i523  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v129 
values: i535 i536 
=== Succesors ===
=== Usages ===
?533 v1008 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i535 i536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 
=== Succesors ===
next: v1740 
=== Usages ===
a131 j513 i521 i534 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 #next: v1740  <|@  <|@
tid ?533 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j513 - i534 i521 - - 
=== Succesors ===
=== Usages ===
?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j513 - i534 i521 - -  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: false
localsSize: 0
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 1
=== Inputs ===
outerFrameState: ?533 
values: a131 
=== Succesors ===
=== Usages ===
v1977 v1007 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?533 values: a131  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v1739 
falseSuccessor: v1738 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v1739 #falseSuccessor: v1738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[.], v54|QWORD, v55|DWORD, v56|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD[.], y: v53|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2016  <|@  <|@
f <@*|@fixed>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
v1739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B215" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2708 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2708  <|@  <|@
f <@~|@floating>@ <|@
tid v2784 <|@
result [v53|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v2708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2708 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2784 
=== Succesors ===
next: v2689 
=== Usages ===
v2237 
=== Predecessor ===
v1738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2784 #next: v2689  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
result meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2237 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2237 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2708 
y: v2236 
=== Succesors ===
=== Usages ===
v2689 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2708 y: v2236  <|@  <|@
f <@*|@fixed>@ <|@
tid v2689 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2237 
=== Succesors ===
trueSuccessor: v2688 
falseSuccessor: v2021 
=== Usages ===
=== Predecessor ===
v2708 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2237 #trueSuccessor: v2688 #falseSuccessor: v2021  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v53|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2024 
=== Usages ===
=== Predecessor ===
v2689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2024  <|@  <|@
f <@*|@fixed>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
v2688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2016 v2024 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2016 v2024 #next: v1007  <|@  <|@
f <@~|@floating>@ <|@
tid v2748 <|@
result [v53|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v1007 i2709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1005 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i19 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1007 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?532 
guard: - 
address: v2748 
value: i1005 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v2014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?532 guard: - address: v2748 value: i1005 stateAfter: - lastLocationAccess: - #next: v134  <|@  <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6c9e57b2
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
=== Inputs ===
arguments: a131 i534 j513 i521 i4 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a131 i534 j513 i521 i4  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - - - - - - - - - a131 - 
=== Succesors ===
=== Usages ===
?1783 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - - - - - - - - - a131 -  <|@  <|@
tid ?1783 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 259
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.dtoa
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1008 
stateDuring: ?1783 
=== Succesors ===
next: i2709 
=== Usages ===
=== Predecessor ===
v1007 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1008 stateDuring: ?1783 #next: i2709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2709 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2748 
=== Succesors ===
next: a2710 
=== Usages ===
i1014 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2748 #next: a2710  <|@  <|@
f <@~|@floating>@ <|@
tid v2749 <|@
result [v53|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
a2710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2710 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2749 
=== Succesors ===
next: v862 
=== Usages ===
a1012 
=== Predecessor ===
i2709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2749 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid a1012 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2710 
=== Succesors ===
=== Usages ===
a641 a640 a639 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2710  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2709 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2709  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1014 
y: i17 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1014 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v859 
=== Succesors ===
trueSuccessor: v860 
falseSuccessor: v861 
=== Usages ===
=== Predecessor ===
a2710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v859 #trueSuccessor: v860 #falseSuccessor: v861  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction MOVB (x: [v53|QWORD[.] + 24], y: v6|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v53|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSXB [v53|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v53|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZXB v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2711 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2711  <|@  <|@
f <@~|@floating>@ <|@
tid v2750 <|@
result [v53|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
i2711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2711 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2750 
=== Succesors ===
next: v923 
=== Usages ===
v920 i589 i904 i1814 
=== Predecessor ===
v860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2750 #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2711 
y: i4 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2711 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v920 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
i2711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v920 #trueSuccessor: v921 #falseSuccessor: v922  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B83" 
    xhandlers
    flags 
    probability 4604577606124749407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B33 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641963553957399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
v922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], v61|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.], v53|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a640 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v635 
values: a864 a1012 
=== Succesors ===
=== Usages ===
a639 a641 v2752 v2751 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v635 values: a864 a1012  <|@  <|@
f <@~|@floating>@ <|@
tid a729 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v635 
values: a39 a131 
=== Succesors ===
=== Usages ===
a728 a730 ?637 v2753 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v635 values: a39 a131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v636 v638 
=== Succesors ===
next: i2712 
=== Usages ===
a640 a729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v636 v638 #next: i2712  <|@  <|@
tid ?637 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 1
=== Inputs ===
outerFrameState: ?9 
values: - - a729 
=== Succesors ===
=== Usages ===
v1999 i2712 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - - a729  <|@  <|@
f <@~|@floating>@ <|@
tid v2751 <|@
result [v62|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a640 
index: - 
=== Succesors ===
=== Usages ===
i2712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2712 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?637 
guard: - 
address: v2751 
=== Succesors ===
next: v1631 
=== Usages ===
v1022 
=== Predecessor ===
v635 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?637 guard: - address: v2751 #next: v1631  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2712 
y: i17 
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2712 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1631 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1022 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1628 
=== Usages ===
=== Predecessor ===
i2712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1022 #trueSuccessor: v1630 #falseSuccessor: v1628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.], v63|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v62|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1999 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1999  <|@  <|@
f <@~|@floating>@ <|@
tid i2001 <|@
result int[-379675|0xfffffffffffa34e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -379675
stableDimension: 0
stamp: i32 [-379675] ⇊00000000fffa34e5 ⇈00000000fffa34e5
stampKind: i32
value: int[-379675|0xfffffffffffa34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?637 
actionAndReason: i2001 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1630 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?637 actionAndReason: i2001 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -379675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
v1030 
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid v2752 <|@
result [v62|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a640 
index: - 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1628 
address: v2752 
value: i1485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2713 
=== Usages ===
=== Predecessor ===
v1628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1628 address: v2752 value: i1485 stateAfter: - lastLocationAccess: - #next: i2713  <|@  <|@
f <@~|@floating>@ <|@
tid v2753 <|@
result [v63|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
i2713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2713 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2753 
=== Succesors ===
next: v196 
=== Usages ===
v193 i1814 i589 i903 
=== Predecessor ===
v1030 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2753 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2713 
y: i4 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2713 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j1791 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1793 j1807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1803 j1812 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
i2713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v194 #falseSuccessor: v195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v62|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], long[3|0x3], long[20|0x14], long[18|0x12]] destination: B39 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid i903 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2713 
y: i4 
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2713 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], v65|DWORD, long[20|0x14], long[3|0x3], long[18|0x12]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B82" 
    xhandlers
    flags 
    probability 4595512854586415623
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1814 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v584 
values: i2713 i2702 i2711 
=== Succesors ===
=== Usages ===
i1066 v1567 i246 v430 v217 i222 i589 j2041 i1060 ?236 i243 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i2713 i2702 i2711  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v584 
values: i4 i17 i17 
=== Succesors ===
=== Usages ===
v2790 v1165 ?214 i215 i599 ?586 v1067 v2786 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i4 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i605 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v584 
values: i305 i4 i4 
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i305 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v584 
values: i392 i305 i305 
=== Succesors ===
=== Usages ===
i609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i392 i305 i305  <|@  <|@
f <@~|@floating>@ <|@
tid a641 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v584 
values: a640 a864 a1012 
=== Succesors ===
=== Usages ===
a639 ?586 v2840 v2757 ?214 v1181 ?1785 ?236 v2761 v2762 v2763 j2057 j2048 j2036 v2759 v2760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: a640 a864 a1012  <|@  <|@
f <@~|@floating>@ <|@
tid a730 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v584 
values: a729 a39 a131 
=== Succesors ===
=== Usages ===
a728 a733 a733 a733 v2754 v2756 ?784 v2755 ?214 ?236 ?586 ?781 ?787 ?783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: a729 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid i904 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v584 
values: i903 i2702 i2711 
=== Succesors ===
=== Usages ===
v2757 i234 v1086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: i903 i2702 i2711  <|@  <|@
f <@~|@floating>@ <|@
tid j1812 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v584 
values: j969 j1799 j1799 
=== Succesors ===
=== Usages ===
j1803 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: j969 j1799 j1799  <|@  <|@
f <@~|@floating>@ <|@
tid j1807 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v584 
values: j1791 j1780 j1780 
=== Succesors ===
=== Usages ===
j1793 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: j1791 j1780 j1780  <|@  <|@
f <@~|@floating>@ <|@
tid j1811 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v584 
values: j1799 j950 j950 
=== Succesors ===
=== Usages ===
j1801 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v584 values: j1799 j950 j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v585 v587 v925 
=== Succesors ===
next: v205 
=== Usages ===
i1814 i598 i605 i611 a641 a730 i904 j1812 j1807 j1811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v585 v587 v925 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1814 
y: i198 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1814 y: i198  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9952842720510096
=== Inputs ===
condition: v1567 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1567 #trueSuccessor: v200 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v72|DWORD, v73|QWORD, v74|QWORD, v75|QWORD] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482934073994828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2840 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2840  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?586 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?586 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?781 
values: a730 a641 i598 - - 
=== Succesors ===
=== Usages ===
v1985 v2840 i2715 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?781 values: a730 a641 i598 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?586 
object: a641 
=== Succesors ===
next: a2714 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?586 object: a641 #next: a2714  <|@  <|@
f <@~|@floating>@ <|@
tid v2755 <|@
result [v71|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a730 
index: - 
=== Succesors ===
=== Usages ===
a2714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2714 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
=== Succesors ===
next: i2715 
=== Usages ===
a1037 v2758 
=== Predecessor ===
v2840 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2755 #next: i2715  <|@  <|@
f <@~|@floating>@ <|@
tid v2758 <|@
result [v76|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2714 
=== Succesors ===
=== Usages ===
i2715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2715 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?586 
guard: - 
address: v2758 
=== Succesors ===
next: i2716 
=== Usages ===
i1115 i1060 i1158 
=== Predecessor ===
a2714 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?586 guard: - address: v2758 #next: i2716  <|@  <|@
f <@~|@floating>@ <|@
tid v2761 <|@
result [v70|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a641 
index: - 
=== Succesors ===
=== Usages ===
i2716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2716 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2761 
=== Succesors ===
next: i2717 
=== Usages ===
v1208 v1217 i1066 v1086 i1164 v1186 v1195 i1121 
=== Predecessor ===
i2715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2761 #next: i2717  <|@  <|@
f <@~|@floating>@ <|@
tid v2756 <|@
result [v71|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a730 
index: - 
=== Succesors ===
=== Usages ===
i2717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2717 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2756 
=== Succesors ===
next: i2718 
=== Usages ===
j2032 i246 v1142 v1159 v1061 
=== Predecessor ===
i2716 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2756 #next: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v2754 <|@
result [v71|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a730 
index: - 
=== Succesors ===
=== Usages ===
i2718 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2718 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2754 
=== Succesors ===
next: v433 
=== Usages ===
v217 v430 i1164 i243 i222 j2059 ?214 i215 v1153 i1158 
=== Predecessor ===
i2717 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2754 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1814 
y: i2718 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1814 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid j2032 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2717 
=== Succesors ===
=== Usages ===
v2789 v2785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2717  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2717 
y: i17 
=== Succesors ===
=== Usages ===
v1145 v1047 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2717 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a1037 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2714 
=== Succesors ===
=== Usages ===
j2031 j2043 j2055 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2714  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.4466454034221034
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v432 
=== Usages ===
=== Predecessor ===
i2718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v431 #falseSuccessor: v432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v70|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v71|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV [v71|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOV [v71|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4466454034221034 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i904 
y: i2716 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i904 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1086 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1642 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1086 #trueSuccessor: v1640 #falseSuccessor: v1642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1047 
=== Usages ===
v1094 
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1047  <|@  <|@
f <@~|@floating>@ <|@
tid i1991 <|@
result int[-274529|0xfffffffffffbcf9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274529
stableDimension: 0
stamp: i32 [-274529] ⇊00000000fffbcf9f ⇈00000000fffbcf9f
stampKind: i32
value: int[-274529|0xfffffffffffbcf9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1983 i1983 i1983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1046 
falseSuccessor: v1045 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1046 #falseSuccessor: v1045  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560359772940407372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1990 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1990  <|@  <|@
f <@*|@fixed>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274529|0xfffffffffffbcf9f]] destination: B45 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590249064547655201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1047 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid i1060 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2715 
y: i1814 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2715 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1060 
y: i2717 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1060 y: i2717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1064 
falseSuccessor: v1062 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1064 #falseSuccessor: v1062  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v77|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560287567443719012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2003 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2003  <|@  <|@
f <@*|@fixed>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1064 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274529|0xfffffffffffbcf9f]] destination: B47 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590193218108810298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1071 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid i1066 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2716 
y: i1814 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2716 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1066 
y: i598 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1066 y: i598  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1067 
=== Succesors ===
trueSuccessor: v1070 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1067 #trueSuccessor: v1070 #falseSuccessor: v1068  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v78|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560216084001997536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2002  <|@  <|@
f <@*|@fixed>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1070 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274529|0xfffffffffffbcf9f]] destination: B49 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590137930134353844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2031 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2031 <|@
result v85|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1037 
=== Succesors ===
next: j2036 
=== Usages ===
v2785 
=== Predecessor ===
v1068 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1037 #next: j2036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2036 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a641 
=== Succesors ===
next: v2042 
=== Usages ===
v2786 
=== Predecessor ===
j2031 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a641 #next: v2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2785 <|@
result [v85|QWORD[*] + v81|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2031 
index: j2032 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2031 index: j2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2786 <|@
result [v86|QWORD[*] + v67|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2036 
index: i598 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2036 index: i598  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i1814 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2785 v2786 j2041 
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
j2036 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2785 v2786 j2041 #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v2757 <|@
result [v70|QWORD[.] + v72|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i904 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1640 
address: v2757 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1102 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1640 address: v2757 value: i1489 stateAfter: - lastLocationAccess: - #next: v1102  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i1814 
y: i2717 
=== Succesors ===
=== Usages ===
j2044 v1099 v1116 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1814 y: i2717  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i17 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i904 
y: i4 
=== Succesors ===
=== Usages ===
?236 i249 v1122 j2049 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i904 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1099 
=== Succesors ===
trueSuccessor: v1101 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1099 #trueSuccessor: v1101 #falseSuccessor: v1100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v85|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v86|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v87|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v72|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v66|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560145315394693275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590083195039641955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2718 
y: i1814 
=== Succesors ===
=== Usages ===
j2053 i1121 i249 v1110 i1115 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2718 y: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i17 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1110 
=== Succesors ===
trueSuccessor: v1113 
falseSuccessor: v1111 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1110 #trueSuccessor: v1113 #falseSuccessor: v1111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v80|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v90|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560075254473462057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590029007295877185
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid i1115 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2715 
y: i243 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2715 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1115 
y: i246 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1115 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1119 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1119 #falseSuccessor: v1117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v77|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560005894161443151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1118 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589975361429550062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid i1121 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2716 
y: i243 
=== Succesors ===
=== Usages ===
v1122 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2716 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1121 
y: i234 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1121 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1125 
falseSuccessor: v1123 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1125 #falseSuccessor: v1123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v78|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559937227452544434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1124 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1124  <|@  <|@
f <@*|@fixed>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
v1125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569048122125276722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1105 v1112 v1118 v1124 
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1105 v1112 v1118 v1124 #next: v1127  <|@  <|@
tid ?787 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?787 
values: a730 a641 i234 i1814 - 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?787 values: a730 a641 i234 i1814 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?236 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288609 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v71|QWORD[.] v70|QWORD[.] v89|DWORD v66|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B146" 
    xhandlers
    flags 
    probability 4589922252021886211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2043 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2043 <|@
result v93|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1037 
=== Succesors ===
next: j2048 
=== Usages ===
v2787 
=== Predecessor ===
v1123 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1037 #next: j2048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2048 <|@
result v94|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a641 
=== Succesors ===
next: v2054 
=== Usages ===
v2788 
=== Predecessor ===
j2043 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a641 #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid j2044 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
v2787 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v2787 <|@
result [v93|QWORD[*] + v95|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2043 
index: j2044 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2043 index: j2044  <|@  <|@
f <@~|@floating>@ <|@
tid j2049 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i234 
=== Succesors ===
=== Usages ===
v2788 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v2788 <|@
result [v94|QWORD[*] + v96|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2048 
index: j2049 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2048 index: j2049  <|@  <|@
f <@~|@floating>@ <|@
tid j2053 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i243 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2787 v2788 j2053 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
j2048 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2787 v2788 j2053 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i234 
y: i243 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i234 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v2054 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v88|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v89|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v90|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v94|QWORD[*] + v96|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v89|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD, v71|QWORD[.]] destination: B59 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1988 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1988  <|@  <|@
f <@~|@floating>@ <|@
tid i1989 <|@
result int[-278299|0xfffffffffffbc0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -278299
stableDimension: 0
stamp: i32 [-278299] ⇊00000000fffbc0e5 ⇈00000000fffbc0e5
stampKind: i32
value: int[-278299|0xfffffffffffbc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278299|0xfffffffffffbc0e5]] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591653193801305682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1145 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1145  <|@  <|@
f <@~|@floating>@ <|@
tid i1993 <|@
result int[-299617|0xfffffffffffb6d9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299617
stableDimension: 0
stamp: i32 [-299617] ⇊00000000fffb6d9f ⇈00000000fffb6d9f
stampKind: i32
value: int[-299617|0xfffffffffffb6d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1983 i1983 i1983 i1983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1142 
=== Succesors ===
trueSuccessor: v1144 
falseSuccessor: v1143 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1142 #trueSuccessor: v1144 #falseSuccessor: v1143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 4562084852888391629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1992 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1992  <|@  <|@
f <@*|@fixed>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4591583306069924274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1157 
=== Usages ===
=== Predecessor ===
v1145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2718 
y: i17 
=== Succesors ===
=== Usages ===
v1157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2718 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v1156 
falseSuccessor: v1154 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v1156 #falseSuccessor: v1154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v80|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561995396592223427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2006 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B64 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591514117215856680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1163 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid i1158 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2715 
y: i2718 
=== Succesors ===
=== Usages ===
v1159 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2715 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1158 
y: i2717 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1158 y: i2717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1162 
falseSuccessor: v1160 
=== Usages ===
=== Predecessor ===
v1154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1162 #falseSuccessor: v1160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SUB (x: v77|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561906834859016906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2005 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2005  <|@  <|@
f <@*|@fixed>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4591445620250329762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1169 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid i1164 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2716 
y: i2718 
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2716 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1164 
y: i598 
=== Succesors ===
=== Usages ===
v1169 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1164 y: i598  <|@  <|@
f <@*|@fixed>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1165 
=== Succesors ===
trueSuccessor: v1168 
falseSuccessor: v1166 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1165 #trueSuccessor: v1168 #falseSuccessor: v1166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SUB (x: v78|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561819158743142451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2004 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2004  <|@  <|@
f <@*|@fixed>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B45" "B62" "B49" "B47" "B68" "B66" "B64" 
    successors 
    xhandlers
    flags 
    probability 4573736910224670211
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1983 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-398859 - -274529] ⇊00000000fff94085 ⇈00000000fffbefff
valueDescription: i32
=== Inputs ===
merge: v1980 
values: i1989 i1991 i1993 i1991 i1991 i1993 i1993 i1993 
=== Succesors ===
=== Usages ===
v1985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1980 values: i1989 i1991 i1993 i1991 i1991 i1993 i1993 i1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1988 v1990 v1992 v2002 v2003 v2004 v2005 v2006 
=== Succesors ===
next: v1985 
=== Usages ===
i1983 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1988 v1990 v1992 v2002 v2003 v2004 v2005 v2006 #next: v1985  <|@  <|@
f <@*|@fixed>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?586 
actionAndReason: i1983 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?586 actionAndReason: i1983 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B76" 
    xhandlers
    flags 
    probability 4591377808254458114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2055 
=== Usages ===
=== Predecessor ===
v1169 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2055 <|@
result v102|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1037 
=== Succesors ===
next: j2057 
=== Usages ===
v2789 
=== Predecessor ===
v1166 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1037 #next: j2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2057 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a641 
=== Succesors ===
next: v2060 
=== Usages ===
v2790 
=== Predecessor ===
j2055 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a641 #next: v2060  <|@  <|@
f <@~|@floating>@ <|@
tid v2789 <|@
result [v102|QWORD[*] + v81|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2055 
index: j2032 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2055 index: j2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2790 <|@
result [v103|QWORD[*] + v67|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2057 
index: i598 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2057 index: i598  <|@  <|@
f <@~|@floating>@ <|@
tid j2059 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2718 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2789 v2790 j2059 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
j2057 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2789 v2790 j2059 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i598 
y: i2718 
=== Succesors ===
=== Usages ===
?1785 i381 i223 v1181 i940 v2762 v1208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i598 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2718 
y: i1814 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2718 y: i1814  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.3347570742128223E-4
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v218 
falseSuccessor: v219 
=== Usages ===
=== Predecessor ===
v2060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v218 #falseSuccessor: v219  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v102|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v103|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v104|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v67|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B75" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 97]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i1814 
y: i2718 
=== Succesors ===
=== Usages ===
i223 ?1785 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1814 y: i2718  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 108]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i215 
y: i222 
=== Succesors ===
=== Usages ===
v1181 i228 v2759 i380 v1186 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i215 y: i222  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i223 
y: i2716 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i223 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1186 
=== Succesors ===
trueSuccessor: v1644 
falseSuccessor: v1646 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1186 #trueSuccessor: v1644 #falseSuccessor: v1646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v66|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = ADD (x: v105|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
v1193 
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i223 
y: i4 
=== Succesors ===
=== Usages ===
v1195 v2760 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i223 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i2716 
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i228 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1648 
falseSuccessor: v1650 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1648 #falseSuccessor: v1650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = INC v107|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B146" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
v1203 
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6f078acb
stamp: void
targetMethod: HotSpotMethod<Arrays.fill(char[], int, int, char)>
=== Inputs ===
arguments: a641 i215 i223 i224 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a641 i215 i223 i224  <|@  <|@
tid ?784 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?1785 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?1785 <|@
d <@d|@=== Debug Properties ===
bci: 111
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 919
stackSize: 0
=== Inputs ===
outerFrameState: ?784 
values: - a641 i215 i222 - 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?784 values: - a641 i215 i222 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
bci: 111
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.fill
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1181 
stateDuring: ?1785 
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1181 stateDuring: ?1785 #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid v2759 <|@
result [v70|QWORD[.] + v107|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i223 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1644 
address: v2759 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1644 address: v2759 value: i1489 stateAfter: - lastLocationAccess: - #next: v1203  <|@  <|@
f <@~|@floating>@ <|@
tid v2760 <|@
result [v70|QWORD[.] + v108|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i228 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1648 
address: v2760 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1648 address: v2760 value: i1492 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 128]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i223 
y: i305 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i223 y: i305  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v107|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - v70|QWORD[.] v105|DWORD v106|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v107|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v108|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA [v107|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD, v71|QWORD[.]] destination: B73 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1910 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1910  <|@  <|@
f <@~|@floating>@ <|@
tid i1911 <|@
result int[-306203|0xfffffffffffb53e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -306203
stableDimension: 0
stamp: i32 [-306203] ⇊00000000fffb53e5 ⇈00000000fffb53e5
stampKind: i32
value: int[-306203|0xfffffffffffb53e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-306203|0xfffffffffffb53e5]] destination: B74 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1905 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1905  <|@  <|@
f <@~|@floating>@ <|@
tid i1906 <|@
result int[-303899|0xfffffffffffb5ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303899
stableDimension: 0
stamp: i32 [-303899] ⇊00000000fffb5ce5 ⇈00000000fffb5ce5
stampKind: i32
value: int[-303899|0xfffffffffffb5ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303899|0xfffffffffffb5ce5]] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B80" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 137]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i215 
y: i2716 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i215 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1208 
=== Succesors ===
trueSuccessor: v1652 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v219 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1208 #trueSuccessor: v1652 #falseSuccessor: v1654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
v1215 
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i215 
y: i4 
=== Succesors ===
=== Usages ===
v1217 v2763 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i215 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i940 
y: i2716 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i940 y: i2716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1217 
=== Succesors ===
trueSuccessor: v1656 
falseSuccessor: v1658 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1217 #trueSuccessor: v1656 #falseSuccessor: v1658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1215 
=== Usages ===
v1224 
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid v2762 <|@
result [v70|QWORD[.] + v105|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i215 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1652 
address: v2762 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1652 address: v2762 value: i1489 stateAfter: - lastLocationAccess: - #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid v2763 <|@
result [v70|QWORD[.] + v110|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a641 
index: i940 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a641 index: i940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2763 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2763 value: i1492 stateAfter: - lastLocationAccess: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i215 
y: i305 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i215 y: i305  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v105|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v110|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA [v105|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v71|QWORD[.]] destination: B78 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1914 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1914  <|@  <|@
f <@~|@floating>@ <|@
tid i1915 <|@
result int[-311835|0xfffffffffffb3de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -311835
stableDimension: 0
stamp: i32 [-311835] ⇊00000000fffb3de5 ⇈00000000fffb3de5
stampKind: i32
value: int[-311835|0xfffffffffffb3de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-311835|0xfffffffffffb3de5]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1912 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1912  <|@  <|@
f <@~|@floating>@ <|@
tid i1913 <|@
result int[-309531|0xfffffffffffb46e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -309531
stableDimension: 0
stamp: i32 [-309531] ⇊00000000fffb46e5 ⇈00000000fffb46e5
stampKind: i32
value: int[-309531|0xfffffffffffb46e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-309531|0xfffffffffffb46e5]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" "B80" "B79" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1907 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-311835 - -303899] ⇊00000000fffb00e5 ⇈00000000fffb7fe5
valueDescription: i32
=== Inputs ===
merge: v1904 
values: i1906 i1911 i1913 i1915 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1904 values: i1906 i1911 i1913 i1915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1905 v1910 v1912 v1914 
=== Succesors ===
next: v1909 
=== Usages ===
i1907 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1905 v1910 v1912 v1914 #next: v1909  <|@  <|@
tid ?783 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a730 - 
=== Succesors ===
=== Usages ===
?214 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a730 -  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
bci: 85
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 916
stackSize: 0
=== Inputs ===
outerFrameState: ?783 
values: a730 a641 i598 i2718 - 
=== Succesors ===
=== Usages ===
v1909 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?783 values: a730 a641 i598 i2718 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?214 
actionAndReason: i1907 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1904 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?214 actionAndReason: i1907 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD v80|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:85, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560798874451295069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v74|QWORD, v73|QWORD, v75|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B39" "B82" "B5" "B33" 
    successors "B84" "B121" 
    xhandlers
    flags 
    probability 4605603690354152556
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i589 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v202 
values: i2713 i1814 i2702 i2711 
=== Succesors ===
=== Usages ===
i330 v260 v273 i278 i332 v596 i1577 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i2713 i1814 i2702 i2711  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v202 
values: i4 i598 i17 i17 
=== Succesors ===
=== Usages ===
?252 v1329 v1230 ?296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i4 i598 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i305 i605 i4 i4 
=== Succesors ===
=== Usages ===
v1238 v1335 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i305 i605 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i392 i611 i305 i305 
=== Succesors ===
=== Usages ===
?271 i278 v2782 ?466 i283 i287 ?303 v1584 ?1784 i317 v1246 v1587 v1368 v2794 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i392 i611 i305 i305  <|@  <|@
f <@~|@floating>@ <|@
tid a639 <|@
result v117|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v202 
values: a640 a641 a864 a1012 
=== Succesors ===
=== Usages ===
?338 ?252 j2066 ?1784 ?321 ?271 ?303 ?466 ?288 v2777 ?296 v2776 v2764 v2765 v2766 v2782 v2775 v2778 j2078 v2774 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a640 a641 a864 a1012  <|@  <|@
f <@~|@floating>@ <|@
tid a728 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v202 
values: a729 a730 a39 a131 
=== Succesors ===
=== Usages ===
?288 v2768 a733 a733 a733 a733 ?796 v2769 ?321 v2770 ?798 ?802 ?790 ?296 ?252 ?792 ?303 ?794 ?271 ?800 ?793 ?466 v2767 v2841 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a729 a730 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid j1793 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1791 j1807 j1780 j1780 
=== Succesors ===
=== Usages ===
j1581 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1791 j1807 j1780 j1780  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v202 
values: j969 j1812 j1799 j1799 
=== Succesors ===
=== Usages ===
v2766 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j969 j1812 j1799 j1799  <|@  <|@
f <@~|@floating>@ <|@
tid j1801 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1799 j1811 j950 j950 
=== Succesors ===
=== Usages ===
v2765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1799 j1811 j950 j950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 v631 v924 
=== Succesors ===
next: v257 
=== Usages ===
i589 i599 i603 i609 a639 a728 j1793 j1803 j1801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 v631 v924 #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
result [v118|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2722 i2727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2768 <|@
result [v118|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
a2721 a2725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2766 <|@
result [v117|QWORD[.] + v120|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a639 
index: j1803 
=== Succesors ===
=== Usages ===
v1244 v1338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: j1803  <|@  <|@
f <@~|@floating>@ <|@
tid v2765 <|@
result [v117|QWORD[.] + v121|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a639 
index: j1801 
=== Succesors ===
=== Usages ===
v1236 v1333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: j1801  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
result [v117|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a639 
index: - 
=== Succesors ===
=== Usages ===
i2719 i2728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i4 
=== Succesors ===
=== Usages ===
v326 v257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i589 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v256 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v255 #falseSuccessor: v256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|DWORD, v114|DWORD, v115|DWORD, v116|DWORD, v117|QWORD[.], v118|QWORD[.], v119|QWORD, v120|QWORD, v121|QWORD] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4605596209411378873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i259 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i589 y: i259  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B122" 
    xhandlers
    flags 
    probability 4575429410860470575
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v263  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B119" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2719 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2719  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?790 
values: a728 a639 i599 - - 
=== Succesors ===
=== Usages ===
v1921 i2719 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?790 values: a728 a639 i599 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2719 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?252 
guard: - 
address: v2764 
=== Succesors ===
next: v1667 
=== Usages ===
v1230 v1238 v1246 v1584 i1291 j1574 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?252 guard: - address: v2764 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i2719 
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i599 y: i2719  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1230 
=== Succesors ===
trueSuccessor: v1664 
falseSuccessor: v1666 
=== Usages ===
=== Predecessor ===
i2719 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1230 #trueSuccessor: v1664 #falseSuccessor: v1666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v122|DWORD = MOV [v117|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1671 
=== Usages ===
v1236 
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1671  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i603 
y: i2719 
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i603 y: i2719  <|@  <|@
f <@*|@fixed>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1238 
=== Succesors ===
trueSuccessor: v1668 
falseSuccessor: v1670 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1238 #trueSuccessor: v1668 #falseSuccessor: v1670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
v1244 
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1664 
address: v2765 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1664 address: v2765 value: i1492 stateAfter: - lastLocationAccess: - #next: v1244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1668 
address: v2766 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1668 address: v2766 value: i1489 stateAfter: - lastLocationAccess: - #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i589 
y: i17 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i589 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v121|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v120|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B106" 
    xhandlers
    flags 
    probability 4604199603166572522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B89 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B97" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2675 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2675  <|@  <|@
f <@~|@floating>@ <|@
tid i1577 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i589 
=== Succesors ===
=== Usages ===
j1578 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i589  <|@  <|@
f <@~|@floating>@ <|@
tid j1578 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1577 
=== Succesors ===
=== Usages ===
j1580 j2502 v2254 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1577  <|@  <|@
f <@~|@floating>@ <|@
tid j1580 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1578 
y: j1579 
=== Succesors ===
=== Usages ===
j1581 v2505 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1578 y: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 243]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i609 
y: i589 
=== Succesors ===
=== Usages ===
v1587 v1246 ?1784 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i609 y: i589  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i278 
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i609 y: i278  <|@  <|@
f <@*|@fixed>@ <|@
tid v2675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1587 
=== Succesors ===
trueSuccessor: v2674 
falseSuccessor: v2671 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1587 #trueSuccessor: v2674 #falseSuccessor: v2671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = NEG v113|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVSXD v123|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = DEC v124|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SUB (x: v116|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v126|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2683 
=== Usages ===
=== Predecessor ===
v2675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2683  <|@  <|@
f <@~|@floating>@ <|@
tid j1581 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j1580 
y: j1793 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1580 y: j1793  <|@  <|@
f <@~|@floating>@ <|@
tid j1574 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2719 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2719  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1581 
y: j1574 
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1581 y: j1574  <|@  <|@
f <@*|@fixed>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1583 
=== Succesors ===
trueSuccessor: v2682 
falseSuccessor: v2679 
=== Usages ===
=== Predecessor ===
v2674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1583 #trueSuccessor: v2682 #falseSuccessor: v2679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = ADD (x: v125|QWORD, y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOV v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2681 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i2719 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i609 y: i2719  <|@  <|@
f <@*|@fixed>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1584 
=== Succesors ===
trueSuccessor: v2672 
falseSuccessor: v2680 
=== Usages ===
=== Predecessor ===
v2682 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1584 #trueSuccessor: v2672 #falseSuccessor: v2680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2670 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2670  <|@  <|@
f <@*|@fixed>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2668 
=== Predecessor ===
v2672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2678 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2678  <|@  <|@
f <@*|@fixed>@ <|@
tid v2678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
v2680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2677 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2677  <|@  <|@
f <@*|@fixed>@ <|@
tid v2677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2676 
=== Predecessor ===
v2679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2677 v2678 
=== Succesors ===
next: v1673 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2677 v2678 #next: v1673  <|@  <|@
tid ?792 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?271 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?792 
values: a728 a639 i609 - - 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?792 values: a728 a639 i609 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1249
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[d.a@1565248032]
stamp: void
=== Inputs ===
stateBefore: ?271 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2676 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1565248032] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -319771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v129|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v118|QWORD[.] v117|QWORD[.] v116|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2669 
=== Usages ===
=== Predecessor ===
v2675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2669  <|@  <|@
f <@*|@fixed>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2668 
=== Predecessor ===
v2671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2669 v2670 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2669 v2670 #next: v450  <|@  <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@720dc4cf
stamp: void
targetMethod: HotSpotMethod<Arrays.rangeCheck(int, int, int)>
=== Inputs ===
arguments: i2719 i609 i278 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i2719 i609 i278  <|@  <|@
tid ?793 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?466 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: ?793 
values: a728 a639 i609 - - 
=== Succesors ===
=== Usages ===
?1784 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?793 values: a728 a639 i609 - -  <|@  <|@
tid ?1784 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Arrays.fill(char[], int, int, char)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 2973
stackSize: 0
=== Inputs ===
outerFrameState: ?466 
values: a639 i609 i278 i224 - 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?466 values: a639 i609 i278 i224 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.rangeCheck
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1246 
stateDuring: ?1784 
=== Succesors ===
next: v2453 
=== Usages ===
=== Predecessor ===
v2668 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1246 stateDuring: ?1784 #next: v2453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i2720 
=== Usages ===
j2455 
=== Predecessor ===
v450 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i2720  <|@  <|@
f <@~|@floating>@ <|@
tid v2767 <|@
result [v118|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2720 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2720 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 251]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2767 
=== Succesors ===
next: v2257 
=== Usages ===
i283 
=== Predecessor ===
v2453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2767 #next: v2257  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i609 
y: i2720 
=== Succesors ===
=== Usages ===
i287 i287 i287 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i609 y: i2720  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1578 
y: j2134 
=== Succesors ===
=== Usages ===
v2257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1578 y: j2134  <|@  <|@
f <@*|@fixed>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2254 
=== Succesors ===
trueSuccessor: v2255 
falseSuccessor: v2256 
=== Usages ===
=== Predecessor ===
i2720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2254 #trueSuccessor: v2255 #falseSuccessor: v2256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v122|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v116|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v126|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: v117|QWORD[.] v116|DWORD v126|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: v118|QWORD[.] v117|QWORD[.] v116|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = SUB (x: v116|DWORD, ~y: [v118|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v124|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B106" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v2257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v2255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|DWORD] destination: B99 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v2257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2305  <|@  <|@
f <@~|@floating>@ <|@
tid v2782 <|@
result [v117|QWORD[.] + v116|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i609 
=== Succesors ===
=== Usages ===
j2455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i609  <|@  <|@
f <@~|@floating>@ <|@
tid j2455 <|@
result v131|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2453 
address: v2782 
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2453 address: v2782  <|@  <|@
f <@~|@floating>@ <|@
tid v2820 <|@
result [v131|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2455 
index: - 
=== Succesors ===
=== Usages ===
v2631 v2633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2455 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2502 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1578 
y: j2501 
=== Succesors ===
=== Usages ===
v2503 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1578 y: j2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2503 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2502 
y: j1755 
=== Succesors ===
=== Usages ===
v2305 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2502 y: j1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2503 
=== Succesors ===
trueSuccessor: v2304 
falseSuccessor: v2303 
=== Usages ===
=== Predecessor ===
v2256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2503 #trueSuccessor: v2304 #falseSuccessor: v2303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = LEA [v117|QWORD[.] + v116|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = LEA [v124|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|QWORD, y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2308 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2308  <|@  <|@
f <@*|@fixed>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2288 
=== Predecessor ===
v2304 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2633 
=== Usages ===
=== Predecessor ===
v2305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2633  <|@  <|@
f <@~|@floating>@ <|@
tid v2660 <|@
result v133|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2820 
value: v2660 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2287 
=== Usages ===
=== Predecessor ===
v2303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2820 value: v2660 stateAfter: - lastLocationAccess: - #next: v2287  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2288 
=== Predecessor ===
v2633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v131|QWORD[.]], input: v133|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2456 <|@
result v134|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v2288 
values: j1780 j1755 
=== Succesors ===
=== Usages ===
v2505 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2288 values: j1780 j1755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2287 v2308 
=== Succesors ===
next: v2311 
=== Usages ===
j2456 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2287 v2308 #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1580 
y: j2456 
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1580 y: j2456  <|@  <|@
f <@*|@fixed>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2505 
=== Succesors ===
trueSuccessor: v2310 
falseSuccessor: v2309 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2505 #trueSuccessor: v2310 #falseSuccessor: v2309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2620 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2620  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v2310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|DWORD] destination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2631 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2820 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2621 
=== Usages ===
=== Predecessor ===
v2309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2820 value: i1492 stateAfter: - lastLocationAccess: - #next: v2621  <|@  <|@
f <@*|@fixed>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
v2631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v131|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|DWORD] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B89" "B99" "B104" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i287 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v285 
values: i609 i283 i283 i283 
=== Succesors ===
=== Usages ===
?288 j2067 v1292 i295 v1273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v285 values: i609 i283 i283 i283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v284 v286 v2620 v2621 
=== Succesors ===
next: a2721 
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v284 v286 v2620 v2621 #next: a2721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2721 <|@
result v136|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
=== Succesors ===
next: v2839 
=== Usages ===
a1260 v2839 v2771 
=== Predecessor ===
v285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2768 #next: v2839  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?794 
values: a728 a639 i287 - - 
=== Succesors ===
=== Usages ===
v1931 v2839 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?794 values: a728 a639 i287 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?288 
object: a2721 
=== Succesors ===
next: i2722 
=== Usages ===
=== Predecessor ===
a2721 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?288 object: a2721 #next: i2722  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2722 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 261]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
=== Succesors ===
next: v1272 
=== Usages ===
j2062 v1269 v1286 
=== Predecessor ===
v2839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2769 #next: v1272  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2722 
y: i17 
=== Succesors ===
=== Usages ===
v1272 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2722 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i1933 <|@
result int[-332129|0xfffffffffffaee9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332129
stableDimension: 0
stamp: i32 [-332129] ⇊00000000fffaee9f ⇈00000000fffaee9f
stampKind: i32
value: int[-332129|0xfffffffffffaee9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1929 i1929 i1929 i1929 i1929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1269 
=== Succesors ===
trueSuccessor: v1271 
falseSuccessor: v1270 
=== Usages ===
=== Predecessor ===
i2722 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1269 #trueSuccessor: v1271 #falseSuccessor: v1270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD[.] = MOV [v118|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v118|QWORD[.] v117|QWORD[.] v135|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v136|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOV [v118|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v137|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575859158351825079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B107 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4605454096428188788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i17 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i287 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1273 
=== Succesors ===
trueSuccessor: v1278 
falseSuccessor: v1274 
=== Usages ===
=== Predecessor ===
v1270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1273 #trueSuccessor: v1278 #falseSuccessor: v1274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v135|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575812102986117362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2010 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2010  <|@  <|@
f <@*|@fixed>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B109 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4605381307659359664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2723 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2723  <|@  <|@
f <@~|@floating>@ <|@
tid v2770 <|@
result [v118|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2723 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 267]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2770 
=== Succesors ===
next: v1284 
=== Usages ===
j2071 i295 v1280 i1285 i1291 
=== Predecessor ===
v1274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2770 #next: v1284  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2723 
y: i17 
=== Succesors ===
=== Usages ===
v1284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2723 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1280 
=== Succesors ===
trueSuccessor: v1283 
falseSuccessor: v1281 
=== Usages ===
=== Predecessor ===
i2723 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1280 #trueSuccessor: v1283 #falseSuccessor: v1281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v138|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575765518174066723
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2009 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2009  <|@  <|@
f <@*|@fixed>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B111 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4605309246778218831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2724 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2724  <|@  <|@
f <@~|@floating>@ <|@
tid v2771 <|@
result [v136|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2721 
=== Succesors ===
=== Usages ===
i2724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2724 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2771 
=== Succesors ===
next: v1290 
=== Usages ===
i1285 
=== Predecessor ===
v1281 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2771 #next: v1290  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2724 
y: i2723 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2724 y: i2723  <|@  <|@
f <@~|@floating>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1285 
y: i2722 
=== Succesors ===
=== Usages ===
v1290 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1285 y: i2722  <|@  <|@
f <@*|@fixed>@ <|@
tid v1290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1286 
=== Succesors ===
trueSuccessor: v1289 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
i2724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1286 #trueSuccessor: v1289 #falseSuccessor: v1287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOV [v136|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = SUB (x: v139|DWORD, ~y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575719399210136590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2008  <|@  <|@
f <@*|@fixed>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4605237906505889407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1296 
=== Usages ===
=== Predecessor ===
v1290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1296  <|@  <|@
f <@~|@floating>@ <|@
tid i1291 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2719 
y: i2723 
=== Succesors ===
=== Usages ===
v1292 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2719 y: i2723  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1291 
y: i287 
=== Succesors ===
=== Usages ===
v1296 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1291 y: i287  <|@  <|@
f <@*|@fixed>@ <|@
tid v1296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v1295 
falseSuccessor: v1293 
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v1295 #falseSuccessor: v1293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SUB (x: v122|DWORD, ~y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v135|DWORD, y: v141|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575673741435845758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2007 
=== Usages ===
=== Predecessor ===
v1296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2007  <|@  <|@
f <@*|@fixed>@ <|@
tid v2007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
v1295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B107" "B115" "B113" "B111" "B109" 
    successors 
    xhandlers
    flags 
    probability 4585926273848975510
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1929 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-332811 - -332129] ⇊00000000fffaea95 ⇈00000000fffaefff
valueDescription: i32
=== Inputs ===
merge: v1926 
values: i1933 i1933 i1933 i1933 i1933 
=== Succesors ===
=== Usages ===
v1931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1926 values: i1933 i1933 i1933 i1933 i1933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1932 v2007 v2008 v2009 v2010 
=== Succesors ===
next: v1931 
=== Usages ===
i1929 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1932 v2007 v2008 v2009 v2010 #next: v1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?288 
actionAndReason: i1929 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?288 actionAndReason: i1929 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v118|QWORD[.] v117|QWORD[.] v135|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B146" 
    xhandlers
    flags 
    probability 4605167279636283277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2061 
=== Usages ===
=== Predecessor ===
v1296 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2061  <|@  <|@
f <@~|@floating>@ <|@
tid a1260 <|@
result v143|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2721 
=== Succesors ===
=== Usages ===
j2061 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2061 <|@
result v144|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1260 
=== Succesors ===
next: j2066 
=== Usages ===
v2791 
=== Predecessor ===
v1293 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1260 #next: j2066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2066 <|@
result v145|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a639 
=== Succesors ===
next: v2072 
=== Usages ===
v2792 
=== Predecessor ===
j2061 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a639 #next: v2072  <|@  <|@
f <@~|@floating>@ <|@
tid j2062 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2722 
=== Succesors ===
=== Usages ===
v2791 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2722  <|@  <|@
f <@~|@floating>@ <|@
tid v2791 <|@
result [v144|QWORD[*] + v146|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2061 
index: j2062 
=== Succesors ===
=== Usages ===
v2072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2061 index: j2062  <|@  <|@
f <@~|@floating>@ <|@
tid j2067 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i287 
=== Succesors ===
=== Usages ===
v2792 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i287  <|@  <|@
f <@~|@floating>@ <|@
tid v2792 <|@
result [v145|QWORD[*] + v147|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2066 
index: j2067 
=== Succesors ===
=== Usages ===
v2072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2066 index: j2067  <|@  <|@
f <@~|@floating>@ <|@
tid j2071 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2723 
=== Succesors ===
=== Usages ===
v2072 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2791 v2792 j2071 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
j2066 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2791 v2792 j2071 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i287 
y: i2723 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i287 y: i2723  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v2072 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = UNCOMPRESSPOINTER (input: v136|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = MOVE v143|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = MOVE v117|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVSXD v137|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVSXD v135|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVSXD v138|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v144|QWORD[*] + v146|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v145|QWORD[*] + v147|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v148|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v135|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v149|DWORD, v118|QWORD[.]] destination: B117 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@~|@floating>@ <|@
tid i1925 <|@
result int[-317211|0xfffffffffffb28e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317211
stableDimension: 0
stamp: i32 [-317211] ⇊00000000fffb28e5 ⇈00000000fffb28e5
stampKind: i32
value: int[-317211|0xfffffffffffb28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
v1670 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317211|0xfffffffffffb28e5]] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1922  <|@  <|@
f <@~|@floating>@ <|@
tid i1923 <|@
result int[-315163|0xfffffffffffb30e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -315163
stableDimension: 0
stamp: i32 [-315163] ⇊00000000fffb30e5 ⇈00000000fffb30e5
stampKind: i32
value: int[-315163|0xfffffffffffb30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
v1666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315163|0xfffffffffffb30e5]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1919 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317211 - -313867] ⇊00000000fffb20e5 ⇈00000000fffb3df5
valueDescription: i32
=== Inputs ===
merge: v1916 
values: i1923 i1925 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1916 values: i1923 i1925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1922 v1924 
=== Succesors ===
next: v1921 
=== Usages ===
i1919 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1922 v1924 #next: v1921  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?252 
actionAndReason: i1919 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1916 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?252 actionAndReason: i1919 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B122" 
    xhandlers
    flags 
    probability 4560799708671823202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B85" 
    successors "B123" "B213" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v263 
=== Succesors ===
next: a2725 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v263 #next: a2725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2725 <|@
result v151|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
=== Succesors ===
next: i2726 
=== Usages ===
a1309 v2772 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2768 #next: i2726  <|@  <|@
tid ?796 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?796 
values: a728 a639 i599 - - 
=== Succesors ===
=== Usages ===
v1939 i2726 i2728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?796 values: a728 a639 i599 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2772 <|@
result [v151|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2725 
=== Succesors ===
=== Usages ===
i2726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2726 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?296 
guard: - 
address: v2772 
=== Succesors ===
next: i2727 
=== Usages ===
i1361 v1316 
=== Predecessor ===
a2725 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?296 guard: - address: v2772 #next: i2727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2727 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 293]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
=== Succesors ===
next: v1687 
=== Usages ===
v2773 i310 v1316 
=== Predecessor ===
i2726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2769 #next: v1687  <|@  <|@
f <@~|@floating>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2727 
y: i2726 
=== Succesors ===
=== Usages ===
v1687 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2727 y: i2726  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1316 
=== Succesors ===
trueSuccessor: v1684 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
i2727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1316 #trueSuccessor: v1684 #falseSuccessor: v1686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD[.] = MOV [v118|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v152|DWORD = MOV [v151|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOV [v118|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|DWORD, y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B212" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2728 
=== Usages ===
i2730 
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2728 <|@
result v154|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?296 
guard: - 
address: v2764 
=== Succesors ===
next: v1695 
=== Usages ===
i1367 v1329 v1335 v1385 v1455 v1445 v1435 v1425 
=== Predecessor ===
v1684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?296 guard: - address: v2764 #next: v1695  <|@  <|@
f <@~|@floating>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i2728 
=== Succesors ===
=== Usages ===
v1695 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i599 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1329 
=== Succesors ===
trueSuccessor: v1692 
falseSuccessor: v1694 
=== Usages ===
=== Predecessor ===
i2728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1329 #trueSuccessor: v1692 #falseSuccessor: v1694  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v154|DWORD = MOV [v117|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B211" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1699 
=== Usages ===
v1333 
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1699  <|@  <|@
f <@~|@floating>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i603 
y: i2728 
=== Succesors ===
=== Usages ===
v1699 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i603 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1335 
=== Succesors ===
trueSuccessor: v1696 
falseSuccessor: v1698 
=== Usages ===
=== Predecessor ===
v1692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1335 #trueSuccessor: v1696 #falseSuccessor: v1698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2729 
=== Usages ===
v1338 
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2729  <|@  <|@
f <@~|@floating>@ <|@
tid v2841 <|@
result [v118|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a728 
index: - 
=== Succesors ===
=== Usages ===
i2729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a728 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2729 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 307]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2841 
=== Succesors ===
next: v1703 
=== Usages ===
v306 i316 
=== Predecessor ===
v1696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2841 #next: v1703  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2729 
y: i305 
=== Succesors ===
=== Usages ===
v1703 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2729 y: i305  <|@  <|@
f <@*|@fixed>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1702 
falseSuccessor: v1700 
=== Usages ===
=== Predecessor ===
i2729 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1702 #falseSuccessor: v1700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid i1945 <|@
result int[-343059|0xfffffffffffac3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -343059
stableDimension: 0
stamp: i32 [-343059] ⇊00000000fffac3ed ⇈00000000fffac3ed
stampKind: i32
value: int[-343059|0xfffffffffffac3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-343059|0xfffffffffffac3ed]] destination: B126 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B210" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
result v156|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2729 
y: i153 
=== Succesors ===
=== Usages ===
i317 j2080 i1367 i1361 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2729 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i316 
y: i609 
=== Succesors ===
=== Usages ===
i318 v2774 i390 v1385 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i316 y: i609  <|@  <|@
f <@~|@floating>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i317 
y: i2728 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i317 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1385 
=== Succesors ===
trueSuccessor: v1704 
falseSuccessor: v1706 
=== Usages ===
=== Predecessor ===
v1700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1385 #trueSuccessor: v1704 #falseSuccessor: v1706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = DEC v155|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = ADD (x: v156|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2730 
=== Usages ===
v1393 
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2730  <|@  <|@
f <@~|@floating>@ <|@
tid a1309 <|@
result v158|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2725 
=== Succesors ===
=== Usages ===
j2073 v2773 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2725  <|@  <|@
f <@~|@floating>@ <|@
tid v2773 <|@
result [v158|QWORD[.] + v153|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1309 
index: i2727 
=== Succesors ===
=== Usages ===
i2730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1309 index: i2727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2730 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1684 
address: v2773 
=== Succesors ===
next: v1333 
=== Usages ===
v1333 
=== Predecessor ===
v1704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1684 address: v2773 #next: v1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1692 
address: v2765 
value: i2730 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1338 
=== Usages ===
=== Predecessor ===
i2730 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1692 address: v2765 value: i2730 stateAfter: - lastLocationAccess: - #next: v1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1696 
address: v2766 
value: i1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1696 address: v2766 value: i1489 stateAfter: - lastLocationAccess: - #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i1361 <|@
result v160|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2726 
y: i316 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2726 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2727 
y: i4 
=== Succesors ===
=== Usages ===
j2074 v1362 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2727 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1361 
y: i310 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1361 y: i310  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1362 
=== Succesors ===
trueSuccessor: v1365 
falseSuccessor: v1363 
=== Usages ===
=== Predecessor ===
v1338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1362 #trueSuccessor: v1365 #falseSuccessor: v1363  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = UNCOMPRESSPOINTER (input: v151|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVSX [v158|QWORD[.] + v153|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v121|QWORD * 1], y: v159|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v120|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = SUB (x: v152|DWORD, ~y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = INC v153|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|DWORD, y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
v1365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B133" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid i1367 <|@
result v162|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2728 
y: i316 
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2728 y: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1367 
y: i609 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1367 y: i609  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1368 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1368 #trueSuccessor: v1371 #falseSuccessor: v1369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = SUB (x: v154|DWORD, ~y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|DWORD, y: v162|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1352 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1364 v1370 
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1364 v1370 #next: v1373  <|@  <|@
tid ?798 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?303 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?303 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?798 
values: a728 a639 i609 - - 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?798 values: a728 a639 i609 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?303 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1352 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -351585 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v118|QWORD[.] v117|QWORD[.] v116|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" "B137" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2073 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2073 <|@
result v163|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1309 
=== Succesors ===
next: j2078 
=== Usages ===
v2793 
=== Predecessor ===
v1369 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1309 #next: j2078  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2078 <|@
result v164|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a639 
=== Succesors ===
next: v2081 
=== Usages ===
v2794 
=== Predecessor ===
j2073 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a639 #next: v2081  <|@  <|@
f <@~|@floating>@ <|@
tid j2074 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i310 
=== Succesors ===
=== Usages ===
v2793 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i310  <|@  <|@
f <@~|@floating>@ <|@
tid v2793 <|@
result [v163|QWORD[*] + v165|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2073 
index: j2074 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2073 index: j2074  <|@  <|@
f <@~|@floating>@ <|@
tid v2794 <|@
result [v164|QWORD[*] + v116|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2078 
index: i609 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: i609  <|@  <|@
f <@~|@floating>@ <|@
tid j2080 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i316 
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2793 v2794 j2080 
=== Succesors ===
next: v1393 
=== Usages ===
=== Predecessor ===
j2078 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2793 v2794 j2080 #next: v1393  <|@  <|@
f <@~|@floating>@ <|@
tid v2774 <|@
result [v117|QWORD[.] + v157|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i317 
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i317  <|@  <|@
f <@~|@floating>@ <|@
tid i1501 <|@
result short[69|0x45] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1704 
address: v2774 
value: i1501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v2081 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1704 address: v2774 value: i1501 stateAfter: - lastLocationAccess: - #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i317 
y: i4 
=== Succesors ===
=== Usages ===
?321 v2778 i336 v1455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i317 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v1393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = MOVE v158|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[*] = MOVE v117|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = MOVSXD v161|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = MOVSXD v156|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v163|QWORD[*] + v165|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v164|QWORD[*] + v116|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v166|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v157|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = INC v157|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i2728 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i318 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1455 
=== Succesors ===
trueSuccessor: v1708 
falseSuccessor: v1710 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1455 #trueSuccessor: v1708 #falseSuccessor: v1710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1462 
=== Usages ===
v1462 
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid v2778 <|@
result [v117|QWORD[.] + v167|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i318 
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1708 
address: v2778 
value: i1485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1708 address: v2778 value: i1485 stateAfter: - lastLocationAccess: - #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
result v168|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i317 
y: i305 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i317 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i4 
y: i589 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4 y: i589  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v1462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v167|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = LEA [v157|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = SUB (x: v169|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|DWORD, v170|DWORD] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1709 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1709  <|@  <|@
tid ?800 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?321 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?800 
values: a728 a639 i318 - - 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?800 values: a728 a639 i318 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1456
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?321 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1710 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -372763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v118|QWORD[.] v117|QWORD[.] v167|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i589 
y: i153 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i589 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = DEC v113|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|DWORD, v171|DWORD] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B139" "B208" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i336 <|@
result v172|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i390 i318 
=== Succesors ===
=== Usages ===
?338 i344 i393 v1425 v2775 i391 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i390 i318  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i330 i332 
=== Succesors ===
=== Usages ===
?338 v340 i345 i498 v351 i499 i474 i471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v334 values: i330 i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v335 
=== Succesors ===
next: v1715 
=== Usages ===
i336 i337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v335 #next: v1715  <|@  <|@
f <@~|@floating>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i336 
y: i2728 
=== Succesors ===
=== Usages ===
v1715 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i336 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1425 
=== Succesors ===
trueSuccessor: v1712 
falseSuccessor: v1714 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1425 #trueSuccessor: v1712 #falseSuccessor: v1714  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B138 -> B139 falseDestination: B138 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
v1413 v1403 v1433 
=== Predecessor ===
v1715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i336 
y: i4 
=== Succesors ===
=== Usages ===
i397 v2776 v1435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2775 <|@
result [v117|QWORD[.] + v172|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i336 
=== Succesors ===
=== Usages ===
v1433 v1413 v1403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i336  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i339 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i337 y: i339  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
v1712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = INC v172|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1403 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1403  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i337 
y: i224 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i337 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i345 
=== Succesors ===
=== Usages ===
v1403 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1403 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1712 
address: v2775 
value: i346 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1712 address: v2775 value: i346 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = LEA [v173|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v172|DWORD * 2 + 16], y: v175|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|DWORD, v118|QWORD[.]] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B207" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1719 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i344 
y: i2728 
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i344 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1435 
=== Succesors ===
trueSuccessor: v1716 
falseSuccessor: v1718 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1435 #trueSuccessor: v1716 #falseSuccessor: v1718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
v1443 v1423 
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid i391 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i336 
y: i305 
=== Succesors ===
=== Usages ===
v1445 i397 v2777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid v2776 <|@
result [v117|QWORD[.] + v174|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i344 
=== Succesors ===
=== Usages ===
v1443 v1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i344  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i350 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i337 y: i350  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
result int[1717986919|0x66666667] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i498 i500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v1716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v352 #falseSuccessor: v353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = LEA [v172|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1413 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1413  <|@  <|@
f <@~|@floating>@ <|@
tid i498 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i337 
y: i480 
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i337 y: i480  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i498 
y: i305 
=== Succesors ===
=== Usages ===
i468 i2836 i469 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i498 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid i2836 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i482 
y: i224 
=== Succesors ===
=== Usages ===
i357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i482 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2836 
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1413 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1712 
address: v2775 
value: i357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1712 address: v2775 value: i357 stateAfter: - lastLocationAccess: - #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
result v181|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i482 
y: i392 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i482 y: i392  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result v182|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i482 
y: i4 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i482 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
result v183|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i468 
y: i469 
=== Succesors ===
=== Usages ===
i471 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i468 y: i469  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i337 
y: i470 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i471 
y: i224 
=== Succesors ===
=== Usages ===
i1422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i471 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i1422 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i362 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1423 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1716 
address: v2776 
value: i1422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v1413 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1716 address: v2776 value: i1422 stateAfter: - lastLocationAccess: - #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v173|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = SAR v178|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = LEA [v179|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v172|DWORD * 2 + 16], y: v180|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = SHL v179|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = SHL v179|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = ADD (x: v181|DWORD, y: v182|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = SUB (x: v173|DWORD, ~y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = LEA [v184|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v174|DWORD * 2 + 16], y: v185|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v176|DWORD, v118|QWORD[.]] destination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B206" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i2728 
=== Succesors ===
=== Usages ===
v1723 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i391 y: i2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1445 
=== Succesors ===
trueSuccessor: v1720 
falseSuccessor: v1722 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1445 #trueSuccessor: v1720 #falseSuccessor: v1722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B144 -> B145 falseDestination: B144 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1433 
=== Usages ===
v1453 
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1433  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i499 <|@
result v187|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i337 
y: i486 
=== Succesors ===
=== Usages ===
i489 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i337 y: i486  <|@  <|@
f <@~|@floating>@ <|@
tid i488 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
result v188|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i499 
y: i488 
=== Succesors ===
=== Usages ===
i473 i2837 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i499 y: i488  <|@  <|@
f <@~|@floating>@ <|@
tid i2837 <|@
result v189|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i489 
y: i224 
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i489 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2837 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1433 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1712 
address: v2775 
value: i367 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1443 
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1712 address: v2775 value: i367 stateAfter: - lastLocationAccess: - #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i489 
y: i350 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i489 y: i350  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i337 
y: i473 
=== Succesors ===
=== Usages ===
i493 i500 i479 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i337 y: i473  <|@  <|@
f <@~|@floating>@ <|@
tid i500 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i474 
y: i480 
=== Succesors ===
=== Usages ===
i492 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i474 y: i480  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
result v194|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i500 
y: i305 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i500 y: i305  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i493 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i474 
y: i483 
=== Succesors ===
=== Usages ===
i494 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i474 y: i483  <|@  <|@
f <@~|@floating>@ <|@
tid i494 <|@
result v196|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i492 
y: i493 
=== Succesors ===
=== Usages ===
i373 i476 i477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i492 y: i493  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result v197|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i494 
y: i224 
=== Succesors ===
=== Usages ===
i1442 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i494 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i1442 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i373 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1443 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1716 
address: v2776 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1716 address: v2776 value: i1442 stateAfter: - lastLocationAccess: - #next: v1453  <|@  <|@
f <@~|@floating>@ <|@
tid v2777 <|@
result [v117|QWORD[.] + v176|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a639 
index: i391 
=== Succesors ===
=== Usages ===
v1453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a639 index: i391  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
result v198|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i494 
y: i392 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i494 y: i392  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i494 
y: i4 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i494 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v200|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i476 
y: i477 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i476 y: i477  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
result v201|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i474 
y: i478 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i474 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v202|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i479 
y: i224 
=== Succesors ===
=== Usages ===
i1452 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i479 y: i224  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i377 
=== Succesors ===
=== Usages ===
v1453 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1453 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1720 
address: v2777 
value: i1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1720 address: v2777 value: i1452 stateAfter: - lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
result v203|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i336 
y: i392 
=== Succesors ===
=== Usages ===
i397 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i392  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v173|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = SAR v187|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = LEA [v188|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v172|DWORD * 2 + 16], y: v189|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = IMUL v188|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = SUB (x: v173|DWORD, ~y: v190|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v191|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = SAR v193|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = SHR v191|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = ADD (x: v194|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = LEA [v196|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v174|DWORD * 2 + 16], y: v197|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = SHL v196|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SHL v196|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD = ADD (x: v198|DWORD, y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SUB (x: v191|DWORD, ~y: v200|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = LEA [v201|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v176|DWORD * 2 + 16], y: v202|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = LEA [v172|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v203|DWORD, v118|QWORD[.]] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B73" "B117" "B140" "B143" "B145" "B78" "B59" 
    successors "B147" "B153" 
    xhandlers
    flags 
    probability 4606738238130731344
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i397 <|@
result v204|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v395 
values: i380 i295 i344 i391 i393 i381 i249 
=== Succesors ===
=== Usages ===
?141 j2315 v404 v408 i417 a2159 v1834 i1856 v2182 i2135 v2144 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: i380 i295 i344 i391 i393 i381 i249  <|@  <|@
f <@~|@floating>@ <|@
tid a733 <|@
result v205|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v395 
values: a730 a728 a728 a728 a728 a730 a730 
=== Succesors ===
=== Usages ===
v2779 ?141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v395 values: a730 a728 a728 a728 a728 a730 a730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v396 v398 v399 v400 v401 v402 v403 
=== Succesors ===
next: a2731 
=== Usages ===
i397 a733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v396 v398 v399 v400 v401 v402 v403 #next: a2731  <|@  <|@
f <@~|@floating>@ <|@
tid v2779 <|@
result [v205|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a733 
index: - 
=== Succesors ===
=== Usages ===
a2731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a733 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2731 <|@
result v206|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 14]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2779 
=== Succesors ===
next: v2838 
=== Usages ===
v2781 v2838 v2780 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2779 #next: v2838  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: ?148 
values: a733 - i397 
=== Succesors ===
=== Usages ===
v1897 a2159 a2205 a2097 v2838 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a733 - i397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
object: a2731 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
a2731 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?141 object: a2731 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i397 
y: i4 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i397 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2241 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 v2229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2116 <|@
result v207|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2221 <|@
result v207|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2116 
=== Succesors ===
=== Usages ===
v2810 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2810 <|@
result [v207|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2221 
index: - 
=== Succesors ===
=== Usages ===
j2225 j2122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2221 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2083 <|@
result v208|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2097 a2205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j955 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2245 j2238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
v2838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v405 #falseSuccessor: v406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v204|DWORD, v205|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|DWORD[.] = MOV [v205|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v206|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v208|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i397 
y: i17 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i397 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v1730 
falseSuccessor: v1728 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v1730 #falseSuccessor: v1728  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v204|DWORD, y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1898 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1898  <|@  <|@
f <@~|@floating>@ <|@
tid i1899 <|@
result int[-375315|0xfffffffffffa45ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -375315
stableDimension: 0
stamp: i32 [-375315] ⇊00000000fffa45ed ⇈00000000fffa45ed
stampKind: i32
value: int[-375315|0xfffffffffffa45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
v1730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-375315|0xfffffffffffa45ed]] destination: B148 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2085 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2085 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2104 
=== Usages ===
v2795 v2796 
=== Predecessor ===
v1728 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2104  <|@  <|@
f <@~|@floating>@ <|@
tid v2795 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2085 
index: - 
=== Succesors ===
=== Usages ===
j2104 v2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2104 <|@
result v209|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2795 
=== Succesors ===
next: j2105 
=== Usages ===
j2238 j2110 v2813 
=== Predecessor ===
j2085 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2795 #next: j2105  <|@  <|@
f <@~|@floating>@ <|@
tid v2796 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2085 
index: - 
=== Succesors ===
=== Usages ===
j2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2085 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2105 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2796 
=== Succesors ===
next: v2093 
=== Usages ===
v2090 
=== Predecessor ===
j2104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2796 #next: v2093  <|@  <|@
f <@~|@floating>@ <|@
tid j2238 <|@
result v210|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2104 
y: j955 
=== Succesors ===
=== Usages ===
v2090 v2106 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2104 y: j955  <|@  <|@
f <@~|@floating>@ <|@
tid v2090 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2105 
y: j2238 
=== Succesors ===
=== Usages ===
v2093 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2105 y: j2238  <|@  <|@
f <@*|@fixed>@ <|@
tid v2093 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2090 
=== Succesors ===
trueSuccessor: v2091 
falseSuccessor: v2092 
=== Usages ===
=== Predecessor ===
j2105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2090 #trueSuccessor: v2091 #falseSuccessor: v2092  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = LEA [v209|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v210|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4561279963840610618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2097 
=== Usages ===
=== Predecessor ===
v2093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2097 <|@
result v211|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2083 i305 i4 
=== Succesors ===
next: j2098 
=== Usages ===
j2098 
=== Predecessor ===
v2091 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2083 i305 i4 #next: j2098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2098 <|@
result v211|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2097 
=== Succesors ===
next: v2111 
=== Usages ===
j2110 
=== Predecessor ===
a2097 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2097 #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
j2098 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v208|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v211|QWORD[.]] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4590960774697031150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2795 
value: j2238 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2102 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2795 value: j2238 stateAfter: - lastLocationAccess: - #next: v2102  <|@  <|@
f <@~|@floating>@ <|@
tid v2813 <|@
result [v209|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2104 
index: - 
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2104 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2813 
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2813 #next: v2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
v2102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v209|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2110 <|@
result v212|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2108 
values: j2104 j2098 
=== Succesors ===
=== Usages ===
v2798 v2797 a1757 v2814 v2815 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2108 values: j2104 j2098  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2109 v2111 
=== Succesors ===
next: a1757 
=== Usages ===
j2110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2109 v2111 #next: a1757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1757 <|@
result v213|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2110 
=== Succesors ===
next: j2122 
=== Usages ===
a1763 
=== Predecessor ===
v2108 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2110 #next: j2122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2122 <|@
result v214|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2810 
=== Succesors ===
next: v2123 
=== Usages ===
v2123 
=== Predecessor ===
a1757 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2810 #next: v2123  <|@  <|@
f <@~|@floating>@ <|@
tid v2797 <|@
result [v212|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2797 
value: j2122 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
j2122 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2797 value: j2122 stateAfter: - lastLocationAccess: - #next: v2126  <|@  <|@
f <@~|@floating>@ <|@
tid v2798 <|@
result [v212|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2798 
value: v2241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2130 
=== Usages ===
=== Predecessor ===
v2123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2798 value: v2241 stateAfter: - lastLocationAccess: - #next: v2130  <|@  <|@
f <@~|@floating>@ <|@
tid v2814 <|@
result [v212|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1779 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2814 
value: a1779 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2132 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2814 value: a1779 stateAfter: - lastLocationAccess: - #next: v2132  <|@  <|@
f <@~|@floating>@ <|@
tid v2815 <|@
result [v212|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2110 
index: - 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2815 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1763 
=== Usages ===
=== Predecessor ===
v2130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2815 value: i17 stateAfter: - lastLocationAccess: - #next: a1763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1763 <|@
result v213|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1757 
=== Succesors ===
next: v1764 
=== Usages ===
v440 
=== Predecessor ===
v2132 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1757 #next: v1764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
a1763 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1763 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1764 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1763 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v212|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v212|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = MOV [v207|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v212|QWORD[*]], y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v212|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v212|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v212|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" "B156" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2732 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2732  <|@  <|@
f <@~|@floating>@ <|@
tid v2780 <|@
result [v206|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2731 
=== Succesors ===
=== Usages ===
i2732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2732 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2780 
=== Succesors ===
next: v1735 
=== Usages ===
i417 i1856 v1834 
=== Predecessor ===
v406 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2780 #next: v1735  <|@  <|@
f <@~|@floating>@ <|@
tid i417 <|@
result v216|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2732 
y: i397 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2732 y: i397  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i417 
y: i17 
=== Succesors ===
=== Usages ===
v1735 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i417 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v418 
=== Succesors ===
trueSuccessor: v1734 
falseSuccessor: v1732 
=== Usages ===
=== Predecessor ===
i2732 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v418 #trueSuccessor: v1734 #falseSuccessor: v1732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOV [v206|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = SUB (x: v215|DWORD, ~y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v216|DWORD, y: v216|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1900 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid i1901 <|@
result int[-377875|0xfffffffffffa3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -377875
stableDimension: 0
stamp: i32 [-377875] ⇊00000000fffa3bed ⇈00000000fffa3bed
stampKind: i32
value: int[-377875|0xfffffffffffa3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1892 
=== Predecessor ===
v1734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-377875|0xfffffffffffa3bed]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B148" "B154" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1895 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-399883 - -375315] ⇊00000000fff801e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1892 
values: i1899 i1901 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1892 values: i1899 i1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1898 v1900 
=== Succesors ===
next: v1897 
=== Usages ===
i1895 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1898 v1900 #next: v1897  <|@  <|@
f <@*|@fixed>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
actionAndReason: i1895 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1892 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?141 actionAndReason: i1895 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v217|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v217|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" "B160" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2138 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2138 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2179 
=== Usages ===
v2799 v2800 
=== Predecessor ===
v1732 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2799 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2179 v2181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2179 <|@
result v218|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2799 
=== Succesors ===
next: j2180 
=== Usages ===
j2142 v2801 v2802 a2158 v2807 v2803 v2804 v2805 v2806 
=== Predecessor ===
j2138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2799 #next: j2180  <|@  <|@
f <@~|@floating>@ <|@
tid v2800 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2138 
index: - 
=== Succesors ===
=== Usages ===
j2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2138 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2180 <|@
result v219|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2800 
=== Succesors ===
next: v2147 
=== Usages ===
v2148 
=== Predecessor ===
j2179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2800 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid i2143 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i397 
y: i2143 
=== Succesors ===
=== Usages ===
v2147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i397 y: i2143  <|@  <|@
f <@*|@fixed>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2144 
=== Succesors ===
trueSuccessor: v2146 
falseSuccessor: v2145 
=== Usages ===
=== Predecessor ===
j2180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2144 #trueSuccessor: v2146 #falseSuccessor: v2145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v219|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B156 -> B157 falseDestination: B156 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4605166441495610144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2154 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2154  <|@  <|@
f <@~|@floating>@ <|@
tid i2135 <|@
result v220|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i397 
y: i4 
=== Succesors ===
=== Usages ===
i2167 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i397 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2166 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2167 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2135 
y: i2166 
=== Succesors ===
=== Usages ===
i2137 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2135 y: i2166  <|@  <|@
f <@~|@floating>@ <|@
tid i2136 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2137 <|@
result v222|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2167 
y: i2136 
=== Succesors ===
=== Usages ===
j2141 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2167 y: i2136  <|@  <|@
f <@~|@floating>@ <|@
tid j2141 <|@
result v223|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2137 
=== Succesors ===
=== Usages ===
j2142 v2803 v2804 v2805 v2806 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2137  <|@  <|@
f <@~|@floating>@ <|@
tid j2142 <|@
result v224|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
x: j2141 
y: j2179 
=== Succesors ===
=== Usages ===
v2148 v2181 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2141 y: j2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2180 
y: j2142 
=== Succesors ===
=== Usages ===
v2154 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2180 y: j2142  <|@  <|@
f <@*|@fixed>@ <|@
tid v2154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2148 
=== Succesors ===
trueSuccessor: v2153 
falseSuccessor: v2152 
=== Usages ===
=== Predecessor ===
v2146 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2148 #trueSuccessor: v2153 #falseSuccessor: v2152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = SHL v204|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = LEA [v220|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = AND v221|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v223|QWORD = MOVSXD v222|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = ADD (x: v223|QWORD, y: v218|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v224|QWORD, y: v219|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B161" 
    xhandlers
    flags 
    probability 4575598786250110124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2151 
=== Usages ===
=== Predecessor ===
v2154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2151  <|@  <|@
f <@*|@fixed>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
v2153 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4605096529276106807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v2154 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2799 
value: j2142 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2152 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2799 value: j2142 stateAfter: - lastLocationAccess: - #next: v2169  <|@  <|@
f <@~|@floating>@ <|@
tid v2803 <|@
result [v223|QWORD + v218|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2803 
=== Succesors ===
next: v2171 
=== Usages ===
=== Predecessor ===
v2181 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2803 #next: v2171  <|@  <|@
f <@~|@floating>@ <|@
tid v2804 <|@
result [v223|QWORD + v218|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2804 
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
v2169 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2804 #next: v2174  <|@  <|@
f <@~|@floating>@ <|@
tid v2805 <|@
result [v223|QWORD + v218|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2805 
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
v2171 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2805 #next: v2177  <|@  <|@
f <@~|@floating>@ <|@
tid v2806 <|@
result [v223|QWORD + v218|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2141 
index: j2179 
=== Succesors ===
=== Usages ===
v2177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2141 index: j2179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2806 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v2174 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2806 #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v2801 <|@
result [v218|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2179 
index: - 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2179 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2801 
value: i397 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2183 
=== Usages ===
=== Predecessor ===
v2177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2801 value: i397 stateAfter: - lastLocationAccess: - #next: v2183  <|@  <|@
f <@~|@floating>@ <|@
tid v2802 <|@
result [v218|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2179 
index: - 
=== Succesors ===
=== Usages ===
v2183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2179 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2802 
value: j2134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2186 
=== Usages ===
=== Predecessor ===
v2182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2802 value: j2134 stateAfter: - lastLocationAccess: - #next: v2186  <|@  <|@
f <@~|@floating>@ <|@
tid v2807 <|@
result [v218|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2179 
index: - 
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2179 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2244 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2807 
value: v2244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2157 
=== Usages ===
=== Predecessor ===
v2183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2807 value: v2244 stateAfter: - lastLocationAccess: - #next: v2157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2158 
=== Usages ===
=== Predecessor ===
v2186 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2158 <|@
result v225|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2179 
=== Succesors ===
next: v2160 
=== Usages ===
a2163 
=== Predecessor ===
v2157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2179 #next: v2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
a2158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v224|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v218|QWORD + 12], y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v218|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v218|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v225|QWORD[.] = MOVE v218|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD[.]] destination: B159 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    probability 4590878840174572685
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2149 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2149  <|@  <|@
f <@*|@fixed>@ <|@
tid v2149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
v2145 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B158" 
    successors "B162" 
    xhandlers
    flags 
    probability 4591438137930599384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2149 v2151 
=== Succesors ===
next: a2159 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2149 v2151 #next: a2159  <|@  <|@
f <@~|@floating>@ <|@
tid v2133 <|@
result v226|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2159 <|@
result v227|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2133 i397 i17 
=== Succesors ===
next: v2162 
=== Usages ===
a2163 
=== Predecessor ===
v2150 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2133 i397 i17 #next: v2162  <|@  <|@
f <@*|@fixed>@ <|@
tid v2162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
a2159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v226|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v204|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v227|QWORD[.]] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B159" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2163 <|@
result v228|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2161 
values: a2158 a2159 
=== Succesors ===
=== Usages ===
v2819 a1868 v2783 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2161 values: a2158 a2159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2160 v2162 
=== Succesors ===
next: v2508 
=== Usages ===
a2163 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2160 v2162 #next: v2508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2328 
=== Usages ===
j2509 j2511 
=== Predecessor ===
v2161 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2328  <|@  <|@
f <@~|@floating>@ <|@
tid v1834 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2732 
y: i397 
=== Succesors ===
=== Usages ===
i1856 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2732 y: i397  <|@  <|@
f <@~|@floating>@ <|@
tid i1856 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1834 
trueValue: i2732 
falseValue: i397 
=== Succesors ===
=== Usages ===
j2316 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1834 trueValue: i2732 falseValue: i397  <|@  <|@
f <@~|@floating>@ <|@
tid j2316 <|@
result v230|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1856 
=== Succesors ===
=== Usages ===
j2566 v2819 j2320 v2325 v2450 j2552 j2557 j2560 j2563 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1856  <|@  <|@
f <@~|@floating>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2316 
y: j2134 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2316 y: j2134  <|@  <|@
f <@~|@floating>@ <|@
tid j2473 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2590 j2535 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2497 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2611 j2560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2027 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2543 j2596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2493 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2608 j2557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2487 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2603 j2552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2325 
=== Succesors ===
trueSuccessor: v2326 
falseSuccessor: v2327 
=== Usages ===
=== Predecessor ===
v2508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2325 #trueSuccessor: v2326 #falseSuccessor: v2327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v204|DWORD, y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = CMOVE (falseValue: v204|DWORD, ~trueValue: v215|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v230|QWORD = MOVSXD v229|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v230|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2344 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2344  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid v2783 <|@
result [v228|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2163 
index: - 
=== Succesors ===
=== Usages ===
j2511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2163 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2511 <|@
result v231|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2508 
address: v2783 
=== Succesors ===
=== Usages ===
v2821 v2823 v2825 v2827 v2829 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2508 address: v2783  <|@  <|@
f <@~|@floating>@ <|@
tid v2781 <|@
result [v206|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2731 
=== Succesors ===
=== Usages ===
j2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2731  <|@  <|@
f <@~|@floating>@ <|@
tid j2509 <|@
result v232|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2508 
address: v2781 
=== Succesors ===
=== Usages ===
v2822 v2824 v2826 v2828 v2830 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2508 address: v2781  <|@  <|@
f <@~|@floating>@ <|@
tid j2552 <|@
result v233|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2316 
y: j2487 
=== Succesors ===
=== Usages ===
v2553 v2555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2552 
y: j1755 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2552 y: j1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2553 
=== Succesors ===
trueSuccessor: v2329 
falseSuccessor: v2330 
=== Usages ===
=== Predecessor ===
v2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2553 #trueSuccessor: v2329 #falseSuccessor: v2330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = LEA [v228|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v232|QWORD[*] = LEA [v206|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v233|QWORD = LEA [v230|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v233|QWORD, y: v233|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B169" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B165 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2332 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2332  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
v2330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B205" 
    successors "B168" "B205" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2544 <|@
result v234|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2333 
values: j1755 j2551 
=== Succesors ===
=== Usages ===
v2830 j2551 v2829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2333 values: j1755 j2551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2332 
=== Succesors ===
next: v2733 
=== Usages ===
v2733 v2336 v2337 j2544 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2332 #next: v2733  <|@  <|@
f <@~|@floating>@ <|@
tid v2830 <|@
result [v232|QWORD[*] + v234|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2544 
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2733 <|@
result v235|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2333 
address: v2830 
=== Succesors ===
next: v2648 
=== Usages ===
v2648 
=== Predecessor ===
v2333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2333 address: v2830 #next: v2648  <|@  <|@
f <@~|@floating>@ <|@
tid v2829 <|@
result [v231|QWORD[.] + v234|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2544 
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2829 
value: v2733 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2339 
=== Usages ===
=== Predecessor ===
v2733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2829 value: v2733 stateAfter: - lastLocationAccess: - #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid j2551 <|@
result v236|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2544 
y: j950 
=== Succesors ===
=== Usages ===
j2536 j2544 v2555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2544 y: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2552 
y: j2551 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2552 y: j2551  <|@  <|@
f <@*|@fixed>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2555 
=== Succesors ===
trueSuccessor: v2336 
falseSuccessor: v2338 
=== Usages ===
=== Predecessor ===
v2648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2555 #trueSuccessor: v2336 #falseSuccessor: v2338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v234|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|V256_WORD = H [v232|QWORD[*] + v234|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v234|QWORD * 2], input: v235|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = LEA [v234|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v236|QWORD, y: v233|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B167 -> B168 falseDestination: B167 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2333 
=== Succesors ===
next: v2342 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2333 #next: v2342  <|@  <|@
f <@*|@fixed>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v236|QWORD] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B165" "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2536 <|@
result v237|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2341 
values: j1755 j2551 
=== Succesors ===
=== Usages ===
v2828 j2543 j2528 v2558 v2827 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2341 values: j1755 j2551  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2340 v2342 
=== Succesors ===
next: v2363 
=== Usages ===
j2536 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2340 v2342 #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid j2557 <|@
result v238|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2316 
y: j2493 
=== Succesors ===
=== Usages ===
v2558 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2493  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2557 
y: j2536 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2557 y: j2536  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2558 
=== Succesors ===
trueSuccessor: v2362 
falseSuccessor: v2361 
=== Usages ===
=== Predecessor ===
v2341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2558 #trueSuccessor: v2362 #falseSuccessor: v2361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v237|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v238|QWORD = LEA [v230|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v237|QWORD, y: v238|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2366 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2734 
=== Usages ===
v2734 
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2734  <|@  <|@
f <@~|@floating>@ <|@
tid v2828 <|@
result [v232|QWORD[*] + v237|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2536 
=== Succesors ===
=== Usages ===
v2734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2734 <|@
result v239|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2361 
address: v2828 
=== Succesors ===
next: v2646 
=== Usages ===
v2646 
=== Predecessor ===
v2361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2361 address: v2828 #next: v2646  <|@  <|@
f <@~|@floating>@ <|@
tid v2827 <|@
result [v231|QWORD[.] + v237|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2536 
=== Succesors ===
=== Usages ===
v2646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2827 
value: v2734 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2734 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2827 value: v2734 stateAfter: - lastLocationAccess: - #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid j2543 <|@
result v240|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2536 
y: j2027 
=== Succesors ===
=== Usages ===
j2528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2536 y: j2027  <|@  <|@
f <@*|@fixed>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v239|V128_WORD = H [v232|QWORD[*] + v237|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v237|QWORD * 2], input: v239|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v240|QWORD = LEA [v237|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2528 <|@
result v241|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2352 
values: j2543 j2536 
=== Succesors ===
=== Usages ===
v2826 j2535 j2520 v2561 v2825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2352 values: j2543 j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2351 v2366 
=== Succesors ===
next: v2369 
=== Usages ===
j2528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2351 v2366 #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid j2560 <|@
result v242|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2316 
y: j2497 
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2560 
y: j2528 
=== Succesors ===
=== Usages ===
v2369 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2560 y: j2528  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2561 
=== Succesors ===
trueSuccessor: v2368 
falseSuccessor: v2367 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2561 #trueSuccessor: v2368 #falseSuccessor: v2367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v241|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|QWORD = LEA [v230|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v241|QWORD, y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|QWORD] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2735 
=== Usages ===
v2735 
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2735  <|@  <|@
f <@~|@floating>@ <|@
tid v2826 <|@
result [v232|QWORD[*] + v241|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2528 
=== Succesors ===
=== Usages ===
v2735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2735 <|@
result v243|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2367 
address: v2826 
=== Succesors ===
next: v2644 
=== Usages ===
v2644 
=== Predecessor ===
v2367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2367 address: v2826 #next: v2644  <|@  <|@
f <@~|@floating>@ <|@
tid v2825 <|@
result [v231|QWORD[.] + v241|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2528 
=== Succesors ===
=== Usages ===
v2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2825 
value: v2735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2354 
=== Usages ===
=== Predecessor ===
v2735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2825 value: v2735 stateAfter: - lastLocationAccess: - #next: v2354  <|@  <|@
f <@~|@floating>@ <|@
tid j2535 <|@
result v244|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2528 
y: j2473 
=== Succesors ===
=== Usages ===
j2520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2528 y: j2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v243|V64_WORD = H [v232|QWORD[*] + v241|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v241|QWORD * 2], input: v243|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v244|QWORD = LEA [v241|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v244|QWORD] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B173" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2520 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2355 
values: j2535 j2528 
=== Succesors ===
=== Usages ===
v2824 j2527 j2512 v2564 v2823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2355 values: j2535 j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2354 v2372 
=== Succesors ===
next: v2375 
=== Usages ===
j2520 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2354 v2372 #next: v2375  <|@  <|@
f <@~|@floating>@ <|@
tid j2563 <|@
result v246|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2316 
y: j2501 
=== Succesors ===
=== Usages ===
v2564 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2564 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2563 
y: j2520 
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2563 y: j2520  <|@  <|@
f <@*|@fixed>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2564 
=== Succesors ===
trueSuccessor: v2374 
falseSuccessor: v2373 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2564 #trueSuccessor: v2374 #falseSuccessor: v2373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v245|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = LEA [v230|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v245|QWORD, y: v246|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2378 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2378  <|@  <|@
f <@*|@fixed>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v245|QWORD] destination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2736 
=== Usages ===
v2736 
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2736  <|@  <|@
f <@~|@floating>@ <|@
tid v2824 <|@
result [v232|QWORD[*] + v245|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2520 
=== Succesors ===
=== Usages ===
v2736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2736 <|@
result v247|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2373 
address: v2824 
=== Succesors ===
next: v2642 
=== Usages ===
v2642 
=== Predecessor ===
v2373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2373 address: v2824 #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2823 <|@
result [v231|QWORD[.] + v245|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2520 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2823 
value: v2736 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2823 value: v2736 stateAfter: - lastLocationAccess: - #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid j2527 <|@
result v248|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2520 
y: j1780 
=== Succesors ===
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2520 y: j1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|V32_WORD = H [v232|QWORD[*] + v245|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v245|QWORD * 2], input: v247|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v248|QWORD = LEA [v245|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|QWORD] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B176" 
    successors "B179" "B180" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2512 <|@
result v249|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2358 
values: j2527 j2520 
=== Succesors ===
=== Usages ===
v2822 v2567 v2821 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2358 values: j2527 j2520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2357 v2378 
=== Succesors ===
next: v2381 
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2357 v2378 #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid j2566 <|@
result v250|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2316 
y: j1579 
=== Succesors ===
=== Usages ===
v2567 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2316 y: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2566 
y: j2512 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2566 y: j2512  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2567 
=== Succesors ===
trueSuccessor: v2380 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
v2358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2567 #trueSuccessor: v2380 #falseSuccessor: v2379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = DEC v230|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2737 
=== Usages ===
i2737 
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2737  <|@  <|@
f <@~|@floating>@ <|@
tid v2822 <|@
result [v232|QWORD[*] + v249|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2512 
=== Succesors ===
=== Usages ===
i2737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2737 <|@
result v251|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2379 
address: v2822 
=== Succesors ===
next: v2640 
=== Usages ===
v2640 
=== Predecessor ===
v2379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2379 address: v2822 #next: v2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2821 <|@
result [v231|QWORD[.] + v249|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2511 
index: j2512 
=== Succesors ===
=== Usages ===
v2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2511 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2821 
value: i2737 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
i2737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2821 value: i2737 stateAfter: - lastLocationAccess: - #next: v2360  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|DWORD = MOVSX [v232|QWORD[*] + v249|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v231|QWORD[.] + v249|QWORD * 2], y: v251|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B163" "B180" "B179" 
    successors "B182" "B200" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2344 v2360 v2384 
=== Succesors ===
next: v2570 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2344 v2360 v2384 #next: v2570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2391 
=== Usages ===
j2572 
=== Predecessor ===
v2345 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2391  <|@  <|@
f <@~|@floating>@ <|@
tid j2315 <|@
result v252|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i397 
=== Succesors ===
=== Usages ===
j2320 v2450 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i397  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2316 
y: j2315 
=== Succesors ===
=== Usages ===
v2391 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2316 y: j2315  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2450 
=== Succesors ===
trueSuccessor: v2390 
falseSuccessor: v2389 
=== Usages ===
=== Predecessor ===
v2570 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2450 #trueSuccessor: v2390 #falseSuccessor: v2389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|QWORD = MOVSXD v204|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|QWORD, y: v230|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2394 
=== Usages ===
=== Predecessor ===
v2391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2394  <|@  <|@
f <@~|@floating>@ <|@
tid v2819 <|@
result [v228|QWORD[.] + v230|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2163 
index: j2316 
=== Succesors ===
=== Usages ===
j2572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2163 index: j2316  <|@  <|@
f <@~|@floating>@ <|@
tid j2572 <|@
result v253|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2570 
address: v2819 
=== Succesors ===
=== Usages ===
v2831 v2832 v2833 v2834 v2835 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2570 address: v2819  <|@  <|@
f <@~|@floating>@ <|@
tid j2320 <|@
result v254|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2315 
y: j2316 
=== Succesors ===
=== Usages ===
j2617 j2603 j2608 j2611 j2614 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2315 y: j2316  <|@  <|@
f <@~|@floating>@ <|@
tid j2603 <|@
result v255|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2320 
y: j2487 
=== Succesors ===
=== Usages ===
v2604 v2606 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2603 
y: j1755 
=== Succesors ===
=== Usages ===
v2394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2603 y: j1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2604 
=== Succesors ===
trueSuccessor: v2392 
falseSuccessor: v2393 
=== Usages ===
=== Predecessor ===
v2390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2604 #trueSuccessor: v2392 #falseSuccessor: v2393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = LEA [v228|QWORD[.] + v230|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = SUB (x: v252|QWORD, ~y: v230|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v255|QWORD = LEA [v254|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B182 -> B183 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B187" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2403 
=== Usages ===
=== Predecessor ===
v2394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2403  <|@  <|@
f <@*|@fixed>@ <|@
tid v2403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2404 
=== Predecessor ===
v2392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2395 
=== Usages ===
=== Predecessor ===
v2394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2395  <|@  <|@
f <@~|@floating>@ <|@
tid v2663 <|@
result v256|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2658 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2396 
=== Predecessor ===
v2393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B199" 
    successors "B186" "B199" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2597 <|@
result v257|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2396 
values: j1755 j2602 
=== Succesors ===
=== Usages ===
v2835 j2602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2396 values: j1755 j2602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2396 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2395 
=== Succesors ===
next: v2658 
=== Usages ===
j2597 v2399 v2400 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2395 #next: v2658  <|@  <|@
f <@~|@floating>@ <|@
tid v2835 <|@
result [v253|QWORD[.] + v257|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2597 
=== Succesors ===
=== Usages ===
v2658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2835 
value: v2663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
v2396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2835 value: v2663 stateAfter: - lastLocationAccess: - #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid j2602 <|@
result v258|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2597 
y: j950 
=== Succesors ===
=== Usages ===
j2591 j2597 v2606 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2597 y: j950  <|@  <|@
f <@~|@floating>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2603 
y: j2602 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2603 y: j2602  <|@  <|@
f <@*|@fixed>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2606 
=== Succesors ===
trueSuccessor: v2399 
falseSuccessor: v2401 
=== Usages ===
=== Predecessor ===
v2658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2606 #trueSuccessor: v2399 #falseSuccessor: v2401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v257|QWORD * 2], input: v256|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = LEA [v257|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v258|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B185 -> B186 falseDestination: B185 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2396 
=== Succesors ===
next: v2405 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2396 #next: v2405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2404 
=== Predecessor ===
v2399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|QWORD] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2591 <|@
result v259|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2404 
values: j1755 j2602 
=== Succesors ===
=== Usages ===
v2834 j2596 j2585 v2609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2404 values: j1755 j2602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2403 v2405 
=== Succesors ===
next: v2426 
=== Usages ===
j2591 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2403 v2405 #next: v2426  <|@  <|@
f <@~|@floating>@ <|@
tid j2608 <|@
result v260|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2320 
y: j2493 
=== Succesors ===
=== Usages ===
v2609 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2493  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2608 
y: j2591 
=== Succesors ===
=== Usages ===
v2426 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2608 y: j2591  <|@  <|@
f <@*|@fixed>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2609 
=== Succesors ===
trueSuccessor: v2425 
falseSuccessor: v2424 
=== Usages ===
=== Predecessor ===
v2404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2609 #trueSuccessor: v2425 #falseSuccessor: v2424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v259|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|QWORD = LEA [v254|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v259|QWORD, y: v260|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2429 
=== Usages ===
=== Predecessor ===
v2426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2429  <|@  <|@
f <@*|@fixed>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2415 
=== Predecessor ===
v2425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v259|QWORD] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2657 
=== Usages ===
=== Predecessor ===
v2426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2834 <|@
result [v253|QWORD[.] + v259|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2591 
=== Succesors ===
=== Usages ===
v2657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2591  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
result v261|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2657 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2834 
value: v2667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2414 
=== Usages ===
=== Predecessor ===
v2424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2834 value: v2667 stateAfter: - lastLocationAccess: - #next: v2414  <|@  <|@
f <@~|@floating>@ <|@
tid j2596 <|@
result v262|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2591 
y: j2027 
=== Succesors ===
=== Usages ===
j2585 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2591 y: j2027  <|@  <|@
f <@*|@fixed>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2415 
=== Predecessor ===
v2657 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v261|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v259|QWORD * 2], input: v261|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = LEA [v259|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2585 <|@
result v263|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2415 
values: j2596 j2591 
=== Succesors ===
=== Usages ===
v2833 j2590 j2579 v2612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2415 values: j2596 j2591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2414 v2429 
=== Succesors ===
next: v2432 
=== Usages ===
j2585 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2414 v2429 #next: v2432  <|@  <|@
f <@~|@floating>@ <|@
tid j2611 <|@
result v264|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2320 
y: j2497 
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2497  <|@  <|@
f <@~|@floating>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2611 
y: j2585 
=== Succesors ===
=== Usages ===
v2432 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2611 y: j2585  <|@  <|@
f <@*|@fixed>@ <|@
tid v2432 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2612 
=== Succesors ===
trueSuccessor: v2431 
falseSuccessor: v2430 
=== Usages ===
=== Predecessor ===
v2415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2612 #trueSuccessor: v2431 #falseSuccessor: v2430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v263|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD = LEA [v254|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v263|QWORD, y: v264|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2435 
=== Usages ===
=== Predecessor ===
v2432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2435  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2418 
=== Predecessor ===
v2431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v263|QWORD] destination: B191 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2655 
=== Usages ===
=== Predecessor ===
v2432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2655  <|@  <|@
f <@~|@floating>@ <|@
tid v2833 <|@
result [v253|QWORD[.] + v263|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2585 
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2585  <|@  <|@
f <@~|@floating>@ <|@
tid v2666 <|@
result v265|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2833 
value: v2666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2417 
=== Usages ===
=== Predecessor ===
v2430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2833 value: v2666 stateAfter: - lastLocationAccess: - #next: v2417  <|@  <|@
f <@~|@floating>@ <|@
tid j2590 <|@
result v266|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2585 
y: j2473 
=== Succesors ===
=== Usages ===
j2579 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2585 y: j2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2418 
=== Predecessor ===
v2655 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v265|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v263|QWORD * 2], input: v265|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = LEA [v263|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v266|QWORD] destination: B192 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" "B191" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2579 <|@
result v267|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2418 
values: j2590 j2585 
=== Succesors ===
=== Usages ===
v2832 j2584 j2573 v2615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2418 values: j2590 j2585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2417 v2435 
=== Succesors ===
next: v2438 
=== Usages ===
j2579 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2417 v2435 #next: v2438  <|@  <|@
f <@~|@floating>@ <|@
tid j2614 <|@
result v268|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2320 
y: j2501 
=== Succesors ===
=== Usages ===
v2615 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j2501  <|@  <|@
f <@~|@floating>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2614 
y: j2579 
=== Succesors ===
=== Usages ===
v2438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2614 y: j2579  <|@  <|@
f <@*|@fixed>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2615 
=== Succesors ===
trueSuccessor: v2437 
falseSuccessor: v2436 
=== Usages ===
=== Predecessor ===
v2418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2615 #trueSuccessor: v2437 #falseSuccessor: v2436  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v267|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = LEA [v254|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v267|QWORD, y: v268|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B193 -> B194 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2441 
=== Usages ===
=== Predecessor ===
v2438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2441  <|@  <|@
f <@*|@fixed>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2421 
=== Predecessor ===
v2437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|QWORD] destination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2653 
=== Usages ===
=== Predecessor ===
v2438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2653  <|@  <|@
f <@~|@floating>@ <|@
tid v2832 <|@
result [v253|QWORD[.] + v267|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2579 
=== Succesors ===
=== Usages ===
v2653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2579  <|@  <|@
f <@~|@floating>@ <|@
tid v2665 <|@
result v269|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2832 
value: v2665 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2420 
=== Usages ===
=== Predecessor ===
v2436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2832 value: v2665 stateAfter: - lastLocationAccess: - #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid j2584 <|@
result v270|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2579 
y: j1780 
=== Succesors ===
=== Usages ===
j2573 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2579 y: j1780  <|@  <|@
f <@*|@fixed>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2421 
=== Predecessor ===
v2653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v269|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v267|QWORD * 2], input: v269|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v270|QWORD = LEA [v267|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD] destination: B195 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" "B194" 
    successors "B197" "B198" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2573 <|@
result v271|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2421 
values: j2584 j2579 
=== Succesors ===
=== Usages ===
v2831 v2618 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2421 values: j2584 j2579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2420 v2441 
=== Succesors ===
next: v2444 
=== Usages ===
j2573 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2420 v2441 #next: v2444  <|@  <|@
f <@~|@floating>@ <|@
tid j2617 <|@
result v272|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2320 
y: j1579 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2320 y: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2617 
y: j2573 
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2617 y: j2573  <|@  <|@
f <@*|@fixed>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2618 
=== Succesors ===
trueSuccessor: v2443 
falseSuccessor: v2442 
=== Usages ===
=== Predecessor ===
v2421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2618 #trueSuccessor: v2443 #falseSuccessor: v2442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = DEC v254|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v271|QWORD, y: v272|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B196 -> B197 falseDestination: B196 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2447 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
v2443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B197 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2651 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2651  <|@  <|@
f <@~|@floating>@ <|@
tid v2831 <|@
result [v253|QWORD[.] + v271|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2572 
index: j2573 
=== Succesors ===
=== Usages ===
v2651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2572 index: j2573  <|@  <|@
f <@~|@floating>@ <|@
tid i2664 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2651 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2831 
value: i2664 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2423 
=== Usages ===
=== Predecessor ===
v2442 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2831 value: i2664 stateAfter: - lastLocationAccess: - #next: v2423  <|@  <|@
f <@*|@fixed>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
v2651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v253|QWORD[.] + v271|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B198 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B185" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2400 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2400  <|@  <|@
f <@*|@fixed>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2396 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2401 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|QWORD] destination: B199 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B201" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2407 
=== Usages ===
=== Predecessor ===
v2391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2407  <|@  <|@
f <@*|@fixed>@ <|@
tid v2407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
v2389 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B200 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B197" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2407 v2423 v2447 
=== Succesors ===
next: a1868 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2407 v2423 v2447 #next: a1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1868 <|@
result v228|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2163 
=== Succesors ===
next: j2194 
=== Usages ===
a1770 
=== Predecessor ===
v2408 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2163 #next: j2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2194 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2209 
=== Usages ===
v2808 v2809 
=== Predecessor ===
a1868 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2209  <|@  <|@
f <@~|@floating>@ <|@
tid v2808 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2209 v2211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2209 <|@
result v273|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2808 
=== Succesors ===
next: j2210 
=== Usages ===
j2245 j2215 v2816 
=== Predecessor ===
j2194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2808 #next: j2210  <|@  <|@
f <@~|@floating>@ <|@
tid v2809 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2194 
index: - 
=== Succesors ===
=== Usages ===
j2210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2194 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2210 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2809 
=== Succesors ===
next: v2202 
=== Usages ===
v2199 
=== Predecessor ===
j2209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2809 #next: v2202  <|@  <|@
f <@~|@floating>@ <|@
tid j2245 <|@
result v274|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2209 
y: j955 
=== Succesors ===
=== Usages ===
v2199 v2211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2209 y: j955  <|@  <|@
f <@~|@floating>@ <|@
tid v2199 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2210 
y: j2245 
=== Succesors ===
=== Usages ===
v2202 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2210 y: j2245  <|@  <|@
f <@*|@fixed>@ <|@
tid v2202 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2199 
=== Succesors ===
trueSuccessor: v2200 
falseSuccessor: v2201 
=== Usages ===
=== Predecessor ===
j2210 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2199 #trueSuccessor: v2200 #falseSuccessor: v2201  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v273|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = LEA [v273|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v274|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4576125157390179651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2205 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2205 <|@
result v275|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2083 i305 i4 
=== Succesors ===
next: j2206 
=== Usages ===
j2206 
=== Predecessor ===
v2200 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2083 i305 i4 #next: j2206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2206 <|@
result v275|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2205 
=== Succesors ===
next: v2216 
=== Usages ===
j2215 
=== Predecessor ===
a2205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2205 #next: v2216  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
j2206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v208|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v275|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v275|QWORD[.]] destination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4605865563690643517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2211 
=== Usages ===
=== Predecessor ===
v2202 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2808 
value: j2245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2208 
=== Usages ===
=== Predecessor ===
v2201 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2808 value: j2245 stateAfter: - lastLocationAccess: - #next: v2208  <|@  <|@
f <@~|@floating>@ <|@
tid v2816 <|@
result [v273|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2209 
index: - 
=== Succesors ===
=== Usages ===
v2208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2209 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2816 
=== Succesors ===
next: v2214 
=== Usages ===
=== Predecessor ===
v2211 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2816 #next: v2214  <|@  <|@
f <@*|@fixed>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
v2208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v274|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v273|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|QWORD] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B202" 
    successors 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2215 <|@
result v276|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2213 
values: j2209 j2206 
=== Succesors ===
=== Usages ===
v2812 v2811 a1767 v2817 v2818 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2213 values: j2209 j2206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2214 v2216 
=== Succesors ===
next: a1767 
=== Usages ===
j2215 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2214 v2216 #next: a1767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1767 <|@
result v277|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2215 
=== Succesors ===
next: j2225 
=== Usages ===
a1773 
=== Predecessor ===
v2213 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2215 #next: j2225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2225 <|@
result v278|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2810 
=== Succesors ===
next: v2226 
=== Usages ===
v2226 
=== Predecessor ===
a1767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2810 #next: v2226  <|@  <|@
f <@~|@floating>@ <|@
tid v2811 <|@
result [v276|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2811 
value: j2225 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2229 
=== Usages ===
=== Predecessor ===
j2225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2811 value: j2225 stateAfter: - lastLocationAccess: - #next: v2229  <|@  <|@
f <@~|@floating>@ <|@
tid v2812 <|@
result [v276|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2812 
value: v2241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2233 
=== Usages ===
=== Predecessor ===
v2226 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2812 value: v2241 stateAfter: - lastLocationAccess: - #next: v2233  <|@  <|@
f <@~|@floating>@ <|@
tid v2817 <|@
result [v276|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1770 <|@
result v279|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1868 
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2817 
value: a1770 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2235 
=== Usages ===
=== Predecessor ===
v2229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2817 value: a1770 stateAfter: - lastLocationAccess: - #next: v2235  <|@  <|@
f <@~|@floating>@ <|@
tid v2818 <|@
result [v276|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2215 
index: - 
=== Succesors ===
=== Usages ===
v2235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2818 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1773 
=== Usages ===
=== Predecessor ===
v2233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2818 value: i17 stateAfter: - lastLocationAccess: - #next: a1773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1773 <|@
result v277|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1767 
=== Succesors ===
next: v1774 
=== Usages ===
v441 
=== Predecessor ===
v2235 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1767 #next: v1774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
a1773 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1773 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1774 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1773 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|QWORD[.] = MOVE v276|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v278|QWORD = MOV [v207|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v276|QWORD[*]], y: v278|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v276|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[.] = COMPRESSPOINTER (input: v228|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v276|QWORD[*] + 12], y: v279|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v276|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v277|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B167" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2337  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2333 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v236|QWORD] destination: B205 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1960 
=== Usages ===
=== Predecessor ===
v1723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1960  <|@  <|@
f <@~|@floating>@ <|@
tid i1961 <|@
result int[-370203|0xfffffffffffa59e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -370203
stableDimension: 0
stamp: i32 [-370203] ⇊00000000fffa59e5 ⇈00000000fffa59e5
stampKind: i32
value: int[-370203|0xfffffffffffa59e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
v1722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-370203|0xfffffffffffa59e5]] destination: B206 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid i1959 <|@
result int[-399643|0xfffffffffff9e6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -399643
stableDimension: 0
stamp: i32 [-399643] ⇊00000000fff9e6e5 ⇈00000000fff9e6e5
stampKind: i32
value: int[-399643|0xfffffffffff9e6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
v1718 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-399643|0xfffffffffff9e6e5]] destination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid i1954 <|@
result int[-401435|0xfffffffffff9dfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -401435
stableDimension: 0
stamp: i32 [-401435] ⇊00000000fff9dfe5 ⇈00000000fff9dfe5
stampKind: i32
value: int[-401435|0xfffffffffff9dfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
v1714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-401435|0xfffffffffff9dfe5]] destination: B208 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B207" "B206" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1955 <|@
result v280|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-401435 - -370203] ⇊00000000fff840e5 ⇈00000000fffbffe5
valueDescription: i32
=== Inputs ===
merge: v1952 
values: i1954 i1959 i1961 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1952 values: i1954 i1959 i1961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1953 v1958 v1960 
=== Succesors ===
next: v1957 
=== Usages ===
i1955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1953 v1958 v1960 #next: v1957  <|@  <|@
tid ?802 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a728 - 
=== Succesors ===
=== Usages ===
?338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a728 -  <|@  <|@
tid ?338 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?802 
values: - a639 i336 i337 - 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?802 values: - a639 i336 i337 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?338 
actionAndReason: i1955 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1952 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?338 actionAndReason: i1955 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v280|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v280|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v117|QWORD[.] v172|DWORD v173|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1950 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1950  <|@  <|@
f <@~|@floating>@ <|@
tid i1951 <|@
result int[-354843|0xfffffffffffa95e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -354843
stableDimension: 0
stamp: i32 [-354843] ⇊00000000fffa95e5 ⇈00000000fffa95e5
stampKind: i32
value: int[-354843|0xfffffffffffa95e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354843|0xfffffffffffa95e5]] destination: B210 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@~|@floating>@ <|@
tid i1949 <|@
result int[-342043|0xfffffffffffac7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342043
stableDimension: 0
stamp: i32 [-342043] ⇊00000000fffac7e5 ⇈00000000fffac7e5
stampKind: i32
value: int[-342043|0xfffffffffffac7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342043|0xfffffffffffac7e5]] destination: B211 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@~|@floating>@ <|@
tid i1947 <|@
result int[-340507|0xfffffffffffacde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340507
stableDimension: 0
stamp: i32 [-340507] ⇊00000000fffacde5 ⇈00000000fffacde5
stampKind: i32
value: int[-340507|0xfffffffffffacde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-340507|0xfffffffffffacde5]] destination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1943 <|@
result int[-337179|0xfffffffffffadae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -337179
stableDimension: 0
stamp: i32 [-337179] ⇊00000000fffadae5 ⇈00000000fffadae5
stampKind: i32
value: int[-337179|0xfffffffffffadae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1686 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337179|0xfffffffffffadae5]] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B126" "B212" "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1937 <|@
result v281|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-354843 - -335883] ⇊00000000fffa80e5 ⇈00000000fffadffd
valueDescription: i32
=== Inputs ===
merge: v1934 
values: i1943 i1945 i1947 i1949 i1951 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1934 values: i1943 i1945 i1947 i1949 i1951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1942 v1944 v1946 v1948 v1950 
=== Succesors ===
next: v1939 
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1942 v1944 v1946 v1948 v1950 #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?296 
actionAndReason: i1937 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?296 actionAndReason: i1937 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v281|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v281|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1977 
=== Usages ===
=== Predecessor ===
v2689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1977  <|@  <|@
f <@~|@floating>@ <|@
tid i1979 <|@
result int[-256803|0xfffffffffffc14dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -256803
stableDimension: 0
stamp: i32 [-256803] ⇊00000000fffc14dd ⇈00000000fffc14dd
stampKind: i32
value: int[-256803|0xfffffffffffc14dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1977 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?532 
actionAndReason: i1979 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2021 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?532 actionAndReason: i1979 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -256803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid i1971 <|@
result int[-253971|0xfffffffffffc1fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253971
stableDimension: 0
stamp: i32 [-253971] ⇊00000000fffc1fed ⇈00000000fffc1fed
stampKind: i32
value: int[-253971|0xfffffffffffc1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253971|0xfffffffffffc1fed]] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1968 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid i1969 <|@
result int[-250907|0xfffffffffffc2be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250907
stableDimension: 0
stamp: i32 [-250907] ⇊00000000fffc2be5 ⇈00000000fffc2be5
stampKind: i32
value: int[-250907|0xfffffffffffc2be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
v1606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250907|0xfffffffffffc2be5]] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1965 <|@
result v282|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-253971 - -249355] ⇊00000000fffc01e5 ⇈00000000fffc3ffd
valueDescription: i32
=== Inputs ===
merge: v1962 
values: i1969 i1971 
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1962 values: i1969 i1971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1968 v1970 
=== Succesors ===
next: v1967 
=== Usages ===
i1965 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1968 v1970 #next: v1967  <|@  <|@
f <@*|@fixed>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?508 
actionAndReason: i1965 
speculation: a1886 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?508 actionAndReason: i1965 speculation: a1886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v282|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v282|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50ad6842 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DOUBLE = H [v0|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = VMOVQ v1|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND (x: v4|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR v9|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 2047 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v11|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = OR (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD, int[53|0x35], v32|QWORD, v11|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B217" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|QWORD, v36|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = DEC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND v39|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v41|QWORD[.] + v40|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B216" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v42|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v51|DWORD[.] = MOV [v50|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.], v35|QWORD, v34|DWORD, v33|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[.], v54|QWORD, v55|DWORD, v56|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD[.], y: v53|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B215" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v53|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction MOVB (x: [v53|QWORD[.] + 24], y: v6|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v53|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSXB [v53|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v53|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZXB v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B83" 
    xhandlers
    flags 
    probability 4604577606124749407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B33 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B39" "B82" "B5" "B33" 
    successors "B84" "B121" 
    xhandlers
    flags 
    probability 4605603690354152556
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|DWORD, v114|DWORD, v115|DWORD, v116|DWORD, v117|QWORD[.], v118|QWORD[.], v119|QWORD, v120|QWORD, v121|QWORD] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4605596209411378873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B119" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v122|DWORD = MOV [v117|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v121|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v120|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|DWORD, y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B106" 
    xhandlers
    flags 
    probability 4604199603166572522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v116|DWORD] destination: B89 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B89" "B99" "B104" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr   -1  <|@ instruction [v135|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD[.] = MOV [v118|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v118|QWORD[.] v117|QWORD[.] v135|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v136|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOV [v118|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v137|DWORD, y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4605454096428188788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v135|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4605381307659359664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v138|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4605309246778218831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOV [v136|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = SUB (x: v139|DWORD, ~y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4605237906505889407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = SUB (x: v122|DWORD, ~y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v135|DWORD, y: v141|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B146" 
    xhandlers
    flags 
    probability 4605167279636283277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = UNCOMPRESSPOINTER (input: v136|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = MOVE v143|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = MOVE v117|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVSXD v137|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOVSXD v135|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOVSXD v138|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v144|QWORD[*] + v146|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v145|QWORD[*] + v147|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v148|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = ADD (x: v135|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v149|DWORD, v118|QWORD[.]] destination: B117 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B73" "B117" "B140" "B143" "B145" "B78" "B59" 
    successors "B147" "B153" 
    xhandlers
    flags 
    probability 4606738238130731344
    begin_IR
      LIR
      nr   -1  <|@ instruction [v204|DWORD, v205|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|DWORD[.] = MOV [v205|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v206|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" "B156" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOV [v206|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = SUB (x: v215|DWORD, ~y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v216|DWORD, y: v216|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" "B160" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v219|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v204|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B156 -> B157 falseDestination: B156 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4605166441495610144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = SHL v204|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = LEA [v220|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = AND v221|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v223|QWORD = MOVSXD v222|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v224|QWORD = ADD (x: v223|QWORD, y: v218|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v224|QWORD, y: v219|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4605096529276106807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v224|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v223|QWORD + v218|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v218|QWORD + 12], y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v218|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v218|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v225|QWORD[.] = MOVE v218|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD[.]] destination: B159 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B159" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr   -1  <|@ instruction [v228|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v204|DWORD, y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = CMOVE (falseValue: v204|DWORD, ~trueValue: v215|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v230|QWORD = MOVSXD v229|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v230|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v231|QWORD[.] = LEA [v228|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v232|QWORD[*] = LEA [v206|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v233|QWORD = LEA [v230|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v233|QWORD, y: v233|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B169" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B165 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B165" "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v237|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v238|QWORD = LEA [v230|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v237|QWORD, y: v238|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v239|V128_WORD = H [v232|QWORD[*] + v237|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v237|QWORD * 2], input: v239|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v240|QWORD = LEA [v237|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v241|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|QWORD = LEA [v230|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v241|QWORD, y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v243|V64_WORD = H [v232|QWORD[*] + v241|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v241|QWORD * 2], input: v243|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v244|QWORD = LEA [v241|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v244|QWORD] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B173" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v245|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = LEA [v230|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v245|QWORD, y: v246|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|V32_WORD = H [v232|QWORD[*] + v245|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v245|QWORD * 2], input: v247|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v248|QWORD = LEA [v245|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v248|QWORD] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B176" 
    successors "B179" "B180" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = DEC v230|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|DWORD = MOVSX [v232|QWORD[*] + v249|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v231|QWORD[.] + v249|QWORD * 2], y: v251|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B163" "B180" "B179" 
    successors "B182" "B200" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|QWORD = MOVSXD v204|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|QWORD, y: v230|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B201" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B200 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B197" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v273|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v274|QWORD = LEA [v273|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v274|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4605865563690643517
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v274|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v273|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|QWORD] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B202" 
    successors 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v277|QWORD[.] = MOVE v276|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v278|QWORD = MOV [v207|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v276|QWORD[*]], y: v278|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v276|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[.] = COMPRESSPOINTER (input: v228|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v276|QWORD[*] + 12], y: v279|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v276|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v277|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD[.] = LEA [v228|QWORD[.] + v230|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = SUB (x: v252|QWORD, ~y: v230|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v255|QWORD = LEA [v254|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v255|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B182 -> B183 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B187" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v259|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|QWORD = LEA [v254|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v259|QWORD, y: v260|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v261|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v259|QWORD * 2], input: v261|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = LEA [v259|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v263|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|QWORD = LEA [v254|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v263|QWORD, y: v264|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v265|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v263|QWORD * 2], input: v265|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = LEA [v263|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v266|QWORD] destination: B192 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" "B191" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v267|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = LEA [v254|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v267|QWORD, y: v268|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B193 -> B194 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v269|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v267|QWORD * 2], input: v269|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v270|QWORD = LEA [v267|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD] destination: B195 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" "B194" 
    successors "B197" "B198" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = DEC v254|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v271|QWORD, y: v272|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B196 -> B197 falseDestination: B196 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v253|QWORD[.] + v271|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B198 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641963553957399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], v61|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B82" 
    xhandlers
    flags 
    probability 4595512854586415623
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v72|DWORD, v73|QWORD, v74|QWORD, v75|QWORD] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482934073994828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v70|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v71|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV [v71|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOV [v71|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4466454034221034 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591653193801305682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4591583306069924274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v80|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591514117215856680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = SUB (x: v77|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4591445620250329762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SUB (x: v78|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B76" 
    xhandlers
    flags 
    probability 4591377808254458114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v102|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v103|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v104|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v67|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B80" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v105|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = INC v105|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v105|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v110|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = LEA [v105|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD, v71|QWORD[.]] destination: B78 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B97" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = NEG v113|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVSXD v123|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = DEC v124|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SUB (x: v116|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v126|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v122|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v116|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v126|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: v117|QWORD[.] v116|DWORD v126|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: v118|QWORD[.] v117|QWORD[.] v116|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = SUB (x: v116|DWORD, ~y: [v118|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v124|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = LEA [v117|QWORD[.] + v116|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = LEA [v124|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|QWORD, y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v131|QWORD[.]], input: v133|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|QWORD, y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v131|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|DWORD] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVZXB [v14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592799363640258986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B5 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|QWORD] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B185" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|QWORD] destination: B199 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B199" 
    successors "B186" "B199" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v257|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v253|QWORD[.] + v257|QWORD * 2], input: v256|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = LEA [v257|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v258|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B185 -> B186 falseDestination: B185 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B197 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v245|QWORD] destination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B167" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v236|QWORD] destination: B205 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B205" 
    successors "B168" "B205" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [v234|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|V256_WORD = H [v232|QWORD[*] + v234|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v231|QWORD[.] + v234|QWORD * 2], input: v235|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = LEA [v234|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v236|QWORD, y: v233|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B167 -> B168 falseDestination: B167 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v259|QWORD] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|QWORD] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v236|QWORD] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v263|QWORD] destination: B191 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|QWORD] destination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v204|DWORD, y: v204|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = LEA [v209|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v210|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4590960774697031150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v209|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v209|QWORD] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr   -1  <|@ instruction [v212|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = MOVE v212|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = MOV [v207|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v212|QWORD[*]], y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v212|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v212|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v212|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v213|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    probability 4590878840174572685
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B158" 
    successors "B162" 
    xhandlers
    flags 
    probability 4591438137930599384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v226|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v204|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v227|QWORD[.]] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590249064547655201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v77|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590193218108810298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v78|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590137930134353844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v85|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v86|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v87|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v72|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v66|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590083195039641955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v80|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v90|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590029007295877185
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v77|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589975361429550062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v78|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B146" 
    xhandlers
    flags 
    probability 4589922252021886211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v88|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v89|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v90|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v94|QWORD[*] + v96|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v89|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD, v71|QWORD[.]] destination: B59 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B106" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|DWORD] destination: B99 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = ADD (x: v125|QWORD, y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOV v122|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582612474071634943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], v17|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|DWORD] destination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4576125157390179651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v285|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v275|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v275|QWORD[.]] destination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575859158351825079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B107 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B107" "B115" "B113" "B111" "B109" 
    successors 
    xhandlers
    flags 
    probability 4585926273848975510
    begin_IR
      LIR
      nr   -1  <|@ instruction [v142|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v118|QWORD[.] v117|QWORD[.] v135|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575812102986117362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B109 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575765518174066723
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B111 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575719399210136590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575673741435845758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332129|0xfffffffffffaee9f]] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B161" 
    xhandlers
    flags 
    probability 4575598786250110124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B122" 
    xhandlers
    flags 
    probability 4575429410860470575
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B85 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B85" 
    successors "B123" "B213" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD[.] = MOV [v118|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v152|DWORD = MOV [v151|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOV [v118|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|DWORD, y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B212" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v154|DWORD = MOV [v117|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B211" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOV [v118|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B210" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = DEC v155|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = ADD (x: v156|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = UNCOMPRESSPOINTER (input: v151|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVSX [v158|QWORD[.] + v153|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v121|QWORD * 1], y: v159|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v120|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v160|DWORD = SUB (x: v152|DWORD, ~y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = INC v153|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v161|DWORD, y: v160|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B133" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = SUB (x: v154|DWORD, ~y: v156|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v116|DWORD, y: v162|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" "B137" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = MOVE v158|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[*] = MOVE v117|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = MOVSXD v161|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = MOVSXD v156|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v163|QWORD[*] + v165|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v164|QWORD[*] + v116|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v166|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v157|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = INC v157|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v113|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v117|QWORD[.] + v167|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = LEA [v157|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = SUB (x: v169|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|DWORD, v170|DWORD] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B139" "B208" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr   -1  <|@ instruction [v172|DWORD, v173|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B138 -> B139 falseDestination: B138 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = INC v172|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = LEA [v173|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v172|DWORD * 2 + 16], y: v175|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|DWORD, v118|QWORD[.]] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 4562084852888391629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B45" "B62" "B49" "B47" "B68" "B66" "B64" 
    successors 
    xhandlers
    flags 
    probability 4573736910224670211
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561995396592223427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B64 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561906834859016906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561819158743142451
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299617|0xfffffffffffb6d9f]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4561279963840610618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v286|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v286|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v211|QWORD[.]] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B122" 
    xhandlers
    flags 
    probability 4560799708671823202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560798874451295069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v74|QWORD, v73|QWORD, v75|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = DEC v113|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v167|DWORD, v171|DWORD] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560359772940407372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274529|0xfffffffffffbcf9f]] destination: B45 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560287567443719012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274529|0xfffffffffffbcf9f]] destination: B47 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560216084001997536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274529|0xfffffffffffbcf9f]] destination: B49 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560145315394693275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569048122125276722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288609 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v71|QWORD[.] v70|QWORD[.] v89|DWORD v66|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560075254473462057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560005894161443151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559937227452544434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.], v53|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.], v63|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v62|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v62|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], long[3|0x3], long[20|0x14], long[18|0x12]] destination: B39 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B207" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = LEA [v172|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v173|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v173|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = SAR v178|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = LEA [v179|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v172|DWORD * 2 + 16], y: v180|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = SHL v179|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = SHL v179|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = ADD (x: v181|DWORD, y: v182|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = SUB (x: v173|DWORD, ~y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = LEA [v184|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v174|DWORD * 2 + 16], y: v185|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v176|DWORD, v118|QWORD[.]] destination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v284|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v284|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|QWORD[.], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -351585 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v118|QWORD[.] v117|QWORD[.] v116|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B206" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|DWORD, y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B144 -> B145 falseDestination: B144 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v173|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = SAR v187|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = LEA [v188|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v172|DWORD * 2 + 16], y: v189|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = IMUL v188|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = SUB (x: v173|DWORD, ~y: v190|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v191|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = SAR v193|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = SHR v191|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = ADD (x: v194|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = LEA [v196|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v174|DWORD * 2 + 16], y: v197|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = SHL v196|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = SHL v196|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD = ADD (x: v198|DWORD, y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SUB (x: v191|DWORD, ~y: v200|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = LEA [v201|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v117|QWORD[.] + v176|DWORD * 2 + 16], y: v202|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = LEA [v172|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v203|DWORD, v118|QWORD[.]] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], v65|DWORD, long[20|0x14], long[3|0x3], long[18|0x12]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LZCNT v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v19|DWORD - 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHL (x: v18|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v24|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v25|DWORD, v23|QWORD, v27|DWORD] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.], v14|QWORD[.]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD, int[53|0x35], v29|DWORD] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD, v47|DWORD, v48|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v283|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v283|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v46|QWORD - v48|DWORD v47|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.], v46|QWORD, v47|DWORD, v48|DWORD] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B75" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = SUB (x: v66|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = ADD (x: v105|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = INC v107|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B146" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v105|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v107|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - v70|QWORD[.] v105|DWORD v106|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v107|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v108|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA [v107|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD, v71|QWORD[.]] destination: B73 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD, v34|DWORD, v33|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD, v25|DWORD, v21|DWORD] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -379675 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244243|0xfffffffffffc45ed]] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Double.toString(Double.java:644) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-306203|0xfffffffffffb53e5]] destination: B74 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" "B80" "B79" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD v80|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:85, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303899|0xfffffffffffb5ce5]] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-315163|0xfffffffffffb30e5]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v150|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-250907|0xfffffffffffc2be5]] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v282|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v282|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1565248032] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -319771 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v129|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v118|QWORD[.] v117|QWORD[.] v116|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243987|0xfffffffffffc46ed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-340507|0xfffffffffffacde5]] destination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B126" "B212" "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v281|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v281|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v118|QWORD[.] v117|QWORD[.] v114|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-311835|0xfffffffffffb3de5]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-354843|0xfffffffffffa95e5]] destination: B210 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317211|0xfffffffffffb28e5]] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342043|0xfffffffffffac7e5]] destination: B211 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253971|0xfffffffffffc1fed]] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-370203|0xfffffffffffa59e5]] destination: B206 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B207" "B206" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v280|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v280|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v117|QWORD[.] v172|DWORD v173|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-278299|0xfffffffffffbc0e5]] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-309531|0xfffffffffffb46e5]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-399643|0xfffffffffff9e6e5]] destination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-375315|0xfffffffffffa45ed]] destination: B148 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B148" "B154" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v217|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v217|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v204|DWORD 
locals: v205|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-401435|0xfffffffffff9dfe5]] destination: B208 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -256803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-337179|0xfffffffffffadae5]] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -372763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v118|QWORD[.] v117|QWORD[.] v167|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v118|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-377875|0xfffffffffffa3bed]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-343059|0xfffffffffffac3ed]] destination: B126 -> B214 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // value:double
     4: invokestatic  #2          // toString:(double)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50ad6842 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr    8  <|@ instruction rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   14  <|@ instruction rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   24  <|@ instruction rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   32  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP rcx|DWORD y: 2047 size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  228  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r11|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B217" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr  264  <|@ instruction rax|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B216" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rbx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B215" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  416  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  432  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr  436  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZXB rsi|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  454  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B83" 
    xhandlers
    flags 
    probability 4604577606124749407
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  462  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  466  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  472  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B33 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B39" "B82" "B5" "B33" 
    successors "B84" "B121" 
    xhandlers
    flags 
    probability 4605603690354152556
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4605596209411378873
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction CMP rsi|DWORD y: -2 size: DWORD <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B119" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr 1076  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr 1090  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr 1092  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B106" 
    xhandlers
    flags 
    probability 4604199603166572522
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B89 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B89" "B99" "B104" "B105" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1260  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: r10|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r10|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1264  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4605454096428188788
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1278  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" "B112" 
    xhandlers
    flags 
    probability 4605381307659359664
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1290  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B110 -> B111 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4605309246778218831
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1304  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B117" 
    xhandlers
    flags 
    probability 4605237906505889407
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1322  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1324  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B146" 
    xhandlers
    flags 
    probability 4605167279636283277
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr 1344  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1350  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1352  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1354  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1356  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1358  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1366  <|@ instruction r11|DWORD = ADD (x: stack:64|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1368  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ instruction JUMP ~[] destination: B117 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B73" "B117" "B140" "B143" "B145" "B78" "B59" 
    successors "B147" "B153" 
    xhandlers
    flags 
    probability 4606738238130731344
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1718  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr 1720  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1722  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1724  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" "B156" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1796  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1798  <|@ instruction rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" "B160" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1822  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1824  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1826  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B156 -> B157 falseDestination: B156 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4605166441495610144
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1830  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1832  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1834  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1836  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1838  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1840  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1842  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4605096529276106807
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1856  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1858  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1860  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1862  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1864  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1866  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1868  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1870  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1872  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1874  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1876  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1878  <|@ instruction JUMP ~[] destination: B159 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B159" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 1902  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1904  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1906  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1908  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1910  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1912  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1920  <|@ instruction r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1922  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1924  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1926  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1928  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1930  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B169" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 1932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1936  <|@ instruction JUMP ~[] destination: B165 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B165" "B168" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1962  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1964  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1966  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1974  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1976  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1978  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1980  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1982  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B170" 
    successors "B173" "B174" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1988  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B173 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1998  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2000  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2002  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2004  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2006  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B173" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2010  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2012  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2014  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B175 -> B176 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2022  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2024  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2026  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2028  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B176" 
    successors "B179" "B180" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2036  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2038  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2046  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 2048  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B163" "B180" "B179" 
    successors "B182" "B200" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2056  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2058  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B201" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2196  <|@ instruction JUMP ~[] destination: B200 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" "B198" "B197" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2202  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 2204  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2206  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4605865563690643517
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2232  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 2234  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2238  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B202" 
    successors 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 2240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2242  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2244  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 2246  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2248  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2250  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr 2252  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2254  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2256  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B181" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1916  <|@ instruction JUMP ~[] destination: B163 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2062  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2064  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2068  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2070  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B182 -> B183 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B187" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2074  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2076  <|@ instruction JUMP ~[] destination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" "B186" 
    successors "B188" "B189" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2104  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2106  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B188 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2114  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2116  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2118  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2120  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2122  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2128  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2140  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2142  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2144  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2146  <|@ instruction JUMP ~[] destination: B192 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" "B191" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2152  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2154  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B193 -> B194 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2164  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2166  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2168  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2170  <|@ instruction JUMP ~[] destination: B195 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" "B194" 
    successors "B197" "B198" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2176  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2178  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B196 -> B197 falseDestination: B196 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2188  <|@ instruction JUMP ~[] destination: B198 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641963553957399
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  482  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  490  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B82" 
    xhandlers
    flags 
    probability 4595512854586415623
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr  566  <|@ instruction stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction CMP rsi|DWORD y: 8 size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482934073994828
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  578  <|@ instruction rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r9:0, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  582  <|@ instruction r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  584  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  588  <|@ instruction rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  590  <|@ instruction rbp|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  592  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.4466454034221034 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591653193801305682
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4591583306069924274
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591514117215856680
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4591445620250329762
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B76" 
    xhandlers
    flags 
    probability 4591377808254458114
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rcx|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  876  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  878  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  888  <|@ instruction r10|DWORD = ADD (x: stack:64|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rsi|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B80" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  996  <|@ instruction MOV [rdx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  998  <|@ instruction rdi|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1000  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B78 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B97" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r10|DWORD = NEG rsi|DWORD size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1114  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1116  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B93" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [stack:40, stack:72, stack:88]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: stack:88|QWORD[.] stack:92|DWORD stack:68|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:92|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr 1190  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1196  <|@ instruction CMP stack:80|QWORD y: 1 size: QWORD <|@ <|@
      nr 1198  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 1216  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr 1232  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr 1236  <|@ instruction rdi|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1244  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction MOV [r8|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr 1254  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   54  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   56  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592799363640258986
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   76  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   86  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B5 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 1992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1994  <|@ instruction JUMP ~[] destination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2042  <|@ instruction JUMP ~[] destination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2080  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2082  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2084  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B185" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2190  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2192  <|@ instruction JUMP ~[] destination: B199 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B199" 
    successors "B186" "B199" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2088  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2090  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 2092  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B185 -> B186 falseDestination: B185 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2182  <|@ instruction JUMP ~[] destination: B197 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction JUMP ~[] destination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 1938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1940  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1942  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B167" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2262  <|@ instruction JUMP ~[] destination: B205 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B205" 
    successors "B168" "B205" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1946  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1948  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1950  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1952  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B167 -> B168 falseDestination: B167 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1970  <|@ instruction JUMP ~[] destination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2110  <|@ instruction JUMP ~[] destination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" 
    successors "B187" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B186 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B169" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 1956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1958  <|@ instruction JUMP ~[] destination: B168 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2134  <|@ instruction JUMP ~[] destination: B191 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction JUMP ~[] destination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1728  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1740  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1742  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1744  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1746  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4590960774697031150
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1770  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1772  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1774  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1778  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1780  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 1782  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1784  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1786  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1788  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1790  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  402  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    probability 4590878840174572685
    begin_IR
      LIR
      nr 1880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1882  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1884  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1886  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" "B158" 
    successors "B162" 
    xhandlers
    flags 
    probability 4591438137930599384
    begin_IR
      LIR
      nr 1888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1890  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1892  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1896  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1898  <|@ st <@st|@reference-map: [stack:40, stack:60, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1900  <|@ instruction JUMP ~[] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590249064547655201
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590193218108810298
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction r10|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590137930134353844
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction stack:112|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction stack:116|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rax|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r13|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + r9|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  686  <|@ instruction rsi|DWORD = ADD (x: stack:96|DWORD, y: stack:108|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  690  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590083195039641955
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:96|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590029007295877185
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589975361429550062
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B146" 
    xhandlers
    flags 
    probability 4589922252021886211
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  758  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  760  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  762  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction stack:108|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  774  <|@ instruction rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:108|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B59 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B106" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction JUMP ~[] destination: B99 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1124  <|@ instruction rcx|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr 1126  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1128  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B98" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582612474071634943
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  114  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1224  <|@ instruction rdi|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      LIR
      nr 1246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1248  <|@ instruction JUMP ~[] destination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4576125157390179651
    begin_IR
      LIR
      nr 2208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2210  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2214  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2216  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2218  <|@ st <@st|@reference-map: [r14:0, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 2220  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2224  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2226  <|@ instruction JUMP ~[] destination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575859158351825079
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f] <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B107 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B107" "B115" "B113" "B111" "B109" 
    successors 
    xhandlers
    flags 
    probability 4585926273848975510
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [rdx:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:40|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575812102986117362
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f] <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B109 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575765518174066723
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f] <|@ <|@
      nr 1298  <|@ instruction JUMP ~[] destination: B111 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575719399210136590
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f] <|@ <|@
      nr 1314  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575673741435845758
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1328  <|@ instruction rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f] <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B161" 
    xhandlers
    flags 
    probability 4575598786250110124
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1846  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1850  <|@ instruction JUMP ~[] destination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B122" 
    xhandlers
    flags 
    probability 4575429410860470575
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1070  <|@ instruction JUMP ~[] destination: B85 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B85" 
    successors "B123" "B213" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1406  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1410  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1412  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1414  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B212" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1420  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B211" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1426  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1434  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B210" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1456  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B129" "B130" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD <|@ <|@
      nr 1468  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr 1470  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1472  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B131" "B133" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1488  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1490  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B130 -> B131 falseDestination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" "B137" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1510  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1512  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr 1520  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1530  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction r14|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1534  <|@ instruction MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1538  <|@ instruction CMP stack:68|DWORD y: 1 size: DWORD <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1546  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1552  <|@ instruction MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1554  <|@ instruction rax|DWORD = LEA [r14|DWORD + 2] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1558  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1560  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction JUMP ~[] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B139" "B208" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B138 -> B139 falseDestination: B138 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1592  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1594  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr 1596  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1604  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction JUMP ~[] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 4562084852888391629
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  800  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B45" "B62" "B49" "B47" "B68" "B66" "B64" 
    successors 
    xhandlers
    flags 
    probability 4573736910224670211
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:104|QWORD[.] rdx|QWORD[.] r9|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561995396592223427
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  816  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B64 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561906834859016906
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  834  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561819158743142451
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  852  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4561279963840610618
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1750  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1752  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1754  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1758  <|@ st <@st|@reference-map: [stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1760  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1764  <|@ instruction JUMP ~[] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B122" 
    xhandlers
    flags 
    probability 4560799708671823202
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1400  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560798874451295069
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1576  <|@ instruction r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560359772940407372
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f] <|@ <|@
      nr  620  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B45 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560287567443719012
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f] <|@ <|@
      nr  636  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B47 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560216084001997536
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f] <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B49 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560145315394693275
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B51 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569048122125276722
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction MOV [r15|QWORD + 668] y: -288609 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:104|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:96|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560075254473462057
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560005894161443151
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559937227452544434
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV [rdx|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  528  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  532  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  536  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B39 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B207" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1614  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1618  <|@ instruction r9|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1620  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1622  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1628  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1630  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1632  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1638  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1640  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1642  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1644  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1646  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1650  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1652  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~[] destination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  298  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:24, stack:72]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - stack:104|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:88|QWORD - stack:96|DWORD stack:92|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  310  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~[] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1500  <|@ instruction MOV [r15|QWORD + 668] y: -351585 size: DWORD <|@ <|@
      nr 1502  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1494  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B206" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1658  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1660  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B144 -> B145 falseDestination: B144 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1668  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1670  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1672  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1676  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1678  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1680  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1682  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1684  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1686  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1688  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD <|@ <|@
      nr 1690  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1692  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1696  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1698  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1700  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1704  <|@ instruction rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1708  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1710  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r11|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  548  <|@ instruction rdi|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  550  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  560  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD = LZCNT r11|QWORD size: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr  154  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD <|@ <|@
      nr  158  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction r9|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr  162  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rcx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  128  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:68|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  246  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:80|QWORD - stack:64|DWORD stack:68|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B75" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B146" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:108|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr  936  <|@ instruction stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - stack:88|QWORD[.] stack:112|DWORD stack:108|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5, 4, 1, 4] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  948  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction MOV [rdx|QWORD[.] + rbx|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  952  <|@ instruction r13|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  954  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B73 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction stack:64|DWORD = STACKMOVE (input: stack:96|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  318  <|@ instruction stack:68|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV [r15|QWORD + 668] y: -379675 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r10|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed] <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
java.lang.Double.toString(Double.java:644) [bci: 0]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-306203|0xfffffffffffb53e5] <|@ <|@
      nr  962  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B74 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" "B80" "B79" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: r11|QWORD[.] rdx|QWORD[.] r9|DWORD rax|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r11|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:85, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVE input: int[-303899|0xfffffffffffb5ce5] <|@ <|@
      nr  970  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-315163|0xfffffffffffb30e5] <|@ <|@
      nr 1386  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1388  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1396  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2372  <|@ instruction r10|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5] <|@ <|@
      nr 2374  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2376  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2378  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2380  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2382  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2384  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2386  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2388  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - stack:60|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1565248032] <|@ <|@
      nr 1160  <|@ instruction MOV [r15|QWORD + 668] y: -319771 size: DWORD <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed] <|@ <|@
      nr  208  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2316  <|@ instruction r8|DWORD = MOVE input: int[-340507|0xfffffffffffacde5] <|@ <|@
      nr 2318  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2320  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2322  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2324  <|@ instruction JUMP ~[] destination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B126" "B212" "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2342  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2344  <|@ st <@st|@reference-map: [rsi:0, r9:0, r11:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction r10|DWORD = MOVE input: int[-311835|0xfffffffffffb3de5] <|@ <|@
      nr 1010  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2292  <|@ instruction r8|DWORD = MOVE input: int[-354843|0xfffffffffffa95e5] <|@ <|@
      nr 2294  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2296  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2298  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2300  <|@ instruction JUMP ~[] destination: B210 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction r8|DWORD = MOVE input: int[-317211|0xfffffffffffb28e5] <|@ <|@
      nr 1378  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2304  <|@ instruction r8|DWORD = MOVE input: int[-342043|0xfffffffffffac7e5] <|@ <|@
      nr 2306  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2308  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2310  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2312  <|@ instruction JUMP ~[] destination: B211 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction r10|DWORD = MOVE input: int[-253971|0xfffffffffffc1fed] <|@ <|@
      nr 2362  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2364  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2366  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2368  <|@ instruction JUMP ~[] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2266  <|@ instruction r8|DWORD = MOVE input: int[-370203|0xfffffffffffa59e5] <|@ <|@
      nr 2268  <|@ instruction JUMP ~[] destination: B206 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B207" "B206" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2284  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2286  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2288  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - r11|QWORD[.] r10|DWORD rsi|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rax|DWORD = MOVE input: int[-278299|0xfffffffffffbc0e5] <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r10|DWORD = MOVE input: int[-309531|0xfffffffffffb46e5] <|@ <|@
      nr 1024  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2272  <|@ instruction r8|DWORD = MOVE input: int[-399643|0xfffffffffff9e6e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~[] destination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1734  <|@ instruction r10|DWORD = MOVE input: int[-375315|0xfffffffffffa45ed] <|@ <|@
      nr 1736  <|@ instruction JUMP ~[] destination: B148 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B148" "B154" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1812  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1814  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1816  <|@ st <@st|@reference-map: [r14:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2278  <|@ instruction r8|DWORD = MOVE input: int[-401435|0xfffffffffff9dfe5] <|@ <|@
      nr 2280  <|@ instruction JUMP ~[] destination: B208 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2350  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2352  <|@ instruction MOV [r15|QWORD + 668] y: -256803 size: DWORD <|@ <|@
      nr 2354  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2356  <|@ st <@st|@reference-map: [r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction r8|DWORD = MOVE input: int[-337179|0xfffffffffffadae5] <|@ <|@
      nr 2330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2332  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2334  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction MOV [r15|QWORD + 668] y: -372763 size: DWORD <|@ <|@
      nr 1570  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1572  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1806  <|@ instruction r10|DWORD = MOVE input: int[-377875|0xfffffffffffa3bed] <|@ <|@
      nr 1808  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r8|DWORD = MOVE input: int[-343059|0xfffffffffffac3ed] <|@ <|@
      nr 1442  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1444  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 1446  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1448  <|@ instruction JUMP ~[] destination: B126 -> B214 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // value:double
     4: invokestatic  #2          // toString:(double)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50ad6842 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr    8  <|@ instruction rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   14  <|@ instruction rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   24  <|@ instruction rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   32  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP rcx|DWORD y: 2047 size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  228  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r11|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B217" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr  264  <|@ instruction rax|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B216" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rbx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B31" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" "B215" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B32" "B36" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  402  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  432  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr  436  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZXB rsi|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  454  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B83" 
    xhandlers
    flags 
    probability 4604577606124749407
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  462  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  466  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  472  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B33 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B39" "B82" "B5" "B33" 
    successors "B84" "B122" 
    xhandlers
    flags 
    probability 4605603690354152556
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B122" "B86" 
    xhandlers
    flags 
    probability 4605596209411378873
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction CMP rsi|DWORD y: -2 size: DWORD <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B84 -> B122 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B119" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr 1076  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B118" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr 1090  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr 1092  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B106" 
    xhandlers
    flags 
    probability 4604199603166572522
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B89 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B89" "B99" "B103" "B105" 
    successors "B116" "B108" 
    xhandlers
    flags 
    probability 4605527620437107095
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1260  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: r10|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r10|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr 1262  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1264  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1266  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B106 -> B116 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B116" "B110" 
    xhandlers
    flags 
    probability 4605454096428188788
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1278  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B108 -> B116 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B116" "B112" 
    xhandlers
    flags 
    probability 4605381307659359664
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1290  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B110 -> B116 falseDestination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" "B114" 
    xhandlers
    flags 
    probability 4605309246778218831
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1304  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1306  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B112 -> B116 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" "B117" 
    xhandlers
    flags 
    probability 4605237906505889407
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1320  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1322  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1324  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B146" 
    xhandlers
    flags 
    probability 4605167279636283277
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr 1344  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1350  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1352  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1354  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1356  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1358  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1366  <|@ instruction r11|DWORD = ADD (x: stack:64|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr 1368  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1370  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ instruction JUMP ~[] destination: B117 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B73" "B117" "B140" "B143" "B145" "B78" "B59" 
    successors "B147" "B153" 
    xhandlers
    flags 
    probability 4606738238130731344
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1718  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr 1720  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1722  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1724  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B154" "B156" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1796  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1798  <|@ instruction rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B157" "B161" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1822  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1824  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1826  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B156 -> B157 falseDestination: B156 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" "B159" 
    xhandlers
    flags 
    probability 4605166441495610144
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1830  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1832  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1834  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1836  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1838  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1840  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1842  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B157 -> B161 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4605096529276106807
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1854  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1856  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1858  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1860  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1862  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1864  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1866  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1868  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1870  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1872  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1874  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1876  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1878  <|@ instruction JUMP ~[] destination: B159 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B159" "B161" 
    successors "B181" "B164" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 1902  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1904  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1906  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1908  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1910  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1912  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B162 -> B181 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B169" "B167" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1920  <|@ instruction r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1922  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1924  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1926  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1928  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1930  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B164 -> B169 falseDestination: B164 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B172" "B171" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1962  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1964  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1966  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B172 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B172" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1974  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1976  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1978  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1980  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1982  <|@ instruction JUMP ~[] destination: B171 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" "B169" 
    successors "B175" "B174" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 1984  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1986  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1988  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B175 falseDestination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B175" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1998  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2000  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2002  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2004  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2006  <|@ instruction JUMP ~[] destination: B174 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" "B172" 
    successors "B178" "B177" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2010  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2012  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2014  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B175 -> B178 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2022  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2024  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2026  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2028  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B175" 
    successors "B181" "B180" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2036  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2038  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B181 falseDestination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B181" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2046  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 2048  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B180 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B162" "B180" "B178" 
    successors "B182" "B201" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2056  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2058  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B181" "B198" "B196" 
    successors "B202" "B203" 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2202  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 2204  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2206  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B201 -> B202 falseDestination: B201 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4605865563690643517
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2232  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 2234  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2238  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B202" 
    successors 
    xhandlers
    flags 
    probability 4605943243934536114
    begin_IR
      LIR
      nr 2240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2242  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2244  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 2246  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2248  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2250  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr 2252  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2254  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2256  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2062  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2064  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2068  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2070  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B182 -> B183 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B187" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2074  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2076  <|@ instruction JUMP ~[] destination: B183 -> B187 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B183" "B185" 
    successors "B190" "B189" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2104  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2106  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B190 falseDestination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B190" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2114  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2116  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2118  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2120  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2122  <|@ instruction JUMP ~[] destination: B189 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" "B187" 
    successors "B193" "B192" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2128  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B193 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2138  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2140  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2142  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2144  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2146  <|@ instruction JUMP ~[] destination: B192 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" "B190" 
    successors "B196" "B195" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2152  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2154  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B193 -> B196 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B196" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2164  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2166  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2168  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2170  <|@ instruction JUMP ~[] destination: B195 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" "B193" 
    successors "B201" "B198" 
    xhandlers
    flags 
    probability 4601439644307165618
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2176  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2178  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B196 -> B201 falseDestination: B196 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B196" 
    successors "B201" 
    xhandlers
    flags 
    probability 4599497638209850694
    begin_IR
      LIR
      nr 2184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2186  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2188  <|@ instruction JUMP ~[] destination: B198 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641963553957399
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  482  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  490  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B82" 
    xhandlers
    flags 
    probability 4595512854586415623
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr  566  <|@ instruction stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction CMP rsi|DWORD y: 8 size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482934073994828
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  578  <|@ instruction rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  580  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r9:0, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  582  <|@ instruction r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  584  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  588  <|@ instruction rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  590  <|@ instruction rbp|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  592  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr  594  <|@ instruction CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction BRANCH trueDestinationProbability: 0.4466454034221034 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591653193801305682
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4591583306069924274
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  808  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591514117215856680
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  826  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4591445620250329762
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B76" 
    xhandlers
    flags 
    probability 4591377808254458114
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rcx|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  876  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  878  <|@ instruction rsi|QWORD = LEA [r11|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  880  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  888  <|@ instruction r10|DWORD = ADD (x: stack:64|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rsi|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B80" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  986  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  988  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B146" 
    xhandlers
    flags 
    probability 4591376912180300173
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  996  <|@ instruction MOV [rdx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  998  <|@ instruction rdi|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1000  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B78 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B98" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r10|DWORD = NEG rsi|DWORD size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1114  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1116  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B90" "B92" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4594480089372673715
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1186  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [stack:40, stack:72, stack:88]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: stack:88|QWORD[.] stack:92|DWORD stack:68|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:92|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr 1190  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1196  <|@ instruction CMP stack:80|QWORD y: 1 size: QWORD <|@ <|@
      nr 1198  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 1216  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr 1232  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B101" 
    successors "B106" "B105" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction rdi|QWORD = MOVE stack:104|QWORD moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1244  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B106 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" 
    xhandlers
    flags 
    probability 4588128924659001868
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1252  <|@ instruction MOV [r8|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr 1254  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   54  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   56  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592799363640258986
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   76  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   86  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B5 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4592432445052424626
    begin_IR
      LIR
      nr 2078  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2080  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2082  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2084  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B185" 
    successors "B187" "B185" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2088  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2090  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 2092  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2094  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B185 -> B187 falseDestination: B185 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B167" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601439644307165618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1946  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1948  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1950  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1952  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B167 -> B169 falseDestination: B167 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1728  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1740  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1742  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1744  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1746  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4590960774697031150
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1770  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1772  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1774  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" "B150" 
    successors 
    xhandlers
    flags 
    probability 4591024374232726768
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1778  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1780  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 1782  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1784  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1786  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1788  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1790  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1792  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B156" "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4591438137930599384
    begin_IR
      LIR
      nr 1888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1882  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1884  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1890  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1892  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1894  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1896  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1898  <|@ st <@st|@reference-map: [stack:40, stack:60, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1900  <|@ instruction JUMP ~[] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  608  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590305475091942982
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590249064547655201
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590193218108810298
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction r10|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B58" "B52" 
    xhandlers
    flags 
    probability 4590137930134353844
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction stack:112|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction stack:116|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rax|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r13|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rdi|QWORD = LEA [r10|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + r9|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  680  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  686  <|@ instruction rsi|DWORD = ADD (x: stack:96|DWORD, y: stack:108|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  690  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B58 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" "B54" 
    xhandlers
    flags 
    probability 4590083195039641955
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:96|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B58 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B56" 
    xhandlers
    flags 
    probability 4590029007295877185
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r11|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  718  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B58 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4589975361429550062
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B146" 
    xhandlers
    flags 
    probability 4589922252021886211
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  758  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  760  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  762  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction stack:108|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  774  <|@ instruction rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:108|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B59 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B106" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1204  <|@ instruction JUMP ~[] destination: B99 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B96" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1124  <|@ instruction rcx|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr 1126  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1128  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B98" "B96" 
    xhandlers
    flags 
    probability 4589976489745303219
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B98 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582612474071634943
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  114  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4580969290490562227
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1222  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" 
    successors "B204" 
    xhandlers
    flags 
    probability 4576125157390179651
    begin_IR
      LIR
      nr 2208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2210  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2212  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2214  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2216  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2218  <|@ st <@st|@reference-map: [r14:0, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 2220  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction JUMP ~[] destination: B202 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B106" "B114" "B112" "B110" "B108" 
    successors 
    xhandlers
    flags 
    probability 4585926273848975510
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f] <|@ <|@
      nr 1334  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [rdx:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:40|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B83" "B84" 
    successors "B123" "B213" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1400  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1408  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1410  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1412  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1414  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B124" "B212" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1420  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B211" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1426  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1434  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B210" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1454  <|@ instruction r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1456  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1458  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" "B130" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3 <|@ <|@
      nr 1464  <|@ instruction r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD <|@ <|@
      nr 1468  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr 1470  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1472  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr 1474  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B128 -> B132 falseDestination: B128 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1488  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1490  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B130 -> B132 falseDestination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B134" "B137" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1510  <|@ instruction stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1512  <|@ instruction stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction rdi|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr 1520  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1522  <|@ instruction rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1524  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1526  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1530  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1532  <|@ instruction r14|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1534  <|@ instruction MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1538  <|@ instruction CMP stack:68|DWORD y: 1 size: DWORD <|@ <|@
      nr 1544  <|@ instruction r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B133 -> B134 falseDestination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B138" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1552  <|@ instruction MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1554  <|@ instruction rax|DWORD = LEA [r14|DWORD + 2] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1558  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:68|DWORD) size: DWORD <|@ <|@
      nr 1560  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1564  <|@ instruction JUMP ~[] destination: B135 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B135" "B137" 
    successors "B139" "B208" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B138 -> B139 falseDestination: B138 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1592  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1594  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr 1596  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B146" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1602  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1604  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1606  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1608  <|@ instruction JUMP ~[] destination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 4562084852888391629
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  800  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~[] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B60" "B45" "B62" "B49" "B47" "B68" "B66" "B64" 
    successors 
    xhandlers
    flags 
    probability 4573736910224670211
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  864  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:104|QWORD[.] rdx|QWORD[.] r9|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561995396592223427
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  816  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B64 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561906834859016906
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  834  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4561819158743142451
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f] <|@ <|@
      nr  852  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B152" 
    xhandlers
    flags 
    probability 4561279963840610618
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1750  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1752  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1754  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1756  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1758  <|@ st <@st|@reference-map: [stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1760  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1764  <|@ instruction JUMP ~[] destination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B83" 
    xhandlers
    flags 
    probability 4560798874451295069
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B133" 
    successors "B138" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      LIR
      nr 1574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1578  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B137 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560359772940407372
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f] <|@ <|@
      nr  620  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B45 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560287567443719012
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f] <|@ <|@
      nr  636  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B47 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B69" 
    xhandlers
    flags 
    probability 4560216084001997536
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f] <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B49 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4569048122125276722
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction MOV [r15|QWORD + 668] y: -288609 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:104|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:96|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV [rdx|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B83" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  528  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  532  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  536  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B39 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" "B207" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1614  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1618  <|@ instruction r9|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1620  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1622  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B146" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1628  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1630  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1632  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1638  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1640  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1642  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1644  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1646  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1650  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1652  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~[] destination: B143 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  298  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:24, stack:72]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - stack:104|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:88|QWORD - stack:96|DWORD stack:92|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  310  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B130" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      LIR
      nr 1498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction MOV [r15|QWORD + 668] y: -351585 size: DWORD <|@ <|@
      nr 1502  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" "B206" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1658  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1660  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B144 -> B145 falseDestination: B144 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1666  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1668  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1670  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1672  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1674  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1676  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1678  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1680  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1682  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1684  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1686  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1688  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD <|@ <|@
      nr 1690  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1692  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1696  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1698  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1700  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1702  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1704  <|@ instruction rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1706  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1708  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1710  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r11|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  548  <|@ instruction rdi|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  550  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  560  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD = LZCNT r11|QWORD size: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr  154  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD <|@ <|@
      nr  158  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction r9|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr  162  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rcx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  128  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:68|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  246  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:80|QWORD - stack:64|DWORD stack:68|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B75" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  912  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  920  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B146" 
    xhandlers
    flags 
    probability 4533458265009202102
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:108|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr  936  <|@ instruction stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  940  <|@ st <@st|@reference-map: [stack:24, stack:40, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - stack:88|QWORD[.] stack:112|DWORD stack:108|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5, 4, 1, 4] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction MOV [rdx|QWORD[.] + r11|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  948  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction MOV [rdx|QWORD[.] + rbx|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  952  <|@ instruction r13|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  954  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B73 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction [stack:64|DWORD, stack:68|DWORD] = MULTISTACKMOVE (inputs: [stack:96|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV [r15|QWORD + 668] y: -379675 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r10|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  208  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
java.lang.Double.toString(Double.java:644) [bci: 0]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction r10|DWORD = MOVE input: int[-306203|0xfffffffffffb53e5] <|@ <|@
      nr  962  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction JUMP ~[] destination: B74 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" "B80" "B79" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1040  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: r11|QWORD[.] rdx|QWORD[.] r9|DWORD rax|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r11|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:85, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction r10|DWORD = MOVE input: int[-303899|0xfffffffffffb5ce5] <|@ <|@
      nr  970  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction r8|DWORD = MOVE input: int[-315163|0xfffffffffffb30e5] <|@ <|@
      nr 1388  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1396  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2372  <|@ instruction r10|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5] <|@ <|@
      nr 2380  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B216" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2382  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2374  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2376  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2378  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2384  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2386  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2388  <|@ st <@st|@reference-map: [stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - stack:60|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B91" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1565248032] <|@ <|@
      nr 1160  <|@ instruction MOV [r15|QWORD + 668] y: -319771 size: DWORD <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2316  <|@ instruction r8|DWORD = MOVE input: int[-340507|0xfffffffffffacde5] <|@ <|@
      nr 2324  <|@ instruction JUMP ~[] destination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B126" "B212" "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2332  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2334  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2340  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2342  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2344  <|@ st <@st|@reference-map: [rsi:0, r9:0, r11:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction r10|DWORD = MOVE input: int[-311835|0xfffffffffffb3de5] <|@ <|@
      nr 1010  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2292  <|@ instruction r8|DWORD = MOVE input: int[-354843|0xfffffffffffa95e5] <|@ <|@
      nr 2300  <|@ instruction JUMP ~[] destination: B210 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction r8|DWORD = MOVE input: int[-317211|0xfffffffffffb28e5] <|@ <|@
      nr 1380  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2304  <|@ instruction r8|DWORD = MOVE input: int[-342043|0xfffffffffffac7e5] <|@ <|@
      nr 2312  <|@ instruction JUMP ~[] destination: B211 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B218" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction r10|DWORD = MOVE input: int[-253971|0xfffffffffffc1fed] <|@ <|@
      nr 2368  <|@ instruction JUMP ~[] destination: B216 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2266  <|@ instruction r8|DWORD = MOVE input: int[-370203|0xfffffffffffa59e5] <|@ <|@
      nr 2268  <|@ instruction JUMP ~[] destination: B206 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" "B207" "B206" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2284  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2286  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2288  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - r11|QWORD[.] r10|DWORD rsi|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rax|DWORD = MOVE input: int[-278299|0xfffffffffffbc0e5] <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B60 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction r10|DWORD = MOVE input: int[-309531|0xfffffffffffb46e5] <|@ <|@
      nr 1024  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2272  <|@ instruction r8|DWORD = MOVE input: int[-399643|0xfffffffffff9e6e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~[] destination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1734  <|@ instruction r10|DWORD = MOVE input: int[-375315|0xfffffffffffa45ed] <|@ <|@
      nr 1736  <|@ instruction JUMP ~[] destination: B148 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B148" "B154" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1812  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1814  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1816  <|@ st <@st|@reference-map: [r14:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B209" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2278  <|@ instruction r8|DWORD = MOVE input: int[-401435|0xfffffffffff9dfe5] <|@ <|@
      nr 2280  <|@ instruction JUMP ~[] destination: B208 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2350  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2352  <|@ instruction MOV [r15|QWORD + 668] y: -256803 size: DWORD <|@ <|@
      nr 2354  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2356  <|@ st <@st|@reference-map: [r10:0, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction r8|DWORD = MOVE input: int[-337179|0xfffffffffffadae5] <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction MOV [r15|QWORD + 668] y: -372763 size: DWORD <|@ <|@
      nr 1570  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1572  <|@ st <@st|@reference-map: [r11:0, stack:72, stack:88]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1806  <|@ instruction r10|DWORD = MOVE input: int[-377875|0xfffffffffffa3bed] <|@ <|@
      nr 1808  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B214" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r8|DWORD = MOVE input: int[-343059|0xfffffffffffac3ed] <|@ <|@
      nr 1448  <|@ instruction JUMP ~[] destination: B126 -> B214 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // value:double
     4: invokestatic  #2          // toString:(double)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50ad6842 slotKind: QWORD  <||@
  Comment 48 6 xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD  <||@
  Comment 53 8 rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 60 10 r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD  <||@
  Comment 64 12 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 69 14 rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 79 16 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 82 18 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 87 20 r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 97 22 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 107 24 rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 110 26 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 114 28 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 116 30 r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 126 32 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 128 34 BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12  <||@
  Comment 134 block B12 null  <||@
  Comment 134 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 200 CMP rcx|DWORD y: 2047 size: DWORD  <||@
  Comment 140 202 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15  <||@
  Comment 146 block B15 null  <||@
  Comment 146 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 222 rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 152 224 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 155 226 rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 165 228 r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 168 230 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 171 232 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 177 block B17 null  <||@
  Comment 177 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 252 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 180 254 r11|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 186 256 JUMP ~[] destination: B17 -> B18  <||@
  Comment 186 block B18 null  <||@
  Comment 186 258 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 186 260 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 194 262 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4]  <||@
  Comment 194 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 194 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 264 rax|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 207 266 rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD  <||@
  Comment 213 268 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 216 270 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B217  <||@
  Comment 222 block B19 null  <||@
  Comment 222 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 274 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 226 276 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 230 278 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 237 280 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 241 282 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 243 284 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24  <||@
  Comment 249 block B24 null  <||@
  Comment 249 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 249 368 CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980]  <||@
  Comment 249 {NarrowOop[FloatingDecimal$1@1399508980]}  <||@
  Comment 260 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B216  <||@
  Comment 266 block B26 null  <||@
  Comment 266 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 266 378 rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 266 [rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rbx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 380 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 274 382 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 276 384 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 279 386 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 282 388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 285 390 JUMP ~[] destination: B26 -> B27  <||@
  Comment 285 block B27 null  <||@
  Comment 285 392 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 285 394 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 288 396 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29  <||@
  Comment 294 block B29 null  <||@
  Comment 294 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 408 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 294 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 302 410 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B215  <||@
  Comment 308 block B31 null  <||@
  Comment 308 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 400 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 314 402 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 319 422 MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 319 [r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 323 424 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 326 426 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 428 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 331 430 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 337 432 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 342 434 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4]  <||@
  Comment 342 9  <||@
  Comment 343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>}  <||@
  Comment 348 [stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 349 436 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 354 438 rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 359 440 rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 363 442 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 367 444 rsi|DWORD = MOVZXB rsi|DWORD size: DWORD  <||@
  Comment 371 446 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 373 448 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B36  <||@
  Comment 379 block B32 null  <||@
  Comment 379 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 452 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 383 454 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 386 456 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 392 block B33 null  <||@
  Comment 392 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 460 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 399 462 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 406 464 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 413 466 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 418 468 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 424 470 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 430 472 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 436 474 JUMP ~[] destination: B33 -> B83  <||@
  Comment 436 block B83 null  <||@
  Comment 436 1052 [] = LABEL numbPhis: 9 align: false label: ?  <||@
  Comment 436 1054 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 441 1056 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 444 1058 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B122  <||@
  Comment 450 block B84 null  <||@
  Comment 450 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 1062 CMP rsi|DWORD y: -2 size: DWORD  <||@
  Comment 453 1064 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B84 -> B122 falseDestination: B84 -> B86  <||@
  Comment 459 block B86 null  <||@
  Comment 459 1072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 1074 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4]  <||@
  Comment 459 [rdx:0, stack:40, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 459 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 462 1076 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 465 1078 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B119  <||@
  Comment 471 block B87 null  <||@
  Comment 471 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 1082 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 474 1084 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118  <||@
  Comment 480 block B88 null  <||@
  Comment 480 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 1088 MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD  <||@
  Comment 486 1090 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 492 1092 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 494 1094 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 500 block B89 null  <||@
  Comment 500 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 1098 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 503 1100 stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 507 1102 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 512 1104 JUMP ~[] destination: B89 -> B106  <||@
  Comment 512 block B106 null  <||@
  Comment 512 1256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 1258 rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1260 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4]  <||@
  Comment 516 [rdx:0, rdi:0, r10:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 516 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 520 1262 rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 524 1264 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 526 1266 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B106 -> B116 falseDestination: B106 -> B108  <||@
  Comment 532 block B108 null  <||@
  Comment 532 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 532 1276 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 535 1278 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B108 -> B116 falseDestination: B108 -> B110  <||@
  Comment 541 block B110 null  <||@
  Comment 541 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 1288 r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 545 1290 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 548 1292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B110 -> B116 falseDestination: B110 -> B112  <||@
  Comment 554 block B112 null  <||@
  Comment 554 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 1302 r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 562 1304 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 565 1306 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 568 1308 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B112 -> B116 falseDestination: B112 -> B114  <||@
  Comment 574 block B114 null  <||@
  Comment 574 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 574 1318 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 578 1320 rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 581 1322 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 584 1324 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B117  <||@
  Comment 590 block B117 null  <||@
  Comment 590 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 1342 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 594 1344 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1346 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1348 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 597 1350 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 600 1352 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 603 1354 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 608 1356 rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD  <||@
  Comment 613 1358 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 616 1360 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 621 1362 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 626 1364 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 626 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 632 1366 r11|DWORD = ADD (x: stack:64|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 642 1368 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 647 1370 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 650 1372 JUMP ~[] destination: B117 -> B146  <||@
  Comment 650 block B146 null  <||@
  Comment 650 1714 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 650 1716 r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 654 1718 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4]  <||@
  Comment 654 [r10:0, r14:0, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 654 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 658 1720 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 658 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 668 1722 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 672 1724 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B153  <||@
  Comment 678 block B153 null  <||@
  Comment 678 1794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 1796 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 686 1798 rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 692 1800 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 694 1802 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B156  <||@
  Comment 700 block B156 null  <||@
  Comment 700 1818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 1820 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 704 1822 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 708 1824 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 715 1826 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B156 -> B157 falseDestination: B156 -> B161  <||@
  Comment 721 block B157 null  <||@
  Comment 721 1828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 1830 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 726 1832 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 729 1834 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 732 1836 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 735 1838 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 741 1840 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 744 1842 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B157 -> B161 falseDestination: B157 -> B159  <||@
  Comment 750 block B159 null  <||@
  Comment 750 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 1854 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 754 1856 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 762 1858 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 770 1860 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 778 1862 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 786 1864 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 790 1866 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 797 1868 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 804 1870 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 804 1872 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 809 1874 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 814 1876 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 817 1878 JUMP ~[] destination: B159 -> B162  <||@
  Comment 817 block B162 null  <||@
  Comment 817 1902 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 817 1904 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 820 1906 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 827 1908 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 830 1910 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 834 1912 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B162 -> B181 falseDestination: B162 -> B164  <||@
  Comment 840 block B164 null  <||@
  Comment 840 1918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1920 r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 845 1922 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 849 1924 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 857 1926 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 861 1928 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 864 1934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 871 1930 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B164 -> B169 falseDestination: B164 -> B167  <||@
  Comment 877 block B169 null  <||@
  Comment 877 1960 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 877 1962 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 881 1964 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 884 1966 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B172 falseDestination: B169 -> B171  <||@
  Comment 890 block B171 null  <||@
  Comment 890 1972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 1974 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 896 1976 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 902 1978 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 906 1980 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 909 1982 JUMP ~[] destination: B171 -> B172  <||@
  Comment 909 block B172 null  <||@
  Comment 909 1984 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 909 1986 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 913 1988 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 916 1990 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B175 falseDestination: B172 -> B174  <||@
  Comment 922 block B174 null  <||@
  Comment 922 1996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 1998 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 928 2000 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 934 2002 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 938 2004 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 941 2006 JUMP ~[] destination: B174 -> B175  <||@
  Comment 941 block B175 null  <||@
  Comment 941 2008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 941 2010 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 945 2012 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 948 2014 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B175 -> B178 falseDestination: B175 -> B177  <||@
  Comment 954 block B177 null  <||@
  Comment 954 2020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 2022 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 960 2024 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 966 2026 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 970 2028 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 973 2030 JUMP ~[] destination: B177 -> B178  <||@
  Comment 973 block B178 null  <||@
  Comment 973 2032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 973 2034 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 979 2036 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 982 2038 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B181 falseDestination: B178 -> B180  <||@
  Comment 988 block B180 null  <||@
  Comment 988 2044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 988 2046 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 993 2048 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 998 2050 JUMP ~[] destination: B180 -> B181  <||@
  Comment 998 block B181 null  <||@
  Comment 998 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 998 2054 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1001 2056 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1004 2058 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B201  <||@
  Comment 1010 block B201 null  <||@
  Comment 1010 2198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 2200 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1014 2202 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1018 2204 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1022 2206 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B201 -> B202 falseDestination: B201 -> B203  <||@
  Comment 1028 block B203 null  <||@
  Comment 1028 2228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 2230 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1032 2232 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1039 2234 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1039 2238 JUMP ~[] destination: B203 -> B204  <||@
  Comment 1039 block B204 null  <||@
  Comment 1039 2240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1039 2236 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1039 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1049 2242 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1052 2244 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1059 2246 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1062 2248 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1062 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1069 2250 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 1073 2252 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1076 2254 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1080 2256 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1083 2258 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1092 12  <||@
  Comment 1102 block B182 null  <||@
  Comment 1102 2060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 2062 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1107 2064 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1110 2066 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1114 2068 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1117 2070 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B182 -> B183 falseDestination: B182 -> B184  <||@
  Comment 1123 block B183 null  <||@
  Comment 1123 2072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1123 2074 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1130 2076 JUMP ~[] destination: B183 -> B187  <||@
  Comment 1130 block B187 null  <||@
  Comment 1130 2100 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1130 2102 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1134 2104 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1137 2106 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B190 falseDestination: B187 -> B189  <||@
  Comment 1143 block B189 null  <||@
  Comment 1143 2112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 2114 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1147 2116 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1153 2118 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1157 2120 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1160 2122 JUMP ~[] destination: B189 -> B190  <||@
  Comment 1160 block B190 null  <||@
  Comment 1160 2124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1160 2126 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1164 2128 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1167 2130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B193 falseDestination: B190 -> B192  <||@
  Comment 1173 block B192 null  <||@
  Comment 1173 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 2138 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1177 2140 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1183 2142 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1187 2144 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1190 2146 JUMP ~[] destination: B192 -> B193  <||@
  Comment 1190 block B193 null  <||@
  Comment 1190 2148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1190 2150 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1194 2152 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1197 2154 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B193 -> B196 falseDestination: B193 -> B195  <||@
  Comment 1203 block B195 null  <||@
  Comment 1203 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 2162 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1207 2164 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1213 2166 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1217 2168 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1220 2170 JUMP ~[] destination: B195 -> B196  <||@
  Comment 1220 block B196 null  <||@
  Comment 1220 2172 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1220 2174 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1223 2176 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1226 2178 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B196 -> B201 falseDestination: B196 -> B198  <||@
  Comment 1232 block B198 null  <||@
  Comment 1232 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1232 2186 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1237 2188 JUMP ~[] destination: B198 -> B201  <||@
  Comment 1242 block B34 null  <||@
  Comment 1242 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 478 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1249 480 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1256 482 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1263 484 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1265 486 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1268 488 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1274 490 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1280 492 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1286 494 JUMP ~[] destination: B34 -> B41  <||@
  Comment 1286 block B41 null  <||@
  Comment 1286 564 [] = LABEL numbPhis: 10 align: false label: ?  <||@
  Comment 1286 566 stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1290 568 CMP rsi|DWORD y: 8 size: DWORD  <||@
  Comment 1293 570 BRANCH trueDestinationProbability: 0.9952842720510096 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B82  <||@
  Comment 1299 block B42 null  <||@
  Comment 1299 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1299 574 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1304 576 NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1304 [rdx:0, r9:0, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1304 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1306 578 rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1310 580 r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1310 [rdx:0, rdi:0, r9:0, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1310 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1318 582 r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1322 584 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1327 586 rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 1331 588 rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 1335 590 rbp|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 1338 592 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 1342 594 CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1344 596 BRANCH trueDestinationProbability: 0.4466454034221034 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61  <||@
  Comment 1350 block B61 null  <||@
  Comment 1350 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1350 792 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1352 794 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1358 block B63 null  <||@
  Comment 1358 806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1358 808 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1360 810 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1366 block B65 null  <||@
  Comment 1366 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 824 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1369 826 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1372 828 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1378 block B67 null  <||@
  Comment 1378 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1378 842 r11|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1384 844 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1387 846 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70  <||@
  Comment 1393 block B70 null  <||@
  Comment 1393 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1393 868 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 870 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 872 r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 874 rcx|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1404 876 rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1409 878 rsi|QWORD = LEA [r11|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1414 880 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1417 882 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1422 884 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1426 886 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1426 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1432 888 r10|DWORD = ADD (x: stack:64|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1442 890 rsi|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1446 892 CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1450 894 BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B76  <||@
  Comment 1456 block B76 null  <||@
  Comment 1456 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 976 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1461 978 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1464 980 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 1470 block B77 null  <||@
  Comment 1470 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1470 984 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1475 986 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1478 988 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 1484 block B78 null  <||@
  Comment 1484 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1484 992 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1489 994 MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1497 996 MOV [rdx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1504 998 rdi|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 1508 1000 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1513 1002 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1516 1004 JUMP ~[] destination: B78 -> B146  <||@
  Comment 1521 block B90 null  <||@
  Comment 1521 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1521 1108 r10|DWORD = NEG rsi|DWORD size: DWORD  <||@
  Comment 1527 1110 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1530 1112 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1536 1114 rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1541 1116 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1544 1118 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B98  <||@
  Comment 1550 block B98 null  <||@
  Comment 1550 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1550 1168 stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1555 1170 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1560 1176 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1562 1178 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1565 1180 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1567 1182 stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1571 1184 stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1575 1186 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1580 1188 - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4]  <||@
  Comment 1580 8  <||@
  Comment 1583 {HotSpotMethod<Arrays.rangeCheck(int, int, int)>}  <||@
  Comment 1588 [stack:40, stack:72, stack:88]at java.util.Arrays.fill(Arrays.java:2973) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1               |2               |3             |4 
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD  |stack:68|DWORD  |int[48|0x30]  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:92|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1589 1190 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1594 1192 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1599 1194 r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1606 1196 CMP stack:80|QWORD y: 1 size: QWORD  <||@
  Comment 1612 1198 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1618 block B100 null  <||@
  Comment 1618 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1618 1208 rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 1623 1210 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1628 1212 r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1633 1214 rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 1637 1216 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1640 1218 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 1646 block B102 null  <||@
  Comment 1646 1228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1646 1230 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1646 {DataSection[0x0]}  <||@
  Comment 1655 1232 J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1660 1234 rsi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1667 1238 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1667 block B103 null  <||@
  Comment 1667 1240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1667 1236 rdi|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 1672 1242 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1675 1244 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B106 falseDestination: B103 -> B105  <||@
  Comment 1681 block B105 null  <||@
  Comment 1681 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1681 1252 MOV [r8|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1687 1254 JUMP ~[] destination: B105 -> B106  <||@
  Comment 1692 block B1 null  <||@
  Comment 1692 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 38 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1695 40 BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 1701 block B2 null  <||@
  Comment 1701 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1701 44 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1704 46 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 1710 block B3 null  <||@
  Comment 1710 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1710 50 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]  <||@
  Comment 1710 {Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]}  <||@
  Comment 1720 52 rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1725 54 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}]  <||@
  Comment 1725 {Object[char[26]{0, ., 0,  ,  , ...}]}  <||@
  Comment 1735 56 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1737 58 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 1743 block B4 null  <||@
  Comment 1743 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1743 62 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1747 64 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1751 66 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1757 block B5 null  <||@
  Comment 1757 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1757 70 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1764 72 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1771 74 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1778 76 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 78 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1786 80 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1792 82 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1798 84 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1804 86 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1809 88 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1812 90 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1818 92 JUMP ~[] destination: B5 -> B83  <||@
  Comment 1823 block B184 null  <||@
  Comment 1823 2078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 2080 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1827 2082 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1834 2084 JUMP ~[] destination: B184 -> B185  <||@
  Comment 1834 block B185 loop 1 depth 1 header:2396|LoopBegin  <||@
  Comment 1834 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1840 2088 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1846 2090 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1850 2092 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1853 2094 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B185 -> B187 falseDestination: B185 -> B185  <||@
  Comment 1860 block B167 loop 0 depth 1 header:2333|LoopBegin  <||@
  Comment 1860 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1872 1946 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1878 1948 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1884 1950 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1888 1952 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1891 1954 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B167 -> B169 falseDestination: B167 -> B167  <||@
  Comment 1898 block B147 null  <||@
  Comment 1898 1726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 1728 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1901 1730 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 1907 block B149 null  <||@
  Comment 1907 1738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1907 1740 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1911 1742 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1915 1744 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1919 1746 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 1925 block B151 null  <||@
  Comment 1925 1766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 1768 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1929 1770 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1936 1772 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1936 1774 JUMP ~[] destination: B151 -> B152  <||@
  Comment 1936 block B152 null  <||@
  Comment 1936 1776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1936 1778 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1939 1780 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1946 1782 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1949 1784 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1949 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1956 1786 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1956 {NarrowOop[char[0]{}]}  <||@
  Comment 1963 1788 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1967 1790 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1970 1792 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1979 12  <||@
  Comment 1989 block B161 null  <||@
  Comment 1989 1888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1989 1882 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1994 1884 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1999 1890 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1999 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2009 1892 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2012 1894 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2017 1896 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2020 1898 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2020 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2025 [stack:40, stack:60, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:88|QWORD[.]  |- 
     stack:   |r13|DWORD          |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2026 1900 JUMP ~[] destination: B161 -> B162  <||@
  Comment 2031 block B43 null  <||@
  Comment 2031 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2031 600 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2035 602 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2040 604 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2045 606 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2048 608 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60  <||@
  Comment 2054 block B44 null  <||@
  Comment 2054 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2054 612 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2056 614 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 2062 block B46 null  <||@
  Comment 2062 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2062 626 r10|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2068 628 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2071 630 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 2077 block B48 null  <||@
  Comment 2077 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 642 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2082 644 r10|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2088 646 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2091 648 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 2097 block B50 null  <||@
  Comment 2097 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2097 658 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2101 660 stack:112|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2106 662 stack:116|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2110 664 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 666 rax|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2116 668 r13|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 2119 670 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2124 672 rdi|QWORD = LEA [r10|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2129 674 rsi|QWORD = LEA [rax|QWORD[*] + r9|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2134 676 rdx|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 2137 678 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2137 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2143 680 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 682 rcx|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 2152 684 MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 2159 686 rsi|DWORD = ADD (x: stack:96|DWORD, y: stack:108|DWORD) size: DWORD  <||@
  Comment 2167 688 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2169 690 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2171 692 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B58 falseDestination: B50 -> B52  <||@
  Comment 2177 block B52 null  <||@
  Comment 2177 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2177 700 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2181 702 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:96|DWORD) size: DWORD  <||@
  Comment 2185 704 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2187 706 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B58 falseDestination: B52 -> B54  <||@
  Comment 2193 block B54 null  <||@
  Comment 2193 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2193 714 r11|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 2198 716 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2201 718 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2204 720 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 2210 block B56 null  <||@
  Comment 2210 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2210 728 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2215 730 r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2218 732 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2221 734 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B59  <||@
  Comment 2227 block B59 null  <||@
  Comment 2227 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2227 750 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 752 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 754 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 756 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2235 758 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2238 760 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2241 762 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2246 764 rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2251 766 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2254 768 stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2258 770 stack:108|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2262 772 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2262 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2268 774 rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:108|DWORD) size: DWORD  <||@
  Comment 2276 776 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2281 778 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2284 780 JUMP ~[] destination: B59 -> B146  <||@
  Comment 2289 block B99 null  <||@
  Comment 2289 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 1202 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2294 1204 JUMP ~[] destination: B99 -> B106  <||@
  Comment 2299 block B91 null  <||@
  Comment 2299 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 1122 rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2305 1124 rcx|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 2307 1126 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2310 1128 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B96  <||@
  Comment 2316 block B92 null  <||@
  Comment 2316 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2316 1132 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2319 1134 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B98 falseDestination: B92 -> B96  <||@
  Comment 2330 block B6 null  <||@
  Comment 2330 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2330 96 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 2337 98 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 2344 100 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2351 102 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2354 104 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2357 106 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2360 108 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2366 110 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2372 112 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 2378 114 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2383 116 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2386 118 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2392 120 JUMP ~[] destination: B6 -> B41  <||@
  Comment 2397 block B101 null  <||@
  Comment 2397 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2397 1222 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2404 1226 JUMP ~[] destination: B101 -> B103  <||@
  Comment 2409 block B202 null  <||@
  Comment 2409 2208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2409 2210 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2412 2212 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2412 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2422 2214 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2427 2216 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2432 2218 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2432 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2437 [r14:0, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:88|QWORD[.]  |- 
     stack:   |r13|DWORD          |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2438 2220 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 2222 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2444 2226 JUMP ~[] destination: B202 -> B204  <||@
  Comment 2449 block B116 null  <||@
  Comment 2449 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2449 1270 rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f]  <||@
  Comment 2454 1334 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 2461 1336 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2468 1338 DEOPT info [bci:256, 5, 4, 1, 4]  <||@
  Comment 2468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2473 [rdx:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2474 block B122 null  <||@
  Comment 2474 1404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2474 1400 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2479 1406 rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 2483 1408 rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2483 [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2483 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2490 1410 rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 2494 1412 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2496 1414 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B213  <||@
  Comment 2502 block B123 null  <||@
  Comment 2502 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2502 1418 r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2502 [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2502 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2506 1420 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2509 1422 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B212  <||@
  Comment 2515 block B124 null  <||@
  Comment 2515 1424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2515 1426 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2518 1428 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B211  <||@
  Comment 2524 block B125 null  <||@
  Comment 2524 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2524 1432 r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 2528 1434 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 2532 1436 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 2538 block B127 null  <||@
  Comment 2538 1450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2538 1452 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2541 1454 r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2547 1456 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2550 1458 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B210  <||@
  Comment 2556 block B128 null  <||@
  Comment 2556 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2556 1462 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 2560 1464 r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD  <||@
  Comment 2566 1466 MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD  <||@
  Comment 2571 1468 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 2577 1470 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2580 1472 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 2582 1474 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2584 1476 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B128 -> B132 falseDestination: B128 -> B130  <||@
  Comment 2590 block B130 null  <||@
  Comment 2590 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2590 1486 rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2596 1488 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2599 1490 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B130 -> B132 falseDestination: B130 -> B133  <||@
  Comment 2605 block B133 null  <||@
  Comment 2605 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2605 1508 stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2610 1510 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2615 1512 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2619 1514 rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2619 1516 r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2622 1518 rdi|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 2625 1520 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2628 1522 rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2633 1524 rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2638 1526 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2641 1528 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2641 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2647 1530 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2652 1532 r14|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2657 1534 MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2665 1536 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 2671 1538 CMP stack:68|DWORD y: 1 size: DWORD  <||@
  Comment 2676 1544 r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2681 1540 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B133 -> B134 falseDestination: B133 -> B137  <||@
  Comment 2687 block B134 null  <||@
  Comment 2687 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2687 1546 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2690 1548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 2696 block B135 null  <||@
  Comment 2696 1550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 1552 MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2704 1554 rax|DWORD = LEA [r14|DWORD + 2] size: DWORD  <||@
  Comment 2708 1556 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2713 1558 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:68|DWORD) size: DWORD  <||@
  Comment 2717 1560 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2719 1562 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2722 1564 JUMP ~[] destination: B135 -> B138  <||@
  Comment 2722 block B138 null  <||@
  Comment 2722 1584 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2722 1586 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2725 1588 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B138 -> B139 falseDestination: B138 -> B208  <||@
  Comment 2731 block B139 null  <||@
  Comment 2731 1590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 1592 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2737 1594 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 2740 1596 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 2746 block B140 null  <||@
  Comment 2746 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2746 1600 rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 2749 1602 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2755 1604 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2760 1606 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2763 1608 JUMP ~[] destination: B140 -> B146  <||@
  Comment 2768 block B62 null  <||@
  Comment 2768 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2768 798 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2773 800 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2778 802 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2781 804 JUMP ~[] destination: B62 -> B69  <||@
  Comment 2781 block B69 null  <||@
  Comment 2781 858 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2781 860 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2788 862 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2795 864 DEOPT info [bci:43, 5, 4, 1, 4]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2800 [rdx:0, stack:24, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                   |1             |2         |3  |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2801 block B64 null  <||@
  Comment 2801 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2801 814 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2806 816 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2811 818 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2814 820 JUMP ~[] destination: B64 -> B69  <||@
  Comment 2816 block B66 null  <||@
  Comment 2816 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2816 832 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2821 834 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2826 836 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2829 838 JUMP ~[] destination: B66 -> B69  <||@
  Comment 2831 block B68 null  <||@
  Comment 2831 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2831 850 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2836 852 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2841 854 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2844 856 JUMP ~[] destination: B68 -> B69  <||@
  Comment 2846 block B150 null  <||@
  Comment 2846 1748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2846 1750 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2851 1752 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2851 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2861 1754 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2866 1756 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2871 1758 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2871 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2876 [stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:88|QWORD[.]  |- 
     stack:   |r13|DWORD          |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2877 1760 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2877 1762 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2877 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2887 1764 JUMP ~[] destination: B150 -> B152  <||@
  Comment 2892 block B82 null  <||@
  Comment 2892 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2892 1044 rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2895 1046 stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2900 1048 rdi|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2903 1050 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2908 block B137 null  <||@
  Comment 2908 1574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2908 1578 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2912 1580 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 2914 1582 JUMP ~[] destination: B137 -> B138  <||@
  Comment 2919 block B45 null  <||@
  Comment 2919 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2919 618 rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f]  <||@
  Comment 2924 620 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2929 622 JUMP ~[] destination: B45 -> B69  <||@
  Comment 2934 block B47 null  <||@
  Comment 2934 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2934 634 rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f]  <||@
  Comment 2939 636 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2944 638 JUMP ~[] destination: B47 -> B69  <||@
  Comment 2949 block B49 null  <||@
  Comment 2949 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 652 rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f]  <||@
  Comment 2954 654 JUMP ~[] destination: B49 -> B69  <||@
  Comment 2959 block B58 null  <||@
  Comment 2959 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2959 742 MOV [r15|QWORD + 668] y: -288609 size: DWORD  <||@
  Comment 2970 744 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2977 746 DEOPT info [bci:145, 5, 4, 1, 4]  <||@
  Comment 2977 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2982 [rdx:0, stack:24, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                   |1             |2          |3               |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:96|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2983 block B36 null  <||@
  Comment 2983 500 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2983 502 CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4]  <||@
  Comment 2983 [rdx:0, r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2983 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2987 504 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 2993 block B38 null  <||@
  Comment 2993 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2993 516 MOV [rdx|QWORD[.] + 16] y: 45 size: WORD  <||@
  Comment 2999 518 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 3003 520 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 3006 522 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 3012 block B39 null  <||@
  Comment 3012 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3012 526 rdi|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 3019 528 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3026 530 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 3033 532 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3038 534 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 3044 536 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3050 538 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3056 540 JUMP ~[] destination: B39 -> B83  <||@
  Comment 3061 block B141 null  <||@
  Comment 3061 1610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3061 1612 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3064 1614 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B207  <||@
  Comment 3070 block B142 null  <||@
  Comment 3070 1616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3070 1618 r9|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 3074 1620 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 3077 1622 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 3083 block B143 null  <||@
  Comment 3083 1624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 1626 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3085 1628 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3090 1630 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3092 1632 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3095 1634 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3098 1636 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3104 1638 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3109 1640 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3111 1642 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3113 1644 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3115 1646 rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3118 1648 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 3124 1650 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3129 1652 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3132 1654 JUMP ~[] destination: B143 -> B146  <||@
  Comment 3137 block B20 null  <||@
  Comment 3137 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3137 288 stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3142 290 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3147 292 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3151 294 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3156 296 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3162 298 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3167 300 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3167 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3177 302 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3180 304 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3182 306 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3187 308 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3187 9  <||@
  Comment 3191 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 3196 [stack:24, stack:72]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2                   |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |stack:104|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:88|QWORD  |-  |stack:96|DWORD  |stack:92|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3197 310 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 3200 312 BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23  <||@
  Comment 3206 block B23 null  <||@
  Comment 3206 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3206 348 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3209 350 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3214 352 rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 3219 354 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3224 356 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3228 358 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3233 360 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3239 362 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3244 364 JUMP ~[] destination: B23 -> B26  <||@
  Comment 3249 block B132 null  <||@
  Comment 3249 1498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3249 1480 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3252 1500 MOV [r15|QWORD + 668] y: -351585 size: DWORD  <||@
  Comment 3263 1502 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3270 1504 DEOPT info [bci:306, 5, 4, 1, 4]  <||@
  Comment 3270 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3275 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3276 block B144 null  <||@
  Comment 3276 1656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3276 1658 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3279 1660 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B144 -> B145 falseDestination: B144 -> B206  <||@
  Comment 3285 block B145 null  <||@
  Comment 3285 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3285 1664 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3287 1666 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 3292 1668 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3294 1670 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 3297 1672 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3300 1674 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3306 1676 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 3309 1678 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3311 1680 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3313 1682 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3318 1684 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3320 1686 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3323 1688 rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD  <||@
  Comment 3328 1690 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3330 1692 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3333 1694 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3339 1696 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3344 1698 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3346 1700 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3348 1702 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3350 1704 rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3353 1706 MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3359 1708 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 3363 1710 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3368 1712 JUMP ~[] destination: B145 -> B146  <||@
  Comment 3373 block B40 null  <||@
  Comment 3373 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3373 544 r11|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 3379 546 rax|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 3386 548 rdi|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 3393 550 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3400 552 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3403 554 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3406 556 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 3412 558 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3418 560 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3424 562 JUMP ~[] destination: B40 -> B41  <||@
  Comment 3429 block B9 null  <||@
  Comment 3429 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3429 142 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3434 144 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3440 146 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3445 148 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3448 150 rsi|DWORD = LZCNT r11|QWORD size: QWORD  <||@
  Comment 3453 152 rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d]  <||@
  Comment 3458 154 r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3464 156 rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD  <||@
  Comment 3467 158 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 3470 160 r9|DWORD = MOVE input: int[64|0x40]  <||@
  Comment 3476 162 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3479 164 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 3482 166 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 3488 block B11 null  <||@
  Comment 3488 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3488 180 rcx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3493 182 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3495 184 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3498 186 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3501 188 rbx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3504 190 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3509 194 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3514 196 JUMP ~[] destination: B11 -> B18  <||@
  Comment 3519 block B7 null  <||@
  Comment 3519 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3519 124 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3522 126 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3528 128 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3533 130 JUMP ~[] destination: B7 -> B36  <||@
  Comment 3538 block B16 null  <||@
  Comment 3538 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3538 236 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3542 238 stack:68|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 3550 240 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3555 242 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3560 244 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3566 246 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3571 248 JUMP ~[] destination: B16 -> B22  <||@
  Comment 3571 block B22 null  <||@
  Comment 3571 324 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 3571 326 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3571 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3581 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3581 9  <||@
  Comment 3583 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 3588 [stack:72]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:80|QWORD  |-  |stack:64|DWORD  |stack:68|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3589 330 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3593 332 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3598 334 r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 3603 336 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3606 338 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3611 340 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3617 342 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3622 344 JUMP ~[] destination: B22 -> B27  <||@
  Comment 3627 block B71 null  <||@
  Comment 3627 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3627 898 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3631 900 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3636 902 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3641 904 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3646 906 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3648 908 r11|DWORD = ADD (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3654 910 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3657 912 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B75  <||@
  Comment 3663 block B72 null  <||@
  Comment 3663 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3663 916 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 3668 918 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3671 920 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 3677 block B73 null  <||@
  Comment 3677 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3677 924 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3681 926 stack:108|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3685 928 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3688 930 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3691 932 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3694 934 r8|DWORD = MOVE input: int[48|0x30]  <||@
  Comment 3700 936 stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3705 938 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3710 940 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5, 4, 1, 4]  <||@
  Comment 3710 8  <||@
  Comment 3711 {HotSpotMethod<Arrays.fill(char[], int, int, char)>}  <||@
  Comment 3716 [stack:24, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111, duringCall: true, rethrow: false]
              |0  |1                  |2                |3                |4 
     locals:  |-  |stack:88|QWORD[.]  |stack:112|DWORD  |stack:108|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3717 942 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3722 944 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 3727 946 MOV [rdx|QWORD[.] + r11|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 3735 948 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3739 950 MOV [rdx|QWORD[.] + rbx|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 3746 952 r13|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 3750 954 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3755 956 JUMP ~[] destination: B73 -> B146  <||@
  Comment 3760 block B21 null  <||@
  Comment 3760 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3760 -1 [stack:64|DWORD, stack:68|DWORD] = MULTISTACKMOVE (inputs: [stack:96|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 3786 320 stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD  <||@
  Comment 3796 322 JUMP ~[] destination: B21 -> B22  <||@
  Comment 3801 block B10 null  <||@
  Comment 3801 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3801 170 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3806 172 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3811 174 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3816 176 JUMP ~[] destination: B10 -> B22  <||@
  Comment 3821 block B37 null  <||@
  Comment 3821 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3821 508 MOV [r15|QWORD + 668] y: -379675 size: DWORD  <||@
  Comment 3832 510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3839 512 DEOPT info [bci:5, 1, 1, 4]  <||@
  Comment 3839 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3844 [r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3845 block B8 null  <||@
  Comment 3845 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3845 134 r10|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed]  <||@
  Comment 3851 138 JUMP ~[] destination: B8 -> B14  <||@
  Comment 3851 block B14 null  <||@
  Comment 3851 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3851 208 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3856 214 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3863 216 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3870 218 DEOPT info [bci:0]  <||@
  Comment 3870 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3875 [stack:72]at java.lang.Double.toString(Double.java:644) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3876 block B74 null  <||@
  Comment 3876 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3876 960 r10|DWORD = MOVE input: int[-306203|0xfffffffffffb53e5]  <||@
  Comment 3882 962 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3887 964 JUMP ~[] destination: B74 -> B81  <||@
  Comment 3887 block B81 null  <||@
  Comment 3887 1034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3887 1036 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3894 1038 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3901 1040 DEOPT info [bci:85, 5, 4, 1, 4]  <||@
  Comment 3901 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3906 [rdx:0, r11:0, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85, duringCall: false, rethrow: false]
              |0             |1             |2         |3          |4 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |rax|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3907 block B75 null  <||@
  Comment 3907 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3907 968 r10|DWORD = MOVE input: int[-303899|0xfffffffffffb5ce5]  <||@
  Comment 3913 970 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3918 972 JUMP ~[] destination: B75 -> B81  <||@
  Comment 3920 block B119 null  <||@
  Comment 3920 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3920 1384 r8|DWORD = MOVE input: int[-315163|0xfffffffffffb30e5]  <||@
  Comment 3926 1388 JUMP ~[] destination: B119 -> B120  <||@
  Comment 3926 block B120 null  <||@
  Comment 3926 1390 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3926 1386 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3929 1392 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3936 1394 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3943 1396 DEOPT info [bci:197, 5, 4, 1, 4]  <||@
  Comment 3943 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3948 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3949 block B217 null  <||@
  Comment 3949 2370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3949 2372 r10|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5]  <||@
  Comment 3955 2380 JUMP ~[] destination: B217 -> B218  <||@
  Comment 3955 block B218 null  <||@
  Comment 3955 2382 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3955 2374 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3960 2376 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3966 2378 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3971 2384 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3978 2386 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3985 2388 DEOPT info [bci:150, 2, 1, 1, 4]  <||@
  Comment 3985 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3990 [stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3991 block B96 null  <||@
  Comment 3991 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3991 1152 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3994 1158 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1565248032]  <||@
  Comment 3994 {Object[d.a@1565248032]}  <||@
  Comment 4004 1160 MOV [r15|QWORD + 668] y: -319771 size: DWORD  <||@
  Comment 4015 1162 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 4022 1164 DEOPT info [bci:229, 5, 4, 1, 4]  <||@
  Comment 4022 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4027 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4028 block B13 null  <||@
  Comment 4028 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4028 206 r10|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed]  <||@
  Comment 4034 210 JUMP ~[] destination: B13 -> B14  <||@
  Comment 4039 block B212 null  <||@
  Comment 4039 2314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4039 2316 r8|DWORD = MOVE input: int[-340507|0xfffffffffffacde5]  <||@
  Comment 4045 2324 JUMP ~[] destination: B212 -> B214  <||@
  Comment 4045 block B214 null  <||@
  Comment 4045 2338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4045 2330 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4048 2332 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 4054 2334 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 4059 2340 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 4066 2342 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4073 2344 DEOPT info [bci:283, 5, 4, 1, 4]  <||@
  Comment 4073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4078 [rsi:0, r9:0, r11:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 4079 block B79 null  <||@
  Comment 4079 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4079 1008 r10|DWORD = MOVE input: int[-311835|0xfffffffffffb3de5]  <||@
  Comment 4085 1010 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4089 1012 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4094 1014 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4099 1016 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4104 1018 JUMP ~[] destination: B79 -> B81  <||@
  Comment 4109 block B210 null  <||@
  Comment 4109 2290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4109 2292 r8|DWORD = MOVE input: int[-354843|0xfffffffffffa95e5]  <||@
  Comment 4115 2300 JUMP ~[] destination: B210 -> B214  <||@
  Comment 4117 block B118 null  <||@
  Comment 4117 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4117 1376 r8|DWORD = MOVE input: int[-317211|0xfffffffffffb28e5]  <||@
  Comment 4123 1380 JUMP ~[] destination: B118 -> B120  <||@
  Comment 4128 block B211 null  <||@
  Comment 4128 2302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4128 2304 r8|DWORD = MOVE input: int[-342043|0xfffffffffffac7e5]  <||@
  Comment 4134 2312 JUMP ~[] destination: B211 -> B214  <||@
  Comment 4136 block B216 null  <||@
  Comment 4136 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4136 2360 r10|DWORD = MOVE input: int[-253971|0xfffffffffffc1fed]  <||@
  Comment 4142 2368 JUMP ~[] destination: B216 -> B218  <||@
  Comment 4147 block B206 null  <||@
  Comment 4147 2264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4147 2266 r8|DWORD = MOVE input: int[-370203|0xfffffffffffa59e5]  <||@
  Comment 4153 2268 JUMP ~[] destination: B206 -> B209  <||@
  Comment 4153 block B209 null  <||@
  Comment 4153 2282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4153 2284 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 4160 2286 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4167 2288 DEOPT info [bci:396, 5, 4, 1, 4]  <||@
  Comment 4167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4172 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |r11|QWORD[.]  |r10|DWORD  |rsi|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4173 block B60 null  <||@
  Comment 4173 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4173 784 rax|DWORD = MOVE input: int[-278299|0xfffffffffffbc0e5]  <||@
  Comment 4178 786 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4183 788 JUMP ~[] destination: B60 -> B69  <||@
  Comment 4188 block B80 null  <||@
  Comment 4188 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4188 1022 r10|DWORD = MOVE input: int[-309531|0xfffffffffffb46e5]  <||@
  Comment 4194 1024 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4198 1026 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4203 1028 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4208 1030 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4213 1032 JUMP ~[] destination: B80 -> B81  <||@
  Comment 4218 block B207 null  <||@
  Comment 4218 2270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4218 2272 r8|DWORD = MOVE input: int[-399643|0xfffffffffff9e6e5]  <||@
  Comment 4224 2274 JUMP ~[] destination: B207 -> B209  <||@
  Comment 4226 block B148 null  <||@
  Comment 4226 1732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4226 1734 r10|DWORD = MOVE input: int[-375315|0xfffffffffffa45ed]  <||@
  Comment 4232 1736 JUMP ~[] destination: B148 -> B155  <||@
  Comment 4232 block B155 null  <||@
  Comment 4232 1810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4232 1812 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4239 1814 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4246 1816 DEOPT info [bci:8, 4, 1, 4]  <||@
  Comment 4246 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4251 [r14:0, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4252 block B208 null  <||@
  Comment 4252 2276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4252 2278 r8|DWORD = MOVE input: int[-401435|0xfffffffffff9dfe5]  <||@
  Comment 4258 2280 JUMP ~[] destination: B208 -> B209  <||@
  Comment 4260 block B215 null  <||@
  Comment 4260 2346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4260 2348 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 4266 2350 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4271 2352 MOV [r15|QWORD + 668] y: -256803 size: DWORD  <||@
  Comment 4282 2354 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4289 2356 DEOPT info [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 4289 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4294 [r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4295 block B213 null  <||@
  Comment 4295 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4295 2328 r8|DWORD = MOVE input: int[-337179|0xfffffffffffadae5]  <||@
  Comment 4301 2336 JUMP ~[] destination: B213 -> B214  <||@
  Comment 4306 block B136 null  <||@
  Comment 4306 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4306 1568 MOV [r15|QWORD + 668] y: -372763 size: DWORD  <||@
  Comment 4317 1570 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4324 1572 DEOPT info [bci:363, 5, 4, 1, 4]  <||@
  Comment 4324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4329 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4330 block B154 null  <||@
  Comment 4330 1804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4330 1806 r10|DWORD = MOVE input: int[-377875|0xfffffffffffa3bed]  <||@
  Comment 4336 1808 JUMP ~[] destination: B154 -> B155  <||@
  Comment 4338 block B126 null  <||@
  Comment 4338 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4338 1440 r8|DWORD = MOVE input: int[-343059|0xfffffffffffac3ed]  <||@
  Comment 4344 1448 JUMP ~[] destination: B126 -> B214  <||@
  Comment 4349 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4349 4  <||@
  Comment 4355 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4355 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10074[java.lang.Double.toString()]"
  method "HotSpotCompilation-10074[java.lang.Double.toString()]"
  date 1527005235781
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107ccb5a0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@50ad6842 slotKind: QWORD  <||@
  Comment 48 6 xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD  <||@
  Comment 53 8 rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 60 10 r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD  <||@
  Comment 64 12 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 69 14 rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 79 16 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 82 18 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 87 20 r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 97 22 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 107 24 rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 110 26 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 114 28 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 116 30 r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 126 32 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 128 34 BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12  <||@
  Comment 134 block B12 null  <||@
  Comment 134 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 200 CMP rcx|DWORD y: 2047 size: DWORD  <||@
  Comment 140 202 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15  <||@
  Comment 146 block B15 null  <||@
  Comment 146 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 222 rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 152 224 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 155 226 rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 165 228 r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 168 230 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 171 232 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 177 block B17 null  <||@
  Comment 177 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 252 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 180 254 r11|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 186 256 JUMP ~[] destination: B17 -> B18  <||@
  Comment 186 block B18 null  <||@
  Comment 186 258 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 186 260 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 194 262 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4]  <||@
  Comment 194 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 194 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 264 rax|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 207 266 rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD  <||@
  Comment 213 268 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 216 270 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B217  <||@
  Comment 222 block B19 null  <||@
  Comment 222 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 274 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 226 276 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 230 278 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 237 280 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 241 282 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 243 284 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24  <||@
  Comment 249 block B24 null  <||@
  Comment 249 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 249 368 CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980]  <||@
  Comment 249 {NarrowOop[FloatingDecimal$1@1399508980]}  <||@
  Comment 260 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B216  <||@
  Comment 266 block B26 null  <||@
  Comment 266 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 266 378 rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 266 [rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rbx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 380 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 274 382 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 276 384 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 279 386 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 282 388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 285 390 JUMP ~[] destination: B26 -> B27  <||@
  Comment 285 block B27 null  <||@
  Comment 285 392 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 285 394 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 288 396 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29  <||@
  Comment 294 block B29 null  <||@
  Comment 294 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 408 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 294 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 302 410 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B215  <||@
  Comment 308 block B31 null  <||@
  Comment 308 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 400 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 314 402 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 319 422 MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 319 [r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 323 424 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 326 426 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 428 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 331 430 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 337 432 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 342 434 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4]  <||@
  Comment 342 9  <||@
  Comment 343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>}  <||@
  Comment 348 [stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 349 436 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 354 438 rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 359 440 rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 363 442 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 367 444 rsi|DWORD = MOVZXB rsi|DWORD size: DWORD  <||@
  Comment 371 446 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 373 448 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B36  <||@
  Comment 379 block B32 null  <||@
  Comment 379 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 452 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 383 454 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 386 456 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 392 block B33 null  <||@
  Comment 392 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 460 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 399 462 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 406 464 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 413 466 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 418 468 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 424 470 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 430 472 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 436 474 JUMP ~[] destination: B33 -> B83  <||@
  Comment 436 block B83 null  <||@
  Comment 436 1052 [] = LABEL numbPhis: 9 align: false label: ?  <||@
  Comment 436 1054 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 441 1056 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 444 1058 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B122  <||@
  Comment 450 block B84 null  <||@
  Comment 450 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 1062 CMP rsi|DWORD y: -2 size: DWORD  <||@
  Comment 453 1064 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B84 -> B122 falseDestination: B84 -> B86  <||@
  Comment 459 block B86 null  <||@
  Comment 459 1072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 1074 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4]  <||@
  Comment 459 [rdx:0, stack:40, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 459 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 462 1076 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 465 1078 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B119  <||@
  Comment 471 block B87 null  <||@
  Comment 471 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 1082 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 474 1084 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B118  <||@
  Comment 480 block B88 null  <||@
  Comment 480 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 1088 MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD  <||@
  Comment 486 1090 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 492 1092 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 494 1094 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 500 block B89 null  <||@
  Comment 500 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 1098 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 503 1100 stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 507 1102 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 512 1104 JUMP ~[] destination: B89 -> B106  <||@
  Comment 512 block B106 null  <||@
  Comment 512 1256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 1258 rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1260 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4]  <||@
  Comment 516 [rdx:0, rdi:0, r10:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 516 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 520 1262 rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 524 1264 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 526 1266 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B106 -> B116 falseDestination: B106 -> B108  <||@
  Comment 532 block B108 null  <||@
  Comment 532 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 532 1276 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 535 1278 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B108 -> B116 falseDestination: B108 -> B110  <||@
  Comment 541 block B110 null  <||@
  Comment 541 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 1288 r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 545 1290 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 548 1292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B110 -> B116 falseDestination: B110 -> B112  <||@
  Comment 554 block B112 null  <||@
  Comment 554 1300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 1302 r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 562 1304 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 565 1306 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 568 1308 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B112 -> B116 falseDestination: B112 -> B114  <||@
  Comment 574 block B114 null  <||@
  Comment 574 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 574 1318 rax|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 578 1320 rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 581 1322 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 584 1324 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B117  <||@
  Comment 590 block B117 null  <||@
  Comment 590 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 1342 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 594 1344 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1346 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1348 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 597 1350 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 600 1352 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 603 1354 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 608 1356 rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD  <||@
  Comment 613 1358 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 616 1360 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 621 1362 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 626 1364 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 626 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 632 1366 r11|DWORD = ADD (x: stack:64|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 642 1368 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 647 1370 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 650 1372 JUMP ~[] destination: B117 -> B146  <||@
  Comment 650 block B146 null  <||@
  Comment 650 1714 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 650 1716 r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 654 1718 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4]  <||@
  Comment 654 [r10:0, r14:0, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 654 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 658 1720 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 658 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 668 1722 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 672 1724 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B153  <||@
  Comment 678 block B153 null  <||@
  Comment 678 1794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 1796 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 686 1798 rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 692 1800 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 694 1802 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B156  <||@
  Comment 700 block B156 null  <||@
  Comment 700 1818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 1820 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 704 1822 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 708 1824 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 715 1826 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B156 -> B157 falseDestination: B156 -> B161  <||@
  Comment 721 block B157 null  <||@
  Comment 721 1828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 1830 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 726 1832 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 729 1834 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 732 1836 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 735 1838 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 741 1840 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 744 1842 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B157 -> B161 falseDestination: B157 -> B159  <||@
  Comment 750 block B159 null  <||@
  Comment 750 1852 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 1854 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 754 1856 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 762 1858 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 770 1860 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 778 1862 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 786 1864 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 790 1866 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 797 1868 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 804 1870 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 804 1872 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 809 1874 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 814 1876 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 817 1878 JUMP ~[] destination: B159 -> B162  <||@
  Comment 817 block B162 null  <||@
  Comment 817 1902 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 817 1904 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 820 1906 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 827 1908 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 830 1910 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 834 1912 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B162 -> B181 falseDestination: B162 -> B164  <||@
  Comment 840 block B164 null  <||@
  Comment 840 1918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 1920 r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 845 1922 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 849 1924 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 857 1926 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 861 1928 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 864 1934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 871 1930 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B164 -> B169 falseDestination: B164 -> B167  <||@
  Comment 877 block B169 null  <||@
  Comment 877 1960 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 877 1962 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 881 1964 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 884 1966 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B169 -> B172 falseDestination: B169 -> B171  <||@
  Comment 890 block B171 null  <||@
  Comment 890 1972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 1974 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 896 1976 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 902 1978 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 906 1980 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 909 1982 JUMP ~[] destination: B171 -> B172  <||@
  Comment 909 block B172 null  <||@
  Comment 909 1984 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 909 1986 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 913 1988 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 916 1990 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B172 -> B175 falseDestination: B172 -> B174  <||@
  Comment 922 block B174 null  <||@
  Comment 922 1996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 1998 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 928 2000 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 934 2002 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 938 2004 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 941 2006 JUMP ~[] destination: B174 -> B175  <||@
  Comment 941 block B175 null  <||@
  Comment 941 2008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 941 2010 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 945 2012 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 948 2014 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B175 -> B178 falseDestination: B175 -> B177  <||@
  Comment 954 block B177 null  <||@
  Comment 954 2020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 954 2022 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 960 2024 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 966 2026 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 970 2028 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 973 2030 JUMP ~[] destination: B177 -> B178  <||@
  Comment 973 block B178 null  <||@
  Comment 973 2032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 973 2034 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 979 2036 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 982 2038 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B181 falseDestination: B178 -> B180  <||@
  Comment 988 block B180 null  <||@
  Comment 988 2044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 988 2046 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 993 2048 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 998 2050 JUMP ~[] destination: B180 -> B181  <||@
  Comment 998 block B181 null  <||@
  Comment 998 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 998 2054 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1001 2056 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1004 2058 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B181 -> B182 falseDestination: B181 -> B201  <||@
  Comment 1010 block B201 null  <||@
  Comment 1010 2198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 2200 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1014 2202 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1018 2204 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1022 2206 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B201 -> B202 falseDestination: B201 -> B203  <||@
  Comment 1028 block B203 null  <||@
  Comment 1028 2228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 2230 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1032 2232 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1039 2234 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1039 2238 JUMP ~[] destination: B203 -> B204  <||@
  Comment 1039 block B204 null  <||@
  Comment 1039 2240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1039 2236 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1039 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1049 2242 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1052 2244 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1059 2246 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1062 2248 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1062 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1069 2250 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 1073 2252 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1076 2254 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1080 2256 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1083 2258 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1092 12  <||@
  Comment 1102 block B182 null  <||@
  Comment 1102 2060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 2062 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1107 2064 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1110 2066 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1114 2068 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1117 2070 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B182 -> B183 falseDestination: B182 -> B184  <||@
  Comment 1123 block B183 null  <||@
  Comment 1123 2072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1123 2074 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1130 2076 JUMP ~[] destination: B183 -> B187  <||@
  Comment 1130 block B187 null  <||@
  Comment 1130 2100 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1130 2102 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1134 2104 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1137 2106 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B187 -> B190 falseDestination: B187 -> B189  <||@
  Comment 1143 block B189 null  <||@
  Comment 1143 2112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 2114 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1147 2116 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1153 2118 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1157 2120 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1160 2122 JUMP ~[] destination: B189 -> B190  <||@
  Comment 1160 block B190 null  <||@
  Comment 1160 2124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1160 2126 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1164 2128 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1167 2130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B190 -> B193 falseDestination: B190 -> B192  <||@
  Comment 1173 block B192 null  <||@
  Comment 1173 2136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 2138 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1177 2140 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1183 2142 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1187 2144 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1190 2146 JUMP ~[] destination: B192 -> B193  <||@
  Comment 1190 block B193 null  <||@
  Comment 1190 2148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1190 2150 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1194 2152 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1197 2154 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B193 -> B196 falseDestination: B193 -> B195  <||@
  Comment 1203 block B195 null  <||@
  Comment 1203 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 2162 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1207 2164 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1213 2166 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1217 2168 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1220 2170 JUMP ~[] destination: B195 -> B196  <||@
  Comment 1220 block B196 null  <||@
  Comment 1220 2172 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1220 2174 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1223 2176 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1226 2178 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B196 -> B201 falseDestination: B196 -> B198  <||@
  Comment 1232 block B198 null  <||@
  Comment 1232 2184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1232 2186 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1237 2188 JUMP ~[] destination: B198 -> B201  <||@
  Comment 1242 block B34 null  <||@
  Comment 1242 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1242 478 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1249 480 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1256 482 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1263 484 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1265 486 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1268 488 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1274 490 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1280 492 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1286 494 JUMP ~[] destination: B34 -> B41  <||@
  Comment 1286 block B41 null  <||@
  Comment 1286 564 [] = LABEL numbPhis: 10 align: false label: ?  <||@
  Comment 1286 566 stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1290 568 CMP rsi|DWORD y: 8 size: DWORD  <||@
  Comment 1293 570 BRANCH trueDestinationProbability: 0.9952842720510096 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B82  <||@
  Comment 1299 block B42 null  <||@
  Comment 1299 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1299 574 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1304 576 NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1304 [rdx:0, r9:0, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1304 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1306 578 rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1310 580 r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1310 [rdx:0, rdi:0, r9:0, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1310 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1318 582 r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1322 584 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1327 586 rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 1331 588 rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 1335 590 rbp|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 1338 592 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 1342 594 CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1344 596 BRANCH trueDestinationProbability: 0.4466454034221034 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61  <||@
  Comment 1350 block B61 null  <||@
  Comment 1350 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1350 792 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1352 794 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1358 block B63 null  <||@
  Comment 1358 806 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1358 808 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1360 810 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1366 block B65 null  <||@
  Comment 1366 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 824 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1369 826 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1372 828 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1378 block B67 null  <||@
  Comment 1378 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1378 842 r11|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1384 844 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1387 846 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70  <||@
  Comment 1393 block B70 null  <||@
  Comment 1393 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1393 868 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 870 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1398 872 r11|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 874 rcx|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1404 876 rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1409 878 rsi|QWORD = LEA [r11|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1414 880 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1417 882 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1422 884 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1426 886 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1426 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1432 888 r10|DWORD = ADD (x: stack:64|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1442 890 rsi|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1446 892 CMP (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1450 894 BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B76  <||@
  Comment 1456 block B76 null  <||@
  Comment 1456 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 976 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1461 978 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1464 980 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B80  <||@
  Comment 1470 block B77 null  <||@
  Comment 1470 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1470 984 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 1475 986 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1478 988 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 1484 block B78 null  <||@
  Comment 1484 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1484 992 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1489 994 MOV [rdx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1497 996 MOV [rdx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1504 998 rdi|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 1508 1000 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1513 1002 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1516 1004 JUMP ~[] destination: B78 -> B146  <||@
  Comment 1521 block B90 null  <||@
  Comment 1521 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1521 1108 r10|DWORD = NEG rsi|DWORD size: DWORD  <||@
  Comment 1527 1110 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1530 1112 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1536 1114 rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1541 1116 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1544 1118 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B98  <||@
  Comment 1550 block B98 null  <||@
  Comment 1550 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1550 1168 stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1555 1170 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1560 1176 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1562 1178 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1565 1180 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1567 1182 stack:68|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1571 1184 stack:64|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1575 1186 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1580 1188 - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4]  <||@
  Comment 1580 8  <||@
  Comment 1583 {HotSpotMethod<Arrays.rangeCheck(int, int, int)>}  <||@
  Comment 1588 [stack:40, stack:72, stack:88]at java.util.Arrays.fill(Arrays.java:2973) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1               |2               |3             |4 
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD  |stack:68|DWORD  |int[48|0x30]  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:92|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1589 1190 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1594 1192 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1599 1194 r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1606 1196 CMP stack:80|QWORD y: 1 size: QWORD  <||@
  Comment 1612 1198 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1618 block B100 null  <||@
  Comment 1618 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1618 1208 rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 1623 1210 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1628 1212 r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1633 1214 rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 1637 1216 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1640 1218 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102  <||@
  Comment 1646 block B102 null  <||@
  Comment 1646 1228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1646 1230 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1646 {DataSection[0x0]}  <||@
  Comment 1655 1232 J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1660 1234 rsi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1667 1238 JUMP ~[] destination: B102 -> B103  <||@
  Comment 1667 block B103 null  <||@
  Comment 1667 1240 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1667 1236 rdi|QWORD = MOVE stack:104|QWORD moveKind: QWORD  <||@
  Comment 1672 1242 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1675 1244 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B106 falseDestination: B103 -> B105  <||@
  Comment 1681 block B105 null  <||@
  Comment 1681 1250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1681 1252 MOV [r8|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1687 1254 JUMP ~[] destination: B105 -> B106  <||@
  Comment 1692 block B1 null  <||@
  Comment 1692 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 38 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1695 40 BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 1701 block B2 null  <||@
  Comment 1701 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1701 44 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1704 46 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 1710 block B3 null  <||@
  Comment 1710 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1710 50 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]  <||@
  Comment 1710 {Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]}  <||@
  Comment 1720 52 rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1725 54 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}]  <||@
  Comment 1725 {Object[char[26]{0, ., 0,  ,  , ...}]}  <||@
  Comment 1735 56 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1737 58 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 1743 block B4 null  <||@
  Comment 1743 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1743 62 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1747 64 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1751 66 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1757 block B5 null  <||@
  Comment 1757 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1757 70 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1764 72 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1771 74 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1778 76 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1783 78 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1786 80 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1792 82 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1798 84 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1804 86 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1809 88 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1812 90 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1818 92 JUMP ~[] destination: B5 -> B83  <||@
  Comment 1823 block B184 null  <||@
  Comment 1823 2078 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 2080 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1827 2082 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1834 2084 JUMP ~[] destination: B184 -> B185  <||@
  Comment 1834 block B185 loop 1 depth 1 header:2396|LoopBegin  <||@
  Comment 1834 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1840 2088 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1846 2090 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1850 2092 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1853 2094 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B185 -> B187 falseDestination: B185 -> B185  <||@
  Comment 1860 block B167 loop 0 depth 1 header:2333|LoopBegin  <||@
  Comment 1860 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1872 1946 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1878 1948 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1884 1950 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1888 1952 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1891 1954 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B167 -> B169 falseDestination: B167 -> B167  <||@
  Comment 1898 block B147 null  <||@
  Comment 1898 1726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 1728 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1901 1730 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 1907 block B149 null  <||@
  Comment 1907 1738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1907 1740 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1911 1742 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1915 1744 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1919 1746 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 1925 block B151 null  <||@
  Comment 1925 1766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1925 1768 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1929 1770 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1936 1772 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1936 1774 JUMP ~[] destination: B151 -> B152  <||@
  Comment 1936 block B152 null  <||@
  Comment 1936 1776 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1936 1778 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1939 1780 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1946 1782 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1949 1784 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1949 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1956 1786 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1956 {NarrowOop[char[0]{}]}  <||@
  Comment 1963 1788 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1967 1790 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1970 1792 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1979 12  <||@
  Comment 1989 block B161 null  <||@
  Comment 1989 1888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1989 1882 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1994 1884 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1999 1890 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1999 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2009 1892 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2012 1894 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2017 1896 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2020 1898 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2020 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2025 [stack:40, stack:60, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:88|QWORD[.]  |- 
     stack:   |r13|DWORD          |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2026 1900 JUMP ~[] destination: B161 -> B162  <||@
  Comment 2031 block B43 null  <||@
  Comment 2031 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2031 600 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2035 602 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2040 604 stack:64|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2045 606 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2048 608 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60  <||@
  Comment 2054 block B44 null  <||@
  Comment 2054 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2054 612 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2056 614 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 2062 block B46 null  <||@
  Comment 2062 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2062 626 r10|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2068 628 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2071 630 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 2077 block B48 null  <||@
  Comment 2077 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 642 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2082 644 r10|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2088 646 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2091 648 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 2097 block B50 null  <||@
  Comment 2097 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2097 658 stack:108|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2101 660 stack:112|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2106 662 stack:116|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2110 664 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 666 rax|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2116 668 r13|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 2119 670 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2124 672 rdi|QWORD = LEA [r10|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2129 674 rsi|QWORD = LEA [rax|QWORD[*] + r9|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2134 676 rdx|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 2137 678 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2137 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2143 680 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 682 rcx|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 2152 684 MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 2159 686 rsi|DWORD = ADD (x: stack:96|DWORD, y: stack:108|DWORD) size: DWORD  <||@
  Comment 2167 688 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2169 690 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2171 692 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B58 falseDestination: B50 -> B52  <||@
  Comment 2177 block B52 null  <||@
  Comment 2177 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2177 700 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2181 702 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:96|DWORD) size: DWORD  <||@
  Comment 2185 704 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2187 706 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B58 falseDestination: B52 -> B54  <||@
  Comment 2193 block B54 null  <||@
  Comment 2193 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2193 714 r11|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 2198 716 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2201 718 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2204 720 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 2210 block B56 null  <||@
  Comment 2210 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2210 728 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2215 730 r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2218 732 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2221 734 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B59  <||@
  Comment 2227 block B59 null  <||@
  Comment 2227 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2227 750 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 752 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 754 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 756 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2235 758 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2238 760 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2241 762 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2246 764 rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2251 766 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2254 768 stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2258 770 stack:108|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2262 772 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2262 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2268 774 rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:108|DWORD) size: DWORD  <||@
  Comment 2276 776 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2281 778 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2284 780 JUMP ~[] destination: B59 -> B146  <||@
  Comment 2289 block B99 null  <||@
  Comment 2289 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2289 1202 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2294 1204 JUMP ~[] destination: B99 -> B106  <||@
  Comment 2299 block B91 null  <||@
  Comment 2299 1120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 1122 rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2305 1124 rcx|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 2307 1126 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2310 1128 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B96  <||@
  Comment 2316 block B92 null  <||@
  Comment 2316 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2316 1132 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2319 1134 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B98 falseDestination: B92 -> B96  <||@
  Comment 2330 block B6 null  <||@
  Comment 2330 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2330 96 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 2337 98 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 2344 100 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2351 102 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2354 104 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2357 106 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2360 108 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2366 110 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2372 112 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 2378 114 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2383 116 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2386 118 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2392 120 JUMP ~[] destination: B6 -> B41  <||@
  Comment 2397 block B101 null  <||@
  Comment 2397 1220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2397 1222 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2404 1226 JUMP ~[] destination: B101 -> B103  <||@
  Comment 2409 block B202 null  <||@
  Comment 2409 2208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2409 2210 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2412 2212 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2412 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2422 2214 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2427 2216 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2432 2218 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2432 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2437 [r14:0, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:88|QWORD[.]  |- 
     stack:   |r13|DWORD          |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2438 2220 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 2222 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2444 2226 JUMP ~[] destination: B202 -> B204  <||@
  Comment 2449 block B116 null  <||@
  Comment 2449 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2449 1270 rsi|DWORD = MOVE input: int[-332129|0xfffffffffffaee9f]  <||@
  Comment 2454 1334 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 2461 1336 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2468 1338 DEOPT info [bci:256, 5, 4, 1, 4]  <||@
  Comment 2468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2473 [rdx:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2474 block B122 null  <||@
  Comment 2474 1404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2474 1400 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2479 1406 rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 2483 1408 rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2483 [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2483 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2490 1410 rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 2494 1412 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2496 1414 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B122 -> B123 falseDestination: B122 -> B213  <||@
  Comment 2502 block B123 null  <||@
  Comment 2502 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2502 1418 r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2502 [rcx:0, rdx:0, r9:0, stack:40, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2502 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2506 1420 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2509 1422 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B123 -> B124 falseDestination: B123 -> B212  <||@
  Comment 2515 block B124 null  <||@
  Comment 2515 1424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2515 1426 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2518 1428 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B124 -> B125 falseDestination: B124 -> B211  <||@
  Comment 2524 block B125 null  <||@
  Comment 2524 1430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2524 1432 r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 2528 1434 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 2532 1436 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 2538 block B127 null  <||@
  Comment 2538 1450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2538 1452 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2541 1454 r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2547 1456 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2550 1458 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B210  <||@
  Comment 2556 block B128 null  <||@
  Comment 2556 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2556 1462 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e108622 encoding: base: 0 shift: 3  <||@
  Comment 2560 1464 r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD  <||@
  Comment 2566 1466 MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD  <||@
  Comment 2571 1468 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 2577 1470 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2580 1472 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 2582 1474 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2584 1476 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B128 -> B132 falseDestination: B128 -> B130  <||@
  Comment 2590 block B130 null  <||@
  Comment 2590 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2590 1486 rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2596 1488 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2599 1490 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B130 -> B132 falseDestination: B130 -> B133  <||@
  Comment 2605 block B133 null  <||@
  Comment 2605 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2605 1508 stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2610 1510 stack:64|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2615 1512 stack:68|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2619 1514 rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2619 1516 r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2622 1518 rdi|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 2625 1520 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2628 1522 rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2633 1524 rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2638 1526 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2641 1528 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2641 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2647 1530 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2652 1532 r14|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2657 1534 MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2665 1536 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 2671 1538 CMP stack:68|DWORD y: 1 size: DWORD  <||@
  Comment 2676 1544 r13|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2681 1540 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B133 -> B134 falseDestination: B133 -> B137  <||@
  Comment 2687 block B134 null  <||@
  Comment 2687 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2687 1546 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2690 1548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 2696 block B135 null  <||@
  Comment 2696 1550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 1552 MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2704 1554 rax|DWORD = LEA [r14|DWORD + 2] size: DWORD  <||@
  Comment 2708 1556 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2713 1558 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:68|DWORD) size: DWORD  <||@
  Comment 2717 1560 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2719 1562 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2722 1564 JUMP ~[] destination: B135 -> B138  <||@
  Comment 2722 block B138 null  <||@
  Comment 2722 1584 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2722 1586 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2725 1588 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B138 -> B139 falseDestination: B138 -> B208  <||@
  Comment 2731 block B139 null  <||@
  Comment 2731 1590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2731 1592 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2737 1594 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 2740 1596 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 2746 block B140 null  <||@
  Comment 2746 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2746 1600 rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 2749 1602 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2755 1604 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2760 1606 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2763 1608 JUMP ~[] destination: B140 -> B146  <||@
  Comment 2768 block B62 null  <||@
  Comment 2768 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2768 798 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2773 800 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2778 802 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2781 804 JUMP ~[] destination: B62 -> B69  <||@
  Comment 2781 block B69 null  <||@
  Comment 2781 858 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2781 860 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2788 862 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2795 864 DEOPT info [bci:43, 5, 4, 1, 4]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2800 [rdx:0, stack:24, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                   |1             |2         |3  |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2801 block B64 null  <||@
  Comment 2801 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2801 814 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2806 816 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2811 818 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2814 820 JUMP ~[] destination: B64 -> B69  <||@
  Comment 2816 block B66 null  <||@
  Comment 2816 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2816 832 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2821 834 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2826 836 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2829 838 JUMP ~[] destination: B66 -> B69  <||@
  Comment 2831 block B68 null  <||@
  Comment 2831 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2831 850 rax|DWORD = MOVE input: int[-299617|0xfffffffffffb6d9f]  <||@
  Comment 2836 852 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2841 854 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2844 856 JUMP ~[] destination: B68 -> B69  <||@
  Comment 2846 block B150 null  <||@
  Comment 2846 1748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2846 1750 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2851 1752 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2851 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2861 1754 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2866 1756 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2871 1758 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2871 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2876 [stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:88|QWORD[.]  |- 
     stack:   |r13|DWORD          |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2877 1760 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2877 1762 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2877 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2887 1764 JUMP ~[] destination: B150 -> B152  <||@
  Comment 2892 block B82 null  <||@
  Comment 2892 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2892 1044 rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2895 1046 stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2900 1048 rdi|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2903 1050 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2908 block B137 null  <||@
  Comment 2908 1574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2908 1578 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2912 1580 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 2914 1582 JUMP ~[] destination: B137 -> B138  <||@
  Comment 2919 block B45 null  <||@
  Comment 2919 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2919 618 rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f]  <||@
  Comment 2924 620 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2929 622 JUMP ~[] destination: B45 -> B69  <||@
  Comment 2934 block B47 null  <||@
  Comment 2934 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2934 634 rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f]  <||@
  Comment 2939 636 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2944 638 JUMP ~[] destination: B47 -> B69  <||@
  Comment 2949 block B49 null  <||@
  Comment 2949 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2949 652 rax|DWORD = MOVE input: int[-274529|0xfffffffffffbcf9f]  <||@
  Comment 2954 654 JUMP ~[] destination: B49 -> B69  <||@
  Comment 2959 block B58 null  <||@
  Comment 2959 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2959 742 MOV [r15|QWORD + 668] y: -288609 size: DWORD  <||@
  Comment 2970 744 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2977 746 DEOPT info [bci:145, 5, 4, 1, 4]  <||@
  Comment 2977 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2982 [rdx:0, stack:24, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                   |1             |2          |3               |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:96|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2983 block B36 null  <||@
  Comment 2983 500 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2983 502 CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4]  <||@
  Comment 2983 [rdx:0, r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2983 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2987 504 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 2993 block B38 null  <||@
  Comment 2993 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2993 516 MOV [rdx|QWORD[.] + 16] y: 45 size: WORD  <||@
  Comment 2999 518 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 3003 520 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 3006 522 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 3012 block B39 null  <||@
  Comment 3012 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3012 526 rdi|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 3019 528 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3026 530 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 3033 532 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3038 534 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 3044 536 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3050 538 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3056 540 JUMP ~[] destination: B39 -> B83  <||@
  Comment 3061 block B141 null  <||@
  Comment 3061 1610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3061 1612 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 3064 1614 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B207  <||@
  Comment 3070 block B142 null  <||@
  Comment 3070 1616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3070 1618 r9|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 3074 1620 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 3077 1622 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 3083 block B143 null  <||@
  Comment 3083 1624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 1626 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3085 1628 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3090 1630 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3092 1632 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3095 1634 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3098 1636 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3104 1638 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3109 1640 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3111 1642 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3113 1644 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3115 1646 rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3118 1648 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 3124 1650 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3129 1652 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3132 1654 JUMP ~[] destination: B143 -> B146  <||@
  Comment 3137 block B20 null  <||@
  Comment 3137 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3137 288 stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3142 290 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3147 292 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3151 294 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3156 296 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3162 298 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3167 300 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3167 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3177 302 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3180 304 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3182 306 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3187 308 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3187 9  <||@
  Comment 3191 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 3196 [stack:24, stack:72]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2                   |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |stack:104|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:88|QWORD  |-  |stack:96|DWORD  |stack:92|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3197 310 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 3200 312 BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23  <||@
  Comment 3206 block B23 null  <||@
  Comment 3206 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3206 348 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3209 350 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3214 352 rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 3219 354 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3224 356 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3228 358 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3233 360 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3239 362 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3244 364 JUMP ~[] destination: B23 -> B26  <||@
  Comment 3249 block B132 null  <||@
  Comment 3249 1498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3249 1480 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3252 1500 MOV [r15|QWORD + 668] y: -351585 size: DWORD  <||@
  Comment 3263 1502 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3270 1504 DEOPT info [bci:306, 5, 4, 1, 4]  <||@
  Comment 3270 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3275 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3276 block B144 null  <||@
  Comment 3276 1656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3276 1658 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3279 1660 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B144 -> B145 falseDestination: B144 -> B206  <||@
  Comment 3285 block B145 null  <||@
  Comment 3285 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3285 1664 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3287 1666 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 3292 1668 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3294 1670 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 3297 1672 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3300 1674 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3306 1676 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 3309 1678 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3311 1680 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3313 1682 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3318 1684 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3320 1686 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3323 1688 rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD  <||@
  Comment 3328 1690 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3330 1692 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3333 1694 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3339 1696 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3344 1698 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3346 1700 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3348 1702 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3350 1704 rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3353 1706 MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3359 1708 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 3363 1710 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3368 1712 JUMP ~[] destination: B145 -> B146  <||@
  Comment 3373 block B40 null  <||@
  Comment 3373 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3373 544 r11|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 3379 546 rax|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 3386 548 rdi|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 3393 550 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3400 552 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3403 554 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3406 556 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 3412 558 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3418 560 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3424 562 JUMP ~[] destination: B40 -> B41  <||@
  Comment 3429 block B9 null  <||@
  Comment 3429 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3429 142 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3434 144 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3440 146 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3445 148 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3448 150 rsi|DWORD = LZCNT r11|QWORD size: QWORD  <||@
  Comment 3453 152 rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d]  <||@
  Comment 3458 154 r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3464 156 rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD  <||@
  Comment 3467 158 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 3470 160 r9|DWORD = MOVE input: int[64|0x40]  <||@
  Comment 3476 162 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3479 164 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 3482 166 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 3488 block B11 null  <||@
  Comment 3488 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3488 180 rcx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3493 182 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3495 184 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3498 186 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3501 188 rbx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3504 190 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3509 194 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3514 196 JUMP ~[] destination: B11 -> B18  <||@
  Comment 3519 block B7 null  <||@
  Comment 3519 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3519 124 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3522 126 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3528 128 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3533 130 JUMP ~[] destination: B7 -> B36  <||@
  Comment 3538 block B16 null  <||@
  Comment 3538 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3538 236 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3542 238 stack:68|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 3550 240 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3555 242 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3560 244 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3566 246 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3571 248 JUMP ~[] destination: B16 -> B22  <||@
  Comment 3571 block B22 null  <||@
  Comment 3571 324 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 3571 326 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3571 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3581 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3581 9  <||@
  Comment 3583 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 3588 [stack:72]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:80|QWORD  |-  |stack:64|DWORD  |stack:68|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3589 330 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3593 332 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3598 334 r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 3603 336 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3606 338 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3611 340 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3617 342 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3622 344 JUMP ~[] destination: B22 -> B27  <||@
  Comment 3627 block B71 null  <||@
  Comment 3627 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3627 898 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3631 900 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3636 902 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3641 904 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3646 906 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3648 908 r11|DWORD = ADD (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3654 910 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3657 912 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B71 -> B72 falseDestination: B71 -> B75  <||@
  Comment 3663 block B72 null  <||@
  Comment 3663 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3663 916 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 3668 918 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3671 920 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 3677 block B73 null  <||@
  Comment 3677 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3677 924 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3681 926 stack:108|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3685 928 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3688 930 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3691 932 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3694 934 r8|DWORD = MOVE input: int[48|0x30]  <||@
  Comment 3700 936 stack:112|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3705 938 stack:116|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3710 940 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5, 4, 1, 4]  <||@
  Comment 3710 8  <||@
  Comment 3711 {HotSpotMethod<Arrays.fill(char[], int, int, char)>}  <||@
  Comment 3716 [stack:24, stack:40, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111, duringCall: true, rethrow: false]
              |0  |1                  |2                |3                |4 
     locals:  |-  |stack:88|QWORD[.]  |stack:112|DWORD  |stack:108|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3717 942 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3722 944 r11|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 3727 946 MOV [rdx|QWORD[.] + r11|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 3735 948 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3739 950 MOV [rdx|QWORD[.] + rbx|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 3746 952 r13|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 3750 954 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3755 956 JUMP ~[] destination: B73 -> B146  <||@
  Comment 3760 block B21 null  <||@
  Comment 3760 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3760 -1 [stack:64|DWORD, stack:68|DWORD] = MULTISTACKMOVE (inputs: [stack:96|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 3786 320 stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD  <||@
  Comment 3796 322 JUMP ~[] destination: B21 -> B22  <||@
  Comment 3801 block B10 null  <||@
  Comment 3801 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3801 170 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3806 172 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3811 174 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3816 176 JUMP ~[] destination: B10 -> B22  <||@
  Comment 3821 block B37 null  <||@
  Comment 3821 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3821 508 MOV [r15|QWORD + 668] y: -379675 size: DWORD  <||@
  Comment 3832 510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3839 512 DEOPT info [bci:5, 1, 1, 4]  <||@
  Comment 3839 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3844 [r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3845 block B8 null  <||@
  Comment 3845 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3845 134 r10|DWORD = MOVE input: int[-244243|0xfffffffffffc45ed]  <||@
  Comment 3851 138 JUMP ~[] destination: B8 -> B14  <||@
  Comment 3851 block B14 null  <||@
  Comment 3851 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3851 208 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3856 214 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3863 216 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3870 218 DEOPT info [bci:0]  <||@
  Comment 3870 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3875 [stack:72]at java.lang.Double.toString(Double.java:644) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3876 block B74 null  <||@
  Comment 3876 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3876 960 r10|DWORD = MOVE input: int[-306203|0xfffffffffffb53e5]  <||@
  Comment 3882 962 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3887 964 JUMP ~[] destination: B74 -> B81  <||@
  Comment 3887 block B81 null  <||@
  Comment 3887 1034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3887 1036 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3894 1038 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3901 1040 DEOPT info [bci:85, 5, 4, 1, 4]  <||@
  Comment 3901 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3906 [rdx:0, r11:0, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85, duringCall: false, rethrow: false]
              |0             |1             |2         |3          |4 
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |r9|DWORD  |rax|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3907 block B75 null  <||@
  Comment 3907 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3907 968 r10|DWORD = MOVE input: int[-303899|0xfffffffffffb5ce5]  <||@
  Comment 3913 970 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3918 972 JUMP ~[] destination: B75 -> B81  <||@
  Comment 3920 block B119 null  <||@
  Comment 3920 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3920 1384 r8|DWORD = MOVE input: int[-315163|0xfffffffffffb30e5]  <||@
  Comment 3926 1388 JUMP ~[] destination: B119 -> B120  <||@
  Comment 3926 block B120 null  <||@
  Comment 3926 1390 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3926 1386 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3929 1392 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3936 1394 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3943 1396 DEOPT info [bci:197, 5, 4, 1, 4]  <||@
  Comment 3943 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3948 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3949 block B217 null  <||@
  Comment 3949 2370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3949 2372 r10|DWORD = MOVE input: int[-250907|0xfffffffffffc2be5]  <||@
  Comment 3955 2380 JUMP ~[] destination: B217 -> B218  <||@
  Comment 3955 block B218 null  <||@
  Comment 3955 2382 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3955 2374 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3960 2376 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3966 2378 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3971 2384 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3978 2386 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3985 2388 DEOPT info [bci:150, 2, 1, 1, 4]  <||@
  Comment 3985 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3990 [stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3991 block B96 null  <||@
  Comment 3991 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3991 1152 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3994 1158 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1565248032]  <||@
  Comment 3994 {Object[d.a@1565248032]}  <||@
  Comment 4004 1160 MOV [r15|QWORD + 668] y: -319771 size: DWORD  <||@
  Comment 4015 1162 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 4022 1164 DEOPT info [bci:229, 5, 4, 1, 4]  <||@
  Comment 4022 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4027 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4028 block B13 null  <||@
  Comment 4028 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4028 206 r10|DWORD = MOVE input: int[-243987|0xfffffffffffc46ed]  <||@
  Comment 4034 210 JUMP ~[] destination: B13 -> B14  <||@
  Comment 4039 block B212 null  <||@
  Comment 4039 2314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4039 2316 r8|DWORD = MOVE input: int[-340507|0xfffffffffffacde5]  <||@
  Comment 4045 2324 JUMP ~[] destination: B212 -> B214  <||@
  Comment 4045 block B214 null  <||@
  Comment 4045 2338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4045 2330 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4048 2332 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 4054 2334 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 4059 2340 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 4066 2342 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4073 2344 DEOPT info [bci:283, 5, 4, 1, 4]  <||@
  Comment 4073 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4078 [rsi:0, r9:0, r11:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 4079 block B79 null  <||@
  Comment 4079 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4079 1008 r10|DWORD = MOVE input: int[-311835|0xfffffffffffb3de5]  <||@
  Comment 4085 1010 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4089 1012 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4094 1014 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4099 1016 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4104 1018 JUMP ~[] destination: B79 -> B81  <||@
  Comment 4109 block B210 null  <||@
  Comment 4109 2290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4109 2292 r8|DWORD = MOVE input: int[-354843|0xfffffffffffa95e5]  <||@
  Comment 4115 2300 JUMP ~[] destination: B210 -> B214  <||@
  Comment 4117 block B118 null  <||@
  Comment 4117 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4117 1376 r8|DWORD = MOVE input: int[-317211|0xfffffffffffb28e5]  <||@
  Comment 4123 1380 JUMP ~[] destination: B118 -> B120  <||@
  Comment 4128 block B211 null  <||@
  Comment 4128 2302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4128 2304 r8|DWORD = MOVE input: int[-342043|0xfffffffffffac7e5]  <||@
  Comment 4134 2312 JUMP ~[] destination: B211 -> B214  <||@
  Comment 4136 block B216 null  <||@
  Comment 4136 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4136 2360 r10|DWORD = MOVE input: int[-253971|0xfffffffffffc1fed]  <||@
  Comment 4142 2368 JUMP ~[] destination: B216 -> B218  <||@
  Comment 4147 block B206 null  <||@
  Comment 4147 2264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4147 2266 r8|DWORD = MOVE input: int[-370203|0xfffffffffffa59e5]  <||@
  Comment 4153 2268 JUMP ~[] destination: B206 -> B209  <||@
  Comment 4153 block B209 null  <||@
  Comment 4153 2282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4153 2284 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 4160 2286 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4167 2288 DEOPT info [bci:396, 5, 4, 1, 4]  <||@
  Comment 4167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4172 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |r11|QWORD[.]  |r10|DWORD  |rsi|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4173 block B60 null  <||@
  Comment 4173 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4173 784 rax|DWORD = MOVE input: int[-278299|0xfffffffffffbc0e5]  <||@
  Comment 4178 786 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4183 788 JUMP ~[] destination: B60 -> B69  <||@
  Comment 4188 block B80 null  <||@
  Comment 4188 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4188 1022 r10|DWORD = MOVE input: int[-309531|0xfffffffffffb46e5]  <||@
  Comment 4194 1024 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 4198 1026 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4203 1028 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4208 1030 r9|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 4213 1032 JUMP ~[] destination: B80 -> B81  <||@
  Comment 4218 block B207 null  <||@
  Comment 4218 2270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4218 2272 r8|DWORD = MOVE input: int[-399643|0xfffffffffff9e6e5]  <||@
  Comment 4224 2274 JUMP ~[] destination: B207 -> B209  <||@
  Comment 4226 block B148 null  <||@
  Comment 4226 1732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4226 1734 r10|DWORD = MOVE input: int[-375315|0xfffffffffffa45ed]  <||@
  Comment 4232 1736 JUMP ~[] destination: B148 -> B155  <||@
  Comment 4232 block B155 null  <||@
  Comment 4232 1810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4232 1812 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4239 1814 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4246 1816 DEOPT info [bci:8, 4, 1, 4]  <||@
  Comment 4246 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4251 [r14:0, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4252 block B208 null  <||@
  Comment 4252 2276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4252 2278 r8|DWORD = MOVE input: int[-401435|0xfffffffffff9dfe5]  <||@
  Comment 4258 2280 JUMP ~[] destination: B208 -> B209  <||@
  Comment 4260 block B215 null  <||@
  Comment 4260 2346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4260 2348 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 4266 2350 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 4271 2352 MOV [r15|QWORD + 668] y: -256803 size: DWORD  <||@
  Comment 4282 2354 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4289 2356 DEOPT info [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 4289 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4294 [r10:0, stack:72]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4295 block B213 null  <||@
  Comment 4295 2326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4295 2328 r8|DWORD = MOVE input: int[-337179|0xfffffffffffadae5]  <||@
  Comment 4301 2336 JUMP ~[] destination: B213 -> B214  <||@
  Comment 4306 block B136 null  <||@
  Comment 4306 1566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4306 1568 MOV [r15|QWORD + 668] y: -372763 size: DWORD  <||@
  Comment 4317 1570 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4324 1572 DEOPT info [bci:363, 5, 4, 1, 4]  <||@
  Comment 4324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4329 [r11:0, stack:72, stack:88]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4330 block B154 null  <||@
  Comment 4330 1804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4330 1806 r10|DWORD = MOVE input: int[-377875|0xfffffffffffa3bed]  <||@
  Comment 4336 1808 JUMP ~[] destination: B154 -> B155  <||@
  Comment 4338 block B126 null  <||@
  Comment 4338 1438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4338 1440 r8|DWORD = MOVE input: int[-343059|0xfffffffffffac3ed]  <||@
  Comment 4344 1448 JUMP ~[] destination: B126 -> B214  <||@
  Comment 4349 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4349 4  <||@
  Comment 4355 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4355 5  <||@
  HexCodeFile>>> <|@
end_nmethod
