begin_compilation
  name " HotSpotCompilation-10107[java.util.Collections$UnmodifiableCollection.iterator()]"
  method "HotSpotCompilation-10107[java.util.Collections$UnmodifiableCollection.iterator()]"
  date 1527005238070
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a450  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/Collections$UnmodifiableCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v454 a166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$UnmodifiableCollection.c
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 14]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v454 
=== Succesors ===
next: v451 
=== Usages ===
v372 v282 v455 v456 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v454 #next: v451  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 1038
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v218 a242 a295 a339 a384 v451 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a450 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v456 
=== Succesors ===
next: v40 
=== Usages ===
v418 v416 
=== Predecessor ===
a450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v456 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v451 
y: v415 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v451 y: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a450 
=== Succesors ===
=== Usages ===
i452 i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a450  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/Collections$UnmodifiableCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v327 v414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 v408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v311 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j400 
index: - 
=== Succesors ===
=== Usages ===
j404 j316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j400 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a384 a295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j443 j429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 v368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a242 a295 a339 a384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a242 a339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a242 a295 a339 a384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j420 j436 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9288733539261909
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v33 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j249 
=== Usages ===
v457 v458 
=== Predecessor ===
v33 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j249  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j249 v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
=== Succesors ===
next: j250 
=== Usages ===
j420 j255 v476 
=== Predecessor ===
j229 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v457 #next: j250  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
j249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v458 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j249 
y: j419 
=== Succesors ===
=== Usages ===
v234 v251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j249 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j250 
y: j420 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j250 y: j420  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
j250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a242 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a242 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i422 i228 
=== Succesors ===
next: j243 
=== Usages ===
j243 
=== Predecessor ===
v235 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i422 i228 #next: j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a242 
=== Succesors ===
next: v256 
=== Usages ===
j255 
=== Predecessor ===
a242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a242 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
j243 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
value: j420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v457 value: j420 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v476 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v476 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j255 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v253 
values: j249 j243 
=== Succesors ===
=== Usages ===
v461 v460 a152 v477 v478 v479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v253 values: j249 j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v256 
=== Succesors ===
next: a152 
=== Usages ===
j255 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v256 #next: a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j255 
=== Succesors ===
next: j267 
=== Usages ===
a158 
=== Predecessor ===
v253 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j255 #next: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v261 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v261  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j262 
index: - 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j262 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v459 
=== Succesors ===
next: v268 
=== Usages ===
v268 
=== Predecessor ===
a152 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v459 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
value: j267 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
j267 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v460 value: j267 stateAfter: - lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
value: v425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v461 value: v425 stateAfter: - lastLocationAccess: - #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
value: j274 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i452 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v477 value: j274 stateAfter: - lastLocationAccess: - #next: i452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList.iterator(ArrayList.java:840) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v455 
=== Succesors ===
next: v279 
=== Usages ===
v279 
=== Predecessor ===
v276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v455 #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
value: i452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
i452 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 value: i452 stateAfter: - lastLocationAccess: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
value: a450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a158 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 value: a450 stateAfter: - lastLocationAccess: - #next: a158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a152 
=== Succesors ===
next: v159 
=== Usages ===
a165 
=== Predecessor ===
v282 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a152 #next: v159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j284 
=== Usages ===
=== Predecessor ===
a158 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j284 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j299 
=== Usages ===
v462 v463 
=== Predecessor ===
v159 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j299  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j284 
index: - 
=== Succesors ===
=== Usages ===
j299 v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j284 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
=== Succesors ===
next: j300 
=== Usages ===
j429 j305 v480 
=== Predecessor ===
j284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 #next: j300  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j284 
index: - 
=== Succesors ===
=== Usages ===
j300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j284 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v463 
=== Succesors ===
next: v292 
=== Usages ===
v289 
=== Predecessor ===
j299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v463 #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j299 
y: j280 
=== Succesors ===
=== Usages ===
v289 v301 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j299 y: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j429 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j300 y: j429  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
j300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v290 #falseSuccessor: v291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a295 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a295 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i240 i228 
=== Succesors ===
next: j296 
=== Usages ===
j296 
=== Predecessor ===
v290 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i240 i228 #next: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j296 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a295 
=== Succesors ===
next: v306 
=== Usages ===
j305 
=== Predecessor ===
a295 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a295 #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
j296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
value: j429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v462 value: j429 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j299 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v480 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v480 #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v303 
values: j299 j296 
=== Succesors ===
=== Usages ===
v465 v464 a162 v481 v482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v303 values: j299 j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v306 
=== Succesors ===
next: a162 
=== Usages ===
j305 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v306 #next: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j305 
=== Succesors ===
next: j316 
=== Usages ===
a169 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j305 #next: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
=== Succesors ===
next: v317 
=== Usages ===
v317 
=== Predecessor ===
a162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
value: j316 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
j316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v464 value: j316 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
value: v433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v465 value: v433 stateAfter: - lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a165 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a158 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
value: a165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v481 value: a165 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
value: a166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a169 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v482 value: a166 stateAfter: - lastLocationAccess: - #next: a169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a162 
=== Succesors ===
next: v170 
=== Usages ===
v105 
=== Predecessor ===
v327 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a162 #next: v170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
a169 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 8]
stamp: void
=== Inputs ===
result: a169 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a169 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v451 
y: v417 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v451 y: v417  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=iterator target_method_class=Ljava/util/AbstractList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v418 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v418 #trueSuccessor: v126 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=iterator target_method_class=Ljava/util/AbstractList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j328 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j343 
=== Usages ===
v466 v467 
=== Predecessor ===
v126 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j343  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
j343 v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
=== Succesors ===
next: j344 
=== Usages ===
j436 j349 v483 
=== Predecessor ===
j328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 #next: j344  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
j344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
=== Succesors ===
next: v336 
=== Usages ===
v333 
=== Predecessor ===
j343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j343 
y: j419 
=== Succesors ===
=== Usages ===
v333 v345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j343 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j344 
y: j436 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j344 y: j436  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v334 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
j344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v334 #falseSuccessor: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a339 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a339 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i422 i228 
=== Succesors ===
next: j340 
=== Usages ===
j340 
=== Predecessor ===
v334 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i422 i228 #next: j340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j340 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a339 
=== Succesors ===
next: v350 
=== Usages ===
j349 
=== Predecessor ===
a339 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a339 #next: v350  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
j340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
value: j436 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 value: j436 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j343 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v483 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v483 #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v347 
values: j343 j340 
=== Succesors ===
=== Usages ===
v470 v469 a191 v484 v485 v486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v347 values: j343 j340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v350 
=== Succesors ===
next: a191 
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v350 #next: a191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a191 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j349 
=== Succesors ===
next: j360 
=== Usages ===
a197 
=== Predecessor ===
v347 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j349 #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v355 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
=== Succesors ===
next: v361 
=== Usages ===
v361 
=== Predecessor ===
a191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v468 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
value: j360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v469 value: j360 stateAfter: - lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
value: v439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v470 value: v439 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
value: j274 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i453 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v484 value: j274 stateAfter: - lastLocationAccess: - #next: i453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList.iterator(AbstractList.java:288) [bci: 6]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v455 
=== Succesors ===
next: v370 
=== Usages ===
v370 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v455 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
value: i453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v485 value: i453 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: a450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: a450 stateAfter: - lastLocationAccess: - #next: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a191 
=== Succesors ===
next: v198 
=== Usages ===
a204 
=== Predecessor ===
v372 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a191 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
a197 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j388 
=== Usages ===
v471 v472 
=== Predecessor ===
v198 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j388  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j388 v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
=== Succesors ===
next: j389 
=== Usages ===
j443 j394 v487 
=== Predecessor ===
j373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v471 #next: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
=== Succesors ===
next: v381 
=== Usages ===
v378 
=== Predecessor ===
j388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v472 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j388 
y: j280 
=== Succesors ===
=== Usages ===
v378 v390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j388 y: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j389 
y: j443 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j389 y: j443  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
j389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v379 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i240 i228 
=== Succesors ===
next: j385 
=== Usages ===
j385 
=== Predecessor ===
v379 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i240 i228 #next: j385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a384 
=== Succesors ===
next: v395 
=== Usages ===
j394 
=== Predecessor ===
a384 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a384 #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
j385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
value: j443 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v471 value: j443 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j388 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v487 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v487 #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j394 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v392 
values: j388 j385 
=== Succesors ===
=== Usages ===
v475 v474 a201 v488 v489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: j388 j385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v393 v395 
=== Succesors ===
next: a201 
=== Usages ===
j394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v393 v395 #next: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j394 
=== Succesors ===
next: j404 
=== Usages ===
a207 
=== Predecessor ===
v392 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j394 #next: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
=== Succesors ===
next: v405 
=== Usages ===
v405 
=== Predecessor ===
a201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
value: j404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
j404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v474 value: j404 stateAfter: - lastLocationAccess: - #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: v433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: v433 stateAfter: - lastLocationAccess: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a197 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
value: a204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v488 value: a204 stateAfter: - lastLocationAccess: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
value: a166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a207 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v489 value: a166 stateAfter: - lastLocationAccess: - #next: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a201 
=== Succesors ===
next: v208 
=== Usages ===
v7 
=== Predecessor ===
v414 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a201 #next: v208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
a207 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 8]
stamp: void
=== Inputs ===
result: a207 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a207 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=iterator target_method_class=Ljava/util/AbstractList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid a215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29491
stableDimension: 0
stamp: i32 [-29491] ⇊00000000ffff8ccd ⇈00000000ffff8ccd
stampKind: i32
value: int[-29491|0xffffffffffff8ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i220 
speculation: a215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i220 speculation: a215  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a450  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/Collections$UnmodifiableCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v454 a166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a450 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Collections$UnmodifiableCollection.c
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 14]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v454 
=== Succesors ===
next: v451 
=== Usages ===
v372 v282 v455 v456 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v454 #next: v451  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Collections$UnmodifiableCollection.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Collections.java
sourceLine: 1038
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v218 a242 a295 a339 a384 v451 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
result [v1|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a450 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v456 
=== Succesors ===
next: v40 
=== Usages ===
v418 v416 
=== Predecessor ===
a450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v456 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
result meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v451 
y: v415 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v451 y: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a450 
=== Succesors ===
=== Usages ===
i452 i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a450  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/Collections$UnmodifiableCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v327 v414 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 v408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v311 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
result [v4|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j400 
index: - 
=== Succesors ===
=== Usages ===
j404 j316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j400 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a384 a295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j280 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j443 j429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v276 v368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a242 a295 a339 a384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a242 a339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a242 a295 a339 a384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j420 j436 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9288733539261909
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v33 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f586771 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9288733539261909 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=iterator target_method_class=Ljava/util/ArrayList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j249 
=== Usages ===
v457 v458 
=== Predecessor ===
v33 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j249  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j249 v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j249 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
=== Succesors ===
next: j250 
=== Usages ===
j420 j255 v476 
=== Predecessor ===
j229 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v457 #next: j250  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j250 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
=== Succesors ===
next: v237 
=== Usages ===
v234 
=== Predecessor ===
j249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v458 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j249 
y: j419 
=== Succesors ===
=== Usages ===
v234 v251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j249 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j250 
y: j420 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j250 y: j420  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
j250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v235 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a242 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a242 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i422 i228 
=== Succesors ===
next: j243 
=== Usages ===
j243 
=== Predecessor ===
v235 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i422 i228 #next: j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a242 
=== Succesors ===
next: v256 
=== Usages ===
j255 
=== Predecessor ===
a242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a242 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
j243 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
value: j420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v457 value: j420 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
result [v7|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v476 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v476 #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j255 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v253 
values: j249 j243 
=== Succesors ===
=== Usages ===
v461 v460 a152 v477 v478 v479 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v253 values: j249 j243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v256 
=== Succesors ===
next: a152 
=== Usages ===
j255 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v256 #next: a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j255 
=== Succesors ===
next: j267 
=== Usages ===
a158 
=== Predecessor ===
v253 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j255 #next: j267  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v261 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v261  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
result [v12|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j262 
index: - 
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j262 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j267 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v459 
=== Succesors ===
next: v268 
=== Usages ===
v268 
=== Predecessor ===
a152 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v459 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
result [v10|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
value: j267 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
j267 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v460 value: j267 stateAfter: - lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
result [v10|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
value: v425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v461 value: v425 stateAfter: - lastLocationAccess: - #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
result [v10|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
value: j274 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i452 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v477 value: j274 stateAfter: - lastLocationAccess: - #next: i452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i452 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.<init>(ArrayList.java:849) [bci: 19]
at java.util.ArrayList.iterator(ArrayList.java:840) [bci: 5]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v455 
=== Succesors ===
next: v279 
=== Usages ===
v279 
=== Predecessor ===
v276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v455 #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
result [v10|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
value: i452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
i452 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 value: i452 stateAfter: - lastLocationAccess: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
result [v10|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j255 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j255 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
value: a450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a158 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 value: a450 stateAfter: - lastLocationAccess: - #next: a158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a158 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a152 
=== Succesors ===
next: v159 
=== Usages ===
a165 
=== Predecessor ===
v282 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a152 #next: v159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j284 
=== Usages ===
=== Predecessor ===
a158 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j284 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j299 
=== Usages ===
v462 v463 
=== Predecessor ===
v159 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j299  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j284 
index: - 
=== Succesors ===
=== Usages ===
j299 v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j284 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j299 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
=== Succesors ===
next: j300 
=== Usages ===
j429 j305 v480 
=== Predecessor ===
j284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 #next: j300  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j284 
index: - 
=== Succesors ===
=== Usages ===
j300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j284 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j300 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v463 
=== Succesors ===
next: v292 
=== Usages ===
v289 
=== Predecessor ===
j299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v463 #next: v292  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j299 
y: j280 
=== Succesors ===
=== Usages ===
v289 v301 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j299 y: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j300 
y: j429 
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j300 y: j429  <|@  <|@
f <@*|@fixed>@ <|@
tid v292 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v290 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
j300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v290 #falseSuccessor: v291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 20], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 24], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v15|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a295 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a295 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i240 i228 
=== Succesors ===
next: j296 
=== Usages ===
j296 
=== Predecessor ===
v290 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i240 i228 #next: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j296 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a295 
=== Succesors ===
next: v306 
=== Usages ===
j305 
=== Predecessor ===
a295 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a295 #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
j296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
value: j429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v462 value: j429 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result [v15|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j299 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j299 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v480 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v480 #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j305 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v303 
values: j299 j296 
=== Succesors ===
=== Usages ===
v465 v464 a162 v481 v482 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v303 values: j299 j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v306 
=== Succesors ===
next: a162 
=== Usages ===
j305 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v306 #next: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j305 
=== Succesors ===
next: j316 
=== Usages ===
a169 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j305 #next: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j316 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
=== Succesors ===
next: v317 
=== Usages ===
v317 
=== Predecessor ===
a162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
result [v18|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
value: j316 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
j316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v464 value: j316 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
result [v18|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v465 
value: v433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v465 value: v433 stateAfter: - lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
result [v18|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a165 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a158 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
value: a165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v481 value: a165 stateAfter: - lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result [v18|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v482 
value: a166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a169 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v482 value: a166 stateAfter: - lastLocationAccess: - #next: a169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a162 
=== Succesors ===
next: v170 
=== Usages ===
v105 
=== Predecessor ===
v327 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a162 #next: v170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
a169 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 8]
stamp: void
=== Inputs ===
result: a169 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a169 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v4|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 12], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v451 
y: v417 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v451 y: v417  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=iterator target_method_class=Ljava/util/AbstractList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v418 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v418 #trueSuccessor: v126 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=iterator target_method_class=Ljava/util/AbstractList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j328 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j328 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j343 
=== Usages ===
v466 v467 
=== Predecessor ===
v126 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j343  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
j343 v345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
=== Succesors ===
next: j344 
=== Usages ===
j436 j349 v483 
=== Predecessor ===
j328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 #next: j344  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
j344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j344 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
=== Succesors ===
next: v336 
=== Usages ===
v333 
=== Predecessor ===
j343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 #next: v336  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j343 
y: j419 
=== Succesors ===
=== Usages ===
v333 v345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j343 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j344 
y: j436 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j344 y: j436  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v334 
falseSuccessor: v335 
=== Usages ===
=== Predecessor ===
j344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v334 #falseSuccessor: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a339 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a339 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i422 i228 
=== Succesors ===
next: j340 
=== Usages ===
j340 
=== Predecessor ===
v334 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i422 i228 #next: j340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j340 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a339 
=== Succesors ===
next: v350 
=== Usages ===
j349 
=== Predecessor ===
a339 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a339 #next: v350  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
j340 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
value: j436 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 value: j436 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result [v22|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j343 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v483 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v483 #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j349 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v347 
values: j343 j340 
=== Succesors ===
=== Usages ===
v470 v469 a191 v484 v485 v486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v347 values: j343 j340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v350 
=== Succesors ===
next: a191 
=== Usages ===
j349 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v350 #next: a191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a191 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j349 
=== Succesors ===
next: j360 
=== Usages ===
a197 
=== Predecessor ===
v347 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j349 #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v355 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
result [v27|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
=== Succesors ===
next: v361 
=== Usages ===
v361 
=== Predecessor ===
a191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v468 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
result [v25|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
value: j360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v469 value: j360 stateAfter: - lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
result [v25|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
result meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v470 
value: v439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v470 value: v439 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
result [v25|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v484 
value: j274 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i453 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v484 value: j274 stateAfter: - lastLocationAccess: - #next: i453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.<init>(AbstractList.java:348) [bci: 24]
at java.util.AbstractList$Itr.<init>(AbstractList.java:330) [bci: 2]
at java.util.AbstractList.iterator(AbstractList.java:288) [bci: 6]
at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v455 
=== Succesors ===
next: v370 
=== Usages ===
v370 
=== Predecessor ===
v368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v455 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
result [v25|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
value: i453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v485 value: i453 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v25|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
value: a450 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v486 value: a450 stateAfter: - lastLocationAccess: - #next: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a191 
=== Succesors ===
next: v198 
=== Usages ===
a204 
=== Predecessor ===
v372 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a191 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
a197 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j388 
=== Usages ===
v471 v472 
=== Predecessor ===
v198 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j388  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j388 v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j388 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
=== Succesors ===
next: j389 
=== Usages ===
j443 j394 v487 
=== Predecessor ===
j373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v471 #next: j389  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v472 
=== Succesors ===
next: v381 
=== Usages ===
v378 
=== Predecessor ===
j388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v472 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid j443 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j388 
y: j280 
=== Succesors ===
=== Usages ===
v378 v390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j388 y: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j389 
y: j443 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j389 y: j443  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
j389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v379 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*]], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 20], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 24], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v226 i240 i228 
=== Succesors ===
next: j385 
=== Usages ===
j385 
=== Predecessor ===
v379 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v226 i240 i228 #next: j385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a384 
=== Succesors ===
next: v395 
=== Usages ===
j394 
=== Predecessor ===
a384 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a384 #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
j385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v471 
value: j443 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v471 value: j443 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v30|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j388 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v487 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v487 #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j394 <|@
result v33|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v392 
values: j388 j385 
=== Succesors ===
=== Usages ===
v475 v474 a201 v488 v489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: j388 j385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v393 v395 
=== Succesors ===
next: a201 
=== Usages ===
j394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v393 v395 #next: a201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a201 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j394 
=== Succesors ===
next: j404 
=== Usages ===
a207 
=== Predecessor ===
v392 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j394 #next: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j404 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
=== Succesors ===
next: v405 
=== Usages ===
v405 
=== Predecessor ===
a201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v473 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
result [v33|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v474 
value: j404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
j404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v474 value: j404 stateAfter: - lastLocationAccess: - #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
result [v33|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v475 
value: v433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v475 value: v433 stateAfter: - lastLocationAccess: - #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v33|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a197 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
value: a204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v488 value: a204 stateAfter: - lastLocationAccess: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v33|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j394 
index: - 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v489 
value: a166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a207 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v489 value: a166 stateAfter: - lastLocationAccess: - #next: a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a207 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a201 
=== Succesors ===
next: v208 
=== Usages ===
v7 
=== Predecessor ===
v414 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a201 #next: v208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
a207 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v7  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 8]
stamp: void
=== Inputs ===
result: a207 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a207 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v4|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*]], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 12], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 16], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=iterator target_method_class=Ljava/util/AbstractList; position=at java.util.Collections$UnmodifiableCollection$1.<init>(Collections.java:1039) [bci: 17]
at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid a215 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result int[-29491|0xffffffffffff8ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29491
stableDimension: 0
stamp: i32 [-29491] ⇊00000000ffff8ccd ⇈00000000ffff8ccd
stampKind: i32
value: int[-29491|0xffffffffffff8ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i220 
speculation: a215 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i220 speculation: a215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -29491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f586771 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9288733539261909 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 20], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 24], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v15|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v4|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 12], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v22|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v25|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*]], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v25|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 12], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 20], y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[*] + 24], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v30|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v30|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v33|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v4|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*]], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = COMPRESSPOINTER (input: v26|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 12], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD[*] + 16], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -29491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #11         // java.util.Collections$UnmodifiableCollection$1
     3: dup           
     4: aload_0       
     5: invokespecial #9          // java.util.Collections$UnmodifiableCollection$1.<init>:(java.util.Collections$UnmodifiableCollection)void
     8: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f586771 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr   16  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   18  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.9288733539261909 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr   60  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  190  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>} <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  252  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr  268  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   38  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   44  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr   50  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  106  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr  112  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  168  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  174  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  178  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr  180  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  236  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr  242  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV [r15|QWORD + 668] y: -29491 size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #11         // java.util.Collections$UnmodifiableCollection$1
     3: dup           
     4: aload_0       
     5: invokespecial #9          // java.util.Collections$UnmodifiableCollection$1.<init>:(java.util.Collections$UnmodifiableCollection)void
     8: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f586771 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr   14  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr   16  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   18  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.9288733539261909 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   58  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr   60  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>} <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606458101452696840
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  122  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 4606541766926509168
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B16" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 224] instr: 0 <|@ <|@
      nr  190  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>} <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  210  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  216  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4589738383501350189
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  252  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B13" 
    successors 
    xhandlers
    flags 
    probability 4589789635651230848
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  262  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3 <|@ <|@
      nr  268  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   38  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   44  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   48  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr   50  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576508212105042406
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  100  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  106  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr  112  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  168  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  174  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  178  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr  180  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4559699498456295839
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:4]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  236  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>} <|@ <|@
      nr  242  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction MOV [r15|QWORD + 668] y: -29491 size: DWORD <|@ <|@
      nr  280  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #11         // java.util.Collections$UnmodifiableCollection$1
     3: dup           
     4: aload_0       
     5: invokespecial #9          // java.util.Collections$UnmodifiableCollection$1.<init>:(java.util.Collections$UnmodifiableCollection)void
     8: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee458b750c428b34f5080000004d8bd549c1ea0349bbaddeaddeaddeadde49b800000000ffffffff81feaddeadde0f85a1000000498b4760488d7020493b77700f873c010000498977600f1880e00000004c8bc848beaddeaddeaddeadde488bb6a8000000488930c74008addeadde4c89400c428b34f50c00000089701444897018498b4760488d7018493b77700f872b010000498977600f1880d8000000488bf0498b93a8000000488910c74008addeadde49c1e9034489480c44895010488bc6488b6c24104883c418850500000000c5f877c381feaddeadde0f858d010000498b4760488d7020493b77700f8705010000498977600f1880e00000004c8bc848beaddeaddeaddeadde488bb6a8000000488930c74008addeadde4c89400c428b34f50c00000089701444897018498b4760488d7018493b77700f87f4000000498977600f1880d8000000488bf0498b93a8000000488910c74008addeadde49c1e9034489480c44895010488bc6488b6c24104883c418850500000000c5f877c3448954240448beaddeaddeaddeaddeba04000000b901000000e8000000009049b800000000ffffffff49bbaddeaddeaddeadde448b542404e992feffff4d8bf1448954240448beaddeaddeaddeaddeba02000000b901000000e800000000904d8bce49bbaddeaddeaddeadde448b542404e9a7feffff448954240448beaddeaddeaddeaddeba04000000b901000000e8000000009049b800000000ffffffff49bbaddeaddeaddeadde448b542404e9c9feffff4d8bf1448954240448beaddeaddeaddeaddeba02000000b901000000e800000000904d8bce49bbaddeaddeaddeadde448b542404e9defeffff41c7879c020000cd8cffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f586771 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 55 10 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 r10|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3  <||@
  Comment 70 14 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 70 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 80 16 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 90 18 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 90 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 96 20 BRANCH trueDestinationProbability: 0.9288733539261909 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 102 block B1 null  <||@
  Comment 102 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 24 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 106 26 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 110 28 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 114 30 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 120 block B3 null  <||@
  Comment 120 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 120 56 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 124 58 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 131 60 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 131 62 JUMP ~[] destination: B3 -> B4  <||@
  Comment 131 block B4 null  <||@
  Comment 131 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 131 66 r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 134 68 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}  <||@
  Comment 134 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}}  <||@
  Comment 144 70 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 151 72 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 154 74 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 154 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 161 76 MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 165 78 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 173 80 MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD  <||@
  Comment 176 82 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 180 84 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 184 86 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 188 88 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 192 90 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 198 block B6 null  <||@
  Comment 198 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 198 118 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 202 120 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 209 122 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 209 124 JUMP ~[] destination: B6 -> B7  <||@
  Comment 209 block B7 null  <||@
  Comment 209 126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 209 128 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 212 130 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 219 132 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 222 134 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}  <||@
  Comment 222 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}}  <||@
  Comment 229 136 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3  <||@
  Comment 233 138 MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 237 140 MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 241 142 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 244 144 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 253 12  <||@
  Comment 263 block B8 null  <||@
  Comment 263 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 148 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 263 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 269 150 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 275 block B9 null  <||@
  Comment 275 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 154 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 279 156 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 283 158 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 287 160 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 293 block B11 null  <||@
  Comment 293 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 186 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 297 188 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 304 190 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 304 192 JUMP ~[] destination: B11 -> B12  <||@
  Comment 304 block B12 null  <||@
  Comment 304 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 304 196 r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 307 198 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}  <||@
  Comment 307 {meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}}  <||@
  Comment 317 200 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 324 202 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 327 204 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}  <||@
  Comment 327 {meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}}  <||@
  Comment 334 206 MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 338 208 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 346 210 MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD  <||@
  Comment 349 212 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 353 214 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 357 216 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 361 218 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 365 220 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 371 block B14 null  <||@
  Comment 371 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 248 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 375 250 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 382 252 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 382 254 JUMP ~[] destination: B14 -> B15  <||@
  Comment 382 block B15 null  <||@
  Comment 382 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 382 258 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 385 260 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 392 262 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 395 264 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}  <||@
  Comment 395 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}}  <||@
  Comment 402 266 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3  <||@
  Comment 406 268 MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 410 270 MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 414 272 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 417 274 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 426 12  <||@
  Comment 436 block B2 null  <||@
  Comment 436 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 34 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 441 36 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 441 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 451 38 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 456 40 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 461 42 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 461 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 466 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 467 44 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 467 46 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 477 48 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 477 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 487 50 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 492 52 JUMP ~[] destination: B2 -> B4  <||@
  Comment 497 block B5 null  <||@
  Comment 497 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 94 r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 500 96 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 505 98 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 505 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 515 100 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 520 102 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 525 104 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 525 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 530 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 531 106 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 531 108 r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 534 110 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 534 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 544 112 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 549 114 JUMP ~[] destination: B5 -> B7  <||@
  Comment 554 block B10 null  <||@
  Comment 554 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 164 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 559 166 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 559 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 569 168 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 574 170 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 579 172 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 579 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 584 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 585 174 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 585 176 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 595 178 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 595 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 605 180 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 610 182 JUMP ~[] destination: B10 -> B12  <||@
  Comment 615 block B13 null  <||@
  Comment 615 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 615 224 r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 618 226 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 623 228 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 623 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 633 230 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 638 232 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 643 234 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 643 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 648 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 649 236 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 649 238 r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 652 240 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 652 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 662 242 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 667 244 JUMP ~[] destination: B13 -> B15  <||@
  Comment 672 block B16 null  <||@
  Comment 672 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 278 MOV [r15|QWORD + 668] y: -29491 size: DWORD  <||@
  Comment 683 280 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 690 282 DEOPT info [bci:0]  <||@
  Comment 690 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 695 [r13:0]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 696 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 696 4  <||@
  Comment 702 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 702 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10107[java.util.Collections$UnmodifiableCollection.iterator()]"
  method "HotSpotCompilation-10107[java.util.Collections$UnmodifiableCollection.iterator()]"
  date 1527005238237
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106a77da0 448b560849c1e203493bc20f85afe0d8ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee458b750c428b34f5080000004d8bd549c1ea0349bb88fa05c00700000049b800000000ffffffff81fe222f00f80f85a1000000498b4760488d7020493b77700f873c010000498977600f1880e00000004c8bc848bed0fc05c007000000488bb6a8000000488930c740089abf00f84c89400c428b34f50c00000089701444897018498b4760488d7018493b77700f872b010000498977600f1880d8000000488bf0498b93a8000000488910c7400851bf00f849c1e9034489480c44895010488bc6488b6c24104883c41885056371e1fdc5f877c381fe8faf00f80f858d010000498b4760488d7020493b77700f8705010000498977600f1880e00000004c8bc848bee08805c007000000488bb6a8000000488930c740081cb100f84c89400c428b34f50c00000089701444897018498b4760488d7018493b77700f87f4000000498977600f1880d8000000488bf0498b93a8000000488910c7400851bf00f849c1e9034489480c44895010488bc6488b6c24104883c4188505b670e1fdc5f877c3448954240448be680b00c007000000ba04000000b901000000e86eee51009049b800000000ffffffff49bb88fa05c007000000448b542404e992feffff4d8bf1448954240448be680b00c007000000ba02000000b901000000e82eee5100904d8bce49bb88fa05c007000000448b542404e9a7feffff448954240448be680b00c007000000ba04000000b901000000e8f8ed51009049b800000000ffffffff49bb88fa05c007000000448b542404e9c9feffff4d8bf1448954240448be680b00c007000000ba02000000b901000000e8b8ed5100904d8bce49bb88fa05c007000000448b542404e9defeffff41c7879c020000cd8cffff4d89a7a8020000e8a7f5d8ff90e8c3251d0090e89df4d8ff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f586771 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 55 10 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 r10|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3  <||@
  Comment 70 14 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 70 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 80 16 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 90 18 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}  <||@
  Comment 90 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 96 20 BRANCH trueDestinationProbability: 0.9288733539261909 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 102 block B1 null  <||@
  Comment 102 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 24 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 106 26 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 110 28 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 114 30 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 120 block B3 null  <||@
  Comment 120 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 120 56 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 124 58 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 131 60 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 131 62 JUMP ~[] destination: B3 -> B4  <||@
  Comment 131 block B4 null  <||@
  Comment 131 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 131 66 r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 134 68 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}  <||@
  Comment 134 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>}}  <||@
  Comment 144 70 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 151 72 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 154 74 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}  <||@
  Comment 154 {meta{HotSpotType<Ljava/util/ArrayList$Itr;, resolved>;compressed}}  <||@
  Comment 161 76 MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 165 78 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 173 80 MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD  <||@
  Comment 176 82 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 180 84 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 184 86 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 188 88 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 192 90 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 198 block B6 null  <||@
  Comment 198 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 198 118 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 202 120 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 209 122 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 209 124 JUMP ~[] destination: B6 -> B7  <||@
  Comment 209 block B7 null  <||@
  Comment 209 126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 209 128 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 212 130 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 219 132 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 222 134 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}  <||@
  Comment 222 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}}  <||@
  Comment 229 136 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3  <||@
  Comment 233 138 MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 237 140 MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 241 142 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 244 144 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 253 12  <||@
  Comment 263 block B8 null  <||@
  Comment 263 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 148 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 263 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 269 150 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 275 block B9 null  <||@
  Comment 275 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 275 154 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 279 156 rsi|QWORD = LEA [rax|QWORD + 32] size: QWORD  <||@
  Comment 283 158 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 287 160 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 293 block B11 null  <||@
  Comment 293 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 186 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 297 188 AMD64PREFETCH ~[rax|QWORD + 224] instr: 0  <||@
  Comment 304 190 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 304 192 JUMP ~[] destination: B11 -> B12  <||@
  Comment 304 block B12 null  <||@
  Comment 304 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 304 196 r9|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 307 198 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}  <||@
  Comment 307 {meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>}}  <||@
  Comment 317 200 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 324 202 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 327 204 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}  <||@
  Comment 327 {meta{HotSpotType<Ljava/util/AbstractList$Itr;, resolved>;compressed}}  <||@
  Comment 334 206 MOV (x: [rax|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 338 208 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 346 210 MOV (x: [rax|QWORD[*] + 20], y: rsi|DWORD) size: DWORD  <||@
  Comment 349 212 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 353 214 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 357 216 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 361 218 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 365 220 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 371 block B14 null  <||@
  Comment 371 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 248 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 375 250 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 382 252 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 382 254 JUMP ~[] destination: B14 -> B15  <||@
  Comment 382 block B15 null  <||@
  Comment 382 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 382 258 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 385 260 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 392 262 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 395 264 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}  <||@
  Comment 395 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>;compressed}}  <||@
  Comment 402 266 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64e25c8d encoding: base: 0 shift: 3  <||@
  Comment 406 268 MOV (x: [rax|QWORD[*] + 12], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 410 270 MOV (x: [rax|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 414 272 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 417 274 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 426 12  <||@
  Comment 436 block B2 null  <||@
  Comment 436 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 436 34 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 441 36 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 441 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 451 38 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 456 40 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 461 42 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 461 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 466 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 467 44 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 467 46 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 477 48 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 477 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 487 50 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 492 52 JUMP ~[] destination: B2 -> B4  <||@
  Comment 497 block B5 null  <||@
  Comment 497 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 94 r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 500 96 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 505 98 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 505 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 515 100 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 520 102 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 525 104 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 525 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 530 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 531 106 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 531 108 r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 534 110 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 534 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 544 112 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 549 114 JUMP ~[] destination: B5 -> B7  <||@
  Comment 554 block B10 null  <||@
  Comment 554 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 164 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 559 166 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 559 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 569 168 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 574 170 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 579 172 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 579 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 584 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 585 174 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 585 176 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 595 178 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 595 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 605 180 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 610 182 JUMP ~[] destination: B10 -> B12  <||@
  Comment 615 block B13 null  <||@
  Comment 615 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 615 224 r14|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 618 226 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 623 228 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 623 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 633 230 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 638 232 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 643 234 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 643 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 648 [r13:0, r14:0, stack:4]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 649 236 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 649 238 r9|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 652 240 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}  <||@
  Comment 652 {meta{HotSpotType<Ljava/util/Collections$UnmodifiableCollection$1;, resolved>}}  <||@
  Comment 662 242 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 667 244 JUMP ~[] destination: B13 -> B15  <||@
  Comment 672 block B16 null  <||@
  Comment 672 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 278 MOV [r15|QWORD + 668] y: -29491 size: DWORD  <||@
  Comment 683 280 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 690 282 DEOPT info [bci:0]  <||@
  Comment 690 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 695 [r13:0]at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 696 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 696 4  <||@
  Comment 702 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 702 5  <||@
  HexCodeFile>>> <|@
end_nmethod
