begin_compilation
  name " HotSpotCompilation-9010[java.lang.ThreadLocal.get()]"
  method "HotSpotCompilation-9010[java.lang.ThreadLocal.get()]"
  date 1527005199505
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a155  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j3 
index: - 
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
=== Succesors ===
next: a156 
=== Usages ===
v164 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v163 #next: a156  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a155 
index: - 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a155 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
=== Succesors ===
next: v12 
=== Usages ===
a81 v116 v166 
=== Predecessor ===
a155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v164 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
stamp: void
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a156  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ThreadLocal;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v106 ?15 v49 v115 v165 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
stamp: void
trueSuccessorProbability: 1.7077523417553985E-5
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
a156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4535661620397061377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v10 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a157 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a157  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a156 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
=== Succesors ===
next: i158 
=== Usages ===
a88 v167 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v166 #next: i158  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 160
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
v150 i158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a157 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v167 
=== Succesors ===
next: i159 
=== Usages ===
i37 v95 
=== Predecessor ===
a157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v167 #next: i159  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
=== Succesors ===
next: v137 
=== Usages ===
i38 
=== Predecessor ===
i158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v165 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i158 
y: i36 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i158 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: i32
=== Inputs ===
x: i37 
y: i159 
=== Succesors ===
=== Usages ===
v168 v106 v95 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i37 y: i159  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i158 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
i159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v134 #falseSuccessor: v136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a160 
=== Usages ===
a160 
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a160  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a157 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a157  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a88 
index: i38 
=== Succesors ===
=== Usages ===
a160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a88 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v134 
address: v168 
=== Succesors ===
next: v44 
=== Usages ===
a105 v118 v169 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v134 address: v168 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a160 
=== Succesors ===
=== Usages ===
v106 a76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a160  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
value: a160 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a160  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
trueSuccessorProbability: 1.3662018734043188E-4
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
a160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4549172333201704739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a53 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a53  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
?15 v106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a156  <|@  <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@62d39341
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a81 a1 i38 a105 
=== Succesors ===
=== Usages ===
a53 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a81 a1 i38 a105  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a81 - - 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a81 - -  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?15 
values: - - 
=== Succesors ===
=== Usages ===
?142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?15 values: - -  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: - - - - 
=== Succesors ===
=== Usages ===
a53 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a53 <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v106 
stateDuring: ?142 
=== Succesors ===
next: v23 
=== Usages ===
v17 a76 
=== Predecessor ===
v42 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v106 stateDuring: ?142 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
stamp: void
=== Inputs ===
value: a53 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a53  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
stamp: void
trueSuccessorProbability: 1.3661902078316855E-4
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v22 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4491226257307483619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 4535667129213903632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v18 v20 
=== Succesors ===
next: a28 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v18 v20 #next: a28  <|@  <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@57f46837
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a28 <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v115 
stateDuring: ?143 
=== Succesors ===
next: v30 
=== Usages ===
v30 
=== Predecessor ===
v19 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v115 stateDuring: ?143 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stamp: void
=== Inputs ===
result: a28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4549171644599599457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a161  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a160 
=== Succesors ===
=== Usages ===
a161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
=== Succesors ===
next: v141 
=== Usages ===
a109 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v169 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a161 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a161  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a109 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a109  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
a161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v138 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182264811245461
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v64 
values: a53 a105 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v64 values: a53 a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v65 v67 
=== Succesors ===
next: a162 
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v65 v67 #next: a162  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a76 
index: - 
=== Succesors ===
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a76 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
=== Succesors ===
next: v25 
=== Usages ===
a114 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v170 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a114 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a162  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:167) [bci: 32]
stamp: void
=== Inputs ===
result: a114 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a162 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a114 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28179
stableDimension: 0
stamp: i32 [-28179] ⇊00000000ffff91ed ⇈00000000ffff91ed
stampKind: i32
value: int[-28179|0xffffffffffff91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24603
stableDimension: 0
stamp: i32 [-24603] ⇊00000000ffff9fe5 ⇈00000000ffff9fe5
stampKind: i32
value: int[-24603|0xffffffffffff9fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-28179 - -23051] ⇊00000000ffff81e5 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v144 
values: i152 i154 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v144 values: i152 i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v151 v153 
=== Succesors ===
next: v150 
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v151 v153 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i148 
speculation: a147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i148 speculation: a147  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a155  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
result [r15|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j3 
index: - 
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
=== Succesors ===
next: a156 
=== Usages ===
v164 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v163 #next: a156  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
result [v1|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a155 
index: - 
=== Succesors ===
=== Usages ===
a156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a155 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a156 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
=== Succesors ===
next: v12 
=== Usages ===
a81 v116 v166 
=== Predecessor ===
a155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v164 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
stamp: void
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a156  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/ThreadLocal;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v106 ?15 v49 v115 v165 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
stamp: void
trueSuccessorProbability: 1.7077523417553985E-5
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
a156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5ce0593a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7077523417553985E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4535661620397061377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v10 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a157 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a157  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a156 
=== Succesors ===
=== Usages ===
a157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a157 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
=== Succesors ===
next: i158 
=== Usages ===
a88 v167 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v166 #next: i158  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 160
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
v150 i158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a157 
=== Succesors ===
=== Usages ===
i158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i158 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v167 
=== Succesors ===
next: i159 
=== Usages ===
i37 v95 
=== Predecessor ===
a157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v167 #next: i159  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i159 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal.threadLocalHashCode
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
=== Succesors ===
next: v137 
=== Usages ===
i38 
=== Predecessor ===
i158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v165 #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i158 
y: i36 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i158 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: i32
=== Inputs ===
x: i37 
y: i159 
=== Succesors ===
=== Usages ===
v168 v106 v95 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i37 y: i159  <|@  <|@
f <@~|@floating>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i158 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v95 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
i159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v95 #trueSuccessor: v134 #falseSuccessor: v136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a160 
=== Usages ===
a160 
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a160  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a157 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a157  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result [v7|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a88 
index: i38 
=== Succesors ===
=== Usages ===
a160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a88 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a160 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v134 
address: v168 
=== Succesors ===
next: v44 
=== Usages ===
a105 v118 v169 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v134 address: v168 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a160 
=== Succesors ===
=== Usages ===
v106 a76 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a160  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
value: a160 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a160  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
trueSuccessorProbability: 1.3662018734043188E-4
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
a160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3662018734043188E-4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4549172333201704739
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a53 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a53  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a156 
=== Succesors ===
=== Usages ===
?15 v106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a156  <|@  <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@62d39341
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a81 a1 i38 a105 
=== Succesors ===
=== Usages ===
a53 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a81 a1 i38 a105  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a81 - - 
=== Succesors ===
=== Usages ===
?56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a81 - -  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?15 
values: - - 
=== Succesors ===
=== Usages ===
?142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?15 values: - -  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: - - - - 
=== Succesors ===
=== Usages ===
a53 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a53 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v106 
stateDuring: ?142 
=== Succesors ===
next: v23 
=== Usages ===
v17 a76 
=== Predecessor ===
v42 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v106 stateDuring: ?142 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
stamp: void
=== Inputs ===
value: a53 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a53  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
stamp: void
trueSuccessorProbability: 1.3661902078316855E-4
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
a53 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v22 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v0|QWORD[.] - v10|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|QWORD[.], y: v11|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3661902078316855E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4491226257307483619
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 4535667129213903632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v18 v20 
=== Succesors ===
next: a28 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v18 v20 #next: a28  <|@  <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@57f46837
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
a28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a28 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v115 
stateDuring: ?143 
=== Succesors ===
next: v30 
=== Usages ===
v30 
=== Predecessor ===
v19 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v115 stateDuring: ?143 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 37]
stamp: void
=== Inputs ===
result: a28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4549171644599599457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a161  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a160 
=== Succesors ===
=== Usages ===
a161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
=== Succesors ===
next: v141 
=== Usages ===
a109 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v169 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a161 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a161  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a109 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a109  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
a161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v138 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v48 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182264811245461
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a76 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v64 
values: a53 a105 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v64 values: a53 a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v65 v67 
=== Succesors ===
next: a162 
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v65 v67 #next: a162  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result [v15|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a76 
index: - 
=== Succesors ===
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a76 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
=== Succesors ===
next: v25 
=== Usages ===
a114 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v170 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a114 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a162  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:167) [bci: 32]
stamp: void
=== Inputs ===
result: a114 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a162 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a114 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result int[-28179|0xffffffffffff91ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28179
stableDimension: 0
stamp: i32 [-28179] ⇊00000000ffff91ed ⇈00000000ffff91ed
stampKind: i32
value: int[-28179|0xffffffffffff91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28179|0xffffffffffff91ed]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
result int[-24603|0xffffffffffff9fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -24603
stableDimension: 0
stamp: i32 [-24603] ⇊00000000ffff9fe5 ⇈00000000ffff9fe5
stampKind: i32
value: int[-24603|0xffffffffffff9fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
v136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i148 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-28179 - -23051] ⇊00000000ffff81e5 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v144 
values: i152 i154 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v144 values: i152 i154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v151 v153 
=== Succesors ===
next: v150 
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v151 v153 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid a147 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i148 
speculation: a147 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i148 speculation: a147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5ce0593a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v1|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7077523417553985E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v5|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3662018734043188E-4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182264811245461
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v15|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4549172333201704739
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: v0|QWORD[.] - v10|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|QWORD[.], y: v11|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3661902078316855E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4549171644599599457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4535661620397061377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 4535667129213903632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4491226257307483619
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-24603|0xffffffffffff9fe5]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28179|0xffffffffffff91ed]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #6          // java.lang.Thread.currentThread:()java.lang.Thread
     3: astore_1      
     4: aload_0       
     5: aload_1       
     6: invokevirtual #7          // getMap:(java.lang.Thread)java.lang.ThreadLocal$ThreadLocalMap
     9: astore_2      
    10: aload_2       
    11: ifnull        33
    14: aload_2       
    15: aload_0       
    16: invokestatic  #8          // java.lang.ThreadLocal$ThreadLocalMap.access$000:(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal)java.lang.ThreadLocal$ThreadLocalMap$Entry
    19: astore_3      
    20: aload_3       
    21: ifnull        33
    24: aload_3       
    25: getfield      #9          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    28: astore        4
    30: aload         4
    32: areturn       
    33: aload_0       
    34: invokespecial #10         // setInitialValue:()java.lang.Object
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5ce0593a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.7077523417553985E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.3662018734043188E-4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction CMP (x: rax|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182264811245461
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4549172333201704739
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16] <|@ <|@
      nr   66  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.3661902078316855E-4 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4549171644599599457
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4535661620397061377
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 4535667129213903632
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4491226257307483619
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r10|DWORD = MOVE input: int[-28179|0xffffffffffff91ed] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #6          // java.lang.Thread.currentThread:()java.lang.Thread
     3: astore_1      
     4: aload_0       
     5: aload_1       
     6: invokevirtual #7          // getMap:(java.lang.Thread)java.lang.ThreadLocal$ThreadLocalMap
     9: astore_2      
    10: aload_2       
    11: ifnull        33
    14: aload_2       
    15: aload_0       
    16: invokestatic  #8          // java.lang.ThreadLocal$ThreadLocalMap.access$000:(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal)java.lang.ThreadLocal$ThreadLocalMap$Entry
    19: astore_3      
    20: aload_3       
    21: ifnull        33
    24: aload_3       
    25: getfield      #9          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    28: astore        4
    30: aload         4
    32: areturn       
    33: aload_0       
    34: invokespecial #10         // setInitialValue:()java.lang.Object
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5ce0593a slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr    8  <|@ instruction rdx|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.7077523417553985E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r8|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = AND (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607182264979361209
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.3662018734043188E-4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607181034435126621
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction CMP (x: rax|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B10 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182264811245461
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4549172333201704739
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   56  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16] <|@ <|@
      nr   66  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.3661902078316855E-4 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4549171644599599457
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 4535661620397061377
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" 
    successors 
    xhandlers
    flags 
    probability 4535667129213903632
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5] // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
locals: rsi|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r10|DWORD = MOVE input: int[-28179|0xffffffffffff91ed] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #6          // java.lang.Thread.currentThread:()java.lang.Thread
     3: astore_1      
     4: aload_0       
     5: aload_1       
     6: invokevirtual #7          // getMap:(java.lang.Thread)java.lang.ThreadLocal$ThreadLocalMap
     9: astore_2      
    10: aload_2       
    11: ifnull        33
    14: aload_2       
    15: aload_0       
    16: invokestatic  #8          // java.lang.ThreadLocal$ThreadLocalMap.access$000:(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal)java.lang.ThreadLocal$ThreadLocalMap$Entry
    19: astore_3      
    20: aload_3       
    21: ifnull        33
    24: aload_3       
    25: getfield      #9          // java.lang.ThreadLocal$ThreadLocalMap$Entry.value:java.lang.Object
    28: astore        4
    30: aload         4
    32: areturn       
    33: aload_0       
    34: invokespecial #10         // setInitialValue:()java.lang.Object
    37: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420498b87d00100008b505085d20f84990000008b04d5140000008b0cc50c000000448bc141ffc84423460c413bc80f869d00000048c1e003428b448010448bd049c1e20385c00f842f0000008b04c50c00000048c1e003483bc60f858b000000418b421c48c1e003488b6c24204883c428850500000000c5f877c348c1e2034c8bde488bf24889542408498bd3418bc84d8bc24c895c2410e800000000904885c00f840a0000004c8bd0ebb44889742410488b7424106690e80000000090488b6c24204883c428850500000000c5f877c341bae59fffff4589979c0200004d89a7a8020000e8000000009041baed91ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5ce0593a slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 55 8 rdx|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD  <||@
  Comment 58 10 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 1.7077523417553985E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 22 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 73 24 rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rdx:0, rsi:0]at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 26 r8|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 86 28 r8|DWORD = AND (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 30 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 93 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 99 block B3 null  <||@
  Comment 99 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 36 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 103 38 rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 108 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 115 42 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 117 44 BRANCH trueDestinationProbability: 1.3662018734043188E-4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 123 block B8 null  <||@
  Comment 123 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 90 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 130 92 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 134 94 CMP (x: rax|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 137 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B10 falseDestination: B8 -> B11  <||@
  Comment 143 block B10 null  <||@
  Comment 143 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 143 104 rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 147 106 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 151 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 160 12  <||@
  Comment 170 block B4 null  <||@
  Comment 170 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 48 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 174 50 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 177 52 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 180 54 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 185 56 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 188 58 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 191 60 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 194 62 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 199 64 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16]  <||@
  Comment 199 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 199 9  <||@
  Comment 204 [stack:8, stack:16]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-  |-   <||@
  Comment 205 66 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 208 68 BRANCH trueDestinationProbability: 1.3661902078316855E-4 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B7  <||@
  Comment 214 block B7 null  <||@
  Comment 214 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 84 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 217 86 JUMP ~[] destination: B7 -> B10  <||@
  Comment 219 block B1 null  <||@
  Comment 219 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 16 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 224 18 JUMP ~[] destination: B1 -> B6  <||@
  Comment 224 block B6 null  <||@
  Comment 224 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 76 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 229 78 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 229 9  <||@
  Comment 231 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 236 []at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 237 80 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 246 12  <||@
  Comment 256 block B12 null  <||@
  Comment 256 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 118 r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5]  <||@
  Comment 262 120 JUMP ~[] destination: B12 -> B13  <||@
  Comment 262 block B13 null  <||@
  Comment 262 122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 262 124 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 269 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 276 128 DEOPT info [bci:0]  <||@
  Comment 276 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 281 [rsi:0]at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 282 block B11 null  <||@
  Comment 282 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 112 r10|DWORD = MOVE input: int[-28179|0xffffffffffff91ed]  <||@
  Comment 288 114 JUMP ~[] destination: B11 -> B13  <||@
  Comment 290 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 290 4  <||@
  Comment 296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 296 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9010[java.lang.ThreadLocal.get()]"
  method "HotSpotCompilation-9010[java.lang.ThreadLocal.get()]"
  date 1527005199572
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106c54a40 448b560849c1e203493bc20f850f14bbff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c2420498b87d00100008b505085d20f84990000008b04d5140000008b0cc50c000000448bc141ffc84423460c413bc80f869d00000048c1e003428b448010448bd049c1e20385c00f842f0000008b04c50c00000048c1e003483bc60f858b000000418b421c48c1e003488b6c24204883c428850520a5c3fdc5f877c348c1e2034c8bde488bf24889542408498bd3418bc84d8bc24c895c2410e89415bbff904885c00f840a0000004c8bd0ebb44889742410488b7424106690e87415bbff90488b6c24204883c4288505caa4c3fdc5f877c341bae59fffff4589979c0200004d89a7a8020000e8a52abbff9041baed91ffffebe4e8b95affff90e89329bbff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5ce0593a slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 55 8 rdx|DWORD[.] = MOV [rax|QWORD[.] + 80] size: DWORD  <||@
  Comment 58 10 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 1.7077523417553985E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 22 rax|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 73 24 rcx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rdx:0, rsi:0]at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 80 26 r8|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 86 28 r8|DWORD = AND (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 30 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 93 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B12  <||@
  Comment 99 block B3 null  <||@
  Comment 99 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 36 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 103 38 rax|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 108 40 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 115 42 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 117 44 BRANCH trueDestinationProbability: 1.3662018734043188E-4 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 123 block B8 null  <||@
  Comment 123 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 90 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 130 92 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 134 94 CMP (x: rax|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 137 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B10 falseDestination: B8 -> B11  <||@
  Comment 143 block B10 null  <||@
  Comment 143 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 143 104 rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 147 106 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 151 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 160 12  <||@
  Comment 170 block B4 null  <||@
  Comment 170 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 48 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7729277b encoding: base: 0 shift: 3  <||@
  Comment 174 50 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 177 52 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 180 54 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 185 56 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 188 58 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 191 60 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 194 62 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 199 64 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16]  <||@
  Comment 199 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 199 9  <||@
  Comment 204 [stack:8, stack:16]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-  |-   <||@
  Comment 205 66 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 208 68 BRANCH trueDestinationProbability: 1.3661902078316855E-4 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B7  <||@
  Comment 214 block B7 null  <||@
  Comment 214 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 84 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 217 86 JUMP ~[] destination: B7 -> B10  <||@
  Comment 219 block B1 null  <||@
  Comment 219 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 16 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 224 18 JUMP ~[] destination: B1 -> B6  <||@
  Comment 224 block B6 null  <||@
  Comment 224 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 76 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 229 78 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 229 9  <||@
  Comment 231 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 236 []at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 237 80 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 246 12  <||@
  Comment 256 block B12 null  <||@
  Comment 256 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 256 118 r10|DWORD = MOVE input: int[-24603|0xffffffffffff9fe5]  <||@
  Comment 262 120 JUMP ~[] destination: B12 -> B13  <||@
  Comment 262 block B13 null  <||@
  Comment 262 122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 262 124 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 269 126 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 276 128 DEOPT info [bci:0]  <||@
  Comment 276 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 281 [rsi:0]at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 282 block B11 null  <||@
  Comment 282 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 112 r10|DWORD = MOVE input: int[-28179|0xffffffffffff91ed]  <||@
  Comment 288 114 JUMP ~[] destination: B11 -> B13  <||@
  Comment 290 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 290 4  <||@
  Comment 296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 296 5  <||@
  HexCodeFile>>> <|@
end_nmethod
