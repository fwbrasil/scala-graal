begin_compilation
  name " HotSpotCompilation-9773[org.graalvm.collections.EconomicSet.addAll(Iterator)]"
  method "HotSpotCompilation-9773[org.graalvm.collections.EconomicSet.addAll(Iterator)]"
  date 1527005220436
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2379  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?7 ?1773 ?20 ?20 ?677 ?68 v2452 ?1773 ?98 v1190 ?1772 ?98 v2426 ?155 ?676 v1081 ?897 v2437 v1089 j1963 ?529 j2070 ?769 ?342 v2427 v2431 ?356 ?440 v2428 v1174 v2432 v2433 v1215 v2438 ?727 ?514 v1207 v1281 ?745 ?479 ?147 ?148 v1183 v2439 ?503 v1222 ?874 v2444 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1802 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1805 ?3 a1871 v1831 v1815 a1858 v1823 v1843 a1858 v1851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1802 
=== Succesors ===
=== Usages ===
v2379 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1802  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Iterator;
=== Inputs ===
=== Succesors ===
=== Usages ===
?78 ?7 v1083 ?1773 ?98 ?20 ?68 ?1772 ?83 v1082 v2451 v2422 v2420 v2419 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2451 
=== Succesors ===
next: v2380 
=== Usages ===
v2211 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2451 #next: v2380  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2452 
=== Succesors ===
next: v5 
=== Usages ===
v2213 
=== Predecessor ===
v2379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2452 #next: v5  <|@  <|@
f <@~|@floating>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2380 
y: v2212 
=== Succesors ===
=== Usages ===
v1540 v1550 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2380 y: v2212  <|@  <|@
f <@~|@floating>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2379 
y: v2210 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2379 y: v2210  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: ?68 
values: - - 
=== Succesors ===
=== Usages ===
?769 ?676 ?591 ?1784 ?1783 ?745 ?147 ?897 ?155 ?1780 ?727 ?1782 ?514 ?1781 ?677 ?1779 ?876 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?68 values: - -  <|@  <|@
tid ?1782 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
tid ?1780 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2411 i2408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2357 i2369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2409 a2406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2181 j2378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2235 j2228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 v2127 v2234 v2189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v504 v2359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v867 v492 v496 v2360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 a2165 a2102 i2039 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1968 v2074 v2084 v2138 v2145 v2200 v2207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 j1964 j2036 j2042 j2071 j2081 j2135 j2142 j2197 j2204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1967 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2458 j2057 v2470 v2472 v2478 v2479 v2487 v2488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1957 v2023 v2225 v2233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1949 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1954 v2020 j2044 v2050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2358 i547 i2369 v1953 a1930 i2357 i2367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1930 a2102 a2165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2396 v1224 v1277 a2399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2395 v1167 v1202 i2398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 v1388 v2370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?1773 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a1 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a1  <|@  <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@712b8df1
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 i976 i740 i175 i341 a1996 v357 v2055 i966 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?1772 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@732b89a5
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 ?745 v779 v898 i2038 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2388 a2389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a1 
=== Succesors ===
=== Usages ===
?78 ?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a1  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 11]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i740 i81 i88 i129 i982 i153 i973 i175 i403 i313 i402 i966 i363 i557 i1790 i467 i485 i556 i976 a1930 a2102 a2165 i2375 i2363 i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2383 v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v1805 i2382 a2385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
v2380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B144" "B112" "B113" "B117" "B115" "B123" "B146" "B122" "B125" "B127" 
    successors "B2" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625182039524689422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 15.973749380881625
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 10
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5 
=== Succesors ===
next: v44 
=== Usages ===
v14 v24 v448 v449 v450 v1608 v733 v855 v871 v954 v958 v969 v1638 v1633 v1618 v1623 v1603 v1598 v1528 v1534 v1539 v1578 v1549 v1588 v1561 v1583 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5 #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/collections/EconomicMapImpl$3; target_method=hasNext target_method_class=Lorg/graalvm/collections/EconomicMapImpl$SparseMapIterator; position=at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8919930131365436
=== Inputs ===
condition: v2211 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2211 #trueSuccessor: v37 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624210795177115918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/collections/EconomicMapImpl$3; target_method=hasNext target_method_class=Lorg/graalvm/collections/EconomicMapImpl$SparseMapIterator; position=at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2381 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 5]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2420 
=== Succesors ===
next: i2382 
=== Usages ===
v2421 
=== Predecessor ===
v37 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2420 #next: i2382  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2381 
=== Succesors ===
=== Usages ===
i2382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$000(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 8]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v2421 
=== Succesors ===
next: i2383 
=== Usages ===
v72 
=== Predecessor ===
a2381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v2421 #next: i2383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 1]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
=== Succesors ===
next: v704 
=== Usages ===
v72 i919 
=== Predecessor ===
i2382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2419 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 11]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2383 
y: i2382 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2383 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9373972900065114
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
i2383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v703 #falseSuccessor: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2384 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$3.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 1]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2422 
=== Succesors ===
next: a2385 
=== Usages ===
?83 v2423 
=== Predecessor ===
v703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2422 #next: a2385  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2384 
=== Succesors ===
=== Usages ===
a2385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v2423 
=== Succesors ===
next: v1529 
=== Usages ===
a1060 v1061 v2424 
=== Predecessor ===
a2384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v2423 #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
value: a2385 
=== Succesors ===
=== Usages ===
v1529 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2385  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1528 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
a2385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1528 #falseSuccessor: v1525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1805  <|@  <|@
f <@~|@floating>@ <|@
tid i1809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -271883
stableDimension: 0
stamp: i32 [-271883] ⇊00000000fffbd9f5 ⇈00000000fffbd9f5
stampKind: i32
value: int[-271883|0xfffffffffffbd9f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i1809 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i1809 speculation: a1802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2386 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2386  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2385 
=== Succesors ===
=== Usages ===
i2386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2424 
=== Succesors ===
next: v76 
=== Usages ===
v1066 
=== Predecessor ===
v1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2424 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid a1060 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2385 
=== Succesors ===
=== Usages ===
v2425 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2385  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
i2386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i919 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v77 
values: i2383 i81 
=== Succesors ===
=== Usages ===
i81 ?83 i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i2383 i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0297568646425548
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v76 
=== Succesors ===
next: v1535 
=== Usages ===
v92 v96 i919 v1533 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v76 #next: v1535  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i919 
y: i73 
=== Succesors ===
=== Usages ===
v2425 v1066 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i919 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i2386 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i2386  <|@  <|@
f <@*|@fixed>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1066 
=== Succesors ===
trueSuccessor: v1530 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1066 #trueSuccessor: v1530 #falseSuccessor: v1533  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
a2387 
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 11]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: i32
=== Inputs ===
x: i919 
y: i73 
=== Succesors ===
=== Usages ===
v1055 i919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i919 y: i73  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 12]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2387 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2419 value: i81 stateAfter: - lastLocationAccess: - #next: a2387  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1060 
index: i88 
=== Succesors ===
=== Usages ===
a2387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1060 index: i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1530 
address: v2425 
=== Succesors ===
next: v95 
=== Usages ===
a1074 v1372 a1787 a1788 
=== Predecessor ===
v1055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1530 address: v2425 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 20]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
value: a2387 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2387  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 12]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 834
stackSize: 2
=== Inputs ===
outerFrameState: ?98 
values: a2 - a2384 i919 
=== Succesors ===
=== Usages ===
v1506 v1537 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a2 - a2384 i919  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 20]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
trueSuccessorProbability: 0.028896981087748186
=== Inputs ===
condition: v1372 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
a2387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1372 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4600831387884041749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 23]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1506 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?83 #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
loopBegin: v77 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:837) [bci: 26]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v1540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v1536 
falseSuccessor: v1539 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v1536 #falseSuccessor: v1539  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2388 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: v687 
=== Usages ===
v1373 
=== Predecessor ===
v1536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2388 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2388  <|@  <|@
f <@~|@floating>@ <|@
tid a1074 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2387 
=== Succesors ===
=== Usages ===
?897 a756 ?897 a891 v1081 a646 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2387  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6466662056064051
=== Inputs ===
condition: v1373 
=== Succesors ===
trueSuccessor: v685 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
a2388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1373 #trueSuccessor: v685 #falseSuccessor: v686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621051920458862841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616999473013499352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i895 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i895  <|@  <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@58a34597
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a1074 
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a1074  <|@  <|@
tid ?897 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a1074 a1074 - - - 
=== Succesors ===
=== Usages ===
?1777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a1074 a1074 - - -  <|@  <|@
tid ?1777 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?897 
values: - - 
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?897 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1081 
stateDuring: ?1777 
=== Succesors ===
next: v901 
=== Usages ===
i885 v898 
=== Predecessor ===
v686 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1081 stateDuring: ?1777 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i105 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i895 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v898 
=== Succesors ===
trueSuccessor: v899 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
i895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v898 #trueSuccessor: v899 #falseSuccessor: v900  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614586470304587029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609124534507953462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1537 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1075
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
reason: OptimizedTypeCheckViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v1534 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v1534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1531 
=== Usages ===
=== Predecessor ===
v1533 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1531  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 834
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a2 - 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1067
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?78 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1534 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606209578348434066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610448773953234941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i9 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1082 
stateDuring: ?1772 
=== Succesors ===
next: v17 
=== Usages ===
v12 
=== Predecessor ===
v43 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1082 stateDuring: ?1772 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i11 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i9 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
stamp: void
trueSuccessorProbability: 0.06260270999348858
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v691 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592447144275831689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v691 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v693 v694 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v693 v694 #next: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a19 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a19 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1083 
stateDuring: ?1773 
=== Succesors ===
next: v2504 
=== Usages ===
v2504 ?20 a646 a756 a891 v1089 ?677 ?677 a2376 a1786 
=== Predecessor ===
v16 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1083 stateDuring: ?1773 #next: v2504  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a2 a1 a19 
=== Succesors ===
=== Usages ===
v1815 v2504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a1 a19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
object: a19 
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
a19 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?20 object: a19 #next: v1550  <|@  <|@
f <@*|@fixed>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v1546 
falseSuccessor: v1549 
=== Usages ===
=== Predecessor ===
v2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v1546 #falseSuccessor: v1549  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2389 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: v206 
=== Usages ===
v1374 
=== Predecessor ===
v1546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2389 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2389  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6466662056064051
=== Inputs ===
condition: v1374 
=== Succesors ===
trueSuccessor: v204 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
a2389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1374 #trueSuccessor: v204 #falseSuccessor: v205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607388834826600208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid a2376 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
a1788 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B11" 
    successors "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621640672415607003
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1788 <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v599 
values: a2376 a2387 
=== Succesors ===
=== Usages ===
a1787 a1787 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v599 values: a2376 a2387  <|@  <|@
f <@~|@floating>@ <|@
tid a646 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v599 
values: a19 a1074 
=== Succesors ===
=== Usages ===
a756 a756 a777 ?356 ?440 ?342 v408 v1117 v1121 ?676 ?676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v599 values: a19 a1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v601 
=== Succesors ===
next: v339 
=== Usages ===
a1788 a646 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v601 #next: v339  <|@  <|@
tid ?676 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a646 a646 - - - 
=== Succesors ===
=== Usages ===
?367 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a646 a646 - - -  <|@  <|@
tid ?367 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?676 
values: - - 
=== Succesors ===
=== Usages ===
?342 ?440 ?356 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?676 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B39" "B32" "B36" 
    successors "B28" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4626232167182356221
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v340 
values: i11 i363 i2375 i2374 
=== Succesors ===
=== Usages ===
?342 v344 i772 ?356 v106 i363 ?440 i557 i2374 i2375 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v340 values: i11 i363 i2375 i2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v339 
=== Succesors ===
next: i2390 
=== Usages ===
i341 v346 v359 v364 v723 v824 v1560 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v339 #next: i2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
=== Succesors ===
next: v348 
=== Usages ===
v344 
=== Predecessor ===
v340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2427 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i2390 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i341 y: i2390  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
i2390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v345 #falseSuccessor: v346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B45" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2391 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
=== Succesors ===
next: i2392 
=== Usages ===
a1094 v2429 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2428 #next: i2392  <|@  <|@
tid ?342 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?367 
values: a1 a646 i341 - 
=== Succesors ===
=== Usages ===
v1508 v1509 v1831 i2392 v2505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?367 values: a1 a646 i341 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2391 
=== Succesors ===
=== Usages ===
i2392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?342 
guard: - 
address: v2429 
=== Succesors ===
next: v1562 
=== Usages ===
v1100 
=== Predecessor ===
a2391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?342 guard: - address: v2429 #next: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i1789 v2430 v1100 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i341 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i2392 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i557 y: i2392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1557 
falseSuccessor: v1560 
=== Usages ===
=== Predecessor ===
i2392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1557 #falseSuccessor: v1560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2393 
=== Usages ===
a2393 
=== Predecessor ===
v1562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2393  <|@  <|@
f <@~|@floating>@ <|@
tid a1094 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2391 
=== Succesors ===
=== Usages ===
v2430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2391  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1094 
index: i557 
=== Succesors ===
=== Usages ===
a2393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1094 index: i557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1557 
address: v2430 
=== Succesors ===
next: v2505 
=== Usages ===
a1108 v2505 
=== Predecessor ===
v1557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1557 address: v2430 #next: v2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
object: a2393 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
a2393 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?342 object: a2393 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid a1108 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2393 
=== Succesors ===
=== Usages ===
v1117 v1121 v408 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2393  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a646 
y: a1108 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a646 y: a1108  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v2505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607349218909980788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4621706540968831603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2394 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2431 
=== Succesors ===
next: v417 
=== Usages ===
a1113 v1118 v1378 v1380 
=== Predecessor ===
v410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2431 #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2394 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2394  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v1118 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
a2394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1118 #trueSuccessor: v415 #falseSuccessor: v416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4621555774077785386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?342 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i2375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i341 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v340 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598496160431384868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid a1379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2394 
y: a1379 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2394 y: a1379  <|@  <|@
tid ?440 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?367 
values: a1 a646 i341 - 
=== Succesors ===
=== Usages ===
?1776 ?1775 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?367 values: a1 a646 i341 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v1380 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1380 #trueSuccessor: v426 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4596032792737196678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i430 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i430  <|@  <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6a854f97
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a646 a1108 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a646 a1108  <|@  <|@
tid ?1775 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?440 
values: - - - 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?440 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i430 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1117 
stateDuring: ?1775 
=== Succesors ===
next: v444 
=== Usages ===
i443 
=== Predecessor ===
v426 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1117 stateDuring: ?1775 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
i430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590233037823758211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2394 
y: a1377 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2394 y: a1377  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v1378 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1378 #trueSuccessor: v421 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4550851043501207184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?342 #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid i2374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i341 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v340 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590219914738827788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i435 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i435  <|@  <|@
f <@~|@floating>@ <|@
tid a1113 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a2394 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2394  <|@  <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@47ec0333
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a1113 a646 a1108 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1113 a646 a1108  <|@  <|@
tid ?1776 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?440 
values: - - - 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?440 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1121 
stateDuring: ?1776 
=== Succesors ===
next: v445 
=== Usages ===
i443 
=== Predecessor ===
v427 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1121 stateDuring: ?1776 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
i435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598492879660152262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v441 
values: i430 i435 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v441 values: i430 i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v444 v445 
=== Succesors ===
next: v362 
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v444 v445 #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i443 
y: i11 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i443 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v357 
=== Succesors ===
trueSuccessor: v358 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v357 #trueSuccessor: v358 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598061549816431067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
tid ?356 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?367 
values: a1 a646 i341 - i11 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?367 values: a1 a646 i341 - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?356 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?356 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i341 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v340 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581649141077200264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B30" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v797 v799 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v797 v799 #next: v359  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v340 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v340 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i105 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i341 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604813664394900063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599450824147292649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v340 
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1562 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v340 #next: v1561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid i1833 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -281883
stableDimension: 0
stamp: i32 [-281883] ⇊00000000fffbb2e5 ⇈00000000fffbb2e5
stampKind: i32
value: int[-281883|0xfffffffffffbb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
actionAndReason: i1833 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?342 actionAndReason: i1833 speculation: a1802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621166794173973113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v340 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v340 #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603322257346962535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i208 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i208  <|@  <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6825ccca
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a19 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a19  <|@  <|@
tid ?677 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a19 a19 - - - 
=== Succesors ===
=== Usages ===
?1774 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a19 a19 - - -  <|@  <|@
tid ?1774 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?677 
values: - - 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?677 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1089 
stateDuring: ?1774 
=== Succesors ===
next: v782 
=== Usages ===
v779 i885 
=== Predecessor ===
v205 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1089 stateDuring: ?1774 #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i105 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i208 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v779 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
i208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v779 #trueSuccessor: v780 #falseSuccessor: v781  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600843777383834340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid a1786 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
a1787 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" "B49" "B13" 
    successors "B51" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1787 <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v743 
values: a1788 a1788 a1786 a2387 
=== Succesors ===
=== Usages ===
v1139 v1201 v2133 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v743 values: a1788 a1788 a1786 a2387  <|@  <|@
f <@~|@floating>@ <|@
tid a756 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v743 
values: a646 a646 a19 a1074 
=== Succesors ===
=== Usages ===
v1190 v1183 ?514 v1222 ?727 ?514 ?745 ?745 ?155 ?147 ?147 ?148 ?727 v1215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v743 values: a646 a646 a19 a1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v744 v746 v783 v902 
=== Succesors ===
next: i2395 
=== Usages ===
a1787 a756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v744 v746 v783 v902 #next: i2395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
=== Succesors ===
next: a2396 
=== Usages ===
i730 i129 i730 
=== Predecessor ===
v743 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2432 #next: a2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
=== Succesors ===
next: v122 
=== Usages ===
a1126 v1225 v2443 
=== Predecessor ===
i2395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2433 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2396 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2396  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.15737516016132225
=== Inputs ===
condition: v1225 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v121 
=== Usages ===
=== Predecessor ===
a2396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1225 #trueSuccessor: v120 #falseSuccessor: v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1918 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1918 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1937 
=== Usages ===
v2453 v2454 
=== Predecessor ===
v120 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1937  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1918 
index: - 
=== Succesors ===
=== Usages ===
j1937 v1939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
=== Succesors ===
next: j1938 
=== Usages ===
j2215 j1943 v2489 
=== Predecessor ===
j1918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2453 #next: j1938  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1918 
index: - 
=== Succesors ===
=== Usages ===
j1938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1938 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2454 
=== Succesors ===
next: v1926 
=== Usages ===
v1923 
=== Predecessor ===
j1937 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2454 #next: v1926  <|@  <|@
f <@~|@floating>@ <|@
tid j2215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1937 
y: j2214 
=== Succesors ===
=== Usages ===
v1923 v1939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1937 y: j2214  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1938 
y: j2215 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1938 y: j2215  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1923 
=== Succesors ===
trueSuccessor: v1924 
falseSuccessor: v1925 
=== Usages ===
=== Predecessor ===
j1938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1923 #trueSuccessor: v1924 #falseSuccessor: v1925  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581674016104257750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1930 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1930  <|@  <|@
tid ?745 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - - - i105 
=== Succesors ===
=== Usages ===
a1930 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - - - i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1930 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?745 
arguments: v1916 i123 i73 
=== Succesors ===
next: j1931 
=== Usages ===
j1931 
=== Predecessor ===
v1924 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?745 arguments: v1916 i123 i73 #next: j1931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1931 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1930 
=== Succesors ===
next: v1944 
=== Usages ===
j1943 
=== Predecessor ===
a1930 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1930 #next: v1944  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1941 
=== Predecessor ===
j1931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611836033447576369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
value: j2215 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1935 
=== Usages ===
=== Predecessor ===
v1925 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2453 value: j2215 stateAfter: - lastLocationAccess: - #next: v1935  <|@  <|@
f <@~|@floating>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1937 
index: - 
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1937 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2489 
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2489 #next: v1942  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1941 
=== Predecessor ===
v1935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1943 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1941 
values: j1937 j1931 
=== Succesors ===
=== Usages ===
v2457 v2456 a1701 v2455 v2490 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1941 values: j1937 j1931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1942 v1944 
=== Succesors ===
next: a1701 
=== Usages ===
j1943 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1942 v1944 #next: a1701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1701 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1943 
=== Succesors ===
next: v1953 
=== Usages ===
a1707 
=== Predecessor ===
v1941 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1943 #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2455 
value: i123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
a1701 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2455 value: i123 stateAfter: - lastLocationAccess: - #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2456 
value: j1949 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1957 
=== Usages ===
=== Predecessor ===
v1953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2456 value: j1949 stateAfter: - lastLocationAccess: - #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2457 
value: v2219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1962 
=== Usages ===
=== Predecessor ===
v1954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2457 value: v2219 stateAfter: - lastLocationAccess: - #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2490 
value: v1960 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1707 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2490 value: v1960 stateAfter: - lastLocationAccess: - #next: a1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1707 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1701 
=== Succesors ===
next: v1708 
=== Usages ===
a1223 a729 
=== Predecessor ===
v1962 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1701 #next: v1708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
a1707 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid a1223 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a1707 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
value: a1223 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1963 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2433 value: a1223 stateAfter: - lastLocationAccess: - #next: j1963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1968 
=== Usages ===
j1964 
=== Predecessor ===
v1224 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid j1964 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1963 
y: i470 
=== Succesors ===
=== Usages ===
v2458 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1963 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1964 
index: j1967 
=== Succesors ===
=== Usages ===
v1968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1964 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2458 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
j1963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2458 value: i1969 stateAfter: - lastLocationAccess: - #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
v1968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622481684559997218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2397 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2397  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2396 
=== Succesors ===
=== Usages ===
i2397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: v136 
=== Usages ===
v130 i467 i469 ?479 j2068 v1392 v504 v492 ?503 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 74]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2395 
y: i73 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2395 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i2397 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i129 y: i2397  <|@  <|@
f <@~|@floating>@ <|@
tid a1126 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2396 
=== Succesors ===
=== Usages ===
a729 j2062 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2396  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.06591371968154047
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i2397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 536870911] ⇈000000001fffffff
=== Inputs ===
x: i2397 
y: i468 
=== Succesors ===
=== Usages ===
v471 i547 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2397 y: i468  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i470 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i469 y: i470  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7308974300032183
=== Inputs ===
condition: v471 
=== Succesors ===
trueSuccessor: v472 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v471 #trueSuccessor: v472 #falseSuccessor: v473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603025262025585884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596310794871308524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B60" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [8 - 536870911] ⇈000000001fffffff
valueDescription: i32
=== Inputs ===
merge: v476 
values: i123 i469 
=== Succesors ===
=== Usages ===
?480 i481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v476 values: i123 i469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v477 
=== Succesors ===
next: v1579 
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v477 #next: v1579  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 421
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - - - 
=== Succesors ===
=== Usages ===
?479 ?1778 ?503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2397 
y: i73 
=== Succesors ===
=== Usages ===
?479 i481 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2397 y: i73  <|@  <|@
tid ?479 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 456
stackSize: 1
=== Inputs ===
outerFrameState: ?514 
values: a1 i2397 - - i467 
=== Succesors ===
=== Usages ===
?480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: a1 i2397 - - i467  <|@  <|@
tid ?480 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?479 
values: - - i547 
=== Succesors ===
=== Usages ===
a1996 v1843 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?479 values: - - i547  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [8 - 1610612734] ⇈000000007fffffff
=== Inputs ===
x: i467 
y: i547 
=== Succesors ===
=== Usages ===
v483 i485 i2222 v2224 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i547  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 1073741824
stableDimension: 0
stamp: i32 [1073741824] ⇊0000000040000000 ⇈0000000040000000
stampKind: i32
value: int[1073741824|0x40000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i481 
y: i482 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i481 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v1575 
falseSuccessor: v1578 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v1575 #falseSuccessor: v1578  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1264 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1264  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i481 
y: i73 
=== Succesors ===
=== Usages ===
j2241 v496 v507 v1392 v2019 i2038 a1996 v1981 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i481 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i2397 
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i485 y: i2397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1392 
=== Succesors ===
trueSuccessor: v1263 
falseSuccessor: v1261 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1392 #trueSuccessor: v1263 #falseSuccessor: v1261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@~|@floating>@ <|@
tid i1840 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -323937
stableDimension: 0
stamp: i32 [-323937] ⇊00000000fffb0e9f ⇈00000000fffb0e9f
stampKind: i32
value: int[-323937|0xfffffffffffb0e9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1975 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1975 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2016 
=== Usages ===
v2459 v2460 
=== Predecessor ===
v1261 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1975 
index: - 
=== Succesors ===
=== Usages ===
j2016 v2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
=== Succesors ===
next: j2017 
=== Usages ===
j1979 v2461 v2462 a1995 v2467 v2463 v2464 v2465 v2466 
=== Predecessor ===
j1975 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2459 #next: j2017  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1975 
index: - 
=== Succesors ===
=== Usages ===
j2017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2460 
=== Succesors ===
next: v1984 
=== Usages ===
v1985 
=== Predecessor ===
j2016 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2460 #next: v1984  <|@  <|@
f <@~|@floating>@ <|@
tid i1980 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i1980 
=== Succesors ===
=== Usages ===
v1984 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i485 y: i1980  <|@  <|@
f <@*|@fixed>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1981 
=== Succesors ===
trueSuccessor: v1983 
falseSuccessor: v1982 
=== Usages ===
=== Predecessor ===
j2017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1981 #trueSuccessor: v1983 #falseSuccessor: v1982  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604147382058228885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v1984 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid i2221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2222 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i481 
y: i2221 
=== Succesors ===
=== Usages ===
i2004 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i481 y: i2221  <|@  <|@
f <@~|@floating>@ <|@
tid i2003 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2004 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2004 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i2222 
y: i2003 
=== Succesors ===
=== Usages ===
i1974 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2222 y: i2003  <|@  <|@
f <@~|@floating>@ <|@
tid i1973 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1974 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1974 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2004 
y: i1973 
=== Succesors ===
=== Usages ===
j1978 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2004 y: i1973  <|@  <|@
f <@~|@floating>@ <|@
tid j1978 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1974 
=== Succesors ===
=== Usages ===
j1979 v2463 v2464 v2465 v2466 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1974  <|@  <|@
f <@~|@floating>@ <|@
tid j1979 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j1978 
y: j2016 
=== Succesors ===
=== Usages ===
v1985 v2018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1978 y: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2017 
y: j1979 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2017 y: j1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1985 
=== Succesors ===
trueSuccessor: v1990 
falseSuccessor: v1989 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1985 #trueSuccessor: v1990 #falseSuccessor: v1989  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574294390170262111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1988 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1988  <|@  <|@
f <@*|@fixed>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
v1990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604087660433099360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2018 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
value: j1979 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2006 
=== Usages ===
=== Predecessor ===
v1989 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2459 value: j1979 stateAfter: - lastLocationAccess: - #next: v2006  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2463 
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
v2018 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2463 #next: v2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2464 
=== Succesors ===
next: v2011 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2464 #next: v2011  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2465 
=== Succesors ===
next: v2014 
=== Usages ===
=== Predecessor ===
v2008 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2465 #next: v2014  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2466 
=== Succesors ===
next: v2019 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2466 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2461 
value: i485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v2014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2461 value: i485 stateAfter: - lastLocationAccess: - #next: v2020  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
v2020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2462 
value: j1949 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2023 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2462 value: j1949 stateAfter: - lastLocationAccess: - #next: v2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
v2023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2467 
value: v2219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1994 
=== Usages ===
=== Predecessor ===
v2020 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2467 value: v2219 stateAfter: - lastLocationAccess: - #next: v1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1995 
=== Usages ===
=== Predecessor ===
v2023 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2016 
=== Succesors ===
next: v1997 
=== Usages ===
a2000 
=== Predecessor ===
v1994 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2016 #next: v1997  <|@  <|@
f <@*|@fixed>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1998 
=== Predecessor ===
a1995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589973009563567121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1986 
=== Usages ===
=== Predecessor ===
v1984 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
v1982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590450782564603319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1986 v1988 
=== Succesors ===
next: a1996 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1986 v1988 #next: a1996  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1996 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1996 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?480 
arguments: v1003 i485 i11 
=== Succesors ===
next: v1999 
=== Usages ===
a2000 
=== Predecessor ===
v1987 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?480 arguments: v1003 i485 i11 #next: v1999  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1998 
=== Predecessor ===
a1996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1998 
values: a1995 a1996 
=== Succesors ===
=== Usages ===
v2450 a1797 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1998 values: a1995 a1996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1997 v1999 
=== Succesors ===
next: v2298 
=== Usages ===
a2000 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1997 v1999 #next: v2298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2252 
=== Usages ===
j2300 
=== Predecessor ===
v1998 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2252  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2000 
index: - 
=== Succesors ===
=== Usages ===
j2300 j2037 j2035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2000 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2300 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2298 
address: v2450 
=== Succesors ===
=== Usages ===
v2497 v2498 v2499 v2500 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2298 address: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid j2241 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i485 
=== Succesors ===
=== Usages ===
j2341 j2328 j2334 j2338 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i485  <|@  <|@
f <@~|@floating>@ <|@
tid j2327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2328 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j2241 
y: j2327 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2327  <|@  <|@
f <@~|@floating>@ <|@
tid j1908 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2253 
=== Predecessor ===
v2298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B97" 
    successors "B70" "B97" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4613818154925520151
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2321 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2253 
values: j1699 j2326 
=== Succesors ===
=== Usages ===
v2500 j2326 v2499 j2503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2253 values: j1699 j2326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2252 
=== Succesors ===
next: v2352 
=== Usages ===
j2321 v2256 v2257 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2252 #next: v2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2500 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2321 
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2500 
value: v2353 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2259 
=== Usages ===
=== Predecessor ===
v2253 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2500 value: v2353 stateAfter: - lastLocationAccess: - #next: v2259  <|@  <|@
f <@~|@floating>@ <|@
tid j2326 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2321 
y: j1908 
=== Succesors ===
=== Usages ===
v2335 j2321 v2331 j2308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2321 y: j1908  <|@  <|@
f <@~|@floating>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2328 
y: j2326 
=== Succesors ===
=== Usages ===
v2259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2328 y: j2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2331 
=== Succesors ===
trueSuccessor: v2256 
falseSuccessor: v2258 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2331 #trueSuccessor: v2256 #falseSuccessor: v2258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2253 
=== Succesors ===
next: v2280 
=== Usages ===
=== Predecessor ===
v2259 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2253 #next: v2280  <|@  <|@
f <@~|@floating>@ <|@
tid j2333 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2334 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j2241 
y: j2333 
=== Succesors ===
=== Usages ===
v2335 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2333  <|@  <|@
f <@~|@floating>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2334 
y: j2326 
=== Succesors ===
=== Usages ===
v2280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2334 y: j2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2335 
=== Succesors ===
trueSuccessor: v2279 
falseSuccessor: v2278 
=== Usages ===
=== Predecessor ===
v2256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2335 #trueSuccessor: v2279 #falseSuccessor: v2278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2283 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2283  <|@  <|@
f <@*|@fixed>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
v2279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid v2499 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2321 
=== Succesors ===
=== Usages ===
v2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2499 
value: v2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2271 
=== Usages ===
=== Predecessor ===
v2278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2499 value: v2356 stateAfter: - lastLocationAccess: - #next: v2271  <|@  <|@
f <@~|@floating>@ <|@
tid j2502 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i64 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2321 
y: j2502 
=== Succesors ===
=== Usages ===
j2308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2321 y: j2502  <|@  <|@
f <@*|@fixed>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
v2351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2308 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2272 
values: j2503 j2326 
=== Succesors ===
=== Usages ===
v2498 j2314 j2301 v2339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2272 values: j2503 j2326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2271 v2283 
=== Succesors ===
next: v2286 
=== Usages ===
j2308 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2271 v2283 #next: v2286  <|@  <|@
f <@~|@floating>@ <|@
tid j2337 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j2241 
y: j2337 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2338 
y: j2308 
=== Succesors ===
=== Usages ===
v2286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2338 y: j2308  <|@  <|@
f <@*|@fixed>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2339 
=== Succesors ===
trueSuccessor: v2285 
falseSuccessor: v2284 
=== Usages ===
=== Predecessor ===
v2272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2339 #trueSuccessor: v2285 #falseSuccessor: v2284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2289 
=== Usages ===
=== Predecessor ===
v2286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2289  <|@  <|@
f <@*|@fixed>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
v2285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2349 
=== Usages ===
=== Predecessor ===
v2286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2349  <|@  <|@
f <@~|@floating>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2308 
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2308  <|@  <|@
f <@~|@floating>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2498 
value: v2355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2274 
=== Usages ===
=== Predecessor ===
v2284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2498 value: v2355 stateAfter: - lastLocationAccess: - #next: v2274  <|@  <|@
f <@~|@floating>@ <|@
tid j2313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2308 
y: j2313 
=== Succesors ===
=== Usages ===
j2301 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2308 y: j2313  <|@  <|@
f <@*|@fixed>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
v2349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2301 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2275 
values: j2314 j2308 
=== Succesors ===
=== Usages ===
v2497 v2342 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2275 values: j2314 j2308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2274 v2289 
=== Succesors ===
next: v2292 
=== Usages ===
j2301 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2274 v2289 #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid j2048 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2049 j2341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j2241 
y: j2048 
=== Succesors ===
=== Usages ===
v2342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2048  <|@  <|@
f <@~|@floating>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2341 
y: j2301 
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2341 y: j2301  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2342 
=== Succesors ===
trueSuccessor: v2291 
falseSuccessor: v2290 
=== Usages ===
=== Predecessor ===
v2275 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2342 #trueSuccessor: v2291 #falseSuccessor: v2290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2295 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2295  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v2291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2497 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2301 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2301  <|@  <|@
f <@~|@floating>@ <|@
tid a2354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2497 
value: a2354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2277 
=== Usages ===
=== Predecessor ===
v2290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2497 value: a2354 stateAfter: - lastLocationAccess: - #next: v2277  <|@  <|@
f <@*|@fixed>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v2347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2277 v2295 
=== Succesors ===
next: v2034 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2277 v2295 #next: v2034  <|@  <|@
f <@~|@floating>@ <|@
tid i2223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
x: i481 
y: i2223 
=== Succesors ===
=== Usages ===
v2034 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i481 y: i2223  <|@  <|@
f <@*|@fixed>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2224 
=== Succesors ===
trueSuccessor: v2032 
falseSuccessor: v2033 
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2224 #trueSuccessor: v2032 #falseSuccessor: v2033  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2059 
=== Usages ===
=== Predecessor ===
v2034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2059  <|@  <|@
f <@*|@fixed>@ <|@
tid v2059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2058 
=== Predecessor ===
v2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2035 
=== Usages ===
=== Predecessor ===
v2034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2450 
=== Succesors ===
next: j2037 
=== Usages ===
j2036 
=== Predecessor ===
v2033 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2450 #next: j2037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2037 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2450 
=== Succesors ===
next: v2045 
=== Usages ===
j2041 
=== Predecessor ===
j2035 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2450 #next: v2045  <|@  <|@
f <@~|@floating>@ <|@
tid i2038 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i485 
y: i105 
=== Succesors ===
=== Usages ===
i2039 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i485 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i2039 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i2038 
y: i468 
=== Succesors ===
=== Usages ===
j2040 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2038 y: i468  <|@  <|@
f <@~|@floating>@ <|@
tid j2040 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i2039 
=== Succesors ===
=== Usages ===
j2041 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2039  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j2037 
y: j2040 
=== Succesors ===
=== Usages ===
j2042 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2037 y: j2040  <|@  <|@
f <@~|@floating>@ <|@
tid j2042 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2041 
y: i470 
=== Succesors ===
=== Usages ===
j2043 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2041 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j2036 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2035 
y: i470 
=== Succesors ===
=== Usages ===
j2043 j2057 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2035 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j2043 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2042 
y: j2036 
=== Succesors ===
=== Usages ===
j2044 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2042 y: j2036  <|@  <|@
f <@~|@floating>@ <|@
tid j2044 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2043 
y: j1949 
=== Succesors ===
=== Usages ===
j2047 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2043 y: j1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
j2037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B96" 
    successors "B83" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2046 
values: j2044 j2049 
=== Succesors ===
=== Usages ===
j2049 v2050 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2046 values: j2044 j2049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2045 
=== Succesors ===
next: v2053 
=== Usages ===
j2047 v2051 v2056 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2045 #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2047 
y: j1949 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2047 y: j1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2050 
=== Succesors ===
trueSuccessor: v2051 
falseSuccessor: v2052 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2050 #trueSuccessor: v2051 #falseSuccessor: v2052  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2046 
=== Succesors ===
next: v2060 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2046 #next: v2060  <|@  <|@
f <@*|@fixed>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2058 
=== Predecessor ===
v2051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2059 v2060 
=== Succesors ===
next: a1797 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2059 v2060 #next: a1797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2000 
=== Succesors ===
next: j2062 
=== Usages ===
j2066 ?503 a1276 
=== Predecessor ===
v2058 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2000 #next: j2062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
object: a1126 
=== Succesors ===
next: j2066 
=== Usages ===
v2468 
=== Predecessor ===
a1797 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1126 #next: j2066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
object: a1797 
=== Succesors ===
next: v2069 
=== Usages ===
v2469 
=== Predecessor ===
j2062 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1797 #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2062 
index: - 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2062 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2066 
index: - 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2066 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2068 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2397 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2468 v2469 j2068 
=== Succesors ===
next: v1277 
=== Usages ===
=== Predecessor ===
j2066 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2468 v2469 j2068 #next: v1277  <|@  <|@
f <@~|@floating>@ <|@
tid a1276 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n! -
=== Inputs ===
value: a1797 
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
value: a1276 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2070 
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2433 value: a1276 stateAfter: - lastLocationAccess: - #next: j2070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v2074 
=== Usages ===
j2071 
=== Predecessor ===
v1277 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v2074  <|@  <|@
f <@~|@floating>@ <|@
tid j2071 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2070 
y: i470 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2070 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2071 
index: j1967 
=== Succesors ===
=== Usages ===
v2074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2071 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2470 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
j2070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2470 value: i1969 stateAfter: - lastLocationAccess: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2397 
y: i298 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2397 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9922845270333365
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
v2074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v493 #falseSuccessor: v494  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604759757828088930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i298 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i485 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9926008704858252
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v501 #falseSuccessor: v500  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604711037976543358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572886163151516119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 86]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2ae8a3a4
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1778 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 466
stackSize: 0
=== Inputs ===
outerFrameState: ?514 
values: - - - - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
bci: 87
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1281 
stateDuring: ?1778 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1281 stateDuring: ?1778 #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573203346018032255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B86" 
    successors "B90" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v497 v499 
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v497 v499 #next: v1584  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2397 
y: i308 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2397 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1583 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v1580 #falseSuccessor: v1583  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 131073
stableDimension: 0
stamp: i32 [131073] ⇊0000000000020001 ⇈0000000000020001
stampKind: i32
value: int[131073|0x20001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i506 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i485 y: i506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v1585 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v1585 #falseSuccessor: v1588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v1585 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B87" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v516 v517 
=== Succesors ===
next: i2398 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v516 v517 #next: i2398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:425) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
=== Succesors ===
next: a2399 
=== Usages ===
i730 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2432 #next: a2399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
=== Succesors ===
next: v725 
=== Usages ===
a1280 
=== Predecessor ===
i2398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2433 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid a1280 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2399 
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2399  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
a2399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1852  <|@  <|@
f <@~|@floating>@ <|@
tid i1853 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328467
stableDimension: 0
stamp: i32 [-328467] ⇊00000000fffafced ⇈00000000fffafced
stampKind: i32
value: int[-328467|0xfffffffffffafced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid i1848 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328211
stableDimension: 0
stamp: i32 [-328211] ⇊00000000fffafded ⇈00000000fffafded
stampKind: i32
value: int[-328211|0xfffffffffffafded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
v1583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1849 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-328467 - -328211] ⇊00000000fffafced ⇈00000000fffafded
valueDescription: i32
=== Inputs ===
merge: v1846 
values: i1848 i1853 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1846 values: i1848 i1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1847 v1852 
=== Succesors ===
next: v1851 
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1847 v1852 #next: v1851  <|@  <|@
tid ?503 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 463
stackSize: 0
=== Inputs ===
outerFrameState: ?514 
values: a1 i2397 - a1797 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: a1 i2397 - a1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?503 
actionAndReason: i1849 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1846 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?503 actionAndReason: i1849 speculation: a1802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid j2049 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j2047 
y: j2048 
=== Succesors ===
=== Usages ===
j2047 j2054 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2047 y: j2048  <|@  <|@
f <@~|@floating>@ <|@
tid j2057 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2036 
y: j1967 
=== Succesors ===
=== Usages ===
j2054 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2036 y: j1967  <|@  <|@
f <@~|@floating>@ <|@
tid j2054 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j2049 
y: j2057 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2049 y: j2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: j2054 
value: i11 
=== Succesors ===
next: v2056 
=== Usages ===
=== Predecessor ===
v2052 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2054 value: i11 #next: v2056  <|@  <|@
f <@*|@fixed>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v2046 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2046  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4612159220894144465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2257 
=== Usages ===
=== Predecessor ===
v2259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2257  <|@  <|@
f <@*|@fixed>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2253 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2258 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1844 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1844  <|@  <|@
f <@~|@floating>@ <|@
tid i1845 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314899
stableDimension: 0
stamp: i32 [-314899] ⇊00000000fffb31ed ⇈00000000fffb31ed
stampKind: i32
value: int[-314899|0xfffffffffffb31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B61" "B98" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1841 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-323937 - -314899] ⇊00000000fffb008d ⇈00000000fffb3fff
valueDescription: i32
=== Inputs ===
merge: v1838 
values: i1840 i1845 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1838 values: i1840 i1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1839 v1844 
=== Succesors ===
next: v1843 
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1839 v1844 #next: v1843  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?480 
actionAndReason: i1841 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1838 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?480 actionAndReason: i1841 speculation: a1802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622066951052153297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B92" "B100" "B54" 
    successors "B102" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a729 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v726 
values: a1280 a1126 a1707 
=== Succesors ===
=== Usages ===
v2442 v2434 v2471 v2435 v2441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v726 values: a1280 a1126 a1707  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v726 
values: i2398 i2395 i2395 
=== Succesors ===
=== Usages ===
i402 ?147 ?148 v1222 v1215 ?155 ?727 v1183 v1190 i153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v726 values: i2398 i2395 i2395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v725 v728 v791 
=== Succesors ===
next: v2400 
=== Usages ===
a729 i730 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v725 v728 v791 #next: v2400  <|@  <|@
tid ?727 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - i730 - 
=== Succesors ===
=== Usages ===
v1859 v2400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - i730 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
v2400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?727 
guard: - 
address: v2471 
=== Succesors ===
next: v1599 
=== Usages ===
v2225 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?727 guard: - address: v2471 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2400 
y: v2219 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2400 y: v2219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2225 
=== Succesors ===
trueSuccessor: v1595 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
v2400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2225 #trueSuccessor: v1595 #falseSuccessor: v1598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2401 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2401  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
i2401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
=== Succesors ===
next: v1604 
=== Usages ===
v1131 v979 v867 v1194 v2359 v2360 
=== Predecessor ===
v1595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2441 #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i730 
y: i73 
=== Succesors ===
=== Usages ===
i403 v2434 v1131 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i730 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i402 
y: i2401 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i402 y: i2401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1600 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
i2401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1600 #falseSuccessor: v1603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1609 
=== Usages ===
v1139 
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1609  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i402 
y: i73 
=== Succesors ===
=== Usages ===
v1194 v2442 v2435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i402 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i403 
y: i2401 
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i403 y: i2401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1194 
=== Succesors ===
trueSuccessor: v1605 
falseSuccessor: v1608 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1194 #trueSuccessor: v1605 #falseSuccessor: v1608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
v1166 a2402 v1201 
=== Predecessor ===
v1609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a729 
index: i402 
=== Succesors ===
=== Usages ===
v1139 j2080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: i402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1600 
address: v2434 
value: a1787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2080 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1600 address: v2434 value: a1787 stateAfter: - lastLocationAccess: - #next: j2080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2434 
=== Succesors ===
next: v2084 
=== Usages ===
j2081 
=== Predecessor ===
v1139 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2434 #next: v2084  <|@  <|@
f <@~|@floating>@ <|@
tid j2081 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2080 
y: i470 
=== Succesors ===
=== Usages ===
v2472 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2080 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2472 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2081 
index: j1967 
=== Succesors ===
=== Usages ===
v2084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2081 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2472 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2402 
=== Usages ===
=== Predecessor ===
j2080 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2472 value: i1969 stateAfter: - lastLocationAccess: - #next: a2402  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a729 
index: i403 
=== Succesors ===
=== Usages ===
a2402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1605 
address: v2435 
=== Succesors ===
next: a2403 
=== Usages ===
v2473 v1150 v2436 
=== Predecessor ===
v2084 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1605 address: v2435 #next: a2403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 141]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: v1713 
=== Usages ===
v1209 v2440 v2506 
=== Predecessor ===
a2402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2403 
=== Succesors ===
=== Usages ===
v576 v162 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2403  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2402 
=== Succesors ===
=== Usages ===
v1713 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2402  <|@  <|@
tid ?155 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 - - i730 - 
=== Succesors ===
=== Usages ===
v1504 v1503 v1823 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 - - i730 -  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 136]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i730 
y: i73 
=== Succesors ===
=== Usages ===
v1167 v846 i972 v1202 i2364 v2366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i730 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a729 
index: i403 
=== Succesors ===
=== Usages ===
v1201 v1166 j2134 j2141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: i403  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v1712 
falseSuccessor: v1711 
=== Usages ===
=== Predecessor ===
a2403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v1712 #falseSuccessor: v1711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608652596548061998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1721 
=== Usages ===
=== Predecessor ===
v1713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1721  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1890 
=== Predecessor ===
v1712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622910117602100373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v1713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@~|@floating>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2402 
=== Succesors ===
=== Usages ===
v2404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2473 
=== Succesors ===
next: v1895 
=== Usages ===
v2227 
=== Predecessor ===
v1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2473 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2404 
y: v2226 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2404 y: v2226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.028170283262457074
=== Inputs ===
condition: v2227 
=== Succesors ===
trueSuccessor: v1893 
falseSuccessor: v1892 
=== Usages ===
=== Predecessor ===
v2404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2227 #trueSuccessor: v1893 #falseSuccessor: v1892  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2091 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2091 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2106 
=== Usages ===
v2474 v2475 
=== Predecessor ===
v1893 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2106 v2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2474 
=== Succesors ===
next: j2107 
=== Usages ===
j2228 j2112 v2491 
=== Predecessor ===
j2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2474 #next: j2107  <|@  <|@
f <@~|@floating>@ <|@
tid v2475 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2475 
=== Succesors ===
next: v2099 
=== Usages ===
v2096 
=== Predecessor ===
j2106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2475 #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid j2228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2106 
y: j1057 
=== Succesors ===
=== Usages ===
v2096 v2108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2106 y: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2107 
y: j2228 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2107 y: j2228  <|@  <|@
f <@*|@fixed>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2096 
=== Succesors ===
trueSuccessor: v2097 
falseSuccessor: v2098 
=== Usages ===
=== Predecessor ===
j2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2096 #trueSuccessor: v2097 #falseSuccessor: v2098  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569900903203743257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2102 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2102  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - i730 - 
=== Succesors ===
=== Usages ===
?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - i730 -  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setKey(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: a1 i730 a756 
=== Succesors ===
=== Usages ===
a2102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 i730 a756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2102 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?148 
arguments: v1916 i468 i73 
=== Succesors ===
next: j2103 
=== Usages ===
j2103 
=== Predecessor ===
v2097 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?148 arguments: v1916 i468 i73 #next: j2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2103 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2102 
=== Succesors ===
next: v2113 
=== Usages ===
j2112 
=== Predecessor ===
a2102 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2102 #next: v2113  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2110 
=== Predecessor ===
j2103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599669226066856306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2108 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2474 
value: j2228 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2105 
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2474 value: j2228 stateAfter: - lastLocationAccess: - #next: v2105  <|@  <|@
f <@~|@floating>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2491 
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v2108 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2491 #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2110 
=== Predecessor ===
v2105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" 
    successors "B111" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2112 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2110 
values: j2106 j2103 
=== Succesors ===
=== Usages ===
v2477 v2476 a1729 v2492 v2493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2110 values: j2106 j2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2111 v2113 
=== Succesors ===
next: a1729 
=== Usages ===
j2112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2111 v2113 #next: a1729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1729 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2112 
=== Succesors ===
next: j2123 
=== Usages ===
a1734 
=== Predecessor ===
v2110 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2112 #next: j2123  <|@  <|@
f <@~|@floating>@ <|@
tid j2378 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1709 
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1709  <|@  <|@
f <@~|@floating>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2378 
index: - 
=== Succesors ===
=== Usages ===
j2123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2378 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2501 
=== Succesors ===
next: v2124 
=== Usages ===
v2124 
=== Predecessor ===
a1729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2501 #next: v2124  <|@  <|@
f <@~|@floating>@ <|@
tid v2476 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2476 
value: j2123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2127 
=== Usages ===
=== Predecessor ===
j2123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2476 value: j2123 stateAfter: - lastLocationAccess: - #next: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2477 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2477 
value: v2226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2405 
=== Usages ===
=== Predecessor ===
v2124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2477 value: v2226 stateAfter: - lastLocationAccess: - #next: i2405  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2402 
=== Succesors ===
=== Usages ===
i2405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
=== Succesors ===
next: v2131 
=== Usages ===
v2131 
=== Predecessor ===
v2127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2436 #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid v2492 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2492 
value: i2405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2133 
=== Usages ===
=== Predecessor ===
i2405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2492 value: i2405 stateAfter: - lastLocationAccess: - #next: v2133  <|@  <|@
f <@~|@floating>@ <|@
tid v2493 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2493 
value: a1787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1734 
=== Usages ===
=== Predecessor ===
v2131 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2493 value: a1787 stateAfter: - lastLocationAccess: - #next: a1734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1734 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1729 
=== Succesors ===
next: v1735 
=== Usages ===
a1165 
=== Predecessor ===
v2133 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1729 #next: v1735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
a1734 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid a1165 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a1734 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1605 
address: v2442 
value: a1165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2134 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1605 address: v2442 value: a1165 stateAfter: - lastLocationAccess: - #next: j2134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2442 
=== Succesors ===
next: v2138 
=== Usages ===
j2135 
=== Predecessor ===
v1166 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2442 #next: v2138  <|@  <|@
f <@~|@floating>@ <|@
tid j2135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2134 
y: i470 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2134 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2478 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2135 
index: j1967 
=== Succesors ===
=== Usages ===
v2138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2135 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2478 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
j2134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2478 value: i1969 stateAfter: - lastLocationAccess: - #next: v1167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
value: i153 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v2138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2432 value: i153 stateAfter: - lastLocationAccess: - #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v1209 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1209 #trueSuccessor: v160 #falseSuccessor: v161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594678420441695221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2406 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v186 
=== Usages ===
v2368 v2370 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2406 
=== Succesors ===
=== Usages ===
i2367 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2406  <|@  <|@
f <@~|@floating>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2406 
y: a1377 
=== Succesors ===
=== Usages ===
i2369 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2406 y: a1377  <|@  <|@
f <@~|@floating>@ <|@
tid i2369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v2370 
trueValue: i123 
falseValue: i327 
=== Succesors ===
=== Usages ===
i2367 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2370 trueValue: i123 falseValue: i327  <|@  <|@
f <@~|@floating>@ <|@
tid i2367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v2368 
trueValue: i123 
falseValue: i2369 
=== Succesors ===
=== Usages ===
v2366 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2368 trueValue: i123 falseValue: i2369  <|@  <|@
f <@~|@floating>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2367 
y: i153 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2367 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v2366 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
a2406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2366 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4574701195994764050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6a51b899
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1781 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1174 
stateDuring: ?1781 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1174 stateDuring: ?1781 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594426821259161436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?155 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?155 #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595773996197861255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2407 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2407  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2403 
=== Succesors ===
=== Usages ===
i2407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
=== Succesors ===
next: i2408 
=== Usages ===
i313 v739 
=== Predecessor ===
v161 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2440 #next: i2408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v302 
=== Usages ===
i2364 
=== Predecessor ===
i2407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid i2364 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i153 
y: i2408 
=== Succesors ===
=== Usages ===
i2362 i2363 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i153 y: i2408  <|@  <|@
f <@~|@floating>@ <|@
tid i2363 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i2364 
y: i73 
=== Succesors ===
=== Usages ===
i2362 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2364 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid i2362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i2363 
y: i2364 
=== Succesors ===
=== Usages ===
v739 v174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2363 y: i2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i298 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v2360 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i2408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2360 #trueSuccessor: v300 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594107066116622430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2407 
y: i2362 
=== Succesors ===
=== Usages ===
i740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2407 y: i2362  <|@  <|@
f <@~|@floating>@ <|@
tid i740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v739 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v739 trueValue: i73 falseValue: i11  <|@  <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4d83cb7b
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i740 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i740  <|@  <|@
tid ?1783 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1183 
stateDuring: ?1783 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1183 stateDuring: ?1783 #next: v733  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
f <@~|@floating>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i308 
=== Succesors ===
=== Usages ===
v1619 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2359 
=== Succesors ===
trueSuccessor: v1615 
falseSuccessor: v1618 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2359 #trueSuccessor: v1615 #falseSuccessor: v1618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2407 
y: i73 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2407 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i313 
y: i2362 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i313 y: i2362  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v174 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v174 trueValue: i73 falseValue: i11  <|@  <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@b060d9d
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i175 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i175  <|@  <|@
tid ?1784 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1190 
stateDuring: ?1784 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1190 stateDuring: ?1784 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid i1820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303123
stableDimension: 0
stamp: i32 [-303123] ⇊00000000fffb5fed ⇈00000000fffb5fed
stampKind: i32
value: int[-303123|0xfffffffffffb5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
v1618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622720799226186535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1896 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1896  <|@  <|@
f <@*|@fixed>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1890 
=== Predecessor ===
v1892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" "B119" 
    successors "B121" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623467521398113421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1721 v1896 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1721 v1896 #next: v1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1605 
address: v2442 
value: a1787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2141 
=== Usages ===
=== Predecessor ===
v1890 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1605 address: v2442 value: a1787 stateAfter: - lastLocationAccess: - #next: j2141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2442 
=== Succesors ===
next: v2145 
=== Usages ===
j2142 
=== Predecessor ===
v1201 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2442 #next: v2145  <|@  <|@
f <@~|@floating>@ <|@
tid j2142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2141 
y: i470 
=== Succesors ===
=== Usages ===
v2479 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2141 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2142 
index: j1967 
=== Succesors ===
=== Usages ===
v2145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2142 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2479 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
j2141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2479 value: i1969 stateAfter: - lastLocationAccess: - #next: v1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
value: i153 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v2145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2432 value: i153 stateAfter: - lastLocationAccess: - #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v1209 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v1202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1209 #trueSuccessor: v574 #falseSuccessor: v575  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618305845921973333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2409 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v849 
=== Usages ===
v1387 v1388 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2409 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2409  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2409 
y: a1377 
=== Succesors ===
=== Usages ===
i2357 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2409 y: a1377  <|@  <|@
f <@~|@floating>@ <|@
tid i2357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1388 
trueValue: i123 
falseValue: i327 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1388 trueValue: i123 falseValue: i327  <|@  <|@
f <@~|@floating>@ <|@
tid i2358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1387 
trueValue: i123 
falseValue: i2357 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1387 trueValue: i123 falseValue: i2357  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2358 
y: i153 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2358 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
a2409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v847 #falseSuccessor: v848  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598507691754327632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v956  <|@  <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@641c7ada
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1779 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1207 
stateDuring: ?1779 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1207 stateDuring: ?1779 #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4618003591432196976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1504 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?155 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?155 #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4619621997619512517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2410 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2410  <|@  <|@
f <@~|@floating>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2403 
=== Succesors ===
=== Usages ===
i2410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2506 
=== Succesors ===
next: i2411 
=== Usages ===
i982 v965 
=== Predecessor ===
v575 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2506 #next: i2411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v870 
=== Usages ===
i972 
=== Predecessor ===
i2410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid i972 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i153 
y: i2411 
=== Succesors ===
=== Usages ===
i973 i974 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i153 y: i2411  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i972 
y: i73 
=== Succesors ===
=== Usages ===
i974 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i972 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i972 
y: i973 
=== Succesors ===
=== Usages ===
v975 v965 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i972 y: i973  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i298 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v867 
=== Succesors ===
trueSuccessor: v868 
falseSuccessor: v869 
=== Usages ===
=== Predecessor ===
i2411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v867 #trueSuccessor: v868 #falseSuccessor: v869  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617619458914403459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2410 
y: i974 
=== Succesors ===
=== Usages ===
i966 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2410 y: i974  <|@  <|@
f <@~|@floating>@ <|@
tid i966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v965 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v965 trueValue: i73 falseValue: i11  <|@  <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3ee83b0
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i966 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1215 
stateDuring: ?1780 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1215 stateDuring: ?1780 #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 8
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i308 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v1620 
falseSuccessor: v1623 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v1620 #falseSuccessor: v1623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i982 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2410 
y: i73 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2410 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i982 
y: i974 
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i982 y: i974  <|@  <|@
f <@~|@floating>@ <|@
tid i976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v975 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v975 trueValue: i73 falseValue: i11  <|@  <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@50e558a5
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i976 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1222 
stateDuring: ?1782 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v1620 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1222 stateDuring: ?1782 #next: v969  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 9
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid i1825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -311315
stableDimension: 0
stamp: i32 [-311315] ⇊00000000fffb3fed ⇈00000000fffb3fed
stampKind: i32
value: int[-311315|0xfffffffffffb3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B118" "B128" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1821 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-311315 - -303123] ⇊00000000fffb1fed ⇈00000000fffb7fed
valueDescription: i32
=== Inputs ===
merge: v1818 
values: i1820 i1825 
=== Succesors ===
=== Usages ===
v1823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1818 values: i1820 i1825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1819 v1824 
=== Succesors ===
next: v1823 
=== Usages ===
i1821 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1819 v1824 #next: v1823  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?155 
actionAndReason: i1821 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1818 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?155 actionAndReason: i1821 speculation: a1802  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1865 
=== Usages ===
=== Predecessor ===
v1609 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1865  <|@  <|@
f <@~|@floating>@ <|@
tid i1866 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292379
stableDimension: 0
stamp: i32 [-292379] ⇊00000000fffb89e5 ⇈00000000fffb89e5
stampKind: i32
value: int[-292379|0xfffffffffffb89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
v1608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid i1864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289819
stableDimension: 0
stamp: i32 [-289819] ⇊00000000fffb93e5 ⇈00000000fffb93e5
stampKind: i32
value: int[-289819|0xfffffffffffb93e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1860 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1860  <|@  <|@
f <@~|@floating>@ <|@
tid a1862 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@679821561
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@679821561]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1861 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288828
stableDimension: 0
stamp: i32 [-288828] ⇊00000000fffb97c4 ⇈00000000fffb97c4
stampKind: i32
value: int[-288828|0xfffffffffffb97c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" "B130" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1857 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-292379 - -288523] ⇊00000000fffb80c4 ⇈00000000fffb9ff5
valueDescription: i32
=== Inputs ===
merge: v1854 
values: i1861 i1864 i1866 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1854 values: i1861 i1864 i1866  <|@  <|@
f <@~|@floating>@ <|@
tid a1858 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1854 
values: a1862 a1802 a1802 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1854 values: a1862 a1802 a1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1860 v1863 v1865 
=== Succesors ===
next: v1859 
=== Usages ===
i1857 a1858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1860 v1863 v1865 #next: v1859  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?727 
actionAndReason: i1857 
speculation: a1858 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1854 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?727 actionAndReason: i1857 speculation: a1858  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595411856565423060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
v781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B14" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609905014042314416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i885 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v881 
values: i208 i895 
=== Succesors ===
=== Usages ===
i772 i556 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v881 values: i208 i895  <|@  <|@
f <@~|@floating>@ <|@
tid a891 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v881 
values: a19 a1074 
=== Succesors ===
=== Usages ===
a777 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v881 values: a19 a1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v882 v884 
=== Succesors ===
next: v770 
=== Usages ===
i885 a891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v882 v884 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid i556 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i885 
y: i73 
=== Succesors ===
=== Usages ===
i1789 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i885 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B44" "B135" 
    successors "B137" "B148" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i772 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v767 
values: i341 i885 
=== Succesors ===
=== Usages ===
?874 ?529 ?769 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: i341 i885  <|@  <|@
f <@~|@floating>@ <|@
tid i1789 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v767 
values: i557 i556 
=== Succesors ===
=== Usages ===
i1790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: i557 i556  <|@  <|@
f <@~|@floating>@ <|@
tid a777 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v767 
values: a646 a891 
=== Succesors ===
=== Usages ===
?874 ?769 ?769 a1328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: a646 a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v768 v770 
=== Succesors ===
next: a2412 
=== Usages ===
i772 i1789 a777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v768 v770 #next: a2412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: v2413 
=== Usages ===
a1286 v2480 v2445 
=== Predecessor ===
v767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: v2413  <|@  <|@
tid ?769 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?193 
values: a1 a777 a777 - - - i772 
=== Succesors ===
=== Usages ===
a2165 v1872 v2413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a777 a777 - - - i772  <|@  <|@
f <@~|@floating>@ <|@
tid v2480 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2412 
=== Succesors ===
=== Usages ===
v2413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?769 
guard: - 
address: v2480 
=== Succesors ===
next: v1634 
=== Usages ===
v2233 
=== Predecessor ===
a2412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?769 guard: - address: v2480 #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2413 
y: v2219 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2413 y: v2219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2233 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1633 
=== Usages ===
=== Predecessor ===
v2413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2233 #trueSuccessor: v1630 #falseSuccessor: v1633  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B138" "B147" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2414 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2414  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2412 
=== Succesors ===
=== Usages ===
i2414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v1639 
=== Usages ===
v1331 
=== Predecessor ===
v1630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid i1790 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1789 
y: i73 
=== Succesors ===
=== Usages ===
v2448 v1331 v2446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1789 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1790 
y: i2414 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1790 y: i2414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1331 
=== Succesors ===
trueSuccessor: v1635 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
i2414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1331 #trueSuccessor: v1635 #falseSuccessor: v1638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2415 
=== Usages ===
v1351 a2415 v1369 
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2415  <|@  <|@
f <@~|@floating>@ <|@
tid a1286 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2412 
=== Succesors ===
=== Usages ===
v2448 v2446 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2412  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1286 
index: i1790 
=== Succesors ===
=== Usages ===
a2415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1286 index: i1790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1635 
address: v2446 
=== Succesors ===
next: v1739 
=== Usages ===
?876 v1301 v2447 v2449 v2481 
=== Predecessor ===
v1635 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1635 address: v2446 #next: v1739  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2415 
=== Succesors ===
=== Usages ===
v1739 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2415  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1286 
index: i1790 
=== Succesors ===
=== Usages ===
v1351 v1369 j2203 j2196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1286 index: i1790  <|@  <|@
f <@~|@floating>@ <|@
tid a1328 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a777 
=== Succesors ===
=== Usages ===
v1351 v2195 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a777  <|@  <|@
f <@*|@fixed>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1301 
=== Succesors ===
trueSuccessor: v1738 
falseSuccessor: v1737 
=== Usages ===
=== Predecessor ===
a2415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1301 #trueSuccessor: v1738 #falseSuccessor: v1737  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596104817032146771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1747 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1747  <|@  <|@
f <@*|@fixed>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
v1738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610482715506959680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2416  <|@  <|@
f <@~|@floating>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2415 
=== Succesors ===
=== Usages ===
v2416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2481 
=== Succesors ===
next: v1885 
=== Usages ===
v2234 
=== Predecessor ===
v1737 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2481 #next: v1885  <|@  <|@
f <@~|@floating>@ <|@
tid v2234 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2416 
y: v2226 
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2416 y: v2226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.07804910062743042
=== Inputs ===
condition: v2234 
=== Succesors ===
trueSuccessor: v1883 
falseSuccessor: v1882 
=== Usages ===
=== Predecessor ===
v2416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2234 #trueSuccessor: v1883 #falseSuccessor: v1882  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2154 
=== Usages ===
=== Predecessor ===
v1885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2154 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2169 
=== Usages ===
v2482 v2483 
=== Predecessor ===
v1883 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2169  <|@  <|@
f <@~|@floating>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2154 
index: - 
=== Succesors ===
=== Usages ===
j2169 v2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2482 
=== Succesors ===
next: j2170 
=== Usages ===
j2235 j2175 v2494 
=== Predecessor ===
j2154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2482 #next: j2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2483 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2154 
index: - 
=== Succesors ===
=== Usages ===
j2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2483 
=== Succesors ===
next: v2162 
=== Usages ===
v2159 
=== Predecessor ===
j2169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2483 #next: v2162  <|@  <|@
f <@~|@floating>@ <|@
tid j2235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2169 
y: j1057 
=== Succesors ===
=== Usages ===
v2159 v2171 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2169 y: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2170 
y: j2235 
=== Succesors ===
=== Usages ===
v2162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2170 y: j2235  <|@  <|@
f <@*|@fixed>@ <|@
tid v2162 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2159 
=== Succesors ===
trueSuccessor: v2160 
falseSuccessor: v2161 
=== Usages ===
=== Predecessor ===
j2170 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2159 #trueSuccessor: v2160 #falseSuccessor: v2161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563879874703437959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2165 
=== Usages ===
=== Predecessor ===
v2162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2165 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?769 
arguments: v1916 i468 i73 
=== Succesors ===
next: j2166 
=== Usages ===
j2166 
=== Predecessor ===
v2160 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?769 arguments: v1916 i468 i73 #next: j2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2166 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2165 
=== Succesors ===
next: v2176 
=== Usages ===
j2175 
=== Predecessor ===
a2165 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2165 #next: v2176  <|@  <|@
f <@*|@fixed>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
j2166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593991990045575300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2171 
=== Usages ===
=== Predecessor ===
v2162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2482 
value: j2235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2168 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2482 value: j2235 stateAfter: - lastLocationAccess: - #next: v2168  <|@  <|@
f <@~|@floating>@ <|@
tid v2494 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2169 
index: - 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2169 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2494 
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
v2171 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2494 #next: v2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
v2168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2175 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2173 
values: j2169 j2166 
=== Succesors ===
=== Usages ===
v2486 v2485 a1755 v2495 v2496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2173 values: j2169 j2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2174 v2176 
=== Succesors ===
next: a1755 
=== Usages ===
j2175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2174 v2176 #next: a1755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1755 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2175 
=== Succesors ===
next: j2185 
=== Usages ===
a1760 
=== Predecessor ===
v2173 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2175 #next: j2185  <|@  <|@
f <@~|@floating>@ <|@
tid j2181 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1709 
=== Succesors ===
=== Usages ===
v2484 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1709  <|@  <|@
f <@~|@floating>@ <|@
tid v2484 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2181 
index: - 
=== Succesors ===
=== Usages ===
j2185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2181 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2484 
=== Succesors ===
next: v2186 
=== Usages ===
v2186 
=== Predecessor ===
a1755 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2484 #next: v2186  <|@  <|@
f <@~|@floating>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2485 
value: j2185 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2189 
=== Usages ===
=== Predecessor ===
j2185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2485 value: j2185 stateAfter: - lastLocationAccess: - #next: v2189  <|@  <|@
f <@~|@floating>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2486 
value: v2226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2417 
=== Usages ===
=== Predecessor ===
v2186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2486 value: v2226 stateAfter: - lastLocationAccess: - #next: i2417  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2415 
=== Succesors ===
=== Usages ===
i2417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2449 
=== Succesors ===
next: v2193 
=== Usages ===
v2193 
=== Predecessor ===
v2189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2449 #next: v2193  <|@  <|@
f <@~|@floating>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2495 
value: i2417 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2195 
=== Usages ===
=== Predecessor ===
i2417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2495 value: i2417 stateAfter: - lastLocationAccess: - #next: v2195  <|@  <|@
f <@~|@floating>@ <|@
tid v2496 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2496 
value: a1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1760 
=== Usages ===
=== Predecessor ===
v2193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2496 value: a1328 stateAfter: - lastLocationAccess: - #next: a1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1760 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1755 
=== Succesors ===
next: v1761 
=== Usages ===
a1368 ?953 
=== Predecessor ===
v2195 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1755 #next: v1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1369 
=== Usages ===
=== Predecessor ===
a1760 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid a1368 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a1760 
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1635 
address: v2448 
value: a1368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2196 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1635 address: v2448 value: a1368 stateAfter: - lastLocationAccess: - #next: j2196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2448 
=== Succesors ===
next: v2200 
=== Usages ===
j2197 
=== Predecessor ===
v1369 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2448 #next: v2200  <|@  <|@
f <@~|@floating>@ <|@
tid j2197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2196 
y: i470 
=== Succesors ===
=== Usages ===
v2487 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2196 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j1967 
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2487 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2418 
=== Usages ===
=== Predecessor ===
j2196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2487 value: i1969 stateAfter: - lastLocationAccess: - #next: a2418  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2415 
=== Succesors ===
=== Usages ===
a2418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
=== Succesors ===
next: v1502 
=== Usages ===
?591 
=== Predecessor ===
v2200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2447 #next: v1502  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - a2418 - 
=== Succesors ===
=== Usages ===
?531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - a2418 -  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setValue(int, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 784
stackSize: 0
=== Inputs ===
outerFrameState: ?591 
values: - - - - - 
=== Succesors ===
=== Usages ===
?529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?591 values: - - - - -  <|@  <|@
tid a461 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@9f36f5a
hasIdentity: true
objectId: 2
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?529 ?953 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?953 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a461 
materializedValue: a1760 
=== Succesors ===
=== Usages ===
?529 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a461 materializedValue: a1760  <|@  <|@
tid ?529 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
values: a1 i772 a461 
virtualObjectMappings: ?953 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531 values: a1 i772 a461 virtualObjectMappings: ?953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?529 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
a2418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?529 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609873628416676867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1886 
=== Usages ===
=== Predecessor ===
v1885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1886  <|@  <|@
f <@*|@fixed>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" "B145" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610740728009378285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1747 v1886 
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1747 v1886 #next: v1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1635 
address: v2448 
value: a1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2203 
=== Usages ===
=== Predecessor ===
v1880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1635 address: v2448 value: a1328 stateAfter: - lastLocationAccess: - #next: j2203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2448 
=== Succesors ===
next: v2207 
=== Usages ===
j2204 
=== Predecessor ===
v1351 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2448 #next: v2207  <|@  <|@
f <@~|@floating>@ <|@
tid j2204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2203 
y: i470 
=== Succesors ===
=== Usages ===
v2488 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2203 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2204 
index: j1967 
=== Succesors ===
=== Usages ===
v2207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2204 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2488 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
j2203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2488 value: i1969 stateAfter: - lastLocationAccess: - #next: v1505  <|@  <|@
tid ?876 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - a2415 - 
=== Succesors ===
=== Usages ===
?875 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - a2415 -  <|@  <|@
tid ?875 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setValue(int, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 786
stackSize: 0
=== Inputs ===
outerFrameState: ?876 
values: - - - - - 
=== Succesors ===
=== Usages ===
?874 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?876 values: - - - - -  <|@  <|@
tid ?874 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?875 
values: a1 i772 a777 
=== Succesors ===
=== Usages ===
v1505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?875 values: a1 i772 a777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?874 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v2207 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?874 #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 6
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1876 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1876  <|@  <|@
f <@~|@floating>@ <|@
tid i1877 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -331035
stableDimension: 0
stamp: i32 [-331035] ⇊00000000fffaf2e5 ⇈00000000fffaf2e5
stampKind: i32
value: int[-331035|0xfffffffffffaf2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1870 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
v1638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid a1875 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1563345318
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1563345318]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -384316
stableDimension: 0
stamp: i32 [-384316] ⇊00000000fffa22c4 ⇈00000000fffa22c4
stampKind: i32
value: int[-384316|0xfffffffffffa22c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1870 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
v1633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1870 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-384316 - -329739] ⇊00000000fffa22c4 ⇈00000000fffaf7f5
valueDescription: i32
=== Inputs ===
merge: v1867 
values: i1874 i1877 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1867 values: i1874 i1877  <|@  <|@
f <@~|@floating>@ <|@
tid a1871 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1867 
values: a1875 a1802 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1867 values: a1875 a1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1873 v1876 
=== Succesors ===
next: v1872 
=== Usages ===
i1870 a1871 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1873 v1876 #next: v1872  <|@  <|@
f <@*|@fixed>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?769 
actionAndReason: i1870 
speculation: a1871 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?769 actionAndReason: i1870 speculation: a1871  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1815 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid i1817 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277564
stableDimension: 0
stamp: i32 [-277564] ⇊00000000fffbc3c4 ⇈00000000fffbc3c4
stampKind: i32
value: int[-277564|0xfffffffffffbc3c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i1817 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i1817 speculation: a1802  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2379  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! -
uncheckedStamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?7 ?1773 ?20 ?20 ?677 ?68 v2452 ?1773 ?98 v1190 ?1772 ?98 v2426 ?155 ?676 v1081 ?897 v2437 v1089 j1963 ?529 j2070 ?769 ?342 v2427 v2431 ?356 ?440 v2428 v1174 v2432 v2433 v1215 v2438 ?727 ?514 v1207 v1281 ?745 ?479 ?147 ?148 v1183 v2439 ?503 v1222 ?874 v2444 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1802 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1805 ?3 a1871 v1831 v1815 a1858 v1823 v1843 a1858 v1851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a1802 
=== Succesors ===
=== Usages ===
v2379 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1802  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a -
uncheckedStamp: a Ljava/util/Iterator;
=== Inputs ===
=== Succesors ===
=== Usages ===
?78 ?7 v1083 ?1773 ?98 ?20 ?68 ?1772 ?83 v1082 v2451 v2422 v2420 v2419 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2451 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2379 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2451 
=== Succesors ===
next: v2380 
=== Usages ===
v2211 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2451 #next: v2380  <|@  <|@
f <@~|@floating>@ <|@
tid v2452 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2380 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2452 
=== Succesors ===
next: v5 
=== Usages ===
v2213 
=== Predecessor ===
v2379 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2452 #next: v5  <|@  <|@
f <@~|@floating>@ <|@
tid v2212 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2380 
y: v2212 
=== Succesors ===
=== Usages ===
v1540 v1550 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2380 y: v2212  <|@  <|@
f <@~|@floating>@ <|@
tid v2210 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2379 
y: v2210 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2379 y: v2210  <|@  <|@
f <@~|@floating>@ <|@
tid v2444 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?193 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: ?68 
values: - - 
=== Succesors ===
=== Usages ===
?769 ?676 ?591 ?1784 ?1783 ?745 ?147 ?897 ?155 ?1780 ?727 ?1782 ?514 ?1781 ?677 ?1779 ?876 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?68 values: - -  <|@  <|@
tid ?1782 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
tid ?1780 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2439 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2411 i2408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2357 i2369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2438 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2409 a2406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2181 j2378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2235 j2228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2226 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 v2127 v2234 v2189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2437 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v979 v504 v2359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v867 v492 v496 v2360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i469 a2165 a2102 i2039 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1969 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1968 v2074 v2084 v2138 v2145 v2200 v2207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 j1964 j2036 j2042 j2071 j2081 j2135 j2142 j2197 j2204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1967 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2458 j2057 v2470 v2472 v2478 v2479 v2487 v2488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1960 <|@
result v6|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2219 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1957 v2023 v2225 v2233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1949 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1954 v2020 j2044 v2050 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2358 i547 i2369 v1953 a1930 i2357 i2367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1930 a2102 a2165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2214 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2433 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2396 v1224 v1277 a2399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2395 v1167 v1202 i2398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1377 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 v1388 v2370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2431 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2428 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2427 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?1773 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a1 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a1  <|@  <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@712b8df1
stamp: void
targetMethod: HotSpotMethod<Iterator.next()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
a19 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 i976 i740 i175 i341 a1996 v357 v2055 i966 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?1772 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Interface
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@732b89a5
stamp: void
targetMethod: HotSpotMethod<Iterator.hasNext()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 ?745 v779 v898 i2038 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2426 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2388 a2389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 a1 
=== Succesors ===
=== Usages ===
?78 ?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a1  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 11]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i740 i81 i88 i129 i982 i153 i973 i175 i403 i313 i402 i966 i363 i557 i1790 i467 i485 i556 i976 a1930 a2102 a2165 i2375 i2363 i2374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2422 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2419 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2383 v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 84
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v1805 i2382 a2385 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v2420 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
v2380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6bb4ddc1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] Object[null] 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v6|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B144" "B112" "B113" "B117" "B115" "B123" "B146" "B122" "B125" "B127" 
    successors "B2" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625182039524689422
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 15.973749380881625
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 10
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v5 
=== Succesors ===
next: v44 
=== Usages ===
v14 v24 v448 v449 v450 v1608 v733 v855 v871 v954 v958 v969 v1638 v1633 v1618 v1623 v1603 v1598 v1528 v1534 v1539 v1578 v1549 v1588 v1561 v1583 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v5 #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/collections/EconomicMapImpl$3; target_method=hasNext target_method_class=Lorg/graalvm/collections/EconomicMapImpl$SparseMapIterator; position=at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8919930131365436
=== Inputs ===
condition: v2211 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2211 #trueSuccessor: v37 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8919930131365436 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624210795177115918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/collections/EconomicMapImpl$3; target_method=hasNext target_method_class=Lorg/graalvm/collections/EconomicMapImpl$SparseMapIterator; position=at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2381 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2381 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 5]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2420 
=== Succesors ===
next: i2382 
=== Usages ===
v2421 
=== Predecessor ===
v37 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2420 #next: i2382  <|@  <|@
f <@~|@floating>@ <|@
tid v2421 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2381 
=== Succesors ===
=== Usages ===
i2382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2382 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$000(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 8]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v2421 
=== Succesors ===
next: i2383 
=== Usages ===
v72 
=== Predecessor ===
a2381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v2421 #next: i2383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2383 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 1]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
=== Succesors ===
next: v704 
=== Usages ===
v72 i919 
=== Predecessor ===
i2382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2419 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.hasNext(EconomicMapImpl.java:670) [bci: 11]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2383 
y: i2382 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2383 y: i2382  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9373972900065114
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
i2383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v703 #falseSuccessor: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9373972900065114 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2384 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2384 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$3.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 1]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2422 
=== Succesors ===
next: a2385 
=== Usages ===
?83 v2423 
=== Predecessor ===
v703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2422 #next: a2385  <|@  <|@
f <@~|@floating>@ <|@
tid v2423 <|@
result [v11|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2384 
=== Succesors ===
=== Usages ===
a2385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2385 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?7 
guard: - 
address: v2423 
=== Succesors ===
next: v1529 
=== Usages ===
a1060 v1061 v2424 
=== Predecessor ===
a2384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?7 guard: - address: v2423 #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
value: a2385 
=== Succesors ===
=== Usages ===
v1529 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2385  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1061 
=== Succesors ===
trueSuccessor: v1528 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
a2385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1061 #trueSuccessor: v1528 #falseSuccessor: v1525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v12|DWORD[.] = MOV [v11|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1805  <|@  <|@
f <@~|@floating>@ <|@
tid i1809 <|@
result int[-271883|0xfffffffffffbd9f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -271883
stableDimension: 0
stamp: i32 [-271883] ⇊00000000fffbd9f5 ⇈00000000fffbd9f5
stampKind: i32
value: int[-271883|0xfffffffffffbd9f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?7 
actionAndReason: i1809 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?7 actionAndReason: i1809 speculation: a1802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -271883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2386 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2386  <|@  <|@
f <@~|@floating>@ <|@
tid v2424 <|@
result [v12|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2385 
=== Succesors ===
=== Usages ===
i2386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2386 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2424 
=== Succesors ===
next: v76 
=== Usages ===
v1066 
=== Predecessor ===
v1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2424 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid a1060 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2385 
=== Succesors ===
=== Usages ===
v2425 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2385  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
i2386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i919 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v77 
values: i2383 i81 
=== Succesors ===
=== Usages ===
i81 ?83 i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v77 values: i2383 i81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0297568646425548
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v76 
=== Succesors ===
next: v1535 
=== Usages ===
v92 v96 i919 v1533 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v76 #next: v1535  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i919 
y: i73 
=== Succesors ===
=== Usages ===
v2425 v1066 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i919 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i2386 
=== Succesors ===
=== Usages ===
v1535 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i2386  <|@  <|@
f <@*|@fixed>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1066 
=== Succesors ===
trueSuccessor: v1530 
falseSuccessor: v1533 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1066 #trueSuccessor: v1530 #falseSuccessor: v1533  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1055 
=== Usages ===
a2387 
=== Predecessor ===
v1535 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 11]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: i32
=== Inputs ===
x: i919 
y: i73 
=== Succesors ===
=== Usages ===
v1055 i919 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i919 y: i73  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 12]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2419 
value: i81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2387 
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2419 value: i81 stateAfter: - lastLocationAccess: - #next: a2387  <|@  <|@
f <@~|@floating>@ <|@
tid v2425 <|@
result [v14|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1060 
index: i88 
=== Succesors ===
=== Usages ===
a2387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1060 index: i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2387 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1530 
address: v2425 
=== Succesors ===
next: v95 
=== Usages ===
a1074 v1372 a1787 a1788 
=== Predecessor ===
v1055 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1530 address: v2425 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 20]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
value: a2387 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2387  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 12]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 834
stackSize: 2
=== Inputs ===
outerFrameState: ?98 
values: a2 - a2384 i919 
=== Succesors ===
=== Usages ===
v1506 v1537 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a2 - a2384 i919  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 20]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
trueSuccessorProbability: 0.028896981087748186
=== Inputs ===
condition: v1372 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
a2387 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1372 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v14|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD[.], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028896981087748186 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4600831387884041749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 23]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1506 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?83 #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
loopBegin: v77 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1506 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: v11|DWORD[.] v15|DWORD 
locals: v1|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:15, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:837) [bci: 26]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v1540 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v1540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v1536 
falseSuccessor: v1539 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v1536 #falseSuccessor: v1539  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2388 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2388 <|@
result v19|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: v687 
=== Usages ===
v1373 
=== Predecessor ===
v1536 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2388 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2388  <|@  <|@
f <@~|@floating>@ <|@
tid a1074 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2387 
=== Succesors ===
=== Usages ===
?897 a756 ?897 a891 v1081 a646 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2387  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6466662056064051
=== Inputs ===
condition: v1373 
=== Succesors ===
trueSuccessor: v685 
falseSuccessor: v686 
=== Usages ===
=== Predecessor ===
a2388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1373 #trueSuccessor: v685 #falseSuccessor: v686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD[.], y: v19|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621051920458862841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD[.], v20|QWORD[.]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616999473013499352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i895 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i895  <|@  <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@58a34597
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a1074 
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a1074  <|@  <|@
tid ?897 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a1074 a1074 - - - 
=== Succesors ===
=== Usages ===
?1777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a1074 a1074 - - -  <|@  <|@
tid ?1777 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?897 
values: - - 
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?897 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i895 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1081 
stateDuring: ?1777 
=== Succesors ===
next: v901 
=== Usages ===
i885 v898 
=== Predecessor ===
v686 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1081 stateDuring: ?1777 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i895 
y: i105 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i895 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v898 
=== Succesors ===
trueSuccessor: v899 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
i895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v898 #trueSuccessor: v899 #falseSuccessor: v900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v20|QWORD[.] v20|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614586470304587029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD[.], v20|QWORD[.]] destination: B13 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609124534507953462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v884  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v20|QWORD[.]] destination: B14 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1537 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1075
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
reason: OptimizedTypeCheckViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1539 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -275260 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: v11|DWORD[.] v15|DWORD 
locals: v1|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v77 
=== Succesors ===
next: v1534 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v77 #next: v1534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1531 
=== Usages ===
=== Predecessor ===
v1533 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1531  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$3.next()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 834
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a2 - 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1067
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?78 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1534 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -273179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
locals: v1|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606209578348434066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610448773953234941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i9 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i9 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Iterator.hasNext
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1082 
stateDuring: ?1772 
=== Succesors ===
next: v17 
=== Usages ===
v12 
=== Predecessor ===
v43 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1082 stateDuring: ?1772 #next: v17  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i11 
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i9 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 6]
stamp: void
trueSuccessorProbability: 0.06260270999348858
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i9 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v691 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06260270999348858 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592447144275831689
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v693  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
v691 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v693 v694 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v693 v694 #next: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:87) [bci: 25]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a19 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a19 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
polymorphic: true
stamp: a Ljava/lang/Object;
targetMethod: Direct#Iterator.next
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1083 
stateDuring: ?1773 
=== Succesors ===
next: v2504 
=== Usages ===
v2504 ?20 a646 a756 a891 v1089 ?677 ?677 a2376 a1786 
=== Predecessor ===
v16 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1083 stateDuring: ?1773 #next: v2504  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicSet.addAll(Iterator)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
rethrowException: false
sourceFile: EconomicSet.java
sourceLine: 85
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a2 a1 a19 
=== Succesors ===
=== Usages ===
v1815 v2504 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a1 a19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
object: a19 
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
a19 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?20 object: a19 #next: v1550  <|@  <|@
f <@*|@fixed>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v1546 
falseSuccessor: v1549 
=== Usages ===
=== Predecessor ===
v2504 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v1546 #falseSuccessor: v1549  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: v0|QWORD[.] v23|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v23|QWORD[.]] state [bci:16] <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2389 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2389 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2426 
=== Succesors ===
next: v206 
=== Usages ===
v1374 
=== Predecessor ===
v1546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2426 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2389 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2389  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6466662056064051
=== Inputs ===
condition: v1374 
=== Succesors ===
trueSuccessor: v204 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
a2389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1374 #trueSuccessor: v204 #falseSuccessor: v205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD[.], y: v24|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607388834826600208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid a2376 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
a1788 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD[.], v23|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B11" 
    successors "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621640672415607003
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1788 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v599 
values: a2376 a2387 
=== Succesors ===
=== Usages ===
a1787 a1787 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v599 values: a2376 a2387  <|@  <|@
f <@~|@floating>@ <|@
tid a646 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v599 
values: a19 a1074 
=== Succesors ===
=== Usages ===
a756 a756 a777 ?356 ?440 ?342 v408 v1117 v1121 ?676 ?676 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v599 values: a19 a1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v601 
=== Succesors ===
next: v339 
=== Usages ===
a1788 a646 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v601 #next: v339  <|@  <|@
tid ?676 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a646 a646 - - - 
=== Succesors ===
=== Usages ===
?367 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a646 a646 - - -  <|@  <|@
tid ?367 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?676 
values: - - 
=== Succesors ===
=== Usages ===
?342 ?440 ?356 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?676 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD[.], v27|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B39" "B32" "B36" 
    successors "B28" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4626232167182356221
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v340 
values: i11 i363 i2375 i2374 
=== Succesors ===
=== Usages ===
?342 v344 i772 ?356 v106 i363 ?440 i557 i2374 i2375 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v340 values: i11 i363 i2375 i2374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v339 
=== Succesors ===
next: i2390 
=== Usages ===
i341 v346 v359 v364 v723 v824 v1560 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v339 #next: i2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2390 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2427 
=== Succesors ===
next: v348 
=== Usages ===
v344 
=== Predecessor ===
v340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2427 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i2390 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i341 y: i2390  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v344 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
i2390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v344 #trueSuccessor: v345 #falseSuccessor: v346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B45" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2391 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2391 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2428 
=== Succesors ===
next: i2392 
=== Usages ===
a1094 v2429 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2428 #next: i2392  <|@  <|@
tid ?342 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?367 
values: a1 a646 i341 - 
=== Succesors ===
=== Usages ===
v1508 v1509 v1831 i2392 v2505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?367 values: a1 a646 i341 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2429 <|@
result [v29|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2391 
=== Succesors ===
=== Usages ===
i2392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2392 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?342 
guard: - 
address: v2429 
=== Succesors ===
next: v1562 
=== Usages ===
v1100 
=== Predecessor ===
a2391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?342 guard: - address: v2429 #next: v1562  <|@  <|@
f <@~|@floating>@ <|@
tid i557 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i1789 v2430 v1100 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i341 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i557 
y: i2392 
=== Succesors ===
=== Usages ===
v1562 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i557 y: i2392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1562 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1557 
falseSuccessor: v1560 
=== Usages ===
=== Predecessor ===
i2392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1557 #falseSuccessor: v1560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP (x: v30|DWORD, y: [v29|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2393 
=== Usages ===
a2393 
=== Predecessor ===
v1562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2393  <|@  <|@
f <@~|@floating>@ <|@
tid a1094 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2391 
=== Succesors ===
=== Usages ===
v2430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2391  <|@  <|@
f <@~|@floating>@ <|@
tid v2430 <|@
result [v31|QWORD[.] + v30|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1094 
index: i557 
=== Succesors ===
=== Usages ===
a2393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1094 index: i557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2393 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1557 
address: v2430 
=== Succesors ===
next: v2505 
=== Usages ===
a1108 v2505 
=== Predecessor ===
v1557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1557 address: v2430 #next: v2505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
object: a2393 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
a2393 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?342 object: a2393 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid a1108 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2393 
=== Succesors ===
=== Usages ===
v1117 v1121 v408 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2393  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a646 
y: a1108 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a646 y: a1108  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v2505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v31|QWORD[.] + v30|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v32|DWORD[.] * 8] state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD[.], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607349218909980788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v799 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v799  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v409 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4621706540968831603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2394 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2394 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2431 
=== Succesors ===
next: v417 
=== Usages ===
a1113 v1118 v1378 v1380 
=== Predecessor ===
v410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2431 #next: v417  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2394 
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2394  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v1118 
=== Succesors ===
trueSuccessor: v415 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
a2394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1118 #trueSuccessor: v415 #falseSuccessor: v416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4621555774077785386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1508 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?342 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i2375 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i341 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v340 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1508 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B32 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598496160431384868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid a1379 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2394 
y: a1379 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2394 y: a1379  <|@  <|@
tid ?440 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?367 
values: a1 a646 i341 - 
=== Succesors ===
=== Usages ===
?1776 ?1775 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?367 values: a1 a646 i341 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v1380 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1380 #trueSuccessor: v426 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4596032792737196678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i430 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i430  <|@  <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6a854f97
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a646 a1108 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a646 a1108  <|@  <|@
tid ?1775 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?440 
values: - - - 
=== Succesors ===
=== Usages ===
i430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?440 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i430 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1117 
stateDuring: ?1775 
=== Succesors ===
next: v444 
=== Usages ===
i443 
=== Predecessor ===
v426 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1117 stateDuring: ?1775 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
i430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590233037823758211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2394 
y: a1377 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2394 y: a1377  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v1378 
=== Succesors ===
trueSuccessor: v421 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1378 #trueSuccessor: v421 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4550851043501207184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?342 #next: v824  <|@  <|@
f <@~|@floating>@ <|@
tid i2374 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i341 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v340 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1509 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B36 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590219914738827788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i435 
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i435  <|@  <|@
f <@~|@floating>@ <|@
tid a1113 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a2394 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2394  <|@  <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@47ec0333
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a1113 a646 a1108 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1113 a646 a1108  <|@  <|@
tid ?1776 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?440 
values: - - - 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?440 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i435 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1121 
stateDuring: ?1776 
=== Succesors ===
next: v445 
=== Usages ===
i443 
=== Predecessor ===
v427 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1121 stateDuring: ?1776 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
i435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598492879660152262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i443 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v441 
values: i430 i435 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v441 values: i430 i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v444 v445 
=== Succesors ===
next: v362 
=== Usages ===
i443 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v444 v445 #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i443 
y: i11 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i443 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v357 
=== Succesors ===
trueSuccessor: v358 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v357 #trueSuccessor: v358 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598061549816431067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1507  <|@  <|@
tid ?356 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?367 
values: a1 a646 i341 - i11 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?367 values: a1 a646 i341 - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?356 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?356 #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid i363 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i341 
y: i73 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i341 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v340 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B39 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581649141077200264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B30" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v797 v799 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v797 v799 #next: v359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v340 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v340 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i105 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i341 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604813664394900063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD[.], v27|QWORD[.]] destination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599450824147292649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v30|DWORD, v27|QWORD[.]] destination: B44 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v340 
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1562 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v340 #next: v1561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1831 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid i1833 <|@
result int[-281883|0xfffffffffffbb2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -281883
stableDimension: 0
stamp: i32 [-281883] ⇊00000000fffbb2e5 ⇈00000000fffbb2e5
stampKind: i32
value: int[-281883|0xfffffffffffbb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?342 
actionAndReason: i1833 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?342 actionAndReason: i1833 speculation: a1802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -281883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621166794173973113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v340 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v340 #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD[.], v27|QWORD[.]] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603322257346962535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i208 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i208  <|@  <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6825ccca
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a19 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a19  <|@  <|@
tid ?677 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a19 a19 - - - 
=== Succesors ===
=== Usages ===
?1774 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a19 a19 - - -  <|@  <|@
tid ?1774 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?677 
values: - - 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?677 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i208 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1089 
stateDuring: ?1774 
=== Succesors ===
next: v782 
=== Usages ===
v779 i885 
=== Predecessor ===
v205 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1089 stateDuring: ?1774 #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i105 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i208 y: i105  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.6967267137205493
=== Inputs ===
condition: v779 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
i208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v779 #trueSuccessor: v780 #falseSuccessor: v781  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v23|QWORD[.] v23|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600843777383834340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid a1786 <|@
result v43|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a19 
=== Succesors ===
=== Usages ===
a1787 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a19  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD[.], v23|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" "B49" "B13" 
    successors "B51" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1787 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v743 
values: a1788 a1788 a1786 a2387 
=== Succesors ===
=== Usages ===
v1139 v1201 v2133 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v743 values: a1788 a1788 a1786 a2387  <|@  <|@
f <@~|@floating>@ <|@
tid a756 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v743 
values: a646 a646 a19 a1074 
=== Succesors ===
=== Usages ===
v1190 v1183 ?514 v1222 ?727 ?514 ?745 ?745 ?155 ?147 ?147 ?148 ?727 v1215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v743 values: a646 a646 a19 a1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v744 v746 v783 v902 
=== Succesors ===
next: i2395 
=== Usages ===
a1787 a756 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v744 v746 v783 v902 #next: i2395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2395 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
=== Succesors ===
next: a2396 
=== Usages ===
i730 i129 i730 
=== Predecessor ===
v743 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2432 #next: a2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2396 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
=== Succesors ===
next: v122 
=== Usages ===
a1126 v1225 v2443 
=== Predecessor ===
i2395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2433 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2396 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2396  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.15737516016132225
=== Inputs ===
condition: v1225 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v121 
=== Usages ===
=== Predecessor ===
a2396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1225 #trueSuccessor: v120 #falseSuccessor: v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD[.], v45|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD[.], y: v47|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1918 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1918  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1918 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1937 
=== Usages ===
v2453 v2454 
=== Predecessor ===
v120 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1937  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1918 
index: - 
=== Succesors ===
=== Usages ===
j1937 v1939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1937 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
=== Succesors ===
next: j1938 
=== Usages ===
j2215 j1943 v2489 
=== Predecessor ===
j1918 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2453 #next: j1938  <|@  <|@
f <@~|@floating>@ <|@
tid v2454 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1918 
index: - 
=== Succesors ===
=== Usages ===
j1938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1918 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1938 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2454 
=== Succesors ===
next: v1926 
=== Usages ===
v1923 
=== Predecessor ===
j1937 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2454 #next: v1926  <|@  <|@
f <@~|@floating>@ <|@
tid j2215 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1937 
y: j2214 
=== Succesors ===
=== Usages ===
v1923 v1939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1937 y: j2214  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1938 
y: j2215 
=== Succesors ===
=== Usages ===
v1926 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1938 y: j2215  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1923 
=== Succesors ===
trueSuccessor: v1924 
falseSuccessor: v1925 
=== Usages ===
=== Predecessor ===
j1938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1923 #trueSuccessor: v1924 #falseSuccessor: v1925  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581674016104257750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1930 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1930  <|@  <|@
tid ?745 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - - - i105 
=== Succesors ===
=== Usages ===
a1930 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - - - i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1930 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?745 
arguments: v1916 i123 i73 
=== Succesors ===
next: j1931 
=== Usages ===
j1931 
=== Predecessor ===
v1924 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?745 arguments: v1916 i123 i73 #next: j1931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1931 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1930 
=== Succesors ===
next: v1944 
=== Usages ===
j1943 
=== Predecessor ===
a1930 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1930 #next: v1944  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1941 
=== Predecessor ===
j1931 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611836033447576369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v1926 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2453 
value: j2215 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1935 
=== Usages ===
=== Predecessor ===
v1925 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2453 value: j2215 stateAfter: - lastLocationAccess: - #next: v1935  <|@  <|@
f <@~|@floating>@ <|@
tid v2489 <|@
result [v48|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1937 
index: - 
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1937 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2489 
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1939 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2489 #next: v1942  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1941 
=== Predecessor ===
v1935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1943 <|@
result v51|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1941 
values: j1937 j1931 
=== Succesors ===
=== Usages ===
v2457 v2456 a1701 v2455 v2490 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1941 values: j1937 j1931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1942 v1944 
=== Succesors ===
next: a1701 
=== Usages ===
j1943 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1942 v1944 #next: a1701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1701 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1943 
=== Succesors ===
next: v1953 
=== Usages ===
a1707 
=== Predecessor ===
v1941 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1943 #next: v1953  <|@  <|@
f <@~|@floating>@ <|@
tid v2455 <|@
result [v51|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2455 
value: i123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
a1701 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2455 value: i123 stateAfter: - lastLocationAccess: - #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid v2456 <|@
result [v51|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2456 
value: j1949 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1957 
=== Usages ===
=== Predecessor ===
v1953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2456 value: j1949 stateAfter: - lastLocationAccess: - #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid v2457 <|@
result [v51|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2457 
value: v2219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1962 
=== Usages ===
=== Predecessor ===
v1954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2457 value: v2219 stateAfter: - lastLocationAccess: - #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid v2490 <|@
result [v51|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1943 
index: - 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2490 
value: v1960 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1707 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2490 value: v1960 stateAfter: - lastLocationAccess: - #next: a1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1707 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1701 
=== Succesors ===
next: v1708 
=== Usages ===
a1223 a729 
=== Predecessor ===
v1962 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1701 #next: v1708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
a1707 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid a1223 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a1707 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
value: a1223 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1963 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2433 value: a1223 stateAfter: - lastLocationAccess: - #next: j1963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1963 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1968 
=== Usages ===
j1964 
=== Predecessor ===
v1224 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid j1964 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1963 
y: i470 
=== Succesors ===
=== Usages ===
v2458 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1963 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2458 <|@
result [v54|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1964 
index: j1967 
=== Succesors ===
=== Usages ===
v1968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1964 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2458 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
j1963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2458 value: i1969 stateAfter: - lastLocationAccess: - #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
v1968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE v51|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[*] + 16], input: v6|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v54|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.], v46|DWORD] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622481684559997218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2397 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2397  <|@  <|@
f <@~|@floating>@ <|@
tid v2443 <|@
result [v47|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2396 
=== Succesors ===
=== Usages ===
i2397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2397 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2443 
=== Succesors ===
next: v136 
=== Usages ===
v130 i467 i469 ?479 j2068 v1392 v504 v492 ?503 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2443 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 74]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i2395 
y: i73 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2395 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i2397 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i129 y: i2397  <|@  <|@
f <@~|@floating>@ <|@
tid a1126 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2396 
=== Succesors ===
=== Usages ===
a729 j2062 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2396  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.06591371968154047
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i2397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 536870911] ⇈000000001fffffff
=== Inputs ===
x: i2397 
y: i468 
=== Succesors ===
=== Usages ===
v471 i547 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2397 y: i468  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i470 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i469 y: i470  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7308974300032183
=== Inputs ===
condition: v471 
=== Succesors ===
trueSuccessor: v472 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v471 #trueSuccessor: v472 #falseSuccessor: v473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHR v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v58|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308974300032183 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603025262025585884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v472 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[8|0x8]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596310794871308524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B60" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i547 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [8 - 536870911] ⇈000000001fffffff
valueDescription: i32
=== Inputs ===
merge: v476 
values: i123 i469 
=== Succesors ===
=== Usages ===
?480 i481 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v476 values: i123 i469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v477 
=== Succesors ===
next: v1579 
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v477 #next: v1579  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 421
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - - - 
=== Succesors ===
=== Usages ===
?479 ?1778 ?503 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2397 
y: i73 
=== Succesors ===
=== Usages ===
?479 i481 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2397 y: i73  <|@  <|@
tid ?479 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 456
stackSize: 1
=== Inputs ===
outerFrameState: ?514 
values: a1 i2397 - - i467 
=== Succesors ===
=== Usages ===
?480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: a1 i2397 - - i467  <|@  <|@
tid ?480 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?479 
values: - - i547 
=== Succesors ===
=== Usages ===
a1996 v1843 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?479 values: - - i547  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [8 - 1610612734] ⇈000000007fffffff
=== Inputs ===
x: i467 
y: i547 
=== Succesors ===
=== Usages ===
v483 i485 i2222 v2224 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i467 y: i547  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[1073741824|0x40000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 1073741824
stableDimension: 0
stamp: i32 [1073741824] ⇊0000000040000000 ⇈0000000040000000
stampKind: i32
value: int[1073741824|0x40000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i481 
y: i482 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i481 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v1575 
falseSuccessor: v1578 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v1575 #falseSuccessor: v1578  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SHR v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = ADD (x: v60|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1264 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1264  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i481 
y: i73 
=== Succesors ===
=== Usages ===
j2241 v496 v507 v1392 v2019 i2038 a1996 v1981 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i481 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i2397 
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i485 y: i2397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1392 
=== Succesors ===
trueSuccessor: v1263 
falseSuccessor: v1261 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1392 #trueSuccessor: v1263 #falseSuccessor: v1261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@~|@floating>@ <|@
tid i1840 <|@
result int[-323937|0xfffffffffffb0e9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -323937
stableDimension: 0
stamp: i32 [-323937] ⇊00000000fffb0e9f ⇈00000000fffb0e9f
stampKind: i32
value: int[-323937|0xfffffffffffb0e9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
v1263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-323937|0xfffffffffffb0e9f]] destination: B61 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1975 
=== Usages ===
=== Predecessor ===
v1264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1975 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2016 
=== Usages ===
v2459 v2460 
=== Predecessor ===
v1261 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid v2459 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1975 
index: - 
=== Succesors ===
=== Usages ===
j2016 v2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2016 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
=== Succesors ===
next: j2017 
=== Usages ===
j1979 v2461 v2462 a1995 v2467 v2463 v2464 v2465 v2466 
=== Predecessor ===
j1975 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2459 #next: j2017  <|@  <|@
f <@~|@floating>@ <|@
tid v2460 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1975 
index: - 
=== Succesors ===
=== Usages ===
j2017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2017 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2460 
=== Succesors ===
next: v1984 
=== Usages ===
v1985 
=== Predecessor ===
j2016 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2460 #next: v1984  <|@  <|@
f <@~|@floating>@ <|@
tid i1980 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i1980 
=== Succesors ===
=== Usages ===
v1984 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i485 y: i1980  <|@  <|@
f <@*|@fixed>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1981 
=== Succesors ===
trueSuccessor: v1983 
falseSuccessor: v1982 
=== Usages ===
=== Predecessor ===
j2017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1981 #trueSuccessor: v1983 #falseSuccessor: v1982  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604147382058228885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v1984 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid i2221 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2222 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i481 
y: i2221 
=== Succesors ===
=== Usages ===
i2004 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i481 y: i2221  <|@  <|@
f <@~|@floating>@ <|@
tid i2003 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2004 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2004 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i2222 
y: i2003 
=== Succesors ===
=== Usages ===
i1974 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2222 y: i2003  <|@  <|@
f <@~|@floating>@ <|@
tid i1973 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1974 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1974 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2004 
y: i1973 
=== Succesors ===
=== Usages ===
j1978 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2004 y: i1973  <|@  <|@
f <@~|@floating>@ <|@
tid j1978 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1974 
=== Succesors ===
=== Usages ===
j1979 v2463 v2464 v2465 v2466 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1974  <|@  <|@
f <@~|@floating>@ <|@
tid j1979 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j1978 
y: j2016 
=== Succesors ===
=== Usages ===
v1985 v2018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1978 y: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2017 
y: j1979 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2017 y: j1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1985 
=== Succesors ===
trueSuccessor: v1990 
falseSuccessor: v1989 
=== Usages ===
=== Predecessor ===
v1983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1985 #trueSuccessor: v1990 #falseSuccessor: v1989  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v61|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA [v65|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = AND v66|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574294390170262111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1988 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1988  <|@  <|@
f <@*|@fixed>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
v1990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604087660433099360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2018 
=== Usages ===
=== Predecessor ===
v1991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2459 
value: j1979 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2006 
=== Usages ===
=== Predecessor ===
v1989 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2459 value: j1979 stateAfter: - lastLocationAccess: - #next: v2006  <|@  <|@
f <@~|@floating>@ <|@
tid v2463 <|@
result [v68|QWORD + v63|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2463 
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
v2018 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2463 #next: v2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2464 <|@
result [v68|QWORD + v63|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2464 
=== Succesors ===
next: v2011 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2464 #next: v2011  <|@  <|@
f <@~|@floating>@ <|@
tid v2465 <|@
result [v68|QWORD + v63|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2465 
=== Succesors ===
next: v2014 
=== Usages ===
=== Predecessor ===
v2008 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2465 #next: v2014  <|@  <|@
f <@~|@floating>@ <|@
tid v2466 <|@
result [v68|QWORD + v63|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: j2016 
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: j2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: v2466 
=== Succesors ===
next: v2019 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2466 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v2461 <|@
result [v63|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2461 
value: i485 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v2014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2461 value: i485 stateAfter: - lastLocationAccess: - #next: v2020  <|@  <|@
f <@~|@floating>@ <|@
tid v2462 <|@
result [v63|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
v2020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2462 
value: j1949 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2023 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2462 value: j1949 stateAfter: - lastLocationAccess: - #next: v2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2467 <|@
result [v63|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2016 
index: - 
=== Succesors ===
=== Usages ===
v2023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2016 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2467 
value: v2219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1994 
=== Usages ===
=== Predecessor ===
v2020 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2467 value: v2219 stateAfter: - lastLocationAccess: - #next: v1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1995 
=== Usages ===
=== Predecessor ===
v2023 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1995 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2016 
=== Succesors ===
next: v1997 
=== Usages ===
a2000 
=== Predecessor ===
v1994 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2016 #next: v1997  <|@  <|@
f <@*|@fixed>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1998 
=== Predecessor ===
a1995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + 12], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v63|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v63|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589973009563567121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1986 
=== Usages ===
=== Predecessor ===
v1984 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
v1982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590450782564603319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1986 v1988 
=== Succesors ===
next: a1996 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1986 v1988 #next: a1996  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1996 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1996 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?480 
arguments: v1003 i485 i11 
=== Succesors ===
next: v1999 
=== Usages ===
a2000 
=== Predecessor ===
v1987 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?480 arguments: v1003 i485 i11 #next: v1999  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1998 
=== Predecessor ===
a1996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v59|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v60|DWORD 
locals: v0|QWORD[.] v55|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2000 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1998 
values: a1995 a1996 
=== Succesors ===
=== Usages ===
v2450 a1797 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1998 values: a1995 a1996  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1997 v1999 
=== Succesors ===
next: v2298 
=== Usages ===
a2000 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1997 v1999 #next: v2298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2252 
=== Usages ===
j2300 
=== Predecessor ===
v1998 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2252  <|@  <|@
f <@~|@floating>@ <|@
tid v2450 <|@
result [v73|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2000 
index: - 
=== Succesors ===
=== Usages ===
j2300 j2037 j2035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2000 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2300 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2298 
address: v2450 
=== Succesors ===
=== Usages ===
v2497 v2498 v2499 v2500 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2298 address: v2450  <|@  <|@
f <@~|@floating>@ <|@
tid j2241 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i485 
=== Succesors ===
=== Usages ===
j2341 j2328 j2334 j2338 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i485  <|@  <|@
f <@~|@floating>@ <|@
tid j2327 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2328 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j2241 
y: j2327 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2327  <|@  <|@
f <@~|@floating>@ <|@
tid j1908 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2326 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2353 <|@
result v77|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1699 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2253 
=== Predecessor ===
v2298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v73|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v62|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B97" 
    successors "B70" "B97" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4613818154925520151
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2321 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2253 
values: j1699 j2326 
=== Succesors ===
=== Usages ===
v2500 j2326 v2499 j2503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2253 values: j1699 j2326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2252 
=== Succesors ===
next: v2352 
=== Usages ===
j2321 v2256 v2257 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2252 #next: v2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2500 <|@
result [v74|QWORD[.] + v78|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2321 
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2500 
value: v2353 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2259 
=== Usages ===
=== Predecessor ===
v2253 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2500 value: v2353 stateAfter: - lastLocationAccess: - #next: v2259  <|@  <|@
f <@~|@floating>@ <|@
tid j2326 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2321 
y: j1908 
=== Succesors ===
=== Usages ===
v2335 j2321 v2331 j2308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2321 y: j1908  <|@  <|@
f <@~|@floating>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2328 
y: j2326 
=== Succesors ===
=== Usages ===
v2259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2328 y: j2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2331 
=== Succesors ===
trueSuccessor: v2256 
falseSuccessor: v2258 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2331 #trueSuccessor: v2256 #falseSuccessor: v2258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v78|QWORD * 4], input: v77|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2253 
=== Succesors ===
next: v2280 
=== Usages ===
=== Predecessor ===
v2259 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2253 #next: v2280  <|@  <|@
f <@~|@floating>@ <|@
tid j2333 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2334 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j2241 
y: j2333 
=== Succesors ===
=== Usages ===
v2335 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2333  <|@  <|@
f <@~|@floating>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2334 
y: j2326 
=== Succesors ===
=== Usages ===
v2280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2334 y: j2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2335 
=== Succesors ===
trueSuccessor: v2279 
falseSuccessor: v2278 
=== Usages ===
=== Predecessor ===
v2256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2335 #trueSuccessor: v2279 #falseSuccessor: v2278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2283 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2283  <|@  <|@
f <@*|@fixed>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
v2279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid v2499 <|@
result [v74|QWORD[.] + v78|QWORD * 4 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2321 
=== Succesors ===
=== Usages ===
v2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2356 <|@
result v81|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2499 
value: v2356 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2271 
=== Usages ===
=== Predecessor ===
v2278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2499 value: v2356 stateAfter: - lastLocationAccess: - #next: v2271  <|@  <|@
f <@~|@floating>@ <|@
tid j2502 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i64 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2503 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2321 
y: j2502 
=== Succesors ===
=== Usages ===
j2308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2321 y: j2502  <|@  <|@
f <@*|@fixed>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
v2351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v78|QWORD * 4 + 32], input: v81|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v78|QWORD + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2308 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2272 
values: j2503 j2326 
=== Succesors ===
=== Usages ===
v2498 j2314 j2301 v2339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2272 values: j2503 j2326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2271 v2283 
=== Succesors ===
next: v2286 
=== Usages ===
j2308 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2271 v2283 #next: v2286  <|@  <|@
f <@~|@floating>@ <|@
tid j2337 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2338 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j2241 
y: j2337 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2338 
y: j2308 
=== Succesors ===
=== Usages ===
v2286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2338 y: j2308  <|@  <|@
f <@*|@fixed>@ <|@
tid v2286 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2339 
=== Succesors ===
trueSuccessor: v2285 
falseSuccessor: v2284 
=== Usages ===
=== Predecessor ===
v2272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2339 #trueSuccessor: v2285 #falseSuccessor: v2284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v75|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2289 
=== Usages ===
=== Predecessor ===
v2286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2289  <|@  <|@
f <@*|@fixed>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
v2285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2349 
=== Usages ===
=== Predecessor ===
v2286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2349  <|@  <|@
f <@~|@floating>@ <|@
tid v2498 <|@
result [v74|QWORD[.] + v83|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2308 
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2308  <|@  <|@
f <@~|@floating>@ <|@
tid v2355 <|@
result v85|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2498 
value: v2355 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2274 
=== Usages ===
=== Predecessor ===
v2284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2498 value: v2355 stateAfter: - lastLocationAccess: - #next: v2274  <|@  <|@
f <@~|@floating>@ <|@
tid j2313 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2314 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2308 
y: j2313 
=== Succesors ===
=== Usages ===
j2301 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2308 y: j2313  <|@  <|@
f <@*|@fixed>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
v2349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v83|QWORD * 4], input: v85|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2301 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2275 
values: j2314 j2308 
=== Succesors ===
=== Usages ===
v2497 v2342 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2275 values: j2314 j2308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2274 v2289 
=== Succesors ===
next: v2292 
=== Usages ===
j2301 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2274 v2289 #next: v2292  <|@  <|@
f <@~|@floating>@ <|@
tid j2048 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2049 j2341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2341 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j2241 
y: j2048 
=== Succesors ===
=== Usages ===
v2342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2241 y: j2048  <|@  <|@
f <@~|@floating>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2341 
y: j2301 
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2341 y: j2301  <|@  <|@
f <@*|@fixed>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2342 
=== Succesors ===
trueSuccessor: v2291 
falseSuccessor: v2290 
=== Usages ===
=== Predecessor ===
v2275 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2342 #trueSuccessor: v2291 #falseSuccessor: v2290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2295 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2295  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v2291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2497 <|@
result [v74|QWORD[.] + v87|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j2300 
index: j2301 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2300 index: j2301  <|@  <|@
f <@~|@floating>@ <|@
tid a2354 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2497 
value: a2354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2277 
=== Usages ===
=== Predecessor ===
v2290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2497 value: a2354 stateAfter: - lastLocationAccess: - #next: v2277  <|@  <|@
f <@*|@fixed>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v2347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v87|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2277 v2295 
=== Succesors ===
next: v2034 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2277 v2295 #next: v2034  <|@  <|@
f <@~|@floating>@ <|@
tid i2223 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
x: i481 
y: i2223 
=== Succesors ===
=== Usages ===
v2034 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i481 y: i2223  <|@  <|@
f <@*|@fixed>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2224 
=== Succesors ===
trueSuccessor: v2032 
falseSuccessor: v2033 
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2224 #trueSuccessor: v2032 #falseSuccessor: v2033  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v61|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2059 
=== Usages ===
=== Predecessor ===
v2034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2059  <|@  <|@
f <@*|@fixed>@ <|@
tid v2059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2058 
=== Predecessor ===
v2032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2035 
=== Usages ===
=== Predecessor ===
v2034 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2035 <|@
result [v73|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2450 
=== Succesors ===
next: j2037 
=== Usages ===
j2036 
=== Predecessor ===
v2033 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2450 #next: j2037  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2037 <|@
result [v73|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2450 
=== Succesors ===
next: v2045 
=== Usages ===
j2041 
=== Predecessor ===
j2035 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2450 #next: v2045  <|@  <|@
f <@~|@floating>@ <|@
tid i2038 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i485 
y: i105 
=== Succesors ===
=== Usages ===
i2039 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i485 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i2039 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i2038 
y: i468 
=== Succesors ===
=== Usages ===
j2040 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2038 y: i468  <|@  <|@
f <@~|@floating>@ <|@
tid j2040 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i2039 
=== Succesors ===
=== Usages ===
j2041 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2039  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j2037 
y: j2040 
=== Succesors ===
=== Usages ===
j2042 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2037 y: j2040  <|@  <|@
f <@~|@floating>@ <|@
tid j2042 <|@
result v94|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2041 
y: i470 
=== Succesors ===
=== Usages ===
j2043 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2041 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j2036 <|@
result v95|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2035 
y: i470 
=== Succesors ===
=== Usages ===
j2043 j2057 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2035 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j2043 <|@
result v97|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j2042 
y: j2036 
=== Succesors ===
=== Usages ===
j2044 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2042 y: j2036  <|@  <|@
f <@~|@floating>@ <|@
tid j2044 <|@
result v98|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j2043 
y: j1949 
=== Succesors ===
=== Usages ===
j2047 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2043 y: j1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
j2037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL v89|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v90|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LEA [v73|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = ADD (x: v92|QWORD[.], y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = SHR v93|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LEA [v73|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = SHR v96|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[*] = SUB (x: v94|QWORD[*], ~y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[*] = INC v97|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|QWORD[*]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B96" 
    successors "B83" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4604810955670779159
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2047 <|@
result v99|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2046 
values: j2044 j2049 
=== Succesors ===
=== Usages ===
j2049 v2050 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2046 values: j2044 j2049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2045 
=== Succesors ===
next: v2053 
=== Usages ===
j2047 v2051 v2056 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2045 #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2047 
y: j1949 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2047 y: j1949  <|@  <|@
f <@*|@fixed>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2050 
=== Succesors ===
trueSuccessor: v2051 
falseSuccessor: v2052 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2050 #trueSuccessor: v2051 #falseSuccessor: v2052  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v99|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2046 
=== Succesors ===
next: v2060 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2046 #next: v2060  <|@  <|@
f <@*|@fixed>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2058 
=== Predecessor ===
v2051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2059 v2060 
=== Succesors ===
next: a1797 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2059 v2060 #next: a1797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1797 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2000 
=== Succesors ===
next: j2062 
=== Usages ===
j2066 ?503 a1276 
=== Predecessor ===
v2058 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2000 #next: j2062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2062 <|@
result v100|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
object: a1126 
=== Succesors ===
next: j2066 
=== Usages ===
v2468 
=== Predecessor ===
a1797 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1126 #next: j2066  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2066 <|@
result v101|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
object: a1797 
=== Succesors ===
next: v2069 
=== Usages ===
v2469 
=== Predecessor ===
j2062 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1797 #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v2468 <|@
result [v100|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2062 
index: - 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2062 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2469 <|@
result [v101|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2066 
index: - 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2066 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2068 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2397 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2468 v2469 j2068 
=== Succesors ===
next: v1277 
=== Usages ===
=== Predecessor ===
j2066 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2468 v2469 j2068 #next: v1277  <|@  <|@
f <@~|@floating>@ <|@
tid a1276 <|@
result v103|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n! -
=== Inputs ===
value: a1797 
=== Succesors ===
=== Usages ===
v1277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
value: a1276 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2070 
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2433 value: a1276 stateAfter: - lastLocationAccess: - #next: j2070  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2070 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v2074 
=== Usages ===
j2071 
=== Predecessor ===
v1277 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v2074  <|@  <|@
f <@~|@floating>@ <|@
tid j2071 <|@
result v104|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2070 
y: i470 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2070 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2470 <|@
result [v104|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2071 
index: j1967 
=== Succesors ===
=== Usages ===
v2074 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2071 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2470 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
j2070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2470 value: i1969 stateAfter: - lastLocationAccess: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2397 
y: i298 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2397 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9922845270333365
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
v2074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v493 #falseSuccessor: v494  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[*] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v100|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v101|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = COMPRESSPOINTER (input: v73|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v104|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9922845270333365 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604759757828088930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i298 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i485 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.9926008704858252
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v501 #falseSuccessor: v500  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9926008704858252 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604711037976543358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v499  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572886163151516119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 86]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2ae8a3a4
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1778 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 466
stackSize: 0
=== Inputs ===
outerFrameState: ?514 
values: - - - - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
bci: 87
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1281 
stateDuring: ?1778 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1281 stateDuring: ?1778 #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573203346018032255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B86" 
    successors "B90" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v497 v499 
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v497 v499 #next: v1584  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2397 
y: i308 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2397 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1583 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v1580 #falseSuccessor: v1583  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@~|@floating>@ <|@
tid i506 <|@
result int[131073|0x20001] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rawvalue: 131073
stableDimension: 0
stamp: i32 [131073] ⇊0000000000020001 ⇈0000000000020001
stampKind: i32
value: int[131073|0x20001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i506 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i485 y: i506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v1585 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v1585 #falseSuccessor: v1588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 131073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v1585 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B87" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v516 v517 
=== Succesors ===
next: i2398 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v516 v517 #next: i2398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2398 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:425) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
=== Succesors ===
next: a2399 
=== Usages ===
i730 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2432 #next: a2399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2399 <|@
result v106|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2433 
=== Succesors ===
next: v725 
=== Usages ===
a1280 
=== Predecessor ===
i2398 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2433 #next: v725  <|@  <|@
f <@~|@floating>@ <|@
tid a1280 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2399 
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2399  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
a2399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD[.], v105|DWORD] destination: B92 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1852  <|@  <|@
f <@~|@floating>@ <|@
tid i1853 <|@
result int[-328467|0xfffffffffffafced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328467
stableDimension: 0
stamp: i32 [-328467] ⇊00000000fffafced ⇈00000000fffafced
stampKind: i32
value: int[-328467|0xfffffffffffafced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328467|0xfffffffffffafced]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid i1848 <|@
result int[-328211|0xfffffffffffafded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328211
stableDimension: 0
stamp: i32 [-328211] ⇊00000000fffafded ⇈00000000fffafded
stampKind: i32
value: int[-328211|0xfffffffffffafded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
v1583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328211|0xfffffffffffafded]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1849 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-328467 - -328211] ⇊00000000fffafced ⇈00000000fffafded
valueDescription: i32
=== Inputs ===
merge: v1846 
values: i1848 i1853 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1846 values: i1848 i1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1847 v1852 
=== Succesors ===
next: v1851 
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1847 v1852 #next: v1851  <|@  <|@
tid ?503 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 463
stackSize: 0
=== Inputs ===
outerFrameState: ?514 
values: a1 i2397 - a1797 
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: a1 i2397 - a1797  <|@  <|@
f <@*|@fixed>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?503 
actionAndReason: i1849 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1846 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?503 actionAndReason: i1849 speculation: a1802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: v0|QWORD[.] v55|DWORD - v73|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:73, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4600307356043408663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid j2049 <|@
result v109|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j2047 
y: j2048 
=== Succesors ===
=== Usages ===
j2047 j2054 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2047 y: j2048  <|@  <|@
f <@~|@floating>@ <|@
tid j2057 <|@
result v110|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j2036 
y: j1967 
=== Succesors ===
=== Usages ===
j2054 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2036 y: j1967  <|@  <|@
f <@~|@floating>@ <|@
tid j2054 <|@
result v111|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
=== Inputs ===
x: j2049 
y: j2057 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2049 y: j2057  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
address: j2054 
value: i11 
=== Succesors ===
next: v2056 
=== Usages ===
=== Predecessor ===
v2052 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j2054 value: i11 #next: v2056  <|@  <|@
f <@*|@fixed>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v2046 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2046  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = DEC v99|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = ADD (x: v95|QWORD[*], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[*] = ADD (x: v110|QWORD[*], y: v109|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v111|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD[*]] destination: B96 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4612159220894144465
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2257 
=== Usages ===
=== Predecessor ===
v2259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2257  <|@  <|@
f <@*|@fixed>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2253 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2258 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B97 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1844 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1844  <|@  <|@
f <@~|@floating>@ <|@
tid i1845 <|@
result int[-314899|0xfffffffffffb31ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314899
stableDimension: 0
stamp: i32 [-314899] ⇊00000000fffb31ed ⇈00000000fffb31ed
stampKind: i32
value: int[-314899|0xfffffffffffb31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1838 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-314899|0xfffffffffffb31ed]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B61" "B98" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1841 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-323937 - -314899] ⇊00000000fffb008d ⇈00000000fffb3fff
valueDescription: i32
=== Inputs ===
merge: v1838 
values: i1840 i1845 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1838 values: i1840 i1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1839 v1844 
=== Succesors ===
next: v1843 
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1839 v1844 #next: v1843  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?480 
actionAndReason: i1841 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1838 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?480 actionAndReason: i1841 speculation: a1802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v59|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v60|DWORD 
locals: v0|QWORD[.] v55|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622066951052153297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.], v46|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B92" "B100" "B54" 
    successors "B102" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a729 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v726 
values: a1280 a1126 a1707 
=== Succesors ===
=== Usages ===
v2442 v2434 v2471 v2435 v2441 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v726 values: a1280 a1126 a1707  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v726 
values: i2398 i2395 i2395 
=== Succesors ===
=== Usages ===
i402 ?147 ?148 v1222 v1215 ?155 ?727 v1183 v1190 i153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v726 values: i2398 i2395 i2395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v725 v728 v791 
=== Succesors ===
next: v2400 
=== Usages ===
a729 i730 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v725 v728 v791 #next: v2400  <|@  <|@
tid ?727 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - i730 - 
=== Succesors ===
=== Usages ===
v1859 v2400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - i730 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2471 <|@
result [v113|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
v2400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2400 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?727 
guard: - 
address: v2471 
=== Succesors ===
next: v1599 
=== Usages ===
v2225 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?727 guard: - address: v2471 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid v2225 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2400 
y: v2219 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2400 y: v2219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2225 
=== Succesors ===
trueSuccessor: v1595 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
v2400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2225 #trueSuccessor: v1595 #falseSuccessor: v1598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|QWORD[.], v114|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v113|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2401 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2401  <|@  <|@
f <@~|@floating>@ <|@
tid v2441 <|@
result [v113|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a729 
index: - 
=== Succesors ===
=== Usages ===
i2401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2401 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2441 
=== Succesors ===
next: v1604 
=== Usages ===
v1131 v979 v867 v1194 v2359 v2360 
=== Predecessor ===
v1595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2441 #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i730 
y: i73 
=== Succesors ===
=== Usages ===
i403 v2434 v1131 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i730 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i402 
y: i2401 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i402 y: i2401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1131 
=== Succesors ===
trueSuccessor: v1600 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
i2401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1131 #trueSuccessor: v1600 #falseSuccessor: v1603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v113|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHL v114|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1609 
=== Usages ===
v1139 
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1609  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i402 
y: i73 
=== Succesors ===
=== Usages ===
v1194 v2442 v2435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i402 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i403 
y: i2401 
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i403 y: i2401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1194 
=== Succesors ===
trueSuccessor: v1605 
falseSuccessor: v1608 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1194 #trueSuccessor: v1605 #falseSuccessor: v1608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = INC v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1139 
=== Usages ===
v1166 a2402 v1201 
=== Predecessor ===
v1609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1139  <|@  <|@
f <@~|@floating>@ <|@
tid v2434 <|@
result [v113|QWORD[.] + v116|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a729 
index: i402 
=== Succesors ===
=== Usages ===
v1139 j2080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: i402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1600 
address: v2434 
value: a1787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2080 
=== Usages ===
=== Predecessor ===
v1605 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1600 address: v2434 value: a1787 stateAfter: - lastLocationAccess: - #next: j2080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2080 <|@
result [v113|QWORD[.] + v116|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2434 
=== Succesors ===
next: v2084 
=== Usages ===
j2081 
=== Predecessor ===
v1139 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2434 #next: v2084  <|@  <|@
f <@~|@floating>@ <|@
tid j2081 <|@
result v118|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2080 
y: i470 
=== Succesors ===
=== Usages ===
v2472 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2080 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2472 <|@
result [v118|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2081 
index: j1967 
=== Succesors ===
=== Usages ===
v2084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2081 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2472 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2402 
=== Usages ===
=== Predecessor ===
j2080 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2472 value: i1969 stateAfter: - lastLocationAccess: - #next: a2402  <|@  <|@
f <@~|@floating>@ <|@
tid v2435 <|@
result [v113|QWORD[.] + v117|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a729 
index: i403 
=== Succesors ===
=== Usages ===
a2402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2402 <|@
result v120|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1605 
address: v2435 
=== Succesors ===
next: a2403 
=== Usages ===
v2473 v1150 v2436 
=== Predecessor ===
v2084 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1605 address: v2435 #next: a2403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2403 <|@
result v121|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 141]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2437 
=== Succesors ===
next: v1713 
=== Usages ===
v1209 v2440 v2506 
=== Predecessor ===
a2402 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2437 #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2403 
=== Succesors ===
=== Usages ===
v576 v162 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2403  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2402 
=== Succesors ===
=== Usages ===
v1713 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2402  <|@  <|@
tid ?155 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 - - i730 - 
=== Succesors ===
=== Usages ===
v1504 v1503 v1823 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 - - i730 -  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 136]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i730 
y: i73 
=== Succesors ===
=== Usages ===
v1167 v846 i972 v1202 i2364 v2366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i730 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
result [v113|QWORD[.] + v117|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a729 
index: i403 
=== Succesors ===
=== Usages ===
v1201 v1166 j2134 j2141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a729 index: i403  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v1712 
falseSuccessor: v1711 
=== Usages ===
=== Predecessor ===
a2403 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v1712 #falseSuccessor: v1711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD[.] + v116|DWORD * 4 + 16], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = LEA [v113|QWORD[.] + v116|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[*] = SHR v119|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v118|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v113|QWORD[.] + v117|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = INC v114|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|DWORD[.], y: v120|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608652596548061998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1721 
=== Usages ===
=== Predecessor ===
v1713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1721  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1890 
=== Predecessor ===
v1712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622910117602100373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v1713 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@~|@floating>@ <|@
tid v2473 <|@
result [v120|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2402 
=== Succesors ===
=== Usages ===
v2404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2404 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2473 
=== Succesors ===
next: v1895 
=== Usages ===
v2227 
=== Predecessor ===
v1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2473 #next: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid v2227 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2404 
y: v2226 
=== Succesors ===
=== Usages ===
v1895 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2404 y: v2226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1895 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.028170283262457074
=== Inputs ===
condition: v2227 
=== Succesors ===
trueSuccessor: v1893 
falseSuccessor: v1892 
=== Usages ===
=== Predecessor ===
v2404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2227 #trueSuccessor: v1893 #falseSuccessor: v1892  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v120|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2091 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2091 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2106 
=== Usages ===
v2474 v2475 
=== Predecessor ===
v1893 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2474 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2106 v2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2106 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2474 
=== Succesors ===
next: j2107 
=== Usages ===
j2228 j2112 v2491 
=== Predecessor ===
j2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2474 #next: j2107  <|@  <|@
f <@~|@floating>@ <|@
tid v2475 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2107 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2475 
=== Succesors ===
next: v2099 
=== Usages ===
v2096 
=== Predecessor ===
j2106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2475 #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid j2228 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2106 
y: j1057 
=== Succesors ===
=== Usages ===
v2096 v2108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2106 y: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2107 
y: j2228 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2107 y: j2228  <|@  <|@
f <@*|@fixed>@ <|@
tid v2099 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2096 
=== Succesors ===
trueSuccessor: v2097 
falseSuccessor: v2098 
=== Usages ===
=== Predecessor ===
j2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2096 #trueSuccessor: v2097 #falseSuccessor: v2098  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = LEA [v123|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569900903203743257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2102 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2102  <|@  <|@
tid ?147 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: a1 a756 a756 - i730 - 
=== Succesors ===
=== Usages ===
?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a756 a756 - i730 -  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setKey(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: ?147 
values: a1 i730 a756 
=== Succesors ===
=== Usages ===
a2102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?147 values: a1 i730 a756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2102 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?148 
arguments: v1916 i468 i73 
=== Succesors ===
next: j2103 
=== Usages ===
j2103 
=== Predecessor ===
v2097 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?148 arguments: v1916 i468 i73 #next: j2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2103 <|@
result v125|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2102 
=== Succesors ===
next: v2113 
=== Usages ===
j2112 
=== Predecessor ===
a2102 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2102 #next: v2113  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2110 
=== Predecessor ===
j2103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: v0|QWORD[.] v114|DWORD v45|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD[.]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599669226066856306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2108 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2474 
value: j2228 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2105 
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2474 value: j2228 stateAfter: - lastLocationAccess: - #next: v2105  <|@  <|@
f <@~|@floating>@ <|@
tid v2491 <|@
result [v123|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2106 
index: - 
=== Succesors ===
=== Usages ===
v2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2491 
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v2108 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2491 #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2110 
=== Predecessor ===
v2105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v123|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" 
    successors "B111" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2112 <|@
result v126|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2110 
values: j2106 j2103 
=== Succesors ===
=== Usages ===
v2477 v2476 a1729 v2492 v2493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2110 values: j2106 j2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2111 v2113 
=== Succesors ===
next: a1729 
=== Usages ===
j2112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2111 v2113 #next: a1729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1729 <|@
result v127|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2112 
=== Succesors ===
next: j2123 
=== Usages ===
a1734 
=== Predecessor ===
v2110 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2112 #next: j2123  <|@  <|@
f <@~|@floating>@ <|@
tid j2378 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1709 
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1709  <|@  <|@
f <@~|@floating>@ <|@
tid v2501 <|@
result [v4|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2378 
index: - 
=== Succesors ===
=== Usages ===
j2123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2378 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2123 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2501 
=== Succesors ===
next: v2124 
=== Usages ===
v2124 
=== Predecessor ===
a1729 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2501 #next: v2124  <|@  <|@
f <@~|@floating>@ <|@
tid v2476 <|@
result [v126|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2476 
value: j2123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2127 
=== Usages ===
=== Predecessor ===
j2123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2476 value: j2123 stateAfter: - lastLocationAccess: - #next: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2477 <|@
result [v126|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2477 
value: v2226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2405 
=== Usages ===
=== Predecessor ===
v2124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2477 value: v2226 stateAfter: - lastLocationAccess: - #next: i2405  <|@  <|@
f <@~|@floating>@ <|@
tid v2436 <|@
result [v120|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2402 
=== Succesors ===
=== Usages ===
i2405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2405 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2436 
=== Succesors ===
next: v2131 
=== Usages ===
v2131 
=== Predecessor ===
v2127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2436 #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid v2492 <|@
result [v126|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2492 
value: i2405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2133 
=== Usages ===
=== Predecessor ===
i2405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2492 value: i2405 stateAfter: - lastLocationAccess: - #next: v2133  <|@  <|@
f <@~|@floating>@ <|@
tid v2493 <|@
result [v126|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2112 
index: - 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2493 
value: a1787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1734 
=== Usages ===
=== Predecessor ===
v2131 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2493 value: a1787 stateAfter: - lastLocationAccess: - #next: a1734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1734 <|@
result v127|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1729 
=== Succesors ===
next: v1735 
=== Usages ===
a1165 
=== Predecessor ===
v2133 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1729 #next: v1735  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
a1734 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1166  <|@  <|@
f <@~|@floating>@ <|@
tid a1165 <|@
result v130|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a1734 
=== Succesors ===
=== Usages ===
v1166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1605 
address: v2442 
value: a1165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2134 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1605 address: v2442 value: a1165 stateAfter: - lastLocationAccess: - #next: j2134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2134 <|@
result [v113|QWORD[.] + v117|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2442 
=== Succesors ===
next: v2138 
=== Usages ===
j2135 
=== Predecessor ===
v1166 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2442 #next: v2138  <|@  <|@
f <@~|@floating>@ <|@
tid j2135 <|@
result v131|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2134 
y: i470 
=== Succesors ===
=== Usages ===
v2478 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2134 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2478 <|@
result [v131|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2135 
index: j1967 
=== Succesors ===
=== Usages ===
v2138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2135 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2478 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
j2134 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2478 value: i1969 stateAfter: - lastLocationAccess: - #next: v1167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
value: i153 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v2138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2432 value: i153 stateAfter: - lastLocationAccess: - #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v1209 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1209 #trueSuccessor: v160 #falseSuccessor: v161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE v126|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOV [v4|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[*]], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v126|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOV [v120|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[*] + 12], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[*] + 16], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[.] = COMPRESSPOINTER (input: v127|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD[.] + v117|DWORD * 4 + 16], y: v130|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = LEA [v113|QWORD[.] + v117|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[*] = SHR v132|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594678420441695221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2406 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2406 <|@
result v133|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v186 
=== Usages ===
v2368 v2370 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2406 
=== Succesors ===
=== Usages ===
i2367 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2406  <|@  <|@
f <@~|@floating>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2406 
y: a1377 
=== Succesors ===
=== Usages ===
i2369 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2406 y: a1377  <|@  <|@
f <@~|@floating>@ <|@
tid i2369 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v2370 
trueValue: i123 
falseValue: i327 
=== Succesors ===
=== Usages ===
i2367 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2370 trueValue: i123 falseValue: i327  <|@  <|@
f <@~|@floating>@ <|@
tid i2367 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v2368 
trueValue: i123 
falseValue: i2369 
=== Succesors ===
=== Usages ===
v2366 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v2368 trueValue: i123 falseValue: i2369  <|@  <|@
f <@~|@floating>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2367 
y: i153 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2367 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v2366 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
a2406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2366 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v133|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v135|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v133|DWORD[.], y: v133|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = CMOVE (falseValue: v134|DWORD, ~trueValue: v137|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4574701195994764050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6a51b899
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1781 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1174 
stateDuring: ?1781 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1174 stateDuring: ?1781 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594426821259161436
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?155 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?155 #next: v449  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v45|QWORD[.] - - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595773996197861255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2407 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2407  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
result [v121|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2403 
=== Succesors ===
=== Usages ===
i2407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2407 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2440 
=== Succesors ===
next: i2408 
=== Usages ===
i313 v739 
=== Predecessor ===
v161 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2440 #next: i2408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2408 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v302 
=== Usages ===
i2364 
=== Predecessor ===
i2407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid i2364 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i153 
y: i2408 
=== Succesors ===
=== Usages ===
i2362 i2363 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i153 y: i2408  <|@  <|@
f <@~|@floating>@ <|@
tid i2363 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i2364 
y: i73 
=== Succesors ===
=== Usages ===
i2362 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2364 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid i2362 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i2363 
y: i2364 
=== Succesors ===
=== Usages ===
v739 v174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2363 y: i2364  <|@  <|@
f <@~|@floating>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i298 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v2360 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i2408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2360 #trueSuccessor: v300 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v121|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SUB (x: v122|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = SAR v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = ADD (x: v140|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594107066116622430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2407 
y: i2362 
=== Succesors ===
=== Usages ===
i740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2407 y: i2362  <|@  <|@
f <@~|@floating>@ <|@
tid i740 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v739 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1183 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v739 trueValue: i73 falseValue: i11  <|@  <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4d83cb7b
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i740 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i740  <|@  <|@
tid ?1783 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1183 
stateDuring: ?1783 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1183 stateDuring: ?1783 #next: v733  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v142|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
f <@~|@floating>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i308 
=== Succesors ===
=== Usages ===
v1619 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2359 
=== Succesors ===
trueSuccessor: v1615 
falseSuccessor: v1618 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2359 #trueSuccessor: v1615 #falseSuccessor: v1618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2407 
y: i73 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2407 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i313 
y: i2362 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i313 y: i2362  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v174 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v174 trueValue: i73 falseValue: i11  <|@  <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@b060d9d
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i175 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i175  <|@  <|@
tid ?1784 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1190 
stateDuring: ?1784 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1190 stateDuring: ?1784 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = SHR v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1819 
=== Usages ===
=== Predecessor ===
v1619 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1819  <|@  <|@
f <@~|@floating>@ <|@
tid i1820 <|@
result int[-303123|0xfffffffffffb5fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303123
stableDimension: 0
stamp: i32 [-303123] ⇊00000000fffb5fed ⇈00000000fffb5fed
stampKind: i32
value: int[-303123|0xfffffffffffb5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
v1618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303123|0xfffffffffffb5fed]] destination: B118 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622720799226186535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1896 
=== Usages ===
=== Predecessor ===
v1895 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1896  <|@  <|@
f <@*|@fixed>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1890 
=== Predecessor ===
v1892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" "B119" 
    successors "B121" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623467521398113421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1721 v1896 
=== Succesors ===
next: v1201 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1721 v1896 #next: v1201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1605 
address: v2442 
value: a1787 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2141 
=== Usages ===
=== Predecessor ===
v1890 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1605 address: v2442 value: a1787 stateAfter: - lastLocationAccess: - #next: j2141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2141 <|@
result [v113|QWORD[.] + v117|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2442 
=== Succesors ===
next: v2145 
=== Usages ===
j2142 
=== Predecessor ===
v1201 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2442 #next: v2145  <|@  <|@
f <@~|@floating>@ <|@
tid j2142 <|@
result v145|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2141 
y: i470 
=== Succesors ===
=== Usages ===
v2479 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2141 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2479 <|@
result [v145|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2142 
index: j1967 
=== Succesors ===
=== Usages ===
v2145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2142 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2479 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
j2141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2479 value: i1969 stateAfter: - lastLocationAccess: - #next: v1202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2432 
value: i153 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v2145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2432 value: i153 stateAfter: - lastLocationAccess: - #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.45478946217591376
=== Inputs ===
condition: v1209 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
v1202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1209 #trueSuccessor: v574 #falseSuccessor: v575  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD[.] + v117|DWORD * 4 + 16], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = LEA [v113|QWORD[.] + v117|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v146|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v145|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618305845921973333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2409 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2409 <|@
result v147|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2438 
=== Succesors ===
next: v849 
=== Usages ===
v1387 v1388 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2438 #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2409 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2409  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2409 
y: a1377 
=== Succesors ===
=== Usages ===
i2357 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2409 y: a1377  <|@  <|@
f <@~|@floating>@ <|@
tid i2357 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1388 
trueValue: i123 
falseValue: i327 
=== Succesors ===
=== Usages ===
i2358 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1388 trueValue: i123 falseValue: i327  <|@  <|@
f <@~|@floating>@ <|@
tid i2358 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1387 
trueValue: i123 
falseValue: i2357 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1387 trueValue: i123 falseValue: i2357  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2358 
y: i153 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2358 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.045658967703249176
=== Inputs ===
condition: v846 
=== Succesors ===
trueSuccessor: v847 
falseSuccessor: v848 
=== Usages ===
=== Predecessor ===
a2409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v846 #trueSuccessor: v847 #falseSuccessor: v848  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v147|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v149|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v147|DWORD[.], y: v147|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = CMOVE (falseValue: v148|DWORD, ~trueValue: v151|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598507691754327632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v956  <|@  <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@641c7ada
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1779 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1207 
stateDuring: ?1779 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1207 stateDuring: ?1779 #next: v954  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 7
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4618003591432196976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1504 
=== Usages ===
=== Predecessor ===
v849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?155 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v848 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?155 #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 5
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v45|QWORD[.] - - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4619621997619512517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2410 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2410  <|@  <|@
f <@~|@floating>@ <|@
tid v2506 <|@
result [v121|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2403 
=== Succesors ===
=== Usages ===
i2410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2410 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2506 
=== Succesors ===
next: i2411 
=== Usages ===
i982 v965 
=== Predecessor ===
v575 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2506 #next: i2411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2411 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2439 
=== Succesors ===
next: v870 
=== Usages ===
i972 
=== Predecessor ===
i2410 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2439 #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid i972 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i153 
y: i2411 
=== Succesors ===
=== Usages ===
i973 i974 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i153 y: i2411  <|@  <|@
f <@~|@floating>@ <|@
tid i973 <|@
result v154|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i972 
y: i73 
=== Succesors ===
=== Usages ===
i974 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i972 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid i974 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32
=== Inputs ===
x: i972 
y: i973 
=== Succesors ===
=== Usages ===
v975 v965 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i972 y: i973  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i298 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i298  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v867 
=== Succesors ===
trueSuccessor: v868 
falseSuccessor: v869 
=== Usages ===
=== Predecessor ===
i2411 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v867 #trueSuccessor: v868 #falseSuccessor: v869  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOV [v121|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = SUB (x: v122|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = SAR v153|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = ADD (x: v154|DWORD, y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617619458914403459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2410 
y: i974 
=== Succesors ===
=== Usages ===
i966 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2410 y: i974  <|@  <|@
f <@~|@floating>@ <|@
tid i966 <|@
result v156|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v965 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v965 trueValue: i73 falseValue: i11  <|@  <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3ee83b0
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i966 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1215 
stateDuring: ?1780 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1215 stateDuring: ?1780 #next: v958  <|@  <|@
f <@*|@fixed>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 8
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|DWORD, y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v156|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2401 
y: i308 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2401 y: i308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v1620 
falseSuccessor: v1623 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v1620 #falseSuccessor: v1623  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid i982 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2410 
y: i73 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2410 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i982 
y: i974 
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i982 y: i974  <|@  <|@
f <@~|@floating>@ <|@
tid i976 <|@
result v158|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v975 
trueValue: i73 
falseValue: i11 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v975 trueValue: i73 falseValue: i11  <|@  <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@50e558a5
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a756 i730 i976 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a756 i730 i976  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1222 
stateDuring: ?1782 
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v1620 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1222 stateDuring: ?1782 #next: v969  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 9
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = SHR v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|DWORD, y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v158|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid i1825 <|@
result int[-311315|0xfffffffffffb3fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -311315
stableDimension: 0
stamp: i32 [-311315] ⇊00000000fffb3fed ⇈00000000fffb3fed
stampKind: i32
value: int[-311315|0xfffffffffffb3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-311315|0xfffffffffffb3fed]] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B118" "B128" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1821 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-311315 - -303123] ⇊00000000fffb1fed ⇈00000000fffb7fed
valueDescription: i32
=== Inputs ===
merge: v1818 
values: i1820 i1825 
=== Succesors ===
=== Usages ===
v1823 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1818 values: i1820 i1825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1819 v1824 
=== Succesors ===
next: v1823 
=== Usages ===
i1821 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1819 v1824 #next: v1823  <|@  <|@
f <@*|@fixed>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?155 
actionAndReason: i1821 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1818 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?155 actionAndReason: i1821 speculation: a1802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v45|QWORD[.] - - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:140, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1865 
=== Usages ===
=== Predecessor ===
v1609 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1865  <|@  <|@
f <@~|@floating>@ <|@
tid i1866 <|@
result int[-292379|0xfffffffffffb89e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292379
stableDimension: 0
stamp: i32 [-292379] ⇊00000000fffb89e5 ⇈00000000fffb89e5
stampKind: i32
value: int[-292379|0xfffffffffffb89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
v1608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292379|0xfffffffffffb89e5], Object[null]] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid i1864 <|@
result int[-289819|0xfffffffffffb93e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289819
stableDimension: 0
stamp: i32 [-289819] ⇊00000000fffb93e5 ⇈00000000fffb93e5
stampKind: i32
value: int[-289819|0xfffffffffffb93e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289819|0xfffffffffffb93e5], Object[null]] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1860 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1860  <|@  <|@
f <@~|@floating>@ <|@
tid a1862 <|@
result v160|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@679821561
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@679821561]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1861 <|@
result int[-288828|0xfffffffffffb97c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288828
stableDimension: 0
stamp: i32 [-288828] ⇊00000000fffb97c4 ⇈00000000fffb97c4
stampKind: i32
value: int[-288828|0xfffffffffffb97c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@679821561] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288828|0xfffffffffffb97c4], v160|QWORD[.]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" "B130" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1857 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-292379 - -288523] ⇊00000000fffb80c4 ⇈00000000fffb9ff5
valueDescription: i32
=== Inputs ===
merge: v1854 
values: i1861 i1864 i1866 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1854 values: i1861 i1864 i1866  <|@  <|@
f <@~|@floating>@ <|@
tid a1858 <|@
result v162|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1854 
values: a1862 a1802 a1802 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1854 values: a1862 a1802 a1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1860 v1863 v1865 
=== Succesors ===
next: v1859 
=== Usages ===
i1857 a1858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1860 v1863 v1865 #next: v1859  <|@  <|@
f <@*|@fixed>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?727 
actionAndReason: i1857 
speculation: a1858 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1854 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?727 actionAndReason: i1857 speculation: a1858  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|DWORD, v162|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v161|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v162|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:116, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595411856565423060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v882  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
v781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v23|QWORD[.]] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B14" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609905014042314416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i885 <|@
result v163|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v881 
values: i208 i895 
=== Succesors ===
=== Usages ===
i772 i556 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v881 values: i208 i895  <|@  <|@
f <@~|@floating>@ <|@
tid a891 <|@
result v164|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v881 
values: a19 a1074 
=== Succesors ===
=== Usages ===
a777 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v881 values: a19 a1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v882 v884 
=== Succesors ===
next: v770 
=== Usages ===
i885 a891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v882 v884 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid i556 <|@
result v165|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i885 
y: i73 
=== Succesors ===
=== Usages ===
i1789 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i885 y: i73  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
v881 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v163|DWORD, v164|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = SHL v163|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|DWORD, v165|DWORD, v164|QWORD[.]] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B44" "B135" 
    successors "B137" "B148" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i772 <|@
result v166|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v767 
values: i341 i885 
=== Succesors ===
=== Usages ===
?874 ?529 ?769 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: i341 i885  <|@  <|@
f <@~|@floating>@ <|@
tid i1789 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v767 
values: i557 i556 
=== Succesors ===
=== Usages ===
i1790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: i557 i556  <|@  <|@
f <@~|@floating>@ <|@
tid a777 <|@
result v168|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v767 
values: a646 a891 
=== Succesors ===
=== Usages ===
?874 ?769 ?769 a1328 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v767 values: a646 a891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v768 v770 
=== Succesors ===
next: a2412 
=== Usages ===
i772 i1789 a777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v768 v770 #next: a2412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2412 <|@
result v169|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2444 
=== Succesors ===
next: v2413 
=== Usages ===
a1286 v2480 v2445 
=== Predecessor ===
v767 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2444 #next: v2413  <|@  <|@
tid ?769 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?193 
values: a1 a777 a777 - - - i772 
=== Succesors ===
=== Usages ===
a2165 v1872 v2413 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: a1 a777 a777 - - - i772  <|@  <|@
f <@~|@floating>@ <|@
tid v2480 <|@
result [v169|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2412 
=== Succesors ===
=== Usages ===
v2413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2413 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?769 
guard: - 
address: v2480 
=== Succesors ===
next: v1634 
=== Usages ===
v2233 
=== Predecessor ===
a2412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?769 guard: - address: v2480 #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2413 
y: v2219 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2413 y: v2219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2233 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1633 
=== Usages ===
=== Predecessor ===
v2413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2233 #trueSuccessor: v1630 #falseSuccessor: v1633  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|DWORD, v167|DWORD, v168|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v166|DWORD 
locals: v0|QWORD[.] v168|QWORD[.] v168|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v169|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B138" "B147" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2414 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2414  <|@  <|@
f <@~|@floating>@ <|@
tid v2445 <|@
result [v169|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2412 
=== Succesors ===
=== Usages ===
i2414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2414 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2445 
=== Succesors ===
next: v1639 
=== Usages ===
v1331 
=== Predecessor ===
v1630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2445 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid i1790 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1789 
y: i73 
=== Succesors ===
=== Usages ===
v2448 v1331 v2446 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1789 y: i73  <|@  <|@
f <@~|@floating>@ <|@
tid v1331 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1790 
y: i2414 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1790 y: i2414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1331 
=== Succesors ===
trueSuccessor: v1635 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
i2414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1331 #trueSuccessor: v1635 #falseSuccessor: v1638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = INC v167|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|DWORD, y: [v169|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B137 -> B138 falseDestination: B137 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2415 
=== Usages ===
v1351 a2415 v1369 
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2415  <|@  <|@
f <@~|@floating>@ <|@
tid a1286 <|@
result v171|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2412 
=== Succesors ===
=== Usages ===
v2448 v2446 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2412  <|@  <|@
f <@~|@floating>@ <|@
tid v2446 <|@
result [v171|QWORD[.] + v170|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1286 
index: i1790 
=== Succesors ===
=== Usages ===
a2415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1286 index: i1790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2415 <|@
result v172|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1635 
address: v2446 
=== Succesors ===
next: v1739 
=== Usages ===
?876 v1301 v2447 v2449 v2481 
=== Predecessor ===
v1635 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1635 address: v2446 #next: v1739  <|@  <|@
f <@~|@floating>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
value: a2415 
=== Succesors ===
=== Usages ===
v1739 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2415  <|@  <|@
f <@~|@floating>@ <|@
tid v2448 <|@
result [v171|QWORD[.] + v170|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1286 
index: i1790 
=== Succesors ===
=== Usages ===
v1351 v1369 j2203 j2196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1286 index: i1790  <|@  <|@
f <@~|@floating>@ <|@
tid a1328 <|@
result v173|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a777 
=== Succesors ===
=== Usages ===
v1351 v2195 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a777  <|@  <|@
f <@*|@fixed>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1301 
=== Succesors ===
trueSuccessor: v1738 
falseSuccessor: v1737 
=== Usages ===
=== Predecessor ===
a2415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1301 #trueSuccessor: v1738 #falseSuccessor: v1737  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = UNCOMPRESSPOINTER (input: v169|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v172|DWORD[.] = MOV [v171|QWORD[.] + v170|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD[.] = COMPRESSPOINTER (input: v168|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v172|DWORD[.], y: v172|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596104817032146771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1747 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1747  <|@  <|@
f <@*|@fixed>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
v1738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610482715506959680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2416  <|@  <|@
f <@~|@floating>@ <|@
tid v2481 <|@
result [v172|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2415 
=== Succesors ===
=== Usages ===
v2416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2416 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2481 
=== Succesors ===
next: v1885 
=== Usages ===
v2234 
=== Predecessor ===
v1737 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2481 #next: v1885  <|@  <|@
f <@~|@floating>@ <|@
tid v2234 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2416 
y: v2226 
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2416 y: v2226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
trueSuccessorProbability: 0.07804910062743042
=== Inputs ===
condition: v2234 
=== Succesors ===
trueSuccessor: v1883 
falseSuccessor: v1882 
=== Usages ===
=== Predecessor ===
v2416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2234 #trueSuccessor: v1883 #falseSuccessor: v1882  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v172|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07804910062743042 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2154 
=== Usages ===
=== Predecessor ===
v1885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2154 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2169 
=== Usages ===
v2482 v2483 
=== Predecessor ===
v1883 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2169  <|@  <|@
f <@~|@floating>@ <|@
tid v2482 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2154 
index: - 
=== Succesors ===
=== Usages ===
j2169 v2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2169 <|@
result v174|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2482 
=== Succesors ===
next: j2170 
=== Usages ===
j2235 j2175 v2494 
=== Predecessor ===
j2154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2482 #next: j2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2483 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2154 
index: - 
=== Succesors ===
=== Usages ===
j2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2170 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2483 
=== Succesors ===
next: v2162 
=== Usages ===
v2159 
=== Predecessor ===
j2169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2483 #next: v2162  <|@  <|@
f <@~|@floating>@ <|@
tid j2235 <|@
result v175|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2169 
y: j1057 
=== Succesors ===
=== Usages ===
v2159 v2171 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2169 y: j1057  <|@  <|@
f <@~|@floating>@ <|@
tid v2159 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2170 
y: j2235 
=== Succesors ===
=== Usages ===
v2162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2170 y: j2235  <|@  <|@
f <@*|@fixed>@ <|@
tid v2162 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2159 
=== Succesors ===
trueSuccessor: v2160 
falseSuccessor: v2161 
=== Usages ===
=== Predecessor ===
j2170 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2159 #trueSuccessor: v2160 #falseSuccessor: v2161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = LEA [v174|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v175|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563879874703437959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2165 
=== Usages ===
=== Predecessor ===
v2162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2165 <|@
result v176|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?769 
arguments: v1916 i468 i73 
=== Succesors ===
next: j2166 
=== Usages ===
j2166 
=== Predecessor ===
v2160 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?769 arguments: v1916 i468 i73 #next: j2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2166 <|@
result v176|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2165 
=== Succesors ===
next: v2176 
=== Usages ===
j2175 
=== Predecessor ===
a2165 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2165 #next: v2176  <|@  <|@
f <@*|@fixed>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
j2166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v166|DWORD 
locals: v0|QWORD[.] v168|QWORD[.] v168|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v176|QWORD[.]] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593991990045575300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2171 
=== Usages ===
=== Predecessor ===
v2162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2482 
value: j2235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2168 
=== Usages ===
=== Predecessor ===
v2161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2482 value: j2235 stateAfter: - lastLocationAccess: - #next: v2168  <|@  <|@
f <@~|@floating>@ <|@
tid v2494 <|@
result [v174|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2169 
index: - 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2169 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2494 
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
v2171 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2494 #next: v2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
v2168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v175|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v174|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|QWORD] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2175 <|@
result v177|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2173 
values: j2169 j2166 
=== Succesors ===
=== Usages ===
v2486 v2485 a1755 v2495 v2496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2173 values: j2169 j2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2174 v2176 
=== Succesors ===
next: a1755 
=== Usages ===
j2175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2174 v2176 #next: a1755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1755 <|@
result v178|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2175 
=== Succesors ===
next: j2185 
=== Usages ===
a1760 
=== Predecessor ===
v2173 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2175 #next: j2185  <|@  <|@
f <@~|@floating>@ <|@
tid j2181 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1709 
=== Succesors ===
=== Usages ===
v2484 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1709  <|@  <|@
f <@~|@floating>@ <|@
tid v2484 <|@
result [v4|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2181 
index: - 
=== Succesors ===
=== Usages ===
j2185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2181 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2185 <|@
result v179|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2484 
=== Succesors ===
next: v2186 
=== Usages ===
v2186 
=== Predecessor ===
a1755 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2484 #next: v2186  <|@  <|@
f <@~|@floating>@ <|@
tid v2485 <|@
result [v177|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2485 
value: j2185 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2189 
=== Usages ===
=== Predecessor ===
j2185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2485 value: j2185 stateAfter: - lastLocationAccess: - #next: v2189  <|@  <|@
f <@~|@floating>@ <|@
tid v2486 <|@
result [v177|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2486 
value: v2226 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2417 
=== Usages ===
=== Predecessor ===
v2186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2486 value: v2226 stateAfter: - lastLocationAccess: - #next: i2417  <|@  <|@
f <@~|@floating>@ <|@
tid v2449 <|@
result [v172|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2415 
=== Succesors ===
=== Usages ===
i2417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2417 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2449 
=== Succesors ===
next: v2193 
=== Usages ===
v2193 
=== Predecessor ===
v2189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2449 #next: v2193  <|@  <|@
f <@~|@floating>@ <|@
tid v2495 <|@
result [v177|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2495 
value: i2417 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2195 
=== Usages ===
=== Predecessor ===
i2417 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2495 value: i2417 stateAfter: - lastLocationAccess: - #next: v2195  <|@  <|@
f <@~|@floating>@ <|@
tid v2496 <|@
result [v177|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2175 
index: - 
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2496 
value: a1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1760 
=== Usages ===
=== Predecessor ===
v2193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2496 value: a1328 stateAfter: - lastLocationAccess: - #next: a1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1760 <|@
result v178|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1755 
=== Succesors ===
next: v1761 
=== Usages ===
a1368 ?953 
=== Predecessor ===
v2195 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1755 #next: v1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1369 
=== Usages ===
=== Predecessor ===
a1760 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid a1368 <|@
result v181|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
op: Compress
stamp: n -
=== Inputs ===
value: a1760 
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1635 
address: v2448 
value: a1368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2196 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1635 address: v2448 value: a1368 stateAfter: - lastLocationAccess: - #next: j2196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2196 <|@
result [v171|QWORD[.] + v170|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2448 
=== Succesors ===
next: v2200 
=== Usages ===
j2197 
=== Predecessor ===
v1369 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2448 #next: v2200  <|@  <|@
f <@~|@floating>@ <|@
tid j2197 <|@
result v182|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2196 
y: i470 
=== Succesors ===
=== Usages ===
v2487 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2196 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2487 <|@
result [v182|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2197 
index: j1967 
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2197 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2487 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2418 
=== Usages ===
=== Predecessor ===
j2196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2487 value: i1969 stateAfter: - lastLocationAccess: - #next: a2418  <|@  <|@
f <@~|@floating>@ <|@
tid v2447 <|@
result [v172|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2415 
=== Succesors ===
=== Usages ===
a2418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2418 <|@
result v184|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2447 
=== Succesors ===
next: v1502 
=== Usages ===
?591 
=== Predecessor ===
v2200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2447 #next: v1502  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - a2418 - 
=== Succesors ===
=== Usages ===
?531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - a2418 -  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setValue(int, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 784
stackSize: 0
=== Inputs ===
outerFrameState: ?591 
values: - - - - - 
=== Succesors ===
=== Usages ===
?529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?591 values: - - - - -  <|@  <|@
tid a461 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@9f36f5a
hasIdentity: true
objectId: 2
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?529 ?953 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?953 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a461 
materializedValue: a1760 
=== Succesors ===
=== Usages ===
?529 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a461 materializedValue: a1760  <|@  <|@
tid ?529 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
values: a1 i772 a461 
virtualObjectMappings: ?953 
=== Succesors ===
=== Usages ===
v1502 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531 values: a1 i772 a461 virtualObjectMappings: ?953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?529 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
a2418 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?529 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1502 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v177|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v177|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOV [v4|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v177|QWORD[*]], y: v179|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v177|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOV [v172|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v177|QWORD[*] + 12], y: v180|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v177|QWORD[*] + 16], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD[.] = COMPRESSPOINTER (input: v178|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v171|QWORD[.] + v170|DWORD * 4 + 16], y: v181|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = LEA [v171|QWORD[.] + v170|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[*] = SHR v183|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v182|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[.] = MOV [v172|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v166|DWORD v178|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - v184|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 34, 35, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609873628416676867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1886 
=== Usages ===
=== Predecessor ===
v1885 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1886  <|@  <|@
f <@*|@fixed>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
v1882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" "B145" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610740728009378285
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1747 v1886 
=== Succesors ===
next: v1351 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1747 v1886 #next: v1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1635 
address: v2448 
value: a1328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2203 
=== Usages ===
=== Predecessor ===
v1880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1635 address: v2448 value: a1328 stateAfter: - lastLocationAccess: - #next: j2203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2203 <|@
result [v171|QWORD[.] + v170|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2448 
=== Succesors ===
next: v2207 
=== Usages ===
j2204 
=== Predecessor ===
v1351 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2448 #next: v2207  <|@  <|@
f <@~|@floating>@ <|@
tid j2204 <|@
result v185|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2203 
y: i470 
=== Succesors ===
=== Usages ===
v2488 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2203 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v2488 <|@
result [v185|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2204 
index: j1967 
=== Succesors ===
=== Usages ===
v2207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2204 index: j1967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2488 
value: i1969 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1505 
=== Usages ===
=== Predecessor ===
j2203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2488 value: i1969 stateAfter: - lastLocationAccess: - #next: v1505  <|@  <|@
tid ?876 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
=== Inputs ===
outerFrameState: ?193 
values: - - - - a2415 - 
=== Succesors ===
=== Usages ===
?875 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?193 values: - - - - a2415 -  <|@  <|@
tid ?875 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setValue(int, Object)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 786
stackSize: 0
=== Inputs ===
outerFrameState: ?876 
values: - - - - - 
=== Succesors ===
=== Usages ===
?874 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?876 values: - - - - -  <|@  <|@
tid ?874 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?875 
values: a1 i772 a777 
=== Succesors ===
=== Usages ===
v1505 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?875 values: a1 i772 a777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?874 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v2207 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?874 #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 6
stamp: void
=== Inputs ===
loopBegin: v6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1505 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v171|QWORD[.] + v170|DWORD * 4 + 16], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = LEA [v171|QWORD[.] + v170|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[*] = SHR v186|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v185|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v166|DWORD v168|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - v172|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 43, 35, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1876 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1876  <|@  <|@
f <@~|@floating>@ <|@
tid i1877 <|@
result int[-331035|0xfffffffffffaf2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -331035
stableDimension: 0
stamp: i32 [-331035] ⇊00000000fffaf2e5 ⇈00000000fffaf2e5
stampKind: i32
value: int[-331035|0xfffffffffffaf2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1870 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
v1638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-331035|0xfffffffffffaf2e5], Object[null]] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid a1875 <|@
result v187|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1563345318
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1563345318]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1871 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
result int[-384316|0xfffffffffffa22c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -384316
stableDimension: 0
stamp: i32 [-384316] ⇊00000000fffa22c4 ⇈00000000fffa22c4
stampKind: i32
value: int[-384316|0xfffffffffffa22c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1870 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
v1633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1563345318] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-384316|0xfffffffffffa22c4], v187|QWORD[.]] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1870 <|@
result v188|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-384316 - -329739] ⇊00000000fffa22c4 ⇈00000000fffaf7f5
valueDescription: i32
=== Inputs ===
merge: v1867 
values: i1874 i1877 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1867 values: i1874 i1877  <|@  <|@
f <@~|@floating>@ <|@
tid a1871 <|@
result v189|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1867 
values: a1875 a1802 
=== Succesors ===
=== Usages ===
v1872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1867 values: a1875 a1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1873 v1876 
=== Succesors ===
next: v1872 
=== Usages ===
i1870 a1871 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1873 v1876 #next: v1872  <|@  <|@
f <@*|@fixed>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?769 
actionAndReason: i1870 
speculation: a1871 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?769 actionAndReason: i1870 speculation: a1871  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|DWORD, v189|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v189|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v166|DWORD 
locals: v0|QWORD[.] v168|QWORD[.] v168|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v6 
=== Succesors ===
next: v1815 
=== Usages ===
=== Predecessor ===
v1550 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v6 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid i1817 <|@
result int[-277564|0xfffffffffffbc3c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277564
stableDimension: 0
stamp: i32 [-277564] ⇊00000000fffbc3c4 ⇈00000000fffbc3c4
stampKind: i32
value: int[-277564|0xfffffffffffbc3c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i1817 
speculation: a1802 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1549 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i1817 speculation: a1802  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -277564 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: v0|QWORD[.] v23|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6bb4ddc1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] Object[null] 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v6|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B144" "B112" "B113" "B117" "B115" "B123" "B146" "B122" "B125" "B127" 
    successors "B2" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625182039524689422
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8919930131365436 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624210795177115918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9373972900065114 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction v12|DWORD[.] = MOV [v11|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD[.], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v14|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD[.], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028896981087748186 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4600831387884041749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: v11|DWORD[.] v15|DWORD 
locals: v1|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:15, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v19|DWORD[.], y: v19|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621051920458862841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD[.], v20|QWORD[.]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B11" 
    successors "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621640672415607003
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD[.], v27|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B39" "B32" "B36" 
    successors "B28" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4626232167182356221
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B45" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHL v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP (x: v30|DWORD, y: [v29|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v31|QWORD[.] + v30|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v32|DWORD[.] * 8] state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD[.], y: v27|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4621706540968831603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4621555774077785386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B32 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598496160431384868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4596032792737196678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598492879660152262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598061549816431067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD] destination: B39 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590233037823758211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590219914738827788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|DWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4550851043501207184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD] destination: B36 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621166794173973113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD[.], v27|QWORD[.]] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" "B49" "B13" 
    successors "B51" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD[.], v45|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v47|DWORD[.], y: v47|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622481684559997218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v47|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v47|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622066951052153297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD[.], v46|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B92" "B100" "B54" 
    successors "B102" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr   -1  <|@ instruction [v113|QWORD[.], v114|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v113|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v113|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHL v114|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = INC v116|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|DWORD, y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD[.] + v116|DWORD * 4 + 16], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = LEA [v113|QWORD[.] + v116|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[*] = SHR v119|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v118|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v113|QWORD[.] + v117|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = INC v114|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v120|DWORD[.], y: v120|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622910117602100373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v120|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622720799226186535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" "B119" 
    successors "B121" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623467521398113421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD[.] + v117|DWORD * 4 + 16], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = LEA [v113|QWORD[.] + v117|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[*] = SHR v146|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v145|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4619621997619512517
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOV [v121|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = SUB (x: v122|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = SAR v153|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = ADD (x: v154|DWORD, y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617619458914403459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|DWORD, y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v156|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618305845921973333
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v147|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v149|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v147|DWORD[.], y: v147|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = CMOVE (falseValue: v148|DWORD, ~trueValue: v151|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v150|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4618003591432196976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v45|QWORD[.] - - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616999473013499352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v20|QWORD[.] v20|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614586470304587029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD[.], v20|QWORD[.]] destination: B13 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611836033447576369
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE v51|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v51|QWORD[*] + 16], input: v6|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v54|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.], v46|DWORD] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = SHR v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|DWORD, y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v158|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610448773953234941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06260270999348858 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: v0|QWORD[.] v23|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v23|QWORD[.]] state [bci:16] <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD[.], y: v24|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607388834826600208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD[.], v23|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609124534507953462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v20|QWORD[.]] destination: B14 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B14" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609905014042314416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v163|DWORD, v164|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = SHL v163|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|DWORD, v165|DWORD, v164|QWORD[.]] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B44" "B135" 
    successors "B137" "B148" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|DWORD, v167|DWORD, v168|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v166|DWORD 
locals: v0|QWORD[.] v168|QWORD[.] v168|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v169|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3, 16] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B138" "B147" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = INC v167|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|DWORD, y: [v169|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B137 -> B138 falseDestination: B137 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[.] = UNCOMPRESSPOINTER (input: v169|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v172|DWORD[.] = MOV [v171|QWORD[.] + v170|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD[.] = COMPRESSPOINTER (input: v168|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v172|DWORD[.], y: v172|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610482715506959680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v172|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07804910062743042 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609873628416676867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" "B145" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610740728009378285
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v171|QWORD[.] + v170|DWORD * 4 + 16], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|QWORD[.] = LEA [v171|QWORD[.] + v170|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v185|QWORD[*] = SHR v186|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v185|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v166|DWORD v168|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - v172|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 43, 35, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B146 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608652596548061998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607349218909980788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B30" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604813664394900063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|DWORD[.], v27|QWORD[.]] destination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHR v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v58|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7308974300032183 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603025262025585884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[8|0x8]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B60" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SHR v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = ADD (x: v60|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604147382058228885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v61|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = LEA [v65|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = AND v66|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = ADD (x: v68|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604087660433099360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v69|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v68|QWORD + v63|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD + 12], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v63|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v63|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v73|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v62|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4612159220894144465
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B97 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B97" 
    successors "B70" "B97" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4613818154925520151
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v78|QWORD * 4], input: v77|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v78|QWORD * 4 + 32], input: v81|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v78|QWORD + 12] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v75|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v83|QWORD * 4], input: v85|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v83|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v87|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST v61|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC v62|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL v89|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOVSXD v90|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LEA [v73|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = ADD (x: v92|QWORD[.], y: v91|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = SHR v93|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LEA [v73|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = SHR v96|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[*] = SUB (x: v94|QWORD[*], ~y: v95|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[*] = INC v97|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|QWORD[*]] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4600307356043408663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[*] = DEC v99|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[*] = ADD (x: v95|QWORD[*], y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[*] = ADD (x: v110|QWORD[*], y: v109|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v111|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD[*]] destination: B96 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B96" 
    successors "B83" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v99|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603322257346962535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v23|QWORD[.] v23|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600843777383834340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD[.], v23|QWORD[.]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[*] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[*] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v100|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v101|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = COMPRESSPOINTER (input: v73|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v104|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9922845270333365 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604759757828088930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9926008704858252 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604711037976543358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B86" 
    successors "B90" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: 131073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B87" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v106|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD[.], v105|DWORD] destination: B92 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = LEA [v123|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599669226066856306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v123|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v123|QWORD] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" 
    successors "B111" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      LIR
      nr   -1  <|@ instruction [v126|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE v126|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOV [v191|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[*]], y: v128|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v126|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOV [v120|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[*] + 12], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[*] + 16], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[.] = COMPRESSPOINTER (input: v127|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v113|QWORD[.] + v117|DWORD * 4 + 16], y: v130|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = LEA [v113|QWORD[.] + v117|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[*] = SHR v132|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v121|DWORD[.], y: v121|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595773996197861255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v121|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SUB (x: v122|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = SAR v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = ADD (x: v140|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594107066116622430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v142|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599450824147292649
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD, v30|DWORD, v27|QWORD[.]] destination: B44 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598507691754327632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596310794871308524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596104817032146771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B139 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595411856565423060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD, v23|QWORD[.]] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594678420441695221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v133|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v135|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v133|DWORD[.], y: v133|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = CMOVE (falseValue: v134|DWORD, ~trueValue: v137|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594426821259161436
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v45|QWORD[.] - - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B113 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = LEA [v174|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v175|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593991990045575300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v175|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v174|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|QWORD] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      LIR
      nr   -1  <|@ instruction [v177|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v177|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = MOV [v190|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v177|QWORD[*]], y: v179|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v177|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOV [v172|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v177|QWORD[*] + 12], y: v180|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v177|QWORD[*] + 16], y: v173|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD[.] = COMPRESSPOINTER (input: v178|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v171|QWORD[.] + v170|DWORD * 4 + 16], y: v181|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = LEA [v171|QWORD[.] + v170|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[*] = SHR v183|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v182|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v184|DWORD[.] = MOV [v172|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v166|DWORD v178|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - v184|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 34, 35, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589973009563567121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590450782564603319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v59|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v60|DWORD 
locals: v0|QWORD[.] v55|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v115|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = SHR v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v141|DWORD, y: v143|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v114|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581674016104257750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v194|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581649141077200264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4574701195994764050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574294390170262111
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573203346018032255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572886163151516119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569900903203743257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v193|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: v0|QWORD[.] v114|DWORD v45|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|QWORD[.]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563879874703437959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v192|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v192|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v166|DWORD 
locals: v0|QWORD[.] v168|QWORD[.] v168|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v176|QWORD[.]] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606209578348434066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592447144275831689
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-289819|0xfffffffffffb93e5], Object[null]] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" "B130" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v161|DWORD, v162|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v161|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v162|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:116, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-323937|0xfffffffffffb0e9f]] destination: B61 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B61" "B98" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v59|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: v60|DWORD 
locals: v0|QWORD[.] v55|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292379|0xfffffffffffb89e5], Object[null]] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -273179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
locals: v1|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328211|0xfffffffffffafded]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: v0|QWORD[.] v55|DWORD - v73|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: v0|QWORD[.] v45|QWORD[.] v45|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:73, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -275260 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: v11|DWORD[.] v15|DWORD 
locals: v1|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@679821561] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288828|0xfffffffffffb97c4], v160|QWORD[.]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -271883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1563345318] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-384316|0xfffffffffffa22c4], v187|QWORD[.]] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|DWORD, v189|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v188|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v189|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: v166|DWORD 
locals: v0|QWORD[.] v168|QWORD[.] v168|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-331035|0xfffffffffffaf2e5], Object[null]] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-311315|0xfffffffffffb3fed]] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B118" "B128" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: v0|QWORD[.] v45|QWORD[.] - - v114|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:140, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303123|0xfffffffffffb5fed]] destination: B118 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -281883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v27|QWORD[.] v28|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: v0|QWORD[.] v27|QWORD[.] v27|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328467|0xfffffffffffafced]] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-314899|0xfffffffffffb31ed]] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -277564 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: v0|QWORD[.] v23|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
     6: ifeq          25
     9: aload_0       
    10: aload_1       
    11: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    16: invokeinterface#5, 2       // add:(java.lang.Object)boolean
    21: pop           
    22: goto          0
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6bb4ddc1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] Object[null] 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   16  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   20  <|@ instruction stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B144" "B112" "B113" "B117" "B115" "B123" "B146" "B122" "B125" "B127" 
    successors "B2" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625182039524689422
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.8919930131365436 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624210795177115918
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.9373972900065114 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.028896981087748186 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4600831387884041749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: r9|DWORD[.] rcx|DWORD 
locals: rdx|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:15, 11] <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621051920458862841
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B11" 
    successors "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621640672415607003
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B39" "B32" "B36" 
    successors "B28" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4626232167182356221
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B45" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  256  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4621706540968831603
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  288  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4621555774077785386
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  296  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B32 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598496160431384868
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4596032792737196678
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3, 16] <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598492879660152262
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598061549816431067
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3, 16] <|@ <|@
      nr  366  <|@ instruction r10|DWORD = INC stack:96|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B39 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590233037823758211
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590219914738827788
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3, 16] <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4550851043501207184
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  334  <|@ instruction r10|DWORD = INC stack:96|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B36 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621166794173973113
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" "B49" "B13" 
    successors "B51" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  468  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622481684559997218
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  548  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622066951052153297
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B92" "B100" "B54" 
    successors "B102" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r10|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: r10|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3, 16] <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction r9|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1030  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1044  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1046  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1048  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1050  <|@ instruction rbp|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B119" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622910117602100373
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622720799226186535
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B105" "B119" 
    successors "B121" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623467521398113421
    begin_IR
      LIR
      nr 1296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1300  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1304  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1310  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4619621997619512517
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1366  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr 1374  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617619458914403459
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1380  <|@ instruction r11|DWORD = SETCC condition: > <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1394  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction JUMP ~[] destination: B125 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618305845921973333
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1318  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr 1320  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1322  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr 1324  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1328  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr 1330  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1332  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4618003591432196976
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1352  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: rsi|QWORD[.] stack:88|QWORD[.] - - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr 1354  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1356  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1358  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction JUMP ~[] destination: B123 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616999473013499352
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr  134  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614586470304587029
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD <|@ <|@
      nr  142  <|@ instruction stack:92|DWORD[.] = STACKMOVE (input: stack:72|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B13 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr  478  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611836033447576369
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction MOV [rdx|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV [rdx|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  524  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  526  <|@ instruction J (address: [rdx|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  528  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  536  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1414  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1416  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction JUMP ~[] destination: B127 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610448773953234941
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr  190  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.06260270999348858 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [rax:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: stack:40|QWORD[.] rax|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:16] <|@ <|@
      nr  214  <|@ instruction CMP stack:56|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607388834826600208
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:68|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609124534507953462
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  154  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B14" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609905014042314416
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr 1498  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B44" "B135" 
    successors "B137" "B148" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1508  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r14:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: rsi|QWORD[.] r14|QWORD[.] r14|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3, 16] <|@ <|@
      nr 1510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B138" "B147" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1516  <|@ instruction CMP (x: rdx|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1518  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B137 -> B138 falseDestination: B137 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1524  <|@ instruction r10|DWORD[.] = MOV [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1528  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1530  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B138 -> B139 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B145" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610482715506959680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1538  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 0.07804910062743042 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609873628416676867
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction JUMP ~[] destination: B145 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" "B145" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610740728009378285
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1644  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1648  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1650  <|@ instruction MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1652  <|@ st <@st|@reference-map: [rsi:0, r10:0, r14:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r13|DWORD r14|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - r10|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 43, 35, 3, 16] <|@ <|@
      nr 1654  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction JUMP ~[] destination: B146 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608652596548061998
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B105 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607349218909980788
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B30 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B30" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction CMP stack:96|DWORD y: -1 size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604813664394900063
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD <|@ <|@
      nr  392  <|@ instruction stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  560  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r10|DWORD = SHR r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  564  <|@ instruction CMP r10|DWORD y: 9 size: DWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.7308974300032183 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603025262025585884
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r13|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B60" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  582  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction r10|DWORD = SHR r14|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP r11|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r9|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  614  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  616  <|@ instruction CMP r9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604147382058228885
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction rbp|DWORD = SHL r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = LEA [rbp|DWORD + 23] size: DWORD <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND rbp|DWORD y: -8 size: DWORD <|@ <|@
      nr  630  <|@ instruction rbp|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  632  <|@ instruction r13|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604087660433099360
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  654  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  656  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  658  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  660  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction MOV [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  666  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  716  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4612159220894144465
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  976  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B97 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B97" 
    successors "B70" "B97" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4613818154925520151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  724  <|@ instruction r11|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  726  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  734  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  746  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  748  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD <|@ <|@
      nr  750  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  758  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  770  <|@ instruction J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  772  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  774  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  782  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B77" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction TEST r13|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r9|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r9|DWORD = SHL r9|DWORD y: 2 size: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4600307356043408663
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  970  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B96 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B96" 
    successors "B83" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4604810955670779159
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  838  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B82 -> B83 falseDestination: B82 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" "B134" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603322257346962535
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [stack:48, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr  444  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600843777383834340
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction stack:92|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B80 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B80" "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[*] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction rdi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  862  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  868  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  872  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  882  <|@ instruction CMP stack:68|DWORD y: 512 size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.9922845270333365 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604759757828088930
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction CMP stack:72|DWORD y: 512 size: DWORD <|@ <|@
      nr  890  <|@ instruction BRANCH trueDestinationProbability: 0.9926008704858252 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604711037976543358
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B86" 
    successors "B90" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction CMP stack:68|DWORD y: 131072 size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction CMP stack:72|DWORD y: 131073 size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B90 -> B91 falseDestination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B87" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B92 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1070  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1072  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599669226066856306
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" 
    successors "B111" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1134  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1140  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1148  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1150  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1156  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1158  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1160  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1162  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595773996197861255
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1218  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1220  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr 1226  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594107066116622430
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r11|DWORD = SETCC condition: > <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1244  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B115 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599450824147292649
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r14|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rdx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r13|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  408  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B44 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598507691754327632
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr 1340  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction JUMP ~[] destination: B122 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596310794871308524
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596104817032146771
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction JUMP ~[] destination: B139 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595803756416038167
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595411856565423060
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1488  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594678420441695221
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1170  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr 1172  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr 1176  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1178  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1180  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr 1182  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1184  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594426821259161436
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: rsi|QWORD[.] stack:88|QWORD[.] - - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr 1206  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction JUMP ~[] destination: B113 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction r9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1546  <|@ instruction rbx|QWORD = LEA [r9|QWORD + 24] size: QWORD <|@ <|@
      nr 1548  <|@ instruction CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1550  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593991990045575300
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1590  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1592  <|@ instruction AMD64PREFETCH ~[r9|QWORD + 216] instr: 0 <|@ <|@
      nr 1594  <|@ instruction r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1602  <|@ instruction rdi|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD <|@ <|@
      nr 1606  <|@ instruction MOV (x: [r9|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1608  <|@ instruction MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1610  <|@ instruction rbx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1612  <|@ instruction MOV (x: [r9|QWORD[*] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1614  <|@ instruction MOV (x: [r9|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1616  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1618  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1620  <|@ instruction rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1622  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1624  <|@ instruction MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1626  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1628  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r13|DWORD rdi|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - rdx|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 34, 35, 3, 16] <|@ <|@
      nr 1630  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~[] destination: B144 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589973009563567121
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590450782564603319
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  700  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@reference-map: [stack:24, stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:96|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: stack:72|DWORD 
locals: stack:40|QWORD[.] stack:68|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3, 16] <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1266  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1276  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B117 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581674016104257750
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  488  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr  492  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581649141077200264
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4574701195994764050
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr 1192  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~[] destination: B112 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574294390170262111
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4573203346018032255
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572886163151516119
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3, 16] <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569900903203743257
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction stack:96|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction stack:116|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction stack:120|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1092  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1094  <|@ st <@st|@reference-map: [r13:0, stack:32, stack:36, stack:40, stack:56, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: stack:40|QWORD[.] r14|DWORD stack:88|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3, 16] <|@ <|@
      nr 1096  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction rdi|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1104  <|@ instruction r9|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction r11|DWORD = MOVE stack:120|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1110  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563879874703437959
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1554  <|@ instruction stack:92|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1556  <|@ instruction stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1558  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction stack:116|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1564  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1566  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1568  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:36, stack:48, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:40|QWORD[.] r14|QWORD[.] r14|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr 1570  <|@ instruction r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1572  <|@ instruction r11|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r10|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1578  <|@ instruction rdx|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1582  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction JUMP ~[] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606209578348434066
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4592447144275831689
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-289819|0xfffffffffffb93e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~[] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" "B130" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1480  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:116, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction r10|DWORD = MOVE input: int[-323937|0xfffffffffffb0e9f] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B61 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B61" "B98" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [r8:0, stack:80, stack:88]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r13|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: r11|DWORD 
locals: stack:40|QWORD[.] r14|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] r8|QWORD[.] r8|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1452  <|@ instruction r10|DWORD = MOVE input: int[-292379|0xfffffffffffb89e5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction MOV [r15|QWORD + 668] y: -273179 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
locals: stack:48|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  950  <|@ instruction r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [rax:0, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: stack:40|QWORD[.] stack:68|DWORD - rax|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:73, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r15|QWORD + 668] y: -275260 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [r9:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: r9|DWORD[.] rcx|DWORD 
locals: stack:48|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@679821561] <|@ <|@
      nr 1468  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction r10|DWORD = MOVE input: int[-288828|0xfffffffffffb97c4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 668] y: -271883 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1672  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1563345318] <|@ <|@
      nr 1674  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction r10|DWORD = MOVE input: int[-384316|0xfffffffffffa22c4] <|@ <|@
      nr 1678  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:40|QWORD[.] r14|QWORD[.] r14|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1666  <|@ instruction r10|DWORD = MOVE input: int[-331035|0xfffffffffffaf2e5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r10|DWORD = MOVE input: int[-311315|0xfffffffffffb3fed] <|@ <|@
      nr 1438  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B118" "B128" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1442  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: stack:40|QWORD[.] stack:88|QWORD[.] - - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:140, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r10|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed] <|@ <|@
      nr 1290  <|@ instruction JUMP ~[] destination: B118 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B46" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 668] y: -281883 size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  424  <|@ st <@st|@reference-map: [rcx:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:40|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r10|DWORD = MOVE input: int[-328467|0xfffffffffffafced] <|@ <|@
      nr  946  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r10|DWORD = MOVE input: int[-314899|0xfffffffffffb31ed] <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction MOV [r15|QWORD + 668] y: -277564 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@reference-map: [r10:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: stack:40|QWORD[.] r10|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
     6: ifeq          25
     9: aload_0       
    10: aload_1       
    11: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    16: invokeinterface#5, 2       // add:(java.lang.Object)boolean
    21: pop           
    22: goto          0
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6bb4ddc1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] Object[null] 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   16  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   20  <|@ instruction stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B144" "B112" "B113" "B117" "B115" "B123" "B146" "B122" "B125" "B127" 
    successors "B2" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4625182039524689422
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed} <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.8919930131365436 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4624210795177115918
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.9373972900065114 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   80  <|@ instruction rbp|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD[.] = MOV [rbx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.028896981087748186 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B6" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4600831387884041749
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: r9|DWORD[.] rcx|DWORD 
locals: rdx|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:15, 11] <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B8 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors "B7" "B17" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4623932390500860310
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623708647751918565
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621051920458862841
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B11" 
    successors "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621640672415607003
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B39" "B32" "B36" 
    successors "B28" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4626232167182356221
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  256  <|@ instruction r11|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  258  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4622290340935998337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  272  <|@ instruction CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4621706540968831603
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  288  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4621555774077785386
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: rsi|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  296  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B32 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598496160431384868
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  308  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4596032792737196678
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3, 16] <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B42" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4598492879660152262
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4598061549816431067
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3, 16] <|@ <|@
      nr  366  <|@ instruction r10|DWORD = INC stack:96|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B39 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590233037823758211
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4590219914738827788
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3, 16] <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4550851043501207184
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [stack:48, stack:60, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:96|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16] <|@ <|@
      nr  334  <|@ instruction r10|DWORD = INC stack:96|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B36 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621166794173973113
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" "B49" "B13" 
    successors "B51" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r13|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  468  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622481684559997218
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  548  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  552  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622066951052153297
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B92" "B100" "B54" 
    successors "B102" "B132" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [r10:0, r13:0, stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: r10|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: r10|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3, 16] <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B131" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1020  <|@ instruction rsi|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr 1022  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B130" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction r9|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1030  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B120" "B106" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623656839774027259
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1038  <|@ instruction MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1044  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1046  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1048  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1050  <|@ instruction rbp|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B120 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B120" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622910117602100373
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1064  <|@ instruction BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B104" "B106" 
    successors "B121" "B124" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623467521398113421
    begin_IR
      LIR
      nr 1296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1300  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1302  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1304  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1306  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1310  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" "B126" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4619621997619512517
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1366  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr 1370  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr 1374  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617619458914403459
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1380  <|@ instruction r11|DWORD = SETCC condition: > <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1392  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1394  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction JUMP ~[] destination: B125 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618305845921973333
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1318  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr 1320  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1322  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr 1324  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1328  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr 1330  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1332  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4618003591432196976
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1352  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: rsi|QWORD[.] stack:88|QWORD[.] - - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr 1354  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1356  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1358  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction JUMP ~[] destination: B123 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4616999473013499352
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr  134  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4614586470304587029
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD <|@ <|@
      nr  142  <|@ instruction stack:92|DWORD[.] = STACKMOVE (input: stack:72|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B13 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  476  <|@ instruction r10|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr  478  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611836033447576369
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  512  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611883039656137571
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction MOV [rdx|QWORD[*] + 12] y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction MOV [rdx|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  524  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  526  <|@ instruction J (address: [rdx|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  528  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  532  <|@ instruction rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  536  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1406  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610688973993083145
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr 1412  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1414  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1416  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1428  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1432  <|@ instruction JUMP ~[] destination: B127 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610448773953234941
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1] <|@ <|@
      nr  190  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.06260270999348858 condition: = trueDestination: B19 -> B22 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B150" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr  212  <|@ st <@st|@reference-map: [rax:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: stack:40|QWORD[.] rax|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:16] <|@ <|@
      nr  214  <|@ instruction CMP stack:56|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609962353727443268
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607388834826600208
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:68|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B48" "B12" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609905014042314416
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1484  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1488  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1496  <|@ instruction rdx|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr 1498  <|@ instruction r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1500  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1502  <|@ instruction JUMP ~[] destination: B135 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B44" "B135" 
    successors "B137" "B148" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1508  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r14:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: rsi|QWORD[.] r14|QWORD[.] r14|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3, 16] <|@ <|@
      nr 1510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B138" "B147" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1514  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1516  <|@ instruction CMP (x: rdx|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr 1518  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B137 -> B138 falseDestination: B137 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B146" "B140" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611349815099661098
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1524  <|@ instruction r10|DWORD[.] = MOV [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1528  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1530  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B138 -> B146 falseDestination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B138" 
    successors "B141" "B146" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610482715506959680
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1538  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 0.07804910062743042 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B138" "B140" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610740728009378285
    begin_IR
      LIR
      nr 1642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1644  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1646  <|@ instruction rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1648  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1650  <|@ instruction MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1652  <|@ st <@st|@reference-map: [rsi:0, r10:0, r14:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r13|DWORD r14|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - r10|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 43, 35, 3, 16] <|@ <|@
      nr 1654  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1658  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction JUMP ~[] destination: B146 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607349218909980788
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B30 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" "B30" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607442842654805418
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction CMP stack:96|DWORD y: -1 size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604813664394900063
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD <|@ <|@
      nr  392  <|@ instruction stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B43 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  560  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r10|DWORD = SHR r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  564  <|@ instruction CMP r10|DWORD y: 9 size: DWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 0.7308974300032183 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603025262025585884
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r13|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B60" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  582  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction r10|DWORD = SHR r14|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction CMP r11|DWORD y: 1073741824 size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r9|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  614  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  616  <|@ instruction CMP r9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604147382058228885
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction rbp|DWORD = SHL r11|DWORD y: 3 size: DWORD <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = LEA [rbp|DWORD + 23] size: DWORD <|@ <|@
      nr  628  <|@ instruction rbp|DWORD = AND rbp|DWORD y: -8 size: DWORD <|@ <|@
      nr  630  <|@ instruction rbp|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  632  <|@ instruction r13|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604087660433099360
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  654  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  656  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  658  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  660  <|@ instruction MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction MOV [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  664  <|@ instruction MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  666  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  672  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  712  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  714  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  716  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4612159220894144465
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  976  <|@ instruction r10|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B97 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B97" 
    successors "B70" "B97" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4613818154925520151
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  724  <|@ instruction r11|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  726  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B73" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  734  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  744  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  746  <|@ instruction J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  748  <|@ instruction rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD <|@ <|@
      nr  750  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B70" 
    successors "B76" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  758  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B76 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  770  <|@ instruction J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  772  <|@ instruction rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  774  <|@ instruction r11|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B73" 
    successors "B79" "B78" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  780  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  782  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  784  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B79 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603152021639403473
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B76" 
    successors "B84" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction TEST r13|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B79 -> B84 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600307356043408663
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r9|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r9|DWORD = SHL r9|DWORD y: 2 size: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 2
    probability 4600307356043408663
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  970  <|@ instruction MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B96 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B96" 
    successors "B84" "B96" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 2
    probability 4604810955670779159
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  838  <|@ instruction CMP rsi|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B82 -> B84 falseDestination: B82 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B49" "B135" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603322257346962535
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [stack:48, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:80|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16] <|@ <|@
      nr  444  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600843777383834340
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction stack:92|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B79" "B82" 
    successors "B85" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction rdx|QWORD[*] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction rdi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  860  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  862  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  868  <|@ instruction rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  872  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  882  <|@ instruction CMP stack:68|DWORD y: 512 size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 0.9922845270333365 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604759757828088930
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction CMP stack:72|DWORD y: 512 size: DWORD <|@ <|@
      nr  890  <|@ instruction BRANCH trueDestinationProbability: 0.9926008704858252 condition: < trueDestination: B85 -> B89 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B84" "B85" 
    successors "B90" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction CMP stack:68|DWORD y: 131072 size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604762235819233587
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction CMP stack:72|DWORD y: 131073 size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B90 -> B92 falseDestination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" "B87" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604810955670779159
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B92 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B108" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1068  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1070  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1072  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599669226066856306
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1122  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" 
    successors "B111" "B114" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599729807947148734
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1132  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1134  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1136  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr 1138  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1140  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1142  <|@ instruction rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1148  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1150  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1152  <|@ instruction rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1156  <|@ instruction MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1158  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1160  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1162  <|@ instruction BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595773996197861255
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1218  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1220  <|@ instruction rsi|DWORD = SAR rbp|DWORD size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction CMP r11|DWORD y: 512 size: DWORD <|@ <|@
      nr 1226  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594107066116622430
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r11|DWORD = SETCC condition: > <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1244  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B115 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B136" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599450824147292649
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r14|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rdx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction r13|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  408  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B44 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598507691754327632
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr 1340  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction JUMP ~[] destination: B122 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596310794871308524
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r13|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594678420441695221
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1170  <|@ instruction CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr 1172  <|@ instruction rcx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr 1176  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1178  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr 1180  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: = <|@ <|@
      nr 1182  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1184  <|@ instruction BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594426821259161436
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: rsi|QWORD[.] stack:88|QWORD[.] - - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16] <|@ <|@
      nr 1206  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction JUMP ~[] destination: B113 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction r9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1546  <|@ instruction rbx|QWORD = LEA [r9|QWORD + 24] size: QWORD <|@ <|@
      nr 1548  <|@ instruction CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1550  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593991990045575300
    begin_IR
      LIR
      nr 1588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1590  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1592  <|@ instruction AMD64PREFETCH ~[r9|QWORD + 216] instr: 0 <|@ <|@
      nr 1594  <|@ instruction r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B142" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594040717012797925
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1602  <|@ instruction rdi|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD <|@ <|@
      nr 1606  <|@ instruction MOV (x: [r9|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr 1608  <|@ instruction MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1610  <|@ instruction rbx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1612  <|@ instruction MOV (x: [r9|QWORD[*] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1614  <|@ instruction MOV (x: [r9|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1616  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3 <|@ <|@
      nr 1618  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1620  <|@ instruction rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1622  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1624  <|@ instruction MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1626  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1628  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] r13|DWORD rdi|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
locals: - - - - rdx|DWORD[.] - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 34, 35, 3, 16] <|@ <|@
      nr 1630  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1632  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1634  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~[] destination: B144 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589973009563567121
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590450782564603319
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  700  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@reference-map: [stack:24, stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:96|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: stack:72|DWORD 
locals: stack:40|QWORD[.] stack:68|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3, 16] <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction CMP r11|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586828541360749732
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1266  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16] <|@ <|@
      nr 1276  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction JUMP ~[] destination: B117 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581674016104257750
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  488  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: int[-1|0xffffffffffffffff] 
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr  492  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  496  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4574701195994764050
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
locals: - - - - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16] <|@ <|@
      nr 1192  <|@ instruction r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction JUMP ~[] destination: B112 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4574294390170262111
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572886163151516119
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3, 16] <|@ <|@
      nr  902  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B110" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4569900903203743257
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction stack:96|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1084  <|@ instruction stack:116|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction stack:120|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1092  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1094  <|@ st <@st|@reference-map: [r13:0, stack:32, stack:36, stack:40, stack:56, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9]
locals: stack:40|QWORD[.] r14|DWORD stack:88|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3, 16] <|@ <|@
      nr 1096  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction rdi|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1104  <|@ instruction r9|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction r11|DWORD = MOVE stack:120|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B144" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563879874703437959
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1554  <|@ instruction stack:92|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1556  <|@ instruction stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1558  <|@ instruction stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction stack:116|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1564  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1566  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1568  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:36, stack:48, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:40|QWORD[.] r14|QWORD[.] r14|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16] <|@ <|@
      nr 1570  <|@ instruction r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1572  <|@ instruction r11|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1574  <|@ instruction r10|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1578  <|@ instruction rdx|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr 1580  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1582  <|@ instruction r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1584  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction JUMP ~[] destination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017410
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1460  <|@ instruction r10|DWORD = MOVE input: int[-289819|0xfffffffffffb93e5] <|@ <|@
      nr 1462  <|@ instruction JUMP ~[] destination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" "B131" "B130" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1474  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1476  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1478  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1480  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:116, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction r10|DWORD = MOVE input: int[-323937|0xfffffffffffb0e9f] <|@ <|@
      nr  608  <|@ instruction JUMP ~[] destination: B61 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B61" "B98" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [r8:0, stack:80, stack:88]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: r13|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
stack: r11|DWORD 
locals: stack:40|QWORD[.] r14|DWORD - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] r8|QWORD[.] r8|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:10, 14, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1452  <|@ instruction r10|DWORD = MOVE input: int[-292379|0xfffffffffffb89e5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B130 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction MOV [r15|QWORD + 668] y: -273179 size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0]
locals: stack:48|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  950  <|@ instruction r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [rax:0, stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
locals: stack:40|QWORD[.] stack:68|DWORD - rax|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
locals: stack:40|QWORD[.] stack:88|QWORD[.] stack:88|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:73, 79, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOV [r15|QWORD + 668] y: -275260 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [r9:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15]
stack: r9|DWORD[.] rcx|DWORD 
locals: stack:48|QWORD[.] - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:15, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@679821561] <|@ <|@
      nr 1468  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction r10|DWORD = MOVE input: int[-288828|0xfffffffffffb97c4] <|@ <|@
      nr 1472  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction MOV [r15|QWORD + 668] y: -271883 size: DWORD <|@ <|@
      nr   58  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1672  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1563345318] <|@ <|@
      nr 1674  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1676  <|@ instruction r10|DWORD = MOVE input: int[-384316|0xfffffffffffa22c4] <|@ <|@
      nr 1678  <|@ instruction JUMP ~[] destination: B148 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19]
stack: r13|DWORD 
locals: stack:40|QWORD[.] r14|QWORD[.] r14|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:19, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B149" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1666  <|@ instruction r10|DWORD = MOVE input: int[-331035|0xfffffffffffaf2e5] <|@ <|@
      nr 1668  <|@ instruction JUMP ~[] destination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r10|DWORD = MOVE input: int[-311315|0xfffffffffffb3fed] <|@ <|@
      nr 1438  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B118" "B128" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1442  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1446  <|@ st <@st|@reference-map: [stack:40, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140]
locals: stack:40|QWORD[.] stack:88|QWORD[.] - - r14|DWORD - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:140, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B129" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1288  <|@ instruction r10|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed] <|@ <|@
      nr 1290  <|@ instruction JUMP ~[] destination: B118 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOV [r15|QWORD + 668] y: -281883 size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  424  <|@ st <@st|@reference-map: [rcx:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:40|QWORD[.] rcx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
locals: stack:40|QWORD[.] rcx|QWORD[.] rcx|QWORD[.] - - - 
org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
locals: - - 
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:2, 15, 16, 3, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B95" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r10|DWORD = MOVE input: int[-328467|0xfffffffffffafced] <|@ <|@
      nr  946  <|@ instruction JUMP ~[] destination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B99" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r10|DWORD = MOVE input: int[-314899|0xfffffffffffb31ed] <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1690  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1692  <|@ instruction MOV [r15|QWORD + 668] y: -277564 size: DWORD <|@ <|@
      nr 1694  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1696  <|@ st <@st|@reference-map: [r10:0, stack:80, stack:88]
live-base-pointers: []
org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16]
stack: stack:40|QWORD[.] r10|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
     6: ifeq          25
     9: aload_0       
    10: aload_1       
    11: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
    16: invokeinterface#5, 2       // add:(java.lang.Object)boolean
    21: pop           
    22: goto          0
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c247048897424584889542450448b5208448954244c448b5e0844895c244849b800e01b17010000004c89442440c5f9efc0904181faaddeadde0f8511040000448b4a10468b0ccd0c0000008b4a0c443bc90f8e4f0b0000448b4a14428b1ccd1800000085db0f84080c00008b3cdd0c00000048c1e303e9220000000f1f80000000008be9ffc5896a0c8b44831085c00f85150000008505000000008bcd8bc1d1e03bf877dde9670b00004181fbaddeadde0f858c0b0000448b4e1c8bc848c1e1034585c90f858f0200008944243c48894c243041ba00000000660f1f840000000000443b560c0f8df20000008b5618458bda41d1e3443b1cd50c0000000f83e30b000048c1e203428b549a10418504d4448bc249c1e0034c3bc10f8431040000448b4e204585c90f850b00000085050000000041ffc2ebaa4181f9addeadde44895c243844895424200f853d000000488bf1498bd048b8ffffffffffffffff6690e8000000009085c00f85ec030000850500000000448b54242041ffc2488b4c2430488b742458e956ffffff4181f9addeadde0f842800000049c1e103498bf1488b542430498bc848b8ffffffffffffffff0f1f8000000000e80000000090eba6850500000000448b54242041ffc2488b4c2430488b742458e904ffffff48894c242848894424608b44243c89442424488b442460448b6e0c8b561885d20f849a010000448b34d50c000000458bd541d1e248c1e203453bf20f846d030000458bf54c8bea4c8b4424404c8bd641817d08addeadde0f85200a0000458b5d0c418bf6d1e6443bde0f866c090000448bce41ffc1453bd90f86a30900008b5c242441895cb510498d74b51048c1ee0946882406438b7c8d10418b421c418beeffc585ff0f8411000000813cfd08000000addeadde0f846d05000043895c8d104b8d748d1048c1ee094688240641896a0c85c00f8459000000448b0cc50c000000412b6a108bf5d1fe03f54181fb000200000f832e010000413bf1410f9fc3450fb6db498bf2488b542428418bce458bc36690e80000000090448b5c2448448b54244c488b542450488b742458e922fdffff498bf28b562081faaddeaddeb90800000041b804000000440f44c185d2ba08000000440f44c2413be80f8fba050000850500000000448b5c2448448b54244c488b542450e9d9fcffff894424384c8bce488bd148894c243090e8000000009083f8ff0f854201000048ff742430488f44242848894424608b44243889442424488b442460488b742458e957feffff498b57604c8d52304d3b57700f87c80600004d8957600f1882f0000000c5f9efc04c8b4424404c8bd2c7420c0800000048c70201000000c74208addeaddec5fe7f4210498bd248c1ea03895618488bd648c1ea0946882402458bf54d8bea4c8bd6e929feffff4181fb000002000f83b308000041d1e9413bf1410f9fc0450fb6c0498bf2488b542428418bce0f1f8000000000e80000000090448b5c2448448b54244c488b542450488b742458e9e2fbffff488b74245048b8ffffffffffffffff6690e8000000009085c00f8437070000488b74245048b8ffffffffffffffff666690e800000000908500817c2448addeadde0f8585080000488b7424588b561c85d20f8586020000488bd048c1ea03488bc88954243ce914fcffff488b4c2430c5f9efc04c8b442440488b7424588bd0d1e24c8bf1448be88b4e18813ccd08000000addeadde0f85a0070000ffc23b14cd0c0000000f83b807000048c1e103448b5491104d8bde49c1eb034585d20f841200000042813cd508000000addeadde0f844c04000044895c9110488d54911048c1ea0946882402850500000000448b5c2448448b54244c488b542450e9e1faffff44895c24384489542420837c2420ff0f857203000048ff742430488f44242848894424608b44243c89442424488b442460488b742458e969fcffffc5f9efc04c8b442440458bd641c1ea024183fa090f837a03000041bd08000000448974243c458bd641d1ea458bda4503dd4181fb000000400f833f070000458bcb41d1e1453bf10f8f04060000498b5f60498b7f704181f9ffffff000f830b04000044896c2420418bebc1e5038d6d1783e5f84863ed4c8bed4c03eb4c3bef0f87bf0400004d896f600f18841dc00000000f18841d000100000f18841d400100000f18841d8001000044894b0c48c70301000000c74308addeadde488bc3458beb4889542418458bf1488d78104963f6488d56f8c5f9efc049c7c200000000e90500000066904d8bd3c4a17e7f04974d8d5a084c3bda7eee488d56fc4c3bda0f8f12000000c5f9efc0c4a17a7f449720498d520c4c8bda488d56fe4c3bda0f8f11000000c5f9efc0c4a1f97e049f498d53024c8bda48ffce4c3bde0f8f040000004689249f41f7c5ffffff7f0f8489000000458bce41ffc941c1e1024963f9488d70104803f748c1ee09488d781048c1ef09482bf748ffc64c8b442440e9130000000f1f400048ffce488bd74903d04803d64488224883fe010f8c3c000000ebe5488bd048894424300f1f4000e8000000009083f8ff0f8572fdffff4c8b542430498bc248c1e8034c8954242889442424488b742458e98efaffff4489742438448b74243c488b5424184c8bd0458bde488d7a10498d7210498bd34889442410e80000000090488b442410488bf048c1ee034c8b54245841897218498bf248c1ee094c8b44244046882406817c243c000200000f830e000000817c2438000200000f8d0f030000817c243c000002000f8348040000817c2438010002000f8d0f050000418b720c418b521848c1e203448bf64c8beae927faffff498b7760488d5618493b57700f87e6020000498957600f1886d80000004c8b4424404c8b54245848baaddeaddeaddeadde488bce488b92a8000000488916c74608addeadde8b14fd0c00000089560c895e1048c1e90343894c8d104b8d748d1048c1ee094688240641896a0c85c00f84ae000000448b0cc50c000000412b6a108bf5d1fe03f54181fb000200000f8395010000413bf1410f9fc3450fb6db498bf2488b542428418bce458bc30f1f8000000000e80000000090448b5c2448448b54244c488b542450488b742458e95af7ffff4c8b7424308b542438448b6c2420c5f9efc04c8b442440488b742458e9defbffff488b742458666690e80000000090448b5c2448448b54244c488b542450488b742458e912f7ffff458beae984fcffff498bf28b562081faaddeaddeb90800000041b804000000440f44c185d2ba08000000440f44c2413be80f8f51010000850500000000448b5c2448448b54244c488b542450e9c1f6ffff4d8b4f60498d5918493b5f700f87cd01000049895f60410f1881d800000048bbaddeaddeaddeadde498bf9488b9ba800000049891941c74108addeadde428b1cd50c0000004189590c458959104c8bdf49c1eb0344895c9110488d54911048c1ea0946882402428b14d510000000850500000000448b5c2448448b54244c488b542450e939f6ffff448954243844896c24204889542418458beb49bbaddeaddeaddeadde498bf3418bd1b900000000458bf1e80000000090e927fcffff4181fb000002000f83a302000041d1e9413bf1410f9fc0450fb6c0498bf2488b542428418bce0f1f440000e80000000090448b5c2448448b54244c488b542450488b742458e9baf5ffff48beaddeaddeaddeaddeba08000000b901000000e80000000090488bd0c5f9efc04c8b442440488b742458e91cf9ffff488b7424580f1f4000e80000000090448b5c2448448b54244c488b542450488b742458e962f5ffff458beb44895424384889542418e929ffffff488b7424586690e800000000904c8b4424404c8b542458e9f1fcffff896c243c89442438897c242044894c240c44895c240848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf08b6c243c8b4424388b7c2420448b4c240c448b5c24088b5c2424e9d3fcffff44895c2424448954240848894c24308954240c48beaddeaddeaddeaddeba02000000b901000000e800000000904c8bc8448b5c2424448b542408488b4c24308b54240cc5f9efc04c8b442440488b742458e9e9fdffff488b6c24704883c478850500000000c5f877c349bb000000000000000041bae593fbff4589979c0200004d899fa8020000e80000000090458bda4c8b44242841ba9f0efbff4589979c0200004d89a7a8020000e8000000009049bb000000000000000041bae589fbffebb841c7879c020000e5d4fbff4d89a7a8020000e8000000009041baedfdfaff4589979c0200004d89a7a8020000e8000000009041c7879c020000c4ccfbff4d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41bac497fbffe956ffffff41c7879c020000f5d9fbff4d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41bac422faff4589979c0200004d899fa8020000e8000000009049bb000000000000000041bae5f2faffebda41baed3ffbff4589979c0200004d89a7a8020000e8000000009041baed5ffbffebe441c7879c020000e5b2fbff4d89a7a8020000e8000000009041baedfcfaffe926ffffff458bda4c8b44242841baed31fbffe9cffeffff4c8bd041c7879c020000c4c3fbff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6bb4ddc1 slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |Object[null]   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 12 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 67 14 r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 71 16 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 76 18 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 86 20 stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 91 22 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 95 24 JUMP ~[] destination: B0 -> B1  <||@
  Comment 95 block B1 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 95 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 28 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}  <||@
  Comment 96 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}}  <||@
  Comment 103 30 BRANCH trueDestinationProbability: 0.8919930131365436 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B19  <||@
  Comment 109 block B2 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 109 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 34 r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 113 36 r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 113 [rdx:0, rsi:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 121 38 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 124 40 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 127 42 BRANCH trueDestinationProbability: 0.9373972900065114 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B22  <||@
  Comment 133 block B3 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 133 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 46 r9|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 137 48 rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 137 [rdx:0, rsi:0, r9:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 145 50 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 147 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 153 block B5 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 153 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 64 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 160 66 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 164 68 JUMP ~[] destination: B5 -> B6  <||@
  Comment 169 block B7 loop 1 depth 2 outer 0 header:77|LoopBegin  <||@
  Comment 169 78 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 176 80 rbp|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 180 82 MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 183 84 rax|DWORD[.] = MOV [rbx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 187 86 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 189 88 BRANCH trueDestinationProbability: 0.028896981087748186 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 195 block B8 loop 1 depth 2 outer 0 header:77|LoopBegin  <||@
  Comment 195 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 92 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:15, 11]  <||@
  Comment 195 [rdx:0, rbx:0, rsi:0, r9:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdx|QWORD[.]  |-         
     stack:   |r9|DWORD[.]   |rcx|DWORD 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |               <||@
  Comment 195 {infopoint: SAFEPOINT}  <||@
  Comment 195 11  <||@
  Comment 201 94 rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 203 96 JUMP ~[] destination: B8 -> B6  <||@
  Comment 203 block B6 loop 1 depth 2 outer 0 header:77|LoopBegin  <||@
  Comment 203 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 203 72 rax|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 207 74 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 209 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B17  <||@
  Comment 216 block B9 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 216 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 100 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}  <||@
  Comment 216 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 223 102 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 229 block B10 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 229 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 106 r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 233 108 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 239 110 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 242 112 BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 248 block B11 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 248 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 116 stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 252 118 JUMP ~[] destination: B11 -> B26  <||@
  Comment 252 block B26 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 252 238 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 252 240 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 257 242 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 263 244 JUMP ~[] destination: B26 -> B27  <||@
  Comment 263 block B27 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 263 246 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 272 248 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 276 250 BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B47  <||@
  Comment 282 block B28 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 282 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 254 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 285 256 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 291 258 CMP (x: r11|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3, 16]  <||@
  Comment 291 [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 291 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 299 260 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B46  <||@
  Comment 305 block B29 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 305 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 305 264 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 309 266 rdx|DWORD[.] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 314 268 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:2, 15, 16, 3, 16]  <||@
  Comment 314 [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 314 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 318 270 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 325 272 CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 328 274 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 334 block B31 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 334 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 286 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 338 288 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 341 290 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 347 block B32 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 347 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 294 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16]  <||@
  Comment 347 [rcx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 347 {infopoint: SAFEPOINT}  <||@
  Comment 347 11  <||@
  Comment 353 296 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 356 298 JUMP ~[] destination: B32 -> B27  <||@
  Comment 358 block B33 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 358 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 302 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 358 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 365 308 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 370 310 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 375 304 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 381 block B34 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 381 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 312 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 384 314 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 387 316 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3, 16]  <||@
  Comment 387 7  <||@
  Comment 399 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 404 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 405 318 JUMP ~[] destination: B34 -> B38  <||@
  Comment 405 block B38 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 405 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 405 358 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 407 360 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 413 block B39 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 413 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 364 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3, 16]  <||@
  Comment 413 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 413 {infopoint: SAFEPOINT}  <||@
  Comment 413 11  <||@
  Comment 419 366 r10|DWORD = INC stack:96|DWORD size: DWORD  <||@
  Comment 427 368 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 432 370 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 437 372 JUMP ~[] destination: B39 -> B27  <||@
  Comment 442 block B35 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 442 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 326 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 442 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 449 328 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 455 block B37 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 455 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 344 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 459 346 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 462 348 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 467 350 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 470 352 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3, 16]  <||@
  Comment 470 7  <||@
  Comment 487 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 492 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 493 354 JUMP ~[] destination: B37 -> B38  <||@
  Comment 495 block B36 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 495 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 495 332 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16]  <||@
  Comment 495 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 495 {infopoint: SAFEPOINT}  <||@
  Comment 495 11  <||@
  Comment 501 334 r10|DWORD = INC stack:96|DWORD size: DWORD  <||@
  Comment 509 336 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 514 338 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 519 340 JUMP ~[] destination: B36 -> B27  <||@
  Comment 524 block B47 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 524 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 428 stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 529 430 stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 547 432 JUMP ~[] destination: B47 -> B50  <||@
  Comment 547 block B50 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 547 462 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 547 464 r13|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 551 466 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 554 468 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 556 470 BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 562 block B55 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 562 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 546 r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 570 548 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 576 550 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 580 552 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 583 554 BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B100  <||@
  Comment 589 block B100 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 589 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 1000 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 592 1002 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 595 1004 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 600 1006 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 603 1008 JUMP ~[] destination: B100 -> B101  <||@
  Comment 603 block B101 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 603 1010 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 603 1012 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3, 16]  <||@
  Comment 603 [r10:0, r13:0, stack:36, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4          |5 
     locals:  |r10|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r10|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 603 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 603 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 611 1014 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B132  <||@
  Comment 617 block B102 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 617 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 617 1018 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 621 1020 rsi|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 626 1022 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 629 1024 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B131  <||@
  Comment 635 block B103 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 635 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 635 1028 r9|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 641 1030 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 644 1032 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B130  <||@
  Comment 650 block B104 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 650 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 1036 rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 654 1038 MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 659 1040 rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 664 1042 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 668 1044 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 672 1046 rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 677 1048 rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 681 1050 rbp|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 686 1052 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 688 1054 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B120 falseDestination: B104 -> B106  <||@
  Comment 694 block B106 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 694 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 1062 CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 694 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 705 1064 BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B120  <||@
  Comment 711 block B120 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 711 1296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 1298 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 716 1300 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 721 1302 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 725 1304 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 729 1306 MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 733 1308 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 735 1310 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B124  <||@
  Comment 741 block B124 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 741 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 1364 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 749 1366 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD  <||@
  Comment 753 1368 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 757 1370 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 759 1372 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 766 1374 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B126  <||@
  Comment 772 block B125 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 772 1376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 1378 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 775 1380 r11|DWORD = SETCC condition: >  <||@
  Comment 783 1382 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 786 1384 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 791 1386 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 794 1388 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 797 1390 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 797 9  <||@
  Comment 799 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 804 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 805 1392 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 810 1394 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 815 1396 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 820 1398 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 825 1400 JUMP ~[] destination: B125 -> B1  <||@
  Comment 830 block B121 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 830 1312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 830 1314 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 833 1316 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 836 1318 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 836 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 842 1320 rcx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 847 1322 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 857 1324 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 859 1326 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 864 1328 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 868 1330 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 871 1332 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123  <||@
  Comment 877 block B123 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 877 1350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 1352 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16]  <||@
  Comment 877 [rsi:0, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4          |5 
     locals:  |rsi|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 877 {infopoint: SAFEPOINT}  <||@
  Comment 877 11  <||@
  Comment 883 1354 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 888 1356 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 893 1358 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 898 1360 JUMP ~[] destination: B123 -> B1  <||@
  Comment 903 block B12 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 903 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 122 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 907 124 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 910 128 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 913 130 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 918 132 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16]  <||@
  Comment 918 9  <||@
  Comment 919 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 924 [stack:48, stack:56, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 925 134 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 928 136 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B135  <||@
  Comment 934 block B13 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 934 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 140 stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD  <||@
  Comment 944 142 stack:92|DWORD[.] = STACKMOVE (input: stack:72|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 962 144 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 967 146 JUMP ~[] destination: B13 -> B50  <||@
  Comment 972 block B51 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 972 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 972 474 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 976 476 r10|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 980 478 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 984 480 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 990 block B53 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 990 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 504 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 994 506 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 1001 508 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1001 510 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1005 512 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1010 514 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1010 block B54 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1010 516 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1010 518 r10|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1013 520 MOV [rdx|QWORD[*] + 12] y: 8 size: DWORD  <||@
  Comment 1020 522 MOV [rdx|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1027 524 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1027 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1034 526 J (address: [rdx|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1039 528 rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1046 530 MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1049 532 rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1056 534 MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1060 536 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1063 538 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1066 540 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1069 542 JUMP ~[] destination: B54 -> B101  <||@
  Comment 1074 block B126 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1074 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1074 1404 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 1081 1406 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B128  <||@
  Comment 1087 block B127 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1087 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 1410 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 1090 1412 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1093 1414 r8|DWORD = SETCC condition: >  <||@
  Comment 1101 1416 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 1418 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1109 1420 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1112 1422 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 1112 9  <||@
  Comment 1119 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1124 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1125 1424 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1130 1426 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1135 1428 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 1430 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 1432 JUMP ~[] destination: B127 -> B1  <||@
  Comment 1150 block B19 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1150 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 186 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1155 188 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1]  <||@
  Comment 1155 6  <||@
  Comment 1167 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 1172 [stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1173 190 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1175 192 BRANCH trueDestinationProbability: 0.06260270999348858 condition: = trueDestination: B19 -> B22 falseDestination: B19 -> B23  <||@
  Comment 1181 block B23 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1181 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1181 208 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1186 210 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11]  <||@
  Comment 1186 6  <||@
  Comment 1199 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 1204 [stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                    <||@
  Comment 1205 212 NULLCHECK [rax|QWORD[.]] state [bci:16]  <||@
  Comment 1205 [rax:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |rax|QWORD[.]        <||@
  Comment 1205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1207 214 CMP stack:56|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}  <||@
  Comment 1207 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 1215 216 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150  <||@
  Comment 1221 block B24 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1221 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1221 220 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1226 222 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1229 224 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1231 226 BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B48  <||@
  Comment 1237 block B25 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1237 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 230 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1244 232 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 234 stack:68|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 1251 236 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1256 block B135 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1256 1494 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1256 1484 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1261 1486 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1265 1488 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1270 1490 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 1496 rdx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 1279 1498 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1282 1500 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1285 1502 JUMP ~[] destination: B135 -> B136  <||@
  Comment 1285 block B136 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1285 1504 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1285 1506 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1288 1508 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3, 16]  <||@
  Comment 1288 [rcx:0, rsi:0, r14:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r14|QWORD[.]  |r14|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |              |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1288 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1288 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1299 1510 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B148  <||@
  Comment 1305 block B137 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1305 1512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1305 1514 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1307 1516 CMP (x: rdx|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1314 1518 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B137 -> B138 falseDestination: B137 -> B147  <||@
  Comment 1320 block B138 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1320 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 1522 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1324 1524 r10|DWORD[.] = MOV [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1329 1526 r11|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1336 1528 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1339 1530 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B138 -> B146 falseDestination: B138 -> B140  <||@
  Comment 1345 block B140 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1345 1536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 1538 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1345 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1357 1540 BRANCH trueDestinationProbability: 0.07804910062743042 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B146  <||@
  Comment 1363 block B146 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1363 1642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1363 1644 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1368 1646 rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1373 1648 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1377 1650 MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1381 1652 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 43, 35, 3, 16]  <||@
  Comment 1381 [rsi:0, r10:0, r14:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |r13|DWORD  |r14|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4             |5 
     locals:  |-  |-  |-  |-  |r10|DWORD[.]  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1381 {infopoint: SAFEPOINT}  <||@
  Comment 1381 11  <||@
  Comment 1387 1654 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1392 1656 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1397 1658 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1402 1660 JUMP ~[] destination: B146 -> B1  <||@
  Comment 1407 block B30 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1407 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 278 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1412 280 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1417 282 JUMP ~[] destination: B30 -> B42  <||@
  Comment 1417 block B42 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1417 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1417 384 CMP stack:96|DWORD y: -1 size: DWORD  <||@
  Comment 1422 386 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 1428 block B43 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1428 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 390 stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD  <||@
  Comment 1438 392 stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 1456 394 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 396 JUMP ~[] destination: B43 -> B50  <||@
  Comment 1466 block B56 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1466 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 558 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1470 560 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1475 562 r10|DWORD = SHR r14|DWORD y: 2 size: DWORD  <||@
  Comment 1482 564 CMP r10|DWORD y: 9 size: DWORD  <||@
  Comment 1486 566 BRANCH trueDestinationProbability: 0.7308974300032183 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1492 block B57 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1492 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1492 570 r13|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1498 572 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1498 block B59 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1498 580 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1498 582 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1503 584 r10|DWORD = SHR r14|DWORD size: DWORD  <||@
  Comment 1509 586 r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1515 588 CMP r11|DWORD y: 1073741824 size: DWORD  <||@
  Comment 1522 590 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B98  <||@
  Comment 1528 block B60 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1528 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1528 594 r9|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 1534 596 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1537 598 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 1543 block B62 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1543 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1543 612 rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1547 614 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1551 616 CMP r9|DWORD y: 16777215 size: DWORD  <||@
  Comment 1558 618 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66  <||@
  Comment 1564 block B63 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1564 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1564 622 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1569 624 rbp|DWORD = SHL r11|DWORD y: 3 size: DWORD  <||@
  Comment 1575 626 rbp|DWORD = LEA [rbp|DWORD + 23] size: DWORD  <||@
  Comment 1578 628 rbp|DWORD = AND rbp|DWORD y: -8 size: DWORD  <||@
  Comment 1581 630 rbp|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 1584 632 r13|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1590 634 CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1593 636 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1599 block B65 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1599 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 650 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 1603 652 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1611 654 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1619 656 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1627 658 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1635 660 MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1639 662 MOV [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 1646 664 MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1646 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1653 666 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1653 668 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1656 670 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1659 672 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1664 674 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1667 676 JUMP ~[] destination: B65 -> B68  <||@
  Comment 1667 block B68 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1667 706 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1667 708 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1671 710 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1674 712 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1678 714 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1682 716 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1689 718 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1694 block B97 loop 3 depth 2 outer 0 header:2253|LoopBegin  <||@
  Comment 1694 974 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1696 976 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1699 978 JUMP ~[] destination: B97 -> B69  <||@
  Comment 1699 block B69 loop 3 depth 2 outer 0 header:2253|LoopBegin  <||@
  Comment 1699 720 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1699 722 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1705 724 r11|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1709 726 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1712 728 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B97  <||@
  Comment 1714 block B70 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1714 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1714 732 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1718 734 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1721 736 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 1727 block B72 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1727 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1727 744 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1731 746 J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1738 748 rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD  <||@
  Comment 1742 750 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1745 752 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1745 block B73 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1745 754 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1745 756 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1749 758 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1752 760 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B76 falseDestination: B73 -> B75  <||@
  Comment 1758 block B75 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1758 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 768 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1762 770 J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1768 772 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1772 774 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1775 776 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1775 block B76 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1775 778 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1775 780 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1778 782 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1781 784 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B79 falseDestination: B76 -> B78  <||@
  Comment 1787 block B78 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1787 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1787 792 MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1791 794 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1791 block B79 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1791 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1791 798 TEST r13|DWORD y: 2147483647 size: DWORD  <||@
  Comment 1798 800 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B79 -> B84 falseDestination: B79 -> B81  <||@
  Comment 1804 block B81 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1804 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 812 r9|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1810 814 r9|DWORD = SHL r9|DWORD y: 2 size: DWORD  <||@
  Comment 1814 816 rdi|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 1817 818 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1821 820 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1824 822 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1828 824 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1832 826 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1836 828 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1839 830 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1842 832 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1847 834 JUMP ~[] destination: B81 -> B82  <||@
  Comment 1852 block B96 loop 4 depth 2 outer 0 header:2046|LoopBegin  <||@
  Comment 1852 962 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1856 964 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1859 966 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 1865 968 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1868 970 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1871 972 JUMP ~[] destination: B96 -> B82  <||@
  Comment 1871 block B82 loop 4 depth 2 outer 0 header:2046|LoopBegin  <||@
  Comment 1871 836 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1871 838 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1875 840 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B82 -> B84 falseDestination: B82 -> B96  <||@
  Comment 1883 block B48 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1883 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1883 438 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1886 440 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1891 442 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16]  <||@
  Comment 1891 9  <||@
  Comment 1895 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 1900 [stack:48, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1901 444 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 1904 446 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B135  <||@
  Comment 1910 block B49 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1910 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1910 450 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1915 452 rax|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1922 454 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1927 456 stack:92|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1931 458 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1936 460 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1941 block B84 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1941 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 804 stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1946 806 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1951 852 rdx|QWORD[*] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1956 854 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 856 r11|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 1962 858 rdi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1966 860 rsi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1970 862 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1973 864 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1978 866 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1978 {Field[name=StubRoutines::_arrayof_oop_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd20, value=0x106813060]:0x106813060}  <||@
  Comment 1984 868 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 870 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1996 872 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2001 874 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2005 876 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2012 878 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2017 880 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2021 882 CMP stack:68|DWORD y: 512 size: DWORD  <||@
  Comment 2029 884 BRANCH trueDestinationProbability: 0.9922845270333365 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B89  <||@
  Comment 2035 block B85 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2035 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 888 CMP stack:72|DWORD y: 512 size: DWORD  <||@
  Comment 2043 890 BRANCH trueDestinationProbability: 0.9926008704858252 condition: < trueDestination: B85 -> B89 falseDestination: B85 -> B87  <||@
  Comment 2049 block B89 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2049 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2049 914 CMP stack:68|DWORD y: 131072 size: DWORD  <||@
  Comment 2057 916 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B94  <||@
  Comment 2063 block B90 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2063 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2063 920 CMP stack:72|DWORD y: 131073 size: DWORD  <||@
  Comment 2071 922 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B90 -> B92 falseDestination: B90 -> B93  <||@
  Comment 2077 block B92 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2077 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 930 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2081 932 rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2085 934 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 2089 936 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2092 938 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 940 JUMP ~[] destination: B92 -> B101  <||@
  Comment 2100 block B107 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2100 1066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2100 1068 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2104 1070 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2108 1072 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2112 1074 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B109  <||@
  Comment 2118 block B109 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2118 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 1118 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2122 1120 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 2129 1122 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2129 1128 JUMP ~[] destination: B109 -> B110  <||@
  Comment 2129 block B110 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2129 1130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2129 1124 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2134 1126 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1132 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2139 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2149 1134 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2152 1136 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2159 1138 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2162 1140 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2162 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2169 1142 rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2176 1144 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 2179 1146 MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2182 1148 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 2186 1150 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2191 1152 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2196 1154 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2200 1156 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2204 1158 MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 2208 1160 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 2210 1162 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114  <||@
  Comment 2216 block B114 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2216 1214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2216 1216 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2224 1218 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD  <||@
  Comment 2228 1220 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 2232 1222 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2234 1224 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 2241 1226 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2247 block B115 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2247 1228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2247 1230 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2250 1232 r11|DWORD = SETCC condition: >  <||@
  Comment 2258 1234 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 1236 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 1238 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2269 1240 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2272 1242 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 2272 9  <||@
  Comment 2279 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 2284 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2285 1244 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2290 1246 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2295 1248 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2300 1250 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2305 1252 JUMP ~[] destination: B115 -> B1  <||@
  Comment 2310 block B44 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2310 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2310 400 r14|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2315 402 rdx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2319 404 r13|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2324 406 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2328 408 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2333 410 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2338 412 JUMP ~[] destination: B44 -> B136  <||@
  Comment 2343 block B122 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2343 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2343 1336 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2348 1338 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16]  <||@
  Comment 2348 9  <||@
  Comment 2351 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2356 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2357 1340 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2362 1342 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2367 1344 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 1346 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2377 1348 JUMP ~[] destination: B122 -> B1  <||@
  Comment 2382 block B58 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2382 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2382 576 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2385 578 JUMP ~[] destination: B58 -> B59  <||@
  Comment 2390 block B111 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2390 1164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2390 1166 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2393 1168 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 2396 1170 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 2396 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 2402 1172 rcx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2407 1174 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 2417 1176 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2419 1178 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2424 1180 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 2428 1182 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2431 1184 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 2437 block B113 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2437 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2437 1204 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16]  <||@
  Comment 2437 [rsi:0, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4          |5 
     locals:  |rsi|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2437 {infopoint: SAFEPOINT}  <||@
  Comment 2437 11  <||@
  Comment 2443 1206 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2448 1208 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2453 1210 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 1212 JUMP ~[] destination: B113 -> B1  <||@
  Comment 2463 block B141 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2463 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2463 1544 r9|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2467 1546 rbx|QWORD = LEA [r9|QWORD + 24] size: QWORD  <||@
  Comment 2471 1548 CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2475 1550 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 2481 block B143 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2481 1588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2481 1590 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 2485 1592 AMD64PREFETCH ~[r9|QWORD + 216] instr: 0  <||@
  Comment 2493 1594 r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2493 1596 JUMP ~[] destination: B143 -> B144  <||@
  Comment 2493 block B144 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2493 1598 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2493 1600 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2493 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2503 1602 rdi|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD  <||@
  Comment 2506 1604 rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD  <||@
  Comment 2513 1606 MOV (x: [r9|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 2516 1608 MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2516 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2524 1610 rbx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2532 1612 MOV (x: [r9|QWORD[*] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 2536 1614 MOV (x: [r9|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2540 1616 r11|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 2547 1618 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2552 1620 rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2557 1622 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2561 1624 MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2565 1626 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2573 1628 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 34, 35, 3, 16]  <||@
  Comment 2573 [rdx:0, rsi:0, rdi:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |r13|DWORD  |rdi|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4             |5 
     locals:  |-  |-  |-  |-  |rdx|DWORD[.]  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2573 {infopoint: SAFEPOINT}  <||@
  Comment 2573 11  <||@
  Comment 2579 1630 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2584 1632 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2589 1634 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2594 1636 JUMP ~[] destination: B144 -> B1  <||@
  Comment 2599 block B66 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2599 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2599 680 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2604 682 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2609 684 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2614 686 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2617 688 JUMP ~[] destination: B66 -> B67  <||@
  Comment 2617 block B67 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2617 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2617 692 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 2617 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 2627 694 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2630 696 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2633 698 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2638 700 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2641 702 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3, 16]  <||@
  Comment 2641 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2646 [stack:24, stack:36, stack:40, stack:80, stack:88]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:96|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |- 
     stack:   |stack:72|DWORD     |                |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2647 704 JUMP ~[] destination: B67 -> B68  <||@
  Comment 2652 block B116 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2652 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2652 1256 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 2659 1258 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B116 -> B117 falseDestination: B116 -> B118  <||@
  Comment 2665 block B117 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2665 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2665 1262 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 2668 1264 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2671 1266 r8|DWORD = SETCC condition: >  <||@
  Comment 2679 1268 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2682 1270 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2687 1272 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2690 1274 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 2690 9  <||@
  Comment 2695 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 2700 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2701 1276 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2706 1278 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2711 1280 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2716 1282 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2721 1284 JUMP ~[] destination: B117 -> B1  <||@
  Comment 2726 block B52 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2726 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2726 484 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2726 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2736 486 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2741 488 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2746 490 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16]  <||@
  Comment 2746 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2751 [stack:36, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                           |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]           |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2752 492 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2755 494 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2759 496 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2764 498 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2769 500 JUMP ~[] destination: B52 -> B54  <||@
  Comment 2774 block B112 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2774 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2774 1188 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2779 1190 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16]  <||@
  Comment 2779 9  <||@
  Comment 2783 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2788 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2789 1192 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2794 1194 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2799 1196 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2804 1198 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2809 1200 JUMP ~[] destination: B112 -> B1  <||@
  Comment 2814 block B64 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2814 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2814 640 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2817 642 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2822 644 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2827 646 JUMP ~[] destination: B64 -> B67  <||@
  Comment 2832 block B87 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2832 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2832 898 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2837 900 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3, 16]  <||@
  Comment 2837 9  <||@
  Comment 2839 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2844 [stack:36, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2845 902 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2850 904 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2855 906 JUMP ~[] destination: B87 -> B92  <||@
  Comment 2860 block B108 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2860 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2860 1078 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2864 1080 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 2868 1082 stack:96|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 2872 1084 stack:116|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2877 1086 stack:120|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2882 1088 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2882 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2892 1090 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2897 1092 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2902 1094 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3, 16]  <||@
  Comment 2902 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2907 [r13:0, stack:32, stack:36, stack:40, stack:56, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1          |2                 
     locals:  |stack:40|QWORD[.]  |r14|DWORD  |stack:88|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4          |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2908 1096 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2911 1098 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2915 1100 rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 2919 1102 rdi|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 2923 1104 r9|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 2928 1106 r11|DWORD = MOVE stack:120|DWORD moveKind: DWORD  <||@
  Comment 2933 1108 rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 2937 1114 JUMP ~[] destination: B108 -> B110  <||@
  Comment 2942 block B142 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2942 1552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2942 1554 stack:92|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 2947 1556 stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2952 1558 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2957 1560 stack:116|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2961 1562 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2961 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2971 1564 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2976 1566 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2981 1568 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16]  <||@
  Comment 2981 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2986 [r14:0, stack:8, stack:36, stack:48, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |r14|QWORD[.]  |r14|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |              |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2987 1570 r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2990 1572 r11|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 2995 1574 r10|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD  <||@
  Comment 3000 1576 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 3005 1578 rdx|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 3009 1580 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3013 1582 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3018 1584 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3023 1586 JUMP ~[] destination: B142 -> B144  <||@
  Comment 3028 block B22 null  <||@
  Comment 3028 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3028 204 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3037 12  <||@
  Comment 3047 block B131 null  <||@
  Comment 3047 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3047 1458 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3057 1460 r10|DWORD = MOVE input: int[-289819|0xfffffffffffb93e5]  <||@
  Comment 3063 1462 JUMP ~[] destination: B131 -> B133  <||@
  Comment 3063 block B133 null  <||@
  Comment 3063 1474 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3063 1476 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3070 1478 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 3077 1480 DEOPT info [bci:116, 3, 16]  <||@
  Comment 3077 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3082 [stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4          |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3083 block B61 null  <||@
  Comment 3083 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 602 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3086 604 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3091 606 r10|DWORD = MOVE input: int[-323937|0xfffffffffffb0e9f]  <||@
  Comment 3097 608 JUMP ~[] destination: B61 -> B99  <||@
  Comment 3097 block B99 null  <||@
  Comment 3097 990 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3097 992 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3104 994 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3111 996 DEOPT info [bci:10, 14, 79, 3, 16]  <||@
  Comment 3111 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3116 [r8:0, stack:80, stack:88]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r13|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r14|DWORD  |-  |- 
     stack:   |r11|DWORD          |           |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1            |2            |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |r8|QWORD[.]  |r8|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3117 block B130 null  <||@
  Comment 3117 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 1450 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3127 1452 r10|DWORD = MOVE input: int[-292379|0xfffffffffffb89e5]  <||@
  Comment 3133 1454 JUMP ~[] destination: B130 -> B133  <||@
  Comment 3135 block B17 null  <||@
  Comment 3135 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3135 174 MOV [r15|QWORD + 668] y: -273179 size: DWORD  <||@
  Comment 3146 176 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3153 178 DEOPT info [bci:0, 11]  <||@
  Comment 3153 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3158 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                    <||@
  Comment 3159 block B94 null  <||@
  Comment 3159 948 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3159 950 r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded]  <||@
  Comment 3165 952 JUMP ~[] destination: B94 -> B95  <||@
  Comment 3165 block B95 null  <||@
  Comment 3165 954 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3165 956 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3172 958 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3179 960 DEOPT info [bci:73, 79, 3, 16]  <||@
  Comment 3179 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3184 [rax:0, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1               |2  |3            
     locals:  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |rax|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3185 block B15 null  <||@
  Comment 3185 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3185 162 MOV [r15|QWORD + 668] y: -275260 size: DWORD  <||@
  Comment 3196 164 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3203 166 DEOPT info [bci:15, 11]  <||@
  Comment 3203 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3208 [r9:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:48|QWORD[.]  |-         
     stack:   |r9|DWORD[.]        |rcx|DWORD 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                    <||@
  Comment 3209 block B132 null  <||@
  Comment 3209 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3209 1466 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@679821561]  <||@
  Comment 3209 {Object[d.a@679821561]}  <||@
  Comment 3219 1468 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3222 1470 r10|DWORD = MOVE input: int[-288828|0xfffffffffffb97c4]  <||@
  Comment 3228 1472 JUMP ~[] destination: B132 -> B133  <||@
  Comment 3233 block B4 null  <||@
  Comment 3233 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3233 56 MOV [r15|QWORD + 668] y: -271883 size: DWORD  <||@
  Comment 3244 58 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3251 60 DEOPT info [bci:0]  <||@
  Comment 3251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3256 [rdx:0, rsi:0]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 3257 block B148 null  <||@
  Comment 3257 1670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3257 1672 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1563345318]  <||@
  Comment 3257 {Object[d.a@1563345318]}  <||@
  Comment 3267 1674 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3270 1676 r10|DWORD = MOVE input: int[-384316|0xfffffffffffa22c4]  <||@
  Comment 3276 1678 JUMP ~[] destination: B148 -> B149  <||@
  Comment 3276 block B149 null  <||@
  Comment 3276 1680 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3276 1682 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3283 1684 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 3290 1686 DEOPT info [bci:19, 3, 16]  <||@
  Comment 3290 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3295 [r14:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |r14|QWORD[.]  |r14|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |              |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3296 block B147 null  <||@
  Comment 3296 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3296 1664 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3306 1666 r10|DWORD = MOVE input: int[-331035|0xfffffffffffaf2e5]  <||@
  Comment 3312 1668 JUMP ~[] destination: B147 -> B149  <||@
  Comment 3314 block B128 null  <||@
  Comment 3314 1434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3314 1436 r10|DWORD = MOVE input: int[-311315|0xfffffffffffb3fed]  <||@
  Comment 3320 1438 JUMP ~[] destination: B128 -> B129  <||@
  Comment 3320 block B129 null  <||@
  Comment 3320 1440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3320 1442 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3327 1444 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3334 1446 DEOPT info [bci:140, 3, 16]  <||@
  Comment 3334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3339 [stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4          |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3340 block B118 null  <||@
  Comment 3340 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3340 1288 r10|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed]  <||@
  Comment 3346 1290 JUMP ~[] destination: B118 -> B129  <||@
  Comment 3348 block B46 null  <||@
  Comment 3348 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3348 420 MOV [r15|QWORD + 668] y: -281883 size: DWORD  <||@
  Comment 3359 422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3366 424 DEOPT info [bci:2, 15, 16, 3, 16]  <||@
  Comment 3366 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3371 [rcx:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1             |2          |3 
     locals:  |stack:40|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1             |2             |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3372 block B93 null  <||@
  Comment 3372 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3372 944 r10|DWORD = MOVE input: int[-328467|0xfffffffffffafced]  <||@
  Comment 3378 946 JUMP ~[] destination: B93 -> B95  <||@
  Comment 3383 block B98 null  <||@
  Comment 3383 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3383 982 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3386 984 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3391 986 r10|DWORD = MOVE input: int[-314899|0xfffffffffffb31ed]  <||@
  Comment 3397 988 JUMP ~[] destination: B98 -> B99  <||@
  Comment 3402 block B150 null  <||@
  Comment 3402 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3402 1690 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3405 1692 MOV [r15|QWORD + 668] y: -277564 size: DWORD  <||@
  Comment 3416 1694 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3423 1696 DEOPT info [bci:16]  <||@
  Comment 3423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3428 [r10:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |r10|QWORD[.]        <||@
  Comment 3429 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3429 4  <||@
  Comment 3435 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3435 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9773[org.graalvm.collections.EconomicSet.addAll(Iterator)]"
  method "HotSpotCompilation-9773[org.graalvm.collections.EconomicSet.addAll(Iterator)]"
  date 1527005221318
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c13820 448b560849c1e203493bc20f852f26bffe900f1f80000000000f1f800000000089842400c0feff4883ec7848896c247048897424584889542450448b5208448954244c448b5e0844895c244849b800e01b17010000004c89442440c5f9efc0904181fafb4504f80f8511040000448b4a10468b0ccd0c0000008b4a0c443bc90f8e4f0b0000448b4a14428b1ccd1800000085db0f84080c00008b3cdd0c00000048c1e303e9220000000f1f80000000008be9ffc5896a0c8b44831085c00f851500000085051db7c7fc8bcd8bc1d1e03bf877dde9670b00004181fbf93c01f80f858c0b0000448b4e1c8bc848c1e1034585c90f858f0200008944243c48894c243041ba00000000660f1f840000000000443b560c0f8df20000008b5618458bda41d1e3443b1cd50c0000000f83e30b000048c1e203428b549a10418504d4448bc249c1e0034c3bc10f8431040000448b4e204585c90f850b000000850585b6c7fc41ffc2ebaa4181f9750300d844895c243844895424200f853d000000488bf1498bd048b8ffffffffffffffff6690e82c29bffe9085c00f85ec030000850543b6c7fc448b54242041ffc2488b4c2430488b742458e956ffffff4181f9770300d80f842800000049c1e103498bf1488b542430498bc848b8ffffffffffffffff0f1f8000000000e8d428bffe90eba68505f1b5c7fc448b54242041ffc2488b4c2430488b742458e904ffffff48894c242848894424608b44243c89442424488b442460448b6e0c8b561885d20f849a010000448b34d50c000000458bd541d1e248c1e203453bf20f846d030000458bf54c8bea4c8b4424404c8bd641817d08f52200f80f85200a0000458b5d0c418bf6d1e6443bde0f866c090000448bce41ffc1453bd90f86a30900008b5c242441895cb510498d74b51048c1ee0946882406438b7c8d10418b421c418beeffc585ff0f8411000000813cfd08000000bc3e01f80f846d05000043895c8d104b8d748d1048c1ee094688240641896a0c85c00f8459000000448b0cc50c000000412b6a108bf5d1fe03f54181fb000200000f832e010000413bf1410f9fc3450fb6db498bf2488b542428418bce458bc36690e85c25bffe90448b5c2448448b54244c488b542450488b742458e922fdffff498bf28b562081fa770300d8b90800000041b804000000440f44c185d2ba08000000440f44c2413be80f8fba050000850573b4c7fc448b5c2448448b54244c488b542450e9d9fcffff894424384c8bce488bd148894c243090e8e424bffe9083f8ff0f854201000048ff742430488f44242848894424608b44243889442424488b442460488b742458e957feffff498b57604c8d52304d3b57700f87c80600004d8957600f1882f0000000c5f9efc04c8b4424404c8bd2c7420c0800000048c70201000000c74208f52200f8c5fe7f4210498bd248c1ea03895618488bd648c1ea0946882402458bf54d8bea4c8bd6e929feffff4181fb000002000f83b308000041d1e9413bf1410f9fc0450fb6c0498bf2488b542428418bce0f1f8000000000e81c24bffe90448b5c2448448b54244c488b542450488b742458e9e2fbffff488b74245048b8ffffffffffffffff6690e82c26bffe9085c00f8437070000488b74245048b8ffffffffffffffff666690e80c26bffe908500817c2448f93c01f80f8585080000488b7424588b561c85d20f8586020000488bd048c1ea03488bc88954243ce914fcffff488b4c2430c5f9efc04c8b442440488b7424588bd0d1e24c8bf1448be88b4e18813ccd08000000f52200f80f85a0070000ffc23b14cd0c0000000f83b807000048c1e103448b5491104d8bde49c1eb034585d20f841200000042813cd508000000bc3e01f80f844c04000044895c9110488d54911048c1ea094688240285057bb2c7fc448b5c2448448b54244c488b542450e9e1faffff44895c24384489542420837c2420ff0f857203000048ff742430488f44242848894424608b44243c89442424488b442460488b742458e969fcffffc5f9efc04c8b442440458bd641c1ea024183fa090f837a03000041bd08000000448974243c458bd641d1ea458bda4503dd4181fb000000400f833f070000458bcb41d1e1453bf10f8f04060000498b5f60498b7f704181f9ffffff000f830b04000044896c2420418bebc1e5038d6d1783e5f84863ed4c8bed4c03eb4c3bef0f87bf0400004d896f600f18841dc00000000f18841d000100000f18841d400100000f18841d8001000044894b0c48c70301000000c74308f52200f8488bc3458beb4889542418458bf1488d78104963f6488d56f8c5f9efc049c7c200000000e90500000066904d8bd3c4a17e7f04974d8d5a084c3bda7eee488d56fc4c3bda0f8f12000000c5f9efc0c4a17a7f449720498d520c4c8bda488d56fe4c3bda0f8f11000000c5f9efc0c4a1f97e049f498d53024c8bda48ffce4c3bde0f8f040000004689249f41f7c5ffffff7f0f8489000000458bce41ffc941c1e1024963f9488d70104803f748c1ee09488d781048c1ef09482bf748ffc64c8b442440e9130000000f1f400048ffce488bd74903d04803d64488224883fe010f8c3c000000ebe5488bd048894424300f1f4000e81421bffe9083f8ff0f8572fdffff4c8b542430498bc248c1e8034c8954242889442424488b742458e98efaffff4489742438448b74243c488b5424184c8bd0458bde488d7a10498d7210498bd34889442410e881f0bffe90488b442410488bf048c1ee034c8b54245841897218498bf248c1ee094c8b44244046882406817c243c000200000f830e000000817c2438000200000f8d0f030000817c243c000002000f8348040000817c2438010002000f8d0f050000418b720c418b521848c1e203448bf64c8beae927faffff498b7760488d5618493b57700f87e6020000498957600f1886d80000004c8b4424404c8b54245848bae0f509c007000000488bce488b92a8000000488916c74608bc3e01f88b14fd0c00000089560c895e1048c1e90343894c8d104b8d748d1048c1ee094688240641896a0c85c00f84ae000000448b0cc50c000000412b6a108bf5d1fe03f54181fb000200000f8395010000413bf1410f9fc3450fb6db498bf2488b542428418bce458bc30f1f8000000000e8941fbffe90448b5c2448448b54244c488b542450488b742458e95af7ffff4c8b7424308b542438448b6c2420c5f9efc04c8b442440488b742458e9defbffff488b742458666690e84c1fbffe90448b5c2448448b54244c488b542450488b742458e912f7ffff458beae984fcffff498bf28b562081fa770300d8b90800000041b804000000440f44c185d2ba08000000440f44c2413be80f8f5101000085055baec7fc448b5c2448448b54244c488b542450e9c1f6ffff4d8b4f60498d5918493b5f700f87cd01000049895f60410f1881d800000048bbe0f509c007000000498bf9488b9ba800000049891941c74108bc3e01f8428b1cd50c0000004189590c458959104c8bdf49c1eb0344895c9110488d54911048c1ea0946882402428b14d5100000008505d3adc7fc448b5c2448448b54244c488b542450e939f6ffff448954243844896c24204889542418458beb49bba81701c007000000498bf3418bd1b900000000458bf1e86a2b38ff90e927fcffff4181fb000002000f83a302000041d1e9413bf1410f9fc0450fb6c0498bf2488b542428418bce0f1f440000e8f41dbffe90448b5c2448448b54244c488b542450488b742458e9baf5ffff48be680b00c007000000ba08000000b901000000e8012b38ff90488bd0c5f9efc04c8b442440488b742458e91cf9ffff488b7424580f1f4000e89c1dbffe90448b5c2448448b54244c488b542450488b742458e962f5ffff458beb44895424384889542418e929ffffff488b7424586690e8641dbffe904c8b4424404c8b542458e9f1fcffff896c243c89442438897c242044894c240c44895c240848be680b00c007000000ba02000000b901000000e8652a38ff90488bf08b6c243c8b4424388b7c2420448b4c240c448b5c24088b5c2424e9d3fcffff44895c2424448954240848894c24308954240c48be680b00c007000000ba02000000b901000000e8162a38ff904c8bc8448b5c2424448b542408488b4c24308b54240cc5f9efc04c8b442440488b742458e9e9fdffff488b6c24704883c478850503acc7fcc5f877c349bb000000000000000041bae593fbff4589979c0200004d899fa8020000e8d431bffe90458bda4c8b44242841ba9f0efbff4589979c0200004d89a7a8020000e8b231bffe9049bb000000000000000041bae589fbffebb841c7879c020000e5d4fbff4d89a7a8020000e88831bffe9041baedfdfaff4589979c0200004d89a7a8020000e86e31bffe9041c7879c020000c4ccfbff4d89a7a8020000e85631bffe9049ba305fe3be070000004d8bda41bac497fbffe956ffffff41c7879c020000f5d9fbff4d89a7a8020000e82631bffe9049ba6822e7be070000004d8bda41bac422faff4589979c0200004d899fa8020000e8ff30bffe9049bb000000000000000041bae5f2faffebda41baed3ffbff4589979c0200004d89a7a8020000e8d330bffe9041baed5ffbffebe441c7879c020000e5b2fbff4d89a7a8020000e8b330bffe9041baedfcfaffe926ffffff458bda4c8b44242841baed31fbffe9cffeffff4c8bd041c7879c020000c4c3fbff4d89a7a8020000e87a30bffe90e8966003ff90e8702fbffe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6bb4ddc1 slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 58 [rdx:0, rsi:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |Object[null]   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 12 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 67 14 r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 71 16 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 76 18 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 86 20 stack:64|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 91 22 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 95 24 JUMP ~[] destination: B0 -> B1  <||@
  Comment 95 block B1 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 95 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 96 28 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}  <||@
  Comment 96 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$3;, resolved>;compressed}}  <||@
  Comment 103 30 BRANCH trueDestinationProbability: 0.8919930131365436 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B19  <||@
  Comment 109 block B2 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 109 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 34 r9|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 113 36 r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 113 [rdx:0, rsi:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 121 38 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 124 40 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 127 42 BRANCH trueDestinationProbability: 0.9373972900065114 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B22  <||@
  Comment 133 block B3 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 133 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 46 r9|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 137 48 rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 137 [rdx:0, rsi:0, r9:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 145 50 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 147 52 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 153 block B5 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 153 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 64 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 160 66 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 164 68 JUMP ~[] destination: B5 -> B6  <||@
  Comment 169 block B7 loop 1 depth 2 outer 0 header:77|LoopBegin  <||@
  Comment 169 78 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 176 80 rbp|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 180 82 MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 183 84 rax|DWORD[.] = MOV [rbx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 187 86 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 189 88 BRANCH trueDestinationProbability: 0.028896981087748186 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 195 block B8 loop 1 depth 2 outer 0 header:77|LoopBegin  <||@
  Comment 195 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 92 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:15, 11]  <||@
  Comment 195 [rdx:0, rbx:0, rsi:0, r9:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rdx|QWORD[.]  |-         
     stack:   |r9|DWORD[.]   |rcx|DWORD 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |               <||@
  Comment 195 {infopoint: SAFEPOINT}  <||@
  Comment 195 11  <||@
  Comment 201 94 rcx|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 203 96 JUMP ~[] destination: B8 -> B6  <||@
  Comment 203 block B6 loop 1 depth 2 outer 0 header:77|LoopBegin  <||@
  Comment 203 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 203 72 rax|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 207 74 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 209 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B17  <||@
  Comment 216 block B9 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 216 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 100 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}  <||@
  Comment 216 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 223 102 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 229 block B10 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 229 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 106 r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 233 108 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 239 110 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 242 112 BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 248 block B11 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 248 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 116 stack:68|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 252 118 JUMP ~[] destination: B11 -> B26  <||@
  Comment 252 block B26 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 252 238 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 252 240 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 257 242 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 263 244 JUMP ~[] destination: B26 -> B27  <||@
  Comment 263 block B27 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 263 246 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 272 248 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 276 250 BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B47  <||@
  Comment 282 block B28 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 282 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 254 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 285 256 r11|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 291 258 CMP (x: r11|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 16, 3, 16]  <||@
  Comment 291 [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 291 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 299 260 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B28 -> B29 falseDestination: B28 -> B46  <||@
  Comment 305 block B29 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 305 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 305 264 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 309 266 rdx|DWORD[.] = MOV [rdx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 314 268 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:2, 15, 16, 3, 16]  <||@
  Comment 314 [rcx:0, rdx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 314 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 318 270 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 325 272 CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 328 274 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 334 block B31 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 334 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 286 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 338 288 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 341 290 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 347 block B32 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 347 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 294 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16]  <||@
  Comment 347 [rcx:0, rsi:0, stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 347 {infopoint: SAFEPOINT}  <||@
  Comment 347 11  <||@
  Comment 353 296 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 356 298 JUMP ~[] destination: B32 -> B27  <||@
  Comment 358 block B33 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 358 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 302 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 358 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 365 308 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 370 310 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 375 304 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 381 block B34 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 381 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 312 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 384 314 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 387 316 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 16, 3, 16]  <||@
  Comment 387 7  <||@
  Comment 399 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 404 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 405 318 JUMP ~[] destination: B34 -> B38  <||@
  Comment 405 block B38 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 405 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 405 358 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 407 360 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 413 block B39 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 413 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 364 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 16, 3, 16]  <||@
  Comment 413 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 413 {infopoint: SAFEPOINT}  <||@
  Comment 413 11  <||@
  Comment 419 366 r10|DWORD = INC stack:96|DWORD size: DWORD  <||@
  Comment 427 368 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 432 370 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 437 372 JUMP ~[] destination: B39 -> B27  <||@
  Comment 442 block B35 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 442 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 326 CMP r9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 442 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 449 328 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 455 block B37 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 455 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 344 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 459 346 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 462 348 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 467 350 rcx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 470 352 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 16, 3, 16]  <||@
  Comment 470 7  <||@
  Comment 487 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 492 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 493 354 JUMP ~[] destination: B37 -> B38  <||@
  Comment 495 block B36 loop 2 depth 2 outer 0 header:340|LoopBegin  <||@
  Comment 495 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 495 332 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 16, 3, 16]  <||@
  Comment 495 [stack:48, stack:60, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:96|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 495 {infopoint: SAFEPOINT}  <||@
  Comment 495 11  <||@
  Comment 501 334 r10|DWORD = INC stack:96|DWORD size: DWORD  <||@
  Comment 509 336 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 514 338 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 519 340 JUMP ~[] destination: B36 -> B27  <||@
  Comment 524 block B47 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 524 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 428 stack:88|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 529 430 stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 547 432 JUMP ~[] destination: B47 -> B50  <||@
  Comment 547 block B50 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 547 462 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 547 464 r13|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 551 466 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 554 468 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 556 470 BRANCH trueDestinationProbability: 0.15737516016132225 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 562 block B55 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 562 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 546 r14|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 570 548 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 576 550 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 580 552 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 583 554 BRANCH trueDestinationProbability: 0.06591371968154047 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B100  <||@
  Comment 589 block B100 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 589 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 589 1000 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 592 1002 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 595 1004 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 600 1006 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 603 1008 JUMP ~[] destination: B100 -> B101  <||@
  Comment 603 block B101 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 603 1010 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 603 1012 CMP [r13|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:116, 3, 16]  <||@
  Comment 603 [r10:0, r13:0, stack:36, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0             |1                  |2                  |3  |4          |5 
     locals:  |r10|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r10|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 603 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 603 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 611 1014 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B132  <||@
  Comment 617 block B102 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 617 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 617 1018 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 621 1020 rsi|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 626 1022 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 629 1024 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B102 -> B103 falseDestination: B102 -> B131  <||@
  Comment 635 block B103 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 635 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 635 1028 r9|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 641 1030 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 644 1032 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B130  <||@
  Comment 650 block B104 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 650 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 650 1036 rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 654 1038 MOV (x: [r13|QWORD[.] + rsi|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 659 1040 rsi|QWORD[.] = LEA [r13|QWORD[.] + rsi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 664 1042 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 668 1044 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 672 1046 rdi|DWORD[.] = MOV [r13|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 677 1048 rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 681 1050 rbp|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 686 1052 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 688 1054 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B104 -> B120 falseDestination: B104 -> B106  <||@
  Comment 694 block B106 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 694 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 694 1062 CMP [rdi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 694 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 705 1064 BRANCH trueDestinationProbability: 0.028170283262457074 condition: = trueDestination: B106 -> B107 falseDestination: B106 -> B120  <||@
  Comment 711 block B120 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 711 1296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 1298 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 716 1300 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 721 1302 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 725 1304 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 729 1306 MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 733 1308 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 735 1310 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B124  <||@
  Comment 741 block B124 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 741 1362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 1364 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 749 1366 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD  <||@
  Comment 753 1368 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 757 1370 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 759 1372 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 766 1374 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B126  <||@
  Comment 772 block B125 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 772 1376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 1378 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 775 1380 r11|DWORD = SETCC condition: >  <||@
  Comment 783 1382 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 786 1384 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 791 1386 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 794 1388 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 797 1390 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 797 9  <||@
  Comment 799 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 804 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 805 1392 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 810 1394 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 815 1396 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 820 1398 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 825 1400 JUMP ~[] destination: B125 -> B1  <||@
  Comment 830 block B121 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 830 1312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 830 1314 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 833 1316 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 836 1318 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 836 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 842 1320 rcx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 847 1322 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 857 1324 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 859 1326 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 864 1328 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 868 1330 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 871 1332 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123  <||@
  Comment 877 block B123 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 877 1350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 1352 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16]  <||@
  Comment 877 [rsi:0, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4          |5 
     locals:  |rsi|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 877 {infopoint: SAFEPOINT}  <||@
  Comment 877 11  <||@
  Comment 883 1354 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 888 1356 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 893 1358 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 898 1360 JUMP ~[] destination: B123 -> B1  <||@
  Comment 903 block B12 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 903 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 122 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 907 124 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 910 128 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 913 130 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 918 132 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16]  <||@
  Comment 918 9  <||@
  Comment 919 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 924 [stack:48, stack:56, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 925 134 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 928 136 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B135  <||@
  Comment 934 block B13 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 934 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 934 140 stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD  <||@
  Comment 944 142 stack:92|DWORD[.] = STACKMOVE (input: stack:72|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 962 144 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 967 146 JUMP ~[] destination: B13 -> B50  <||@
  Comment 972 block B51 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 972 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 972 474 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 976 476 r10|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 980 478 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 984 480 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 990 block B53 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 990 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 504 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 994 506 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 1001 508 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1001 510 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1005 512 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1010 514 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1010 block B54 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1010 516 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1010 518 r10|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1013 520 MOV [rdx|QWORD[*] + 12] y: 8 size: DWORD  <||@
  Comment 1020 522 MOV [rdx|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1027 524 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1027 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1034 526 J (address: [rdx|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1039 528 rdx|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1046 530 MOV (x: [rsi|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1049 532 rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1056 534 MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1060 536 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1063 538 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1066 540 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1069 542 JUMP ~[] destination: B54 -> B101  <||@
  Comment 1074 block B126 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1074 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1074 1404 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 1081 1406 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B128  <||@
  Comment 1087 block B127 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1087 1408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1087 1410 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 1090 1412 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1093 1414 r8|DWORD = SETCC condition: >  <||@
  Comment 1101 1416 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 1418 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1109 1420 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1112 1422 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 1112 9  <||@
  Comment 1119 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 1124 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1125 1424 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1130 1426 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1135 1428 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 1430 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 1432 JUMP ~[] destination: B127 -> B1  <||@
  Comment 1150 block B19 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1150 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1150 186 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1155 188 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.hasNext()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1]  <||@
  Comment 1155 6  <||@
  Comment 1167 {HotSpotMethod<Iterator.hasNext()>}  <||@
  Comment 1172 [stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 1, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1173 190 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1175 192 BRANCH trueDestinationProbability: 0.06260270999348858 condition: = trueDestination: B19 -> B22 falseDestination: B19 -> B23  <||@
  Comment 1181 block B23 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1181 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1181 208 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1186 210 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Iterator.next()> invokeKind: Interface config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11]  <||@
  Comment 1186 6  <||@
  Comment 1199 {HotSpotMethod<Iterator.next()>}  <||@
  Comment 1204 [stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                    <||@
  Comment 1205 212 NULLCHECK [rax|QWORD[.]] state [bci:16]  <||@
  Comment 1205 [rax:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |rax|QWORD[.]        <||@
  Comment 1205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1207 214 CMP stack:56|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}  <||@
  Comment 1207 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 1215 216 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B150  <||@
  Comment 1221 block B24 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1221 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1221 220 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1226 222 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1229 224 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1231 226 BRANCH trueDestinationProbability: 0.6466662056064051 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B48  <||@
  Comment 1237 block B25 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1237 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 230 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1244 232 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 234 stack:68|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 1251 236 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1256 block B135 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1256 1494 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1256 1484 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1261 1486 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1265 1488 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1270 1490 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 1496 rdx|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 1279 1498 r14|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1282 1500 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1285 1502 JUMP ~[] destination: B135 -> B136  <||@
  Comment 1285 block B136 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1285 1504 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1285 1506 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1288 1508 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:19, 3, 16]  <||@
  Comment 1288 [rcx:0, rsi:0, r14:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r14|QWORD[.]  |r14|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD     |              |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1288 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1288 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1299 1510 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B136 -> B137 falseDestination: B136 -> B148  <||@
  Comment 1305 block B137 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1305 1512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1305 1514 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1307 1516 CMP (x: rdx|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1314 1518 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B137 -> B138 falseDestination: B137 -> B147  <||@
  Comment 1320 block B138 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1320 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 1522 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1324 1524 r10|DWORD[.] = MOV [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1329 1526 r11|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1336 1528 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1339 1530 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B138 -> B146 falseDestination: B138 -> B140  <||@
  Comment 1345 block B140 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1345 1536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 1538 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1345 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1357 1540 BRANCH trueDestinationProbability: 0.07804910062743042 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B146  <||@
  Comment 1363 block B146 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1363 1642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1363 1644 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1368 1646 rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1373 1648 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1377 1650 MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1381 1652 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 43, 35, 3, 16]  <||@
  Comment 1381 [rsi:0, r10:0, r14:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |r13|DWORD  |r14|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4             |5 
     locals:  |-  |-  |-  |-  |r10|DWORD[.]  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1381 {infopoint: SAFEPOINT}  <||@
  Comment 1381 11  <||@
  Comment 1387 1654 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1392 1656 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1397 1658 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1402 1660 JUMP ~[] destination: B146 -> B1  <||@
  Comment 1407 block B30 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1407 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 278 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1412 280 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1417 282 JUMP ~[] destination: B30 -> B42  <||@
  Comment 1417 block B42 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1417 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1417 384 CMP stack:96|DWORD y: -1 size: DWORD  <||@
  Comment 1422 386 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 1428 block B43 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1428 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1428 390 stack:88|QWORD[.] = STACKMOVE stack:80|QWORD[.] size: QWORD  <||@
  Comment 1438 392 stack:92|DWORD[.] = STACKMOVE (input: stack:68|DWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 1456 394 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 396 JUMP ~[] destination: B43 -> B50  <||@
  Comment 1466 block B56 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1466 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 558 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1470 560 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1475 562 r10|DWORD = SHR r14|DWORD y: 2 size: DWORD  <||@
  Comment 1482 564 CMP r10|DWORD y: 9 size: DWORD  <||@
  Comment 1486 566 BRANCH trueDestinationProbability: 0.7308974300032183 condition: |<| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1492 block B57 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1492 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1492 570 r13|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1498 572 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1498 block B59 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1498 580 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1498 582 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1503 584 r10|DWORD = SHR r14|DWORD size: DWORD  <||@
  Comment 1509 586 r11|DWORD = ADD (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1515 588 CMP r11|DWORD y: 1073741824 size: DWORD  <||@
  Comment 1522 590 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B98  <||@
  Comment 1528 block B60 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1528 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1528 594 r9|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 1534 596 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1537 598 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 1543 block B62 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1543 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1543 612 rbx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1547 614 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1551 616 CMP r9|DWORD y: 16777215 size: DWORD  <||@
  Comment 1558 618 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B62 -> B63 falseDestination: B62 -> B66  <||@
  Comment 1564 block B63 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1564 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1564 622 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1569 624 rbp|DWORD = SHL r11|DWORD y: 3 size: DWORD  <||@
  Comment 1575 626 rbp|DWORD = LEA [rbp|DWORD + 23] size: DWORD  <||@
  Comment 1578 628 rbp|DWORD = AND rbp|DWORD y: -8 size: DWORD  <||@
  Comment 1581 630 rbp|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 1584 632 r13|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1590 634 CMP (x: r13|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1593 636 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1599 block B65 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1599 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 650 MOV (x: [r15|QWORD + 96], y: r13|QWORD) size: QWORD  <||@
  Comment 1603 652 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 192] instr: 0  <||@
  Comment 1611 654 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 1619 656 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 1627 658 AMD64PREFETCH ~[rbp|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 1635 660 MOV (x: [rbx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1639 662 MOV [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 1646 664 MOV [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1646 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1653 666 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1653 668 rax|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1656 670 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1659 672 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1664 674 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1667 676 JUMP ~[] destination: B65 -> B68  <||@
  Comment 1667 block B68 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1667 706 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1667 708 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1671 710 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1674 712 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1678 714 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1682 716 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1689 718 JUMP ~[] destination: B68 -> B69  <||@
  Comment 1694 block B97 loop 3 depth 2 outer 0 header:2253|LoopBegin  <||@
  Comment 1694 974 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1696 976 r10|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1699 978 JUMP ~[] destination: B97 -> B69  <||@
  Comment 1699 block B69 loop 3 depth 2 outer 0 header:2253|LoopBegin  <||@
  Comment 1699 720 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1699 722 J (address: [rdi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1705 724 r11|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1709 726 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1712 728 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B97  <||@
  Comment 1714 block B70 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1714 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1714 732 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1718 734 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1721 736 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 1727 block B72 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1727 742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1727 744 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 1731 746 J (address: [rdi|QWORD[.] + r10|QWORD * 4 + 32], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 1738 748 rdx|QWORD = LEA [r10|QWORD + 12] size: QWORD  <||@
  Comment 1742 750 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1745 752 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1745 block B73 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1745 754 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1745 756 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1749 758 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1752 760 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B76 falseDestination: B73 -> B75  <||@
  Comment 1758 block B75 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1758 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 768 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 1762 770 J (address: [rdi|QWORD[.] + r11|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 1768 772 rdx|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1772 774 r11|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1775 776 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1775 block B76 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1775 778 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1775 780 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1778 782 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1781 784 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B76 -> B79 falseDestination: B76 -> B78  <||@
  Comment 1787 block B78 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1787 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1787 792 MOV (x: [rdi|QWORD[.] + r11|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1791 794 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1791 block B79 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1791 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1791 798 TEST r13|DWORD y: 2147483647 size: DWORD  <||@
  Comment 1798 800 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B79 -> B84 falseDestination: B79 -> B81  <||@
  Comment 1804 block B81 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1804 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 812 r9|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 1810 814 r9|DWORD = SHL r9|DWORD y: 2 size: DWORD  <||@
  Comment 1814 816 rdi|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 1817 818 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1821 820 rsi|QWORD[.] = ADD (x: rsi|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 1824 822 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1828 824 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1832 826 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1836 828 rsi|QWORD[*] = SUB (x: rsi|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1839 830 rsi|QWORD[*] = INC rsi|QWORD[*] size: QWORD  <||@
  Comment 1842 832 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1847 834 JUMP ~[] destination: B81 -> B82  <||@
  Comment 1852 block B96 loop 4 depth 2 outer 0 header:2046|LoopBegin  <||@
  Comment 1852 962 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1856 964 rsi|QWORD[*] = DEC rsi|QWORD[*] size: QWORD  <||@
  Comment 1859 966 rdx|QWORD[*] = ADD (x: rdi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 1865 968 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 1868 970 MOVB (x: [rdx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1871 972 JUMP ~[] destination: B96 -> B82  <||@
  Comment 1871 block B82 loop 4 depth 2 outer 0 header:2046|LoopBegin  <||@
  Comment 1871 836 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1871 838 CMP rsi|QWORD[*] y: 1 size: QWORD  <||@
  Comment 1875 840 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B82 -> B84 falseDestination: B82 -> B96  <||@
  Comment 1883 block B48 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1883 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1883 438 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1886 440 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1891 442 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 16, 3, 16]  <||@
  Comment 1891 9  <||@
  Comment 1895 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 1900 [stack:48, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:80|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1901 444 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 1904 446 BRANCH trueDestinationProbability: 0.6967267137205493 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B135  <||@
  Comment 1910 block B49 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1910 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1910 450 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1915 452 rax|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1922 454 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1927 456 stack:92|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1931 458 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1936 460 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1941 block B84 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 1941 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 804 stack:72|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1946 806 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1951 852 rdx|QWORD[*] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1956 854 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 856 r11|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 1962 858 rdi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1966 860 rsi|QWORD = LEA [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 1970 862 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1973 864 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1978 866 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointArraycopy(Word,Word,Word)void@0x106813060:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1978 {Field[name=StubRoutines::_arrayof_oop_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd20, value=0x106813060]:0x106813060}  <||@
  Comment 1984 868 rax|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 870 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 1996 872 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2001 874 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2005 876 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2012 878 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2017 880 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2021 882 CMP stack:68|DWORD y: 512 size: DWORD  <||@
  Comment 2029 884 BRANCH trueDestinationProbability: 0.9922845270333365 condition: |<| trueDestination: B84 -> B85 falseDestination: B84 -> B89  <||@
  Comment 2035 block B85 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2035 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 888 CMP stack:72|DWORD y: 512 size: DWORD  <||@
  Comment 2043 890 BRANCH trueDestinationProbability: 0.9926008704858252 condition: < trueDestination: B85 -> B89 falseDestination: B85 -> B87  <||@
  Comment 2049 block B89 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2049 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2049 914 CMP stack:68|DWORD y: 131072 size: DWORD  <||@
  Comment 2057 916 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B89 -> B90 falseDestination: B89 -> B94  <||@
  Comment 2063 block B90 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2063 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2063 920 CMP stack:72|DWORD y: 131073 size: DWORD  <||@
  Comment 2071 922 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B90 -> B92 falseDestination: B90 -> B93  <||@
  Comment 2077 block B92 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2077 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 930 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2081 932 rdx|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2085 934 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 2089 936 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2092 938 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 940 JUMP ~[] destination: B92 -> B101  <||@
  Comment 2100 block B107 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2100 1066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2100 1068 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2104 1070 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2108 1072 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2112 1074 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B107 -> B108 falseDestination: B107 -> B109  <||@
  Comment 2118 block B109 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2118 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 1118 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2122 1120 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 2129 1122 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2129 1128 JUMP ~[] destination: B109 -> B110  <||@
  Comment 2129 block B110 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2129 1130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2129 1124 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2134 1126 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1132 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2139 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2149 1134 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2152 1136 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 2159 1138 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2162 1140 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2162 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2169 1142 rdx|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2176 1144 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 2179 1146 MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2182 1148 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 2186 1150 MOV (x: [r13|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 2191 1152 rsi|QWORD[.] = LEA [r13|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2196 1154 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2200 1156 MOVB (x: [rsi|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2204 1158 MOV (x: [r10|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 2208 1160 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 2210 1162 BRANCH trueDestinationProbability: 0.45478946217591376 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B114  <||@
  Comment 2216 block B114 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2216 1214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2216 1216 r9|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2224 1218 rbp|DWORD = SUB (x: rbp|DWORD, ~y: [r10|QWORD[.] + 16]) size: DWORD  <||@
  Comment 2228 1220 rsi|DWORD = SAR rbp|DWORD size: DWORD  <||@
  Comment 2232 1222 rsi|DWORD = ADD (x: rsi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2234 1224 CMP r11|DWORD y: 512 size: DWORD  <||@
  Comment 2241 1226 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2247 block B115 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2247 1228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2247 1230 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2250 1232 r11|DWORD = SETCC condition: >  <||@
  Comment 2258 1234 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2261 1236 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2266 1238 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2269 1240 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2272 1242 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 2272 9  <||@
  Comment 2279 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 2284 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2285 1244 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2290 1246 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2295 1248 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2300 1250 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2305 1252 JUMP ~[] destination: B115 -> B1  <||@
  Comment 2310 block B44 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2310 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2310 400 r14|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2315 402 rdx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2319 404 r13|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2324 406 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2328 408 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2333 410 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2338 412 JUMP ~[] destination: B44 -> B136  <||@
  Comment 2343 block B122 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2343 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2343 1336 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2348 1338 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16]  <||@
  Comment 2348 9  <||@
  Comment 2351 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2356 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2357 1340 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2362 1342 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2367 1344 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2372 1346 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2377 1348 JUMP ~[] destination: B122 -> B1  <||@
  Comment 2382 block B58 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2382 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2382 576 r13|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2385 578 JUMP ~[] destination: B58 -> B59  <||@
  Comment 2390 block B111 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2390 1164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2390 1166 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2393 1168 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 2396 1170 CMP rdx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 2396 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 2402 1172 rcx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2407 1174 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 2417 1176 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2419 1178 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2424 1180 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: =  <||@
  Comment 2428 1182 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2431 1184 BRANCH trueDestinationProbability: 0.045658967703249176 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 2437 block B113 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2437 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2437 1204 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:140, 3, 16]  <||@
  Comment 2437 [rsi:0, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4          |5 
     locals:  |rsi|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2437 {infopoint: SAFEPOINT}  <||@
  Comment 2437 11  <||@
  Comment 2443 1206 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2448 1208 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2453 1210 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 1212 JUMP ~[] destination: B113 -> B1  <||@
  Comment 2463 block B141 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2463 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2463 1544 r9|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2467 1546 rbx|QWORD = LEA [r9|QWORD + 24] size: QWORD  <||@
  Comment 2471 1548 CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2475 1550 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 2481 block B143 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2481 1588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2481 1590 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 2485 1592 AMD64PREFETCH ~[r9|QWORD + 216] instr: 0  <||@
  Comment 2493 1594 r9|QWORD[*] = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 2493 1596 JUMP ~[] destination: B143 -> B144  <||@
  Comment 2493 block B144 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2493 1598 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2493 1600 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2493 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2503 1602 rdi|QWORD[.] = MOVE r9|QWORD[*] moveKind: QWORD  <||@
  Comment 2506 1604 rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD  <||@
  Comment 2513 1606 MOV (x: [r9|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 2516 1608 MOV [r9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 2516 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 2524 1610 rbx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2532 1612 MOV (x: [r9|QWORD[*] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 2536 1614 MOV (x: [r9|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2540 1616 r11|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6c79b0c7 encoding: base: 0 shift: 3  <||@
  Comment 2547 1618 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 4 + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 2552 1620 rdx|QWORD[.] = LEA [rcx|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2557 1622 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2561 1624 MOVB (x: [rdx|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2565 1626 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2573 1628 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 34, 35, 3, 16]  <||@
  Comment 2573 [rdx:0, rsi:0, rdi:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rsi|QWORD[.]  |r13|DWORD  |rdi|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4             |5 
     locals:  |-  |-  |-  |-  |rdx|DWORD[.]  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2573 {infopoint: SAFEPOINT}  <||@
  Comment 2573 11  <||@
  Comment 2579 1630 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2584 1632 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2589 1634 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2594 1636 JUMP ~[] destination: B144 -> B1  <||@
  Comment 2599 block B66 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2599 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2599 680 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2604 682 stack:96|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2609 684 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2614 686 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2617 688 JUMP ~[] destination: B66 -> B67  <||@
  Comment 2617 block B67 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2617 690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2617 692 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 2617 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 2627 694 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2630 696 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2633 698 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2638 700 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2641 702 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 14, 79, 3, 16]  <||@
  Comment 2641 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2646 [stack:24, stack:36, stack:40, stack:80, stack:88]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:96|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2  |3 
     locals:  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |- 
     stack:   |stack:72|DWORD     |                |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2647 704 JUMP ~[] destination: B67 -> B68  <||@
  Comment 2652 block B116 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2652 1254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2652 1256 CMP r11|DWORD y: 131072 size: DWORD  <||@
  Comment 2659 1258 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B116 -> B117 falseDestination: B116 -> B118  <||@
  Comment 2665 block B117 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2665 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2665 1262 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 2668 1264 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2671 1266 r8|DWORD = SETCC condition: >  <||@
  Comment 2679 1268 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2682 1270 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2687 1272 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2690 1274 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:178, 3, 16]  <||@
  Comment 2690 9  <||@
  Comment 2695 {HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>}  <||@
  Comment 2700 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2701 1276 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2706 1278 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2711 1280 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2716 1282 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2721 1284 JUMP ~[] destination: B117 -> B1  <||@
  Comment 2726 block B52 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2726 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2726 484 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2726 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2736 486 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 2741 488 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2746 490 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16]  <||@
  Comment 2746 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2751 [stack:36, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                           |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]           |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
     stack:   |int[-1|0xffffffffffffffff]  |                   |                   |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2752 492 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2755 494 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2759 496 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2764 498 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2769 500 JUMP ~[] destination: B52 -> B54  <||@
  Comment 2774 block B112 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2774 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2774 1188 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2779 1190 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:196, 3, 16]  <||@
  Comment 2779 9  <||@
  Comment 2783 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2788 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2789 1192 r11|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2794 1194 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2799 1196 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2804 1198 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2809 1200 JUMP ~[] destination: B112 -> B1  <||@
  Comment 2814 block B64 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2814 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2814 640 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2817 642 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2822 644 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2827 646 JUMP ~[] destination: B64 -> B67  <||@
  Comment 2832 block B87 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2832 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2832 898 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2837 900 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:87, 79, 3, 16]  <||@
  Comment 2837 9  <||@
  Comment 2839 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 2844 [stack:36, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2845 902 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2850 904 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2855 906 JUMP ~[] destination: B87 -> B92  <||@
  Comment 2860 block B108 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2860 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2860 1078 stack:68|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2864 1080 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 2868 1082 stack:96|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 2872 1084 stack:116|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2877 1086 stack:120|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2882 1088 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2882 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2892 1090 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2897 1092 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2902 1094 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 120, 3, 16]  <||@
  Comment 2902 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2907 [r13:0, stack:32, stack:36, stack:40, stack:56, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:778) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1          |2                 
     locals:  |stack:40|QWORD[.]  |r14|DWORD  |stack:88|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4          |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2908 1096 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2911 1098 rbp|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2915 1100 rax|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 2919 1102 rdi|DWORD[.] = MOVE stack:96|DWORD[.] moveKind: DWORD  <||@
  Comment 2923 1104 r9|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 2928 1106 r11|DWORD = MOVE stack:120|DWORD moveKind: DWORD  <||@
  Comment 2933 1108 rbx|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 2937 1114 JUMP ~[] destination: B108 -> B110  <||@
  Comment 2942 block B142 loop 0 depth 1 header:6|LoopBegin  <||@
  Comment 2942 1552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2942 1554 stack:92|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 2947 1556 stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2952 1558 stack:80|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2957 1560 stack:116|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2961 1562 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2961 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2971 1564 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2976 1566 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2981 1568 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 3, 16]  <||@
  Comment 2981 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2986 [r14:0, stack:8, stack:36, stack:48, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |r14|QWORD[.]  |r14|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |              |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 2987 1570 r9|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2990 1572 r11|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 2995 1574 r10|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD  <||@
  Comment 3000 1576 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 3005 1578 rdx|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 3009 1580 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3013 1582 r8|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 3018 1584 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3023 1586 JUMP ~[] destination: B142 -> B144  <||@
  Comment 3028 block B22 null  <||@
  Comment 3028 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3028 204 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 3037 12  <||@
  Comment 3047 block B131 null  <||@
  Comment 3047 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3047 1458 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3057 1460 r10|DWORD = MOVE input: int[-289819|0xfffffffffffb93e5]  <||@
  Comment 3063 1462 JUMP ~[] destination: B131 -> B133  <||@
  Comment 3063 block B133 null  <||@
  Comment 3063 1474 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3063 1476 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3070 1478 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 3077 1480 DEOPT info [bci:116, 3, 16]  <||@
  Comment 3077 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3082 [stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3  |4          |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3083 block B61 null  <||@
  Comment 3083 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 602 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3086 604 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3091 606 r10|DWORD = MOVE input: int[-323937|0xfffffffffffb0e9f]  <||@
  Comment 3097 608 JUMP ~[] destination: B61 -> B99  <||@
  Comment 3097 block B99 null  <||@
  Comment 3097 990 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3097 992 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3104 994 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3111 996 DEOPT info [bci:10, 14, 79, 3, 16]  <||@
  Comment 3111 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3116 [r8:0, stack:80, stack:88]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r13|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1          |2  |3 
     locals:  |stack:40|QWORD[.]  |r14|DWORD  |-  |- 
     stack:   |r11|DWORD          |           |   |  
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1            |2            |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |r8|QWORD[.]  |r8|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3117 block B130 null  <||@
  Comment 3117 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 1450 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3127 1452 r10|DWORD = MOVE input: int[-292379|0xfffffffffffb89e5]  <||@
  Comment 3133 1454 JUMP ~[] destination: B130 -> B133  <||@
  Comment 3135 block B17 null  <||@
  Comment 3135 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3135 174 MOV [r15|QWORD + 668] y: -273179 size: DWORD  <||@
  Comment 3146 176 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3153 178 DEOPT info [bci:0, 11]  <||@
  Comment 3153 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3158 [stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                    <||@
  Comment 3159 block B94 null  <||@
  Comment 3159 948 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3159 950 r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded]  <||@
  Comment 3165 952 JUMP ~[] destination: B94 -> B95  <||@
  Comment 3165 block B95 null  <||@
  Comment 3165 954 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3165 956 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3172 958 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3179 960 DEOPT info [bci:73, 79, 3, 16]  <||@
  Comment 3179 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3184 [rax:0, stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1               |2  |3            
     locals:  |stack:40|QWORD[.]  |stack:68|DWORD  |-  |rax|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3185 block B15 null  <||@
  Comment 3185 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3185 162 MOV [r15|QWORD + 668] y: -275260 size: DWORD  <||@
  Comment 3196 164 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3203 166 DEOPT info [bci:15, 11]  <||@
  Comment 3203 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3208 [r9:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl$3.next(EconomicMapImpl.java:834) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:48|QWORD[.]  |-         
     stack:   |r9|DWORD[.]        |rcx|DWORD 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                    <||@
  Comment 3209 block B132 null  <||@
  Comment 3209 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3209 1466 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@679821561]  <||@
  Comment 3209 {Object[d.a@679821561]}  <||@
  Comment 3219 1468 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3222 1470 r10|DWORD = MOVE input: int[-288828|0xfffffffffffb97c4]  <||@
  Comment 3228 1472 JUMP ~[] destination: B132 -> B133  <||@
  Comment 3233 block B4 null  <||@
  Comment 3233 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3233 56 MOV [r15|QWORD + 668] y: -271883 size: DWORD  <||@
  Comment 3244 58 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3251 60 DEOPT info [bci:0]  <||@
  Comment 3251 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3256 [rdx:0, rsi:0]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:84) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 3257 block B148 null  <||@
  Comment 3257 1670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3257 1672 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1563345318]  <||@
  Comment 3257 {Object[d.a@1563345318]}  <||@
  Comment 3267 1674 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3270 1676 r10|DWORD = MOVE input: int[-384316|0xfffffffffffa22c4]  <||@
  Comment 3276 1678 JUMP ~[] destination: B148 -> B149  <||@
  Comment 3276 block B149 null  <||@
  Comment 3276 1680 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3276 1682 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3283 1684 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 3290 1686 DEOPT info [bci:19, 3, 16]  <||@
  Comment 3290 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3295 [r14:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 19, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |r14|QWORD[.]  |r14|QWORD[.]  |-  |-  |- 
     stack:   |r13|DWORD          |              |              |   |   |  
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3296 block B147 null  <||@
  Comment 3296 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3296 1664 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3306 1666 r10|DWORD = MOVE input: int[-331035|0xfffffffffffaf2e5]  <||@
  Comment 3312 1668 JUMP ~[] destination: B147 -> B149  <||@
  Comment 3314 block B128 null  <||@
  Comment 3314 1434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3314 1436 r10|DWORD = MOVE input: int[-311315|0xfffffffffffb3fed]  <||@
  Comment 3320 1438 JUMP ~[] destination: B128 -> B129  <||@
  Comment 3320 block B129 null  <||@
  Comment 3320 1440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3320 1442 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3327 1444 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3334 1446 DEOPT info [bci:140, 3, 16]  <||@
  Comment 3334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3339 [stack:40, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 140, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4          |5 
     locals:  |stack:40|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |r14|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3340 block B118 null  <||@
  Comment 3340 1286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3340 1288 r10|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed]  <||@
  Comment 3346 1290 JUMP ~[] destination: B118 -> B129  <||@
  Comment 3348 block B46 null  <||@
  Comment 3348 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3348 420 MOV [r15|QWORD + 668] y: -281883 size: DWORD  <||@
  Comment 3359 422 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3366 424 DEOPT info [bci:2, 15, 16, 3, 16]  <||@
  Comment 3366 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3371 [rcx:0, stack:80, stack:88]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1             |2          |3 
     locals:  |stack:40|QWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1             |2             |3  |4  |5 
     locals:  |stack:40|QWORD[.]  |rcx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 3372 block B93 null  <||@
  Comment 3372 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3372 944 r10|DWORD = MOVE input: int[-328467|0xfffffffffffafced]  <||@
  Comment 3378 946 JUMP ~[] destination: B93 -> B95  <||@
  Comment 3383 block B98 null  <||@
  Comment 3383 980 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3383 982 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3386 984 r8|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3391 986 r10|DWORD = MOVE input: int[-314899|0xfffffffffffb31ed]  <||@
  Comment 3397 988 JUMP ~[] destination: B98 -> B99  <||@
  Comment 3402 block B150 null  <||@
  Comment 3402 1688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3402 1690 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3405 1692 MOV [r15|QWORD + 668] y: -277564 size: DWORD  <||@
  Comment 3416 1694 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3423 1696 DEOPT info [bci:16]  <||@
  Comment 3423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3428 [r10:0, stack:80, stack:88]at org.graalvm.collections.EconomicSet.addAll(EconomicSet.java:85) [bci: 16, duringCall: false, rethrow: false]
              |0                  |1                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |r10|QWORD[.]        <||@
  Comment 3429 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3429 4  <||@
  Comment 3435 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3435 5  <||@
  HexCodeFile>>> <|@
end_nmethod
