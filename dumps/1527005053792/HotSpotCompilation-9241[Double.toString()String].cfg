begin_compilation
  name " HotSpotCompilation-9241[java.lang.Double.toString()]"
  method "HotSpotCompilation-9241[java.lang.Double.toString()]"
  date 1527005202101
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: d2635 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: d2635  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Double;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2676 ?7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2676 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
d2635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d2635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Double.value
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2676 
=== Succesors ===
next: a2636 
=== Usages ===
j15 ?8 ?9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2676 #next: a2636  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2675 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j101 
index: - 
=== Succesors ===
=== Usages ===
a2636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j101 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2675 
=== Succesors ===
next: a2637 
=== Usages ===
v2679 
=== Predecessor ===
d2635 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2675 #next: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a2636 
index: - 
=== Succesors ===
=== Usages ===
a2637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2679 
=== Succesors ===
next: v33 
=== Usages ===
a939 v1430 v2634 v2680 
=== Predecessor ===
a2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2679 #next: v33  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Double.toString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 204
stackSize: 0
=== Inputs ===
outerFrameState: ?7 
values: d2635 - 
=== Succesors ===
=== Usages ===
?9 ?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?7 values: d2635 -  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: - - 
=== Succesors ===
=== Usages ===
?141 ?772 ?781 ?763 ?773 ?771 ?766 ?775 ?779 ?769 ?777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: - -  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: d2635 - 
=== Succesors ===
=== Usages ===
?625 ?80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: d2635 -  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 0
=== Inputs ===
outerFrameState: ?9 
values: - - 
=== Succesors ===
=== Usages ===
?519 ?521 ?517 ?137 ?496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
value: d2635 
=== Succesors ===
=== Usages ===
v18 j21 j23 v34 j2633 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d2635  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j16 
=== Succesors ===
=== Usages ===
i19 v1547 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j16  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v30 v1233 v180 v1116 i586 v260 v392 v402 v2172 v2069 i587 v835 i587 i586 v996 v1226 v1084 v1222 v1073 a2096 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 1]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 i19 ?519 ?521 a2142 i586 v193 i219 i461 i593 i297 i305 i453 i317 i331 v388 a2034 ?496 ?517 i2072 i864 v584 v615 i591 i587 i893 v910 i591 i593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v18 
trueValue: i17 
falseValue: i4 
=== Succesors ===
=== Usages ===
?519 ?521 i979 ?496 ?517 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i17 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 30]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j15 
y: j22 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j22  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 36]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j23 
y: i24 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j23 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 37]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j25 
=== Succesors ===
=== Usages ===
v28 v30 i507 i550 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j25  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i17 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j2438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2439 j2500 j2551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2528 v2490 j2481 v2541 v2440 j2473 j2393 j2534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2071 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2120 v2191 v2262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1528 j2503 j2554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1736 j1736 j1750 j1750 j2393 j2464 j2521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i378 i452 i460 i597 i599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1742 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1744 j1746 j1746 j1754 j1755 j1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2539 j2488 j1744 j1754 j1744 j1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 i367 i599 i375 i376 i466 i476 i591 i597 i593 i597 i599 a2142 a2034 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1445 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1177 v1189 v2568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1068 v1167 v1197 v1291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1004 v1415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$1;
stampKind: a -
value: Object[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 v962 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 i319 i303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1829 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1832 v1862 v1888 v1936 v1898 v1840 v1870 v1908 v1852 v1916 ?559 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 23]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 v34 j2633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.13709283671618888
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v1540 
=== Usages ===
=== Predecessor ===
a2637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v31 #falseSuccessor: v1540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 79]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j20  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997455902306649
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 86]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@*|@fixed>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1546 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v1544 #falseSuccessor: v1546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2638 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2638  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 97]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal.BinaryToASCIIBuffer@1898887381
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
stampKind: a -
value: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2677 v2678 a711 a710 a712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2677 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2677 
=== Succesors ===
next: v183 
=== Usages ===
i932 
=== Predecessor ===
v1544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2677 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i932 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2638 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2638  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i17 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i932 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a840 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: char[26]{0, ., 0,  ,  , ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[26]{0, ., 0,  ,  , ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a627 a628 a629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i2638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2639 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2639  <|@  <|@
f <@~|@floating>@ <|@
tid v2678 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2678 
=== Succesors ===
next: v618 
=== Usages ===
v615 i577 i894 i1757 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2678 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2639 
y: i4 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2639 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v615 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
i2639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v615 #trueSuccessor: v616 #falseSuccessor: v617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592799553960260321
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582611712791629603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1833 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1833  <|@  <|@
f <@~|@floating>@ <|@
tid i1834 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237587
stableDimension: 0
stamp: i32 [-237587] ⇊00000000fffc5fed ⇈00000000fffc5fed
stampKind: i32
value: int[-237587|0xfffffffffffc5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 101]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2637 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1011
stableDimension: 0
stamp: i32 [-1011] ⇊00000000fffffc0d ⇈00000000fffffc0d
stampKind: i32
value: int[-1011|0xfffffffffffffc0d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
i41 j44 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfLeadingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 103]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [12 - 64] ⇈000000000000007f
=== Inputs ===
value: j21 
=== Succesors ===
=== Usages ===
i43 i46 i79 i553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: j21  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1075 - -1023] ⇊00000000fffff800
=== Inputs ===
x: i552 
y: i41 
=== Succesors ===
=== Usages ===
i523 i524 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i552 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -11
stableDimension: 0
stamp: i32 [-11] ⇊00000000fffffff5 ⇈00000000fffffff5
stampKind: i32
value: int[-11|0xfffffffffffffff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [1 - 53] ⇈000000000000003f
=== Inputs ===
x: i41 
y: i42 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1774) [bci: 119]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j21 
y: i43 
=== Succesors ===
=== Usages ===
j502 j503 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j21 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 128]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 132]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 52] ⇈000000000000003f
=== Inputs ===
x: i45 
y: i41 
=== Succesors ===
=== Usages ===
i510 i511 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i45 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v1430 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1430 #trueSuccessor: v107 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-52 - 0]
=== Inputs ===
x: i78 
y: i41 
=== Succesors ===
=== Usages ===
i507 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i78 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1543  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 42]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2047
stableDimension: 0
stamp: i32 [2047] ⇊00000000000007ff ⇈00000000000007ff
stampKind: i32
value: int[2047|0x7ff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i27 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1542 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1542 #falseSuccessor: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1827 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid i1828 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237331
stableDimension: 0
stamp: i32 [-237331] ⇊00000000fffc60ed ⇈00000000fffc60ed
stampKind: i32
value: int[-237331|0xfffffffffffc60ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1830 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-237587 - -237331] ⇊00000000fffc40ed ⇈00000000fffc7fed
valueDescription: i32
=== Inputs ===
merge: v1826 
values: i1828 i1834 
=== Succesors ===
=== Usages ===
v1832 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1826 values: i1828 i1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1827 v1833 
=== Succesors ===
next: v1832 
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1827 v1833 #next: v1832  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v1832 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1830 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1830 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 138]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid v2634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2637 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i26 
y: i57 
=== Succesors ===
=== Usages ===
i523 i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i26 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid j2633 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 140]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 143]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j2633 
y: j47 
=== Succesors ===
=== Usages ===
j502 j503 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j2633 y: j47  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1779) [bci: 146]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i510 i511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v2634 
=== Succesors ===
trueSuccessor: v544 
falseSuccessor: v545 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2634 #trueSuccessor: v544 #falseSuccessor: v545  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B210" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i523 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v494 
values: i553 i550 
=== Succesors ===
=== Usages ===
i522 i524 ?517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i553 i550  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v494 
values: i46 i49 
=== Succesors ===
=== Usages ===
i509 i511 ?496 ?517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i46 i49  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v494 
values: j44 j48 
=== Succesors ===
=== Usages ===
j501 j503 ?496 ?517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: j44 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-52 - 2047]
valueDescription: i32
=== Inputs ===
merge: v494 
values: i79 i26 
=== Succesors ===
=== Usages ===
?496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i79 i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v497 
=== Succesors ===
next: a2640 
=== Usages ===
i523 i510 j502 i507 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v497 #next: a2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2637 
=== Succesors ===
=== Usages ===
a2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2680 
=== Succesors ===
next: i2641 
=== Usages ===
a946 v2681 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2680 #next: i2641  <|@  <|@
tid ?496 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1781
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j502 - i507 i510 - - 
=== Succesors ===
=== Usages ===
v1898 i2641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j502 - i507 i510 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2640 
=== Succesors ===
=== Usages ===
i2641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?496 
guard: - 
address: v2681 
=== Succesors ===
next: v1555 
=== Usages ===
i154 v953 
=== Predecessor ===
a2640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?496 guard: - address: v2681 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2641 
y: i153 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2641 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1401181199
stableDimension: 0
stamp: i32 [-1401181199] ⇊00000000ac7babf1 ⇈00000000ac7babf1
stampKind: i32
value: int[-1401181199|0xffffffffac7babf1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 746302449] ⇈00000000ac7babf1
=== Inputs ===
x: i154 
y: i172 
=== Succesors ===
=== Usages ===
v2682 v962 v953 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i154 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i2641 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v1552 
falseSuccessor: v1554 
=== Usages ===
=== Predecessor ===
i2641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v1552 #falseSuccessor: v1554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2642 
=== Usages ===
a2642 
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2642  <|@  <|@
f <@~|@floating>@ <|@
tid a946 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2640 
=== Succesors ===
=== Usages ===
v2682 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2682 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a946 
index: i173 
=== Succesors ===
=== Usages ===
a2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a946 index: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1552 
address: v2682 
=== Succesors ===
next: v160 
=== Usages ===
a961 v1433 v2683 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1552 address: v2682 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid a961 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2642 
=== Succesors ===
=== Usages ===
a562 v962 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2642  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2642 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2642  <|@  <|@
tid ?517 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j502 - i523 i510 - - 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j502 - i523 i510 - -  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?517 
=== Succesors ===
=== Usages ===
?112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?517  <|@  <|@
f <@~|@floating>@ <|@
tid a939 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a2637 
=== Succesors ===
=== Usages ===
?112 v962 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2637  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?514 
values: a59 - a939 - - 
=== Succesors ===
=== Usages ===
?559 ?174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: a59 - a939 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v1433 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
a2642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1433 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a169 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a169  <|@  <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@228e079a
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a939 a59 i173 a961 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a939 a59 i173 a961  <|@  <|@
tid ?174 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?112 
values: - - 
=== Succesors ===
=== Usages ===
?1725 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - -  <|@  <|@
tid ?1725 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?174 
values: - - - - 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?174 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v962 
stateDuring: ?1725 
=== Succesors ===
next: v120 
=== Usages ===
v114 a562 
=== Predecessor ===
v158 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v962 stateDuring: ?1725 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a169 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a169  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.364582267253437E-4
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
a169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v119 #falseSuccessor: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v116 
values: j44 j502 j48 
=== Succesors ===
=== Usages ===
j501 ?519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: j44 j502 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i511 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v116 
values: i46 i510 i49 
=== Succesors ===
=== Usages ===
i509 ?519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i46 i510 i49  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v116 
values: i553 i523 i550 
=== Succesors ===
=== Usages ===
i522 ?519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i553 i523 i550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v115 v117 v551 
=== Succesors ===
next: a125 
=== Usages ===
j503 i511 i524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v117 v551 #next: a125  <|@  <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@13f83fe6
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a59 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a59  <|@  <|@
tid ?519 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j503 - i524 i511 - - 
=== Succesors ===
=== Usages ===
?516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j503 - i524 i511 - -  <|@  <|@
tid ?516 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
=== Succesors ===
=== Usages ===
?1726 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519  <|@  <|@
tid ?1726 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?516 
values: - - - - - 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?516 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v974 
stateDuring: ?1726 
=== Succesors ===
next: v132 
=== Usages ===
a131 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v974 stateDuring: ?1726 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B209" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2643 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2643  <|@  <|@
f <@~|@floating>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2642 
=== Succesors ===
=== Usages ===
a2643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2683 
=== Succesors ===
next: v1559 
=== Usages ===
v1435 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2683 #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid a1434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: n!# Lsun/misc/FloatingDecimal$1;
stampKind: n -
value: NarrowOop[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2643 
y: a1434 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2643 y: a1434  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1435 
=== Succesors ===
trueSuccessor: v1556 
falseSuccessor: v1558 
=== Usages ===
=== Predecessor ===
a2643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1435 #trueSuccessor: v1556 #falseSuccessor: v1558  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v560  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a562 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v557 
values: a169 a961 
=== Succesors ===
=== Usages ===
v2684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v557 values: a169 a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v558 v560 
=== Succesors ===
next: a2644 
=== Usages ===
a562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v558 v560 #next: a2644  <|@  <|@
tid ?559 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?112 
values: - - a1829 
=== Succesors ===
=== Usages ===
a2644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - - a1829  <|@  <|@
f <@~|@floating>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a562 
index: - 
=== Succesors ===
=== Usages ===
a2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a562 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?559 
guard: - 
address: v2684 
=== Succesors ===
next: v130 
=== Usages ===
a973 
=== Predecessor ===
v557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?559 guard: - address: v2684 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid a973 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2644 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2644  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a2644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a131 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v129 
values: a973 a125 
=== Succesors ===
=== Usages ===
?520 v2719 ?137 v67 v2687 v2685 a710 a711 v2686 v982 a712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: a973 a125  <|@  <|@
f <@~|@floating>@ <|@
tid j501 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v129 
values: j502 j503 
=== Succesors ===
=== Usages ===
?521 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: j502 j503  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v129 
values: i510 i511 
=== Succesors ===
=== Usages ===
?521 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i510 i511  <|@  <|@
f <@~|@floating>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v129 
values: i523 i524 
=== Succesors ===
=== Usages ===
?521 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i523 i524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 
=== Succesors ===
next: v1684 
=== Usages ===
a131 j501 i509 i522 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 #next: v1684  <|@  <|@
tid ?521 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j501 - i522 i509 - - 
=== Succesors ===
=== Usages ===
?520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j501 - i522 i509 - -  <|@  <|@
tid ?520 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: false
localsSize: 0
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 1
=== Inputs ===
outerFrameState: ?521 
values: a131 
=== Succesors ===
=== Usages ===
v1908 v981 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?521 values: a131  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
v1684 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v1683 
falseSuccessor: v1682 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v1683 #falseSuccessor: v1682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B208" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2645 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2645  <|@  <|@
f <@~|@floating>@ <|@
tid v2719 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v2645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2645 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2719 
=== Succesors ===
next: v2626 
=== Usages ===
v2174 
=== Predecessor ===
v1682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2719 #next: v2626  <|@  <|@
f <@~|@floating>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2645 
y: v2173 
=== Succesors ===
=== Usages ===
v2626 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2645 y: v2173  <|@  <|@
f <@*|@fixed>@ <|@
tid v2626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2174 
=== Succesors ===
trueSuccessor: v2625 
falseSuccessor: v1958 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2174 #trueSuccessor: v2625 #falseSuccessor: v1958  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1961 
=== Usages ===
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1961  <|@  <|@
f <@*|@fixed>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
v2625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1953 v1961 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1953 v1961 #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v2685 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v981 i2646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i19 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?520 
guard: - 
address: v2685 
value: i979 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v1951 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?520 guard: - address: v2685 value: i979 stateAfter: - lastLocationAccess: - #next: v134  <|@  <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@197af8b9
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
=== Inputs ===
arguments: a131 i522 j501 i509 i4 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a131 i522 j501 i509 i4  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - - - - - - - - - a131 - 
=== Succesors ===
=== Usages ===
?1727 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - - - - - - - - - a131 -  <|@  <|@
tid ?1727 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 259
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.dtoa
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v982 
stateDuring: ?1727 
=== Succesors ===
next: i2646 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v982 stateDuring: ?1727 #next: i2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2685 
=== Succesors ===
next: a2647 
=== Usages ===
i988 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2685 #next: a2647  <|@  <|@
f <@~|@floating>@ <|@
tid v2686 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
a2647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2686 
=== Succesors ===
next: v838 
=== Usages ===
a986 
=== Predecessor ===
i2646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2686 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid a986 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2647 
=== Succesors ===
=== Usages ===
a629 a628 a627 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2647  <|@  <|@
f <@~|@floating>@ <|@
tid i988 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2646 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2646  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i988 
y: i17 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i988 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v835 
=== Succesors ===
trueSuccessor: v836 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
a2647 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v835 #trueSuccessor: v836 #falseSuccessor: v837  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2648 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2648  <|@  <|@
f <@~|@floating>@ <|@
tid v2687 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
i2648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2687 
=== Succesors ===
next: v913 
=== Usages ===
v910 i577 i894 i1757 
=== Predecessor ===
v836 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2687 #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2648 
y: i4 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2648 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v912 
=== Usages ===
=== Predecessor ===
i2648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v911 #falseSuccessor: v912  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B76" 
    xhandlers
    flags 
    probability 4604577755910952677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641364409144322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v837 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a628 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v623 
values: a840 a986 
=== Succesors ===
=== Usages ===
a627 a629 v2689 v2688 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v623 values: a840 a986  <|@  <|@
f <@~|@floating>@ <|@
tid a711 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v623 
values: a39 a131 
=== Succesors ===
=== Usages ===
a710 a712 ?625 v2690 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v623 values: a39 a131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v624 v626 
=== Succesors ===
next: i2649 
=== Usages ===
a628 a711 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v624 v626 #next: i2649  <|@  <|@
tid ?625 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 1
=== Inputs ===
outerFrameState: ?9 
values: - - a711 
=== Succesors ===
=== Usages ===
v1936 i2649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - - a711  <|@  <|@
f <@~|@floating>@ <|@
tid v2688 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a628 
index: - 
=== Succesors ===
=== Usages ===
i2649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?625 
guard: - 
address: v2688 
=== Succesors ===
next: v1579 
=== Usages ===
v996 
=== Predecessor ===
v623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?625 guard: - address: v2688 #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2649 
y: i17 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2649 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v996 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1576 
=== Usages ===
=== Predecessor ===
i2649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v996 #trueSuccessor: v1578 #falseSuccessor: v1576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1936 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid i1938 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -367643
stableDimension: 0
stamp: i32 [-367643] ⇊00000000fffa63e5 ⇈00000000fffa63e5
stampKind: i32
value: int[-367643|0xfffffffffffa63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1936 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?625 
actionAndReason: i1938 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1578 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?625 actionAndReason: i1938 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
v1004 
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v2689 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a628 
index: - 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1576 
address: v2689 
value: i1438 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2650 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1576 address: v2689 value: i1438 stateAfter: - lastLocationAccess: - #next: i2650  <|@  <|@
f <@~|@floating>@ <|@
tid v2690 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a711 
index: - 
=== Succesors ===
=== Usages ===
i2650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2690 
=== Succesors ===
next: v196 
=== Usages ===
v193 i1757 i577 i893 
=== Predecessor ===
v1004 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2690 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2650 
y: i4 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2650 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j1734 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1736 j1750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1746 j1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
i2650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v194 #falseSuccessor: v195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B76" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2650 
y: i4 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2650 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B75" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1757 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v572 
values: i2650 i2639 i2648 
=== Succesors ===
=== Usages ===
i1040 v1515 i229 v422 ?222 i577 v862 i232 j1978 i1034 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i2650 i2639 i2648  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v572 
values: i4 i17 i17 
=== Succesors ===
=== Usages ===
i861 v2725 v1041 v1139 i587 ?574 v2721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i4 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v572 
values: i292 i4 i4 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i292 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v572 
values: i377 i292 i292 
=== Succesors ===
=== Usages ===
i597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i377 i292 i292  <|@  <|@
f <@~|@floating>@ <|@
tid a629 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v572 
values: a628 a840 a986 
=== Succesors ===
=== Usages ===
a627 ?574 j1973 ?222 v2775 v2696 v2697 v2698 j1994 j1985 v2694 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: a628 a840 a986  <|@  <|@
f <@~|@floating>@ <|@
tid a712 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v572 
values: a711 a39 a131 
=== Succesors ===
=== Usages ===
a710 a715 a715 v2691 ?763 v2692 v2693 ?766 ?222 ?574 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: a711 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v572 
values: i893 i2639 i2648 
=== Succesors ===
=== Usages ===
i219 v2694 v1060 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i893 i2639 i2648  <|@  <|@
f <@~|@floating>@ <|@
tid j1755 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v572 
values: j943 j1742 j1742 
=== Succesors ===
=== Usages ===
j1746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j943 j1742 j1742  <|@  <|@
f <@~|@floating>@ <|@
tid j1750 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v572 
values: j1734 j1724 j1724 
=== Succesors ===
=== Usages ===
j1736 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j1734 j1724 j1724  <|@  <|@
f <@~|@floating>@ <|@
tid j1754 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v572 
values: j1742 j924 j924 
=== Succesors ===
=== Usages ===
j1744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j1742 j924 j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v575 v915 
=== Succesors ===
next: v205 
=== Usages ===
i1757 i586 i593 i599 a629 a712 i894 j1755 j1750 j1754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v575 v915 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1757 
y: i198 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1757 y: i198  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9952836455427129
=== Inputs ===
condition: v1515 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1515 #trueSuccessor: v200 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2775 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2775  <|@  <|@
tid ?763 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a712 - 
=== Succesors ===
=== Usages ===
?574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a712 -  <|@  <|@
tid ?574 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?763 
values: a712 a629 i586 - - 
=== Succesors ===
=== Usages ===
v1916 v2775 i2652 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?763 values: a712 a629 i586 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?574 
object: a629 
=== Succesors ===
next: a2651 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?574 object: a629 #next: a2651  <|@  <|@
f <@~|@floating>@ <|@
tid v2692 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a712 
index: - 
=== Succesors ===
=== Usages ===
a2651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2692 
=== Succesors ===
next: i2652 
=== Usages ===
a1011 v2695 
=== Predecessor ===
v2775 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2692 #next: i2652  <|@  <|@
f <@~|@floating>@ <|@
tid v2695 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2651 
=== Succesors ===
=== Usages ===
i2652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?574 
guard: - 
address: v2695 
=== Succesors ===
next: i2653 
=== Usages ===
i1089 i1034 i1132 
=== Predecessor ===
a2651 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?574 guard: - address: v2695 #next: i2653  <|@  <|@
f <@~|@floating>@ <|@
tid v2696 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a629 
index: - 
=== Succesors ===
=== Usages ===
i2653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2696 
=== Succesors ===
next: i2654 
=== Usages ===
i1138 v1160 v1169 i1040 v1060 i1095 
=== Predecessor ===
i2652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2696 #next: i2654  <|@  <|@
f <@~|@floating>@ <|@
tid v2693 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a712 
index: - 
=== Succesors ===
=== Usages ===
i2654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2693 
=== Succesors ===
next: i2655 
=== Usages ===
j1969 i232 v1116 v1133 v1035 
=== Predecessor ===
i2653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2693 #next: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v2691 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a712 
index: - 
=== Succesors ===
=== Usages ===
i2655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2691 
=== Succesors ===
next: v425 
=== Usages ===
v862 v422 i1132 i229 j1996 i1138 i861 
=== Predecessor ===
i2654 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2691 #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1757 
y: i2655 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1757 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid j1969 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2654 
=== Succesors ===
=== Usages ===
v2724 v2720 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2654  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2654 
y: i17 
=== Succesors ===
=== Usages ===
v1119 v1021 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2654 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2651 
=== Succesors ===
=== Usages ===
j1968 j1980 j1992 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2651  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.44778072425335824
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
i2655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i894 
y: i2653 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i894 y: i2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v1588 
falseSuccessor: v1590 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v1588 #falseSuccessor: v1590  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
v1068 
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid i1924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267873
stableDimension: 0
stamp: i32 [-267873] ⇊00000000fffbe99f ⇈00000000fffbe99f
stampKind: i32
value: int[-267873|0xfffffffffffbe99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 i1914 i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1020 
falseSuccessor: v1019 
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1020 #falseSuccessor: v1019  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560377329857577916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1923  <|@  <|@
f <@*|@fixed>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590262643725779295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2652 
y: i1757 
=== Succesors ===
=== Usages ===
v1035 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2652 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1034 
y: i2654 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1034 y: i2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1035 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1035 #trueSuccessor: v1038 #falseSuccessor: v1036  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560304948791717852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1940 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590206661495153151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid i1040 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2653 
y: i1757 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2653 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1040 
y: i586 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1040 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1041 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1041 #trueSuccessor: v1044 #falseSuccessor: v1042  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560233291536516388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590151239086833269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1968 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1011 
=== Succesors ===
next: j1973 
=== Usages ===
v2720 
=== Predecessor ===
v1042 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1011 #next: j1973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a629 
=== Succesors ===
next: v1979 
=== Usages ===
v2721 
=== Predecessor ===
j1968 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a629 #next: v1979  <|@  <|@
f <@~|@floating>@ <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1968 
index: j1969 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1968 index: j1969  <|@  <|@
f <@~|@floating>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1973 
index: i586 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1973 index: i586  <|@  <|@
f <@~|@floating>@ <|@
tid j1978 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i1757 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2720 v2721 j1978 
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
j1973 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2720 v2721 j1978 #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid v2694 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a629 
index: i894 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1588 
address: v2694 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1588 address: v2694 value: i1442 stateAfter: - lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i1757 
y: i2654 
=== Succesors ===
=== Usages ===
j1981 v1073 v1090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1757 y: i2654  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i17 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i232 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i894 
y: i4 
=== Succesors ===
=== Usages ===
?222 i235 v1096 j1986 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i894 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1075 #falseSuccessor: v1074  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560162350853866939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590096370902596586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2655 
y: i1757 
=== Succesors ===
=== Usages ===
j1990 i1095 i235 v1084 i1089 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2655 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i229 
y: i17 
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i229 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1084 
=== Succesors ===
trueSuccessor: v1087 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1084 #trueSuccessor: v1087 #falseSuccessor: v1085  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560092119578043984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1087 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590042051400202269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid i1089 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2652 
y: i229 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2652 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1089 
y: i232 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1089 y: i232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1093 
falseSuccessor: v1091 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1093 #falseSuccessor: v1091  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560022590614979259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1092  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589988275092831896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid i1095 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2653 
y: i229 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2653 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1095 
y: i219 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1095 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1096 
=== Succesors ===
trueSuccessor: v1099 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1096 #trueSuccessor: v1099 #falseSuccessor: v1097  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559953756941545181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1099 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569064903751849833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1079 v1086 v1092 v1098 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1079 v1086 v1092 v1098 #next: v1101  <|@  <|@
tid ?766 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a712 - 
=== Succesors ===
=== Usages ===
?222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a712 -  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?766 
values: a712 a629 i219 i1757 - 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?766 values: a712 a629 i219 i1757 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B139" 
    xhandlers
    flags 
    probability 4589935036548535226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1980 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1011 
=== Succesors ===
next: j1985 
=== Usages ===
v2722 
=== Predecessor ===
v1097 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1011 #next: j1985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a629 
=== Succesors ===
next: v1991 
=== Usages ===
v2723 
=== Predecessor ===
j1980 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a629 #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid j1981 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i232 
=== Succesors ===
=== Usages ===
v2722 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v2722 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1980 
index: j1981 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1980 index: j1981  <|@  <|@
f <@~|@floating>@ <|@
tid j1986 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v2723 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1985 
index: j1986 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1985 index: j1986  <|@  <|@
f <@~|@floating>@ <|@
tid j1990 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i229 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2722 v2723 j1990 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
j1985 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2722 v2723 j1990 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i219 
y: i229 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid i1922 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -271643
stableDimension: 0
stamp: i32 [-271643] ⇊00000000fffbdae5 ⇈00000000fffbdae5
stampKind: i32
value: int[-271643|0xfffffffffffbdae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2655 
y: i1757 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2655 y: i1757  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v862 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v862 #trueSuccessor: v1594 #falseSuccessor: v1592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid i1920 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295699
stableDimension: 0
stamp: i32 [-295699] ⇊00000000fffb7ced ⇈00000000fffb7ced
stampKind: i32
value: int[-295699|0xfffffffffffb7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B73" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1599 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i586 
y: i2655 
=== Succesors ===
=== Usages ===
i864 v2697 i367 v1160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i586 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i861 
y: i2653 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i861 y: i2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1160 
=== Succesors ===
trueSuccessor: v1596 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1160 #trueSuccessor: v1596 #falseSuccessor: v1598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B72" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1603 
=== Usages ===
v1167 
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid i864 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i861 
y: i4 
=== Succesors ===
=== Usages ===
v1169 v2698 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i861 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i864 
y: i2653 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i864 y: i2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1169 
=== Succesors ===
trueSuccessor: v1600 
falseSuccessor: v1602 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1169 #trueSuccessor: v1600 #falseSuccessor: v1602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
v1177 
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid i1930 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292961
stableDimension: 0
stamp: i32 [-292961] ⇊00000000fffb879f ⇈00000000fffb879f
stampKind: i32
value: int[-292961|0xfffffffffffb879f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 i1914 i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1118 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1118 #falseSuccessor: v1117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562065516343624141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1929 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1929  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4591568350461080670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1137 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1137  <|@  <|@
f <@~|@floating>@ <|@
tid i1132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2652 
y: i2655 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2652 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1132 
y: i2654 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1132 y: i2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1133 
=== Succesors ===
trueSuccessor: v1136 
falseSuccessor: v1134 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1133 #trueSuccessor: v1136 #falseSuccessor: v1134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561976253412903614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4591499311163101513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid i1138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2653 
y: i2655 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2653 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1138 
y: i586 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1138 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1142 #falseSuccessor: v1140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561887883111490293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1941 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1941  <|@  <|@
f <@*|@fixed>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B139" 
    xhandlers
    flags 
    probability 4591430962258102147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1992 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1011 
=== Succesors ===
next: j1994 
=== Usages ===
v2724 
=== Predecessor ===
v1140 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1011 #next: j1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a629 
=== Succesors ===
next: v1997 
=== Usages ===
v2725 
=== Predecessor ===
j1992 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a629 #next: v1997  <|@  <|@
f <@~|@floating>@ <|@
tid v2724 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1992 
index: j1969 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1992 index: j1969  <|@  <|@
f <@~|@floating>@ <|@
tid v2725 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1994 
index: i586 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1994 index: i586  <|@  <|@
f <@~|@floating>@ <|@
tid j1996 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2655 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2724 v2725 j1996 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
j1994 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2724 v2725 j1996 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a629 
index: i861 
=== Succesors ===
=== Usages ===
v1167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: i861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1596 
address: v2697 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v1997 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1596 address: v2697 value: i1442 stateAfter: - lastLocationAccess: - #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a629 
index: i864 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: i864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1600 
address: v2698 
value: i1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1600 address: v2698 value: i1445 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i861 
y: i292 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i861 y: i292  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1927 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1927  <|@  <|@
f <@~|@floating>@ <|@
tid i1928 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299547
stableDimension: 0
stamp: i32 [-299547] ⇊00000000fffb6de5 ⇈00000000fffb6de5
stampKind: i32
value: int[-299547|0xfffffffffffb6de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1925 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1925  <|@  <|@
f <@~|@floating>@ <|@
tid i1926 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297243
stableDimension: 0
stamp: i32 [-297243] ⇊00000000fffb76e5 ⇈00000000fffb76e5
stampKind: i32
value: int[-297243|0xfffffffffffb76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" "B45" "B73" "B72" "B66" "B49" "B47" "B70" "B68" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733128
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1914 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-385803 - -267873] ⇊00000000fffa0085 ⇈00000000fffbffff
valueDescription: i32
=== Inputs ===
merge: v1911 
values: i1920 i1922 i1924 i1926 i1928 i1930 i1924 i1924 i1930 i1930 
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1911 values: i1920 i1922 i1924 i1926 i1928 i1930 i1924 i1924 i1930 i1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1919 v1921 v1923 v1925 v1927 v1929 v1939 v1940 v1941 v1942 
=== Succesors ===
next: v1916 
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1919 v1921 v1923 v1925 v1927 v1929 v1939 v1940 v1941 v1942 #next: v1916  <|@  <|@
f <@*|@fixed>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?574 
actionAndReason: i1914 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1911 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?574 actionAndReason: i1914 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B76" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B39" "B75" "B5" "B33" 
    successors "B77" "B114" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v202 
values: i2650 i1757 i2639 i2648 
=== Succesors ===
=== Usages ===
i317 v247 v260 i265 i319 v584 i1525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i2650 i1757 i2639 i2648  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v202 
values: i4 i586 i17 i17 
=== Succesors ===
=== Usages ===
?239 v1282 v1183 ?283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i4 i586 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i292 i593 i4 i4 
=== Succesors ===
=== Usages ===
v1191 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i292 i593 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i377 i599 i292 i292 
=== Succesors ===
=== Usages ===
?258 i265 v2717 ?450 i270 i274 ?290 v1532 ?1728 i304 v1199 v1535 v1321 v2729 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i377 i599 i292 i292  <|@  <|@
f <@~|@floating>@ <|@
tid a627 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v202 
values: a628 a629 a840 a986 
=== Succesors ===
=== Usages ===
?325 ?239 j2003 ?1728 ?308 ?258 ?290 ?450 ?275 v2712 ?283 v2711 v2699 v2700 v2701 v2717 v2710 v2713 j2015 v2709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a628 a629 a840 a986  <|@  <|@
f <@~|@floating>@ <|@
tid a710 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v202 
values: a711 a712 a39 a131 
=== Succesors ===
=== Usages ===
v2703 v2704 a715 a715 a715 a715 ?775 v2705 ?308 ?781 ?777 ?772 ?283 ?239 ?769 ?771 ?773 ?258 ?290 ?779 ?450 v2702 ?275 v2776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a711 a712 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid j1736 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1734 j1750 j1724 j1724 
=== Succesors ===
=== Usages ===
j1529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1734 j1750 j1724 j1724  <|@  <|@
f <@~|@floating>@ <|@
tid j1746 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v202 
values: j943 j1755 j1742 j1742 
=== Succesors ===
=== Usages ===
v2701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j943 j1755 j1742 j1742  <|@  <|@
f <@~|@floating>@ <|@
tid j1744 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1742 j1754 j924 j924 
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1742 j1754 j924 j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 v619 v914 
=== Succesors ===
next: v244 
=== Usages ===
i577 i587 i591 i597 a627 a710 j1736 j1746 j1744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 v619 v914 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v2704 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2659 i2664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2703 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
a2658 a2662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2701 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a627 
index: j1746 
=== Succesors ===
=== Usages ===
v1197 v1291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: j1746  <|@  <|@
f <@~|@floating>@ <|@
tid v2700 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a627 
index: j1744 
=== Succesors ===
=== Usages ===
v1189 v1286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: j1744  <|@  <|@
f <@~|@floating>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a627 
index: - 
=== Succesors ===
=== Usages ===
i2656 i2665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i4 
=== Succesors ===
=== Usages ===
v313 v244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i577 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 191]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1728 i364 i360 i332 i2771 i349 i2772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i246 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i577 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v252 #falseSuccessor: v251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B115" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B112" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2656 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2656  <|@  <|@
tid ?769 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?769 
values: a710 a627 i587 - - 
=== Succesors ===
=== Usages ===
v1852 i2656 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?769 values: a710 a627 i587 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?239 
guard: - 
address: v2699 
=== Succesors ===
next: v1611 
=== Usages ===
v1183 v1191 v1199 v1532 i1244 j1522 
=== Predecessor ===
v251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?239 guard: - address: v2699 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i2656 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i587 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1183 
=== Succesors ===
trueSuccessor: v1608 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
i2656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1183 #trueSuccessor: v1608 #falseSuccessor: v1610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B111" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
v1189 
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i591 
y: i2656 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i591 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1191 
=== Succesors ===
trueSuccessor: v1612 
falseSuccessor: v1614 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1191 #trueSuccessor: v1612 #falseSuccessor: v1614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1189 
=== Usages ===
v1197 
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1608 
address: v2700 
value: i1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1608 address: v2700 value: i1445 stateAfter: - lastLocationAccess: - #next: v1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1612 
address: v2701 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1612 address: v2701 value: i1442 stateAfter: - lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i17 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i577 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v262 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v261 #falseSuccessor: v262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B99" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B90" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2612 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2612  <|@  <|@
f <@~|@floating>@ <|@
tid i1525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i577 
=== Succesors ===
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j1526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1525 
=== Succesors ===
=== Usages ===
j1528 j2439 v2191 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1525  <|@  <|@
f <@~|@floating>@ <|@
tid j1528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1526 
y: j1527 
=== Succesors ===
=== Usages ===
j1529 v2442 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j1527  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 243]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i597 
y: i577 
=== Succesors ===
=== Usages ===
v1535 v1199 ?1728 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i597 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i597 
y: i265 
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i597 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1535 
=== Succesors ===
trueSuccessor: v2611 
falseSuccessor: v2608 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1535 #trueSuccessor: v2611 #falseSuccessor: v2608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2620 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2620  <|@  <|@
f <@~|@floating>@ <|@
tid j1529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j1528 
y: j1736 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1528 y: j1736  <|@  <|@
f <@~|@floating>@ <|@
tid j1522 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2656 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2656  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1529 
y: j1522 
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1529 y: j1522  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1531 
=== Succesors ===
trueSuccessor: v2619 
falseSuccessor: v2616 
=== Usages ===
=== Predecessor ===
v2611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1531 #trueSuccessor: v2619 #falseSuccessor: v2616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2618 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2618  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i597 
y: i2656 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i597 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1532 
=== Succesors ===
trueSuccessor: v2609 
falseSuccessor: v2617 
=== Usages ===
=== Predecessor ===
v2619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1532 #trueSuccessor: v2609 #falseSuccessor: v2617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2607 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2607  <|@  <|@
f <@*|@fixed>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2615 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2615  <|@  <|@
f <@*|@fixed>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v2617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2614  <|@  <|@
f <@*|@fixed>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v2616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2614 v2615 
=== Succesors ===
next: v1617 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2614 v2615 #next: v1617  <|@  <|@
tid ?771 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?771 
values: a710 a627 i597 - - 
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?771 values: a710 a627 i597 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1202
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[d.a@710620907]
stamp: void
=== Inputs ===
stateBefore: ?258 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2613 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2606 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2606  <|@  <|@
f <@*|@fixed>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B86" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2606 v2607 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2606 v2607 #next: v434  <|@  <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6ae57913
stamp: void
targetMethod: HotSpotMethod<Arrays.rangeCheck(int, int, int)>
=== Inputs ===
arguments: i2656 i597 i265 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i2656 i597 i265  <|@  <|@
tid ?772 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?450 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: ?772 
values: a710 a627 i597 - - 
=== Succesors ===
=== Usages ===
?1728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?772 values: a710 a627 i597 - -  <|@  <|@
tid ?1728 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Arrays.fill(char[], int, int, char)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 2973
stackSize: 0
=== Inputs ===
outerFrameState: ?450 
values: a627 i597 i265 i236 - 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?450 values: a627 i597 i265 i236 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.rangeCheck
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1199 
stateDuring: ?1728 
=== Succesors ===
next: v2390 
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1199 stateDuring: ?1728 #next: v2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i2657 
=== Usages ===
j2392 
=== Predecessor ===
v434 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2702 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 251]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2702 
=== Succesors ===
next: v2194 
=== Usages ===
i270 
=== Predecessor ===
v2390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2702 #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i597 
y: i2657 
=== Succesors ===
=== Usages ===
i274 i274 i274 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i597 y: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j2071 
=== Succesors ===
=== Usages ===
v2194 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1526 y: j2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2191 
=== Succesors ===
trueSuccessor: v2192 
falseSuccessor: v2193 
=== Usages ===
=== Predecessor ===
i2657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2191 #trueSuccessor: v2192 #falseSuccessor: v2193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B99" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v2192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2242  <|@  <|@
f <@~|@floating>@ <|@
tid v2717 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i597 
=== Succesors ===
=== Usages ===
j2392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i597  <|@  <|@
f <@~|@floating>@ <|@
tid j2392 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2390 
address: v2717 
=== Succesors ===
=== Usages ===
v2755 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2390 address: v2717  <|@  <|@
f <@~|@floating>@ <|@
tid v2755 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2392 
index: - 
=== Succesors ===
=== Usages ===
v2568 v2570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2392 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1526 
y: j2438 
=== Succesors ===
=== Usages ===
v2440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j2438  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2439 
y: j1699 
=== Succesors ===
=== Usages ===
v2242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2439 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2440 
=== Succesors ===
trueSuccessor: v2241 
falseSuccessor: v2240 
=== Usages ===
=== Predecessor ===
v2193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2440 #trueSuccessor: v2241 #falseSuccessor: v2240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2245 
=== Usages ===
=== Predecessor ===
v2242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2245  <|@  <|@
f <@*|@fixed>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2225 
=== Predecessor ===
v2241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2570 
=== Usages ===
=== Predecessor ===
v2242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2570  <|@  <|@
f <@~|@floating>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
value: v2597 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2224 
=== Usages ===
=== Predecessor ===
v2240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2755 value: v2597 stateAfter: - lastLocationAccess: - #next: v2224  <|@  <|@
f <@*|@fixed>@ <|@
tid v2224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2225 
=== Predecessor ===
v2570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2393 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v2225 
values: j1724 j1699 
=== Succesors ===
=== Usages ===
v2442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2225 values: j1724 j1699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2224 v2245 
=== Succesors ===
next: v2248 
=== Usages ===
j2393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2224 v2245 #next: v2248  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1528 
y: j2393 
=== Succesors ===
=== Usages ===
v2248 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1528 y: j2393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2248 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2442 
=== Succesors ===
trueSuccessor: v2247 
falseSuccessor: v2246 
=== Usages ===
=== Predecessor ===
v2225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2442 #trueSuccessor: v2247 #falseSuccessor: v2246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2557 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2557  <|@  <|@
f <@*|@fixed>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v2247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2568 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
value: i1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2558 
=== Usages ===
=== Predecessor ===
v2246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2755 value: i1445 stateAfter: - lastLocationAccess: - #next: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v2568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B82" "B92" "B97" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i597 i270 i270 i270 
=== Succesors ===
=== Usages ===
?275 j2004 v1245 i282 v1226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v272 values: i597 i270 i270 i270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v271 v273 v2557 v2558 
=== Succesors ===
next: a2658 
=== Usages ===
i274 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v271 v273 v2557 v2558 #next: a2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2703 
=== Succesors ===
next: v2774 
=== Usages ===
a1213 v2774 v2706 
=== Predecessor ===
v272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2703 #next: v2774  <|@  <|@
tid ?773 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?275 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?773 
values: a710 a627 i274 - - 
=== Succesors ===
=== Usages ===
v1862 v2774 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?773 values: a710 a627 i274 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
object: a2658 
=== Succesors ===
next: i2659 
=== Usages ===
=== Predecessor ===
a2658 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?275 object: a2658 #next: i2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 261]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: v1225 
=== Usages ===
j1999 v1222 v1239 
=== Predecessor ===
v2774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: v1225  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2659 
y: i17 
=== Succesors ===
=== Usages ===
v1225 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2659 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i1864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -320097
stableDimension: 0
stamp: i32 [-320097] ⇊00000000fffb1d9f ⇈00000000fffb1d9f
stampKind: i32
value: int[-320097|0xfffffffffffb1d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1860 i1860 i1860 i1860 i1860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1222 
=== Succesors ===
trueSuccessor: v1224 
falseSuccessor: v1223 
=== Usages ===
=== Predecessor ===
i2659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1222 #trueSuccessor: v1224 #falseSuccessor: v1223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1863  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1232 
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1232  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i17 
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i274 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1226 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1226 #trueSuccessor: v1231 #falseSuccessor: v1227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1947 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1947  <|@  <|@
f <@*|@fixed>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2660 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v2705 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 267]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2705 
=== Succesors ===
next: v1237 
=== Usages ===
j2008 i282 v1233 i1238 i1244 
=== Predecessor ===
v1227 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2705 #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2660 
y: i17 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2660 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v1236 
falseSuccessor: v1234 
=== Usages ===
=== Predecessor ===
i2660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v1236 #falseSuccessor: v1234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2661 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2661  <|@  <|@
f <@~|@floating>@ <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2658 
=== Succesors ===
=== Usages ===
i2661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v1243 
=== Usages ===
i1238 
=== Predecessor ===
v1234 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v1243  <|@  <|@
f <@~|@floating>@ <|@
tid i1238 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2661 
y: i2660 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2661 y: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1238 
y: i2659 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1238 y: i2659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1239 
=== Succesors ===
trueSuccessor: v1242 
falseSuccessor: v1240 
=== Usages ===
=== Predecessor ===
i2661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1239 #trueSuccessor: v1242 #falseSuccessor: v1240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1945 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B110" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1249  <|@  <|@
f <@~|@floating>@ <|@
tid i1244 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2656 
y: i2660 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2656 y: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1244 
y: i274 
=== Succesors ===
=== Usages ===
v1249 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1244 y: i274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1245 
=== Succesors ===
trueSuccessor: v1248 
falseSuccessor: v1246 
=== Usages ===
=== Predecessor ===
v1240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1245 #trueSuccessor: v1248 #falseSuccessor: v1246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575673847185677614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B106" "B104" "B102" 
    successors 
    xhandlers
    flags 
    probability 4585926408733826383
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1860 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-320779 - -320097] ⇊00000000fffb1895 ⇈00000000fffb1fff
valueDescription: i32
=== Inputs ===
merge: v1857 
values: i1864 i1864 i1864 i1864 i1864 
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1857 values: i1864 i1864 i1864 i1864 i1864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1863 v1944 v1945 v1946 v1947 
=== Succesors ===
next: v1862 
=== Usages ===
i1860 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1863 v1944 v1945 v1946 v1947 #next: v1862  <|@  <|@
f <@*|@fixed>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
actionAndReason: i1860 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1857 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?275 actionAndReason: i1860 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B139" 
    xhandlers
    flags 
    probability 4605167443218054429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1998 
=== Usages ===
=== Predecessor ===
v1249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1998  <|@  <|@
f <@~|@floating>@ <|@
tid a1213 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2658 
=== Succesors ===
=== Usages ===
j1998 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1213 
=== Succesors ===
next: j2003 
=== Usages ===
v2726 
=== Predecessor ===
v1246 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1213 #next: j2003  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a627 
=== Succesors ===
next: v2009 
=== Usages ===
v2727 
=== Predecessor ===
j1998 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a627 #next: v2009  <|@  <|@
f <@~|@floating>@ <|@
tid j1999 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2659 
=== Succesors ===
=== Usages ===
v2726 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2659  <|@  <|@
f <@~|@floating>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1998 
index: j1999 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: j1999  <|@  <|@
f <@~|@floating>@ <|@
tid j2004 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i274 
=== Succesors ===
=== Usages ===
v2727 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i274  <|@  <|@
f <@~|@floating>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2003 
index: j2004 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2003 index: j2004  <|@  <|@
f <@~|@floating>@ <|@
tid j2008 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2660 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2726 v2727 j2008 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
j2003 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2726 v2727 j2008 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i274 
y: i2660 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i274 y: i2660  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v2009 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1855 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1855  <|@  <|@
f <@~|@floating>@ <|@
tid i1856 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305179
stableDimension: 0
stamp: i32 [-305179] ⇊00000000fffb57e5 ⇈00000000fffb57e5
stampKind: i32
value: int[-305179|0xfffffffffffb57e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1847 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1853 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1853  <|@  <|@
f <@~|@floating>@ <|@
tid i1854 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303131
stableDimension: 0
stamp: i32 [-303131] ⇊00000000fffb5fe5 ⇈00000000fffb5fe5
stampKind: i32
value: int[-303131|0xfffffffffffb5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1847 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1850 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-305179 - -301835] ⇊00000000fffb44e5 ⇈00000000fffb7ff5
valueDescription: i32
=== Inputs ===
merge: v1847 
values: i1854 i1856 
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1847 values: i1854 i1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1853 v1855 
=== Succesors ===
next: v1852 
=== Usages ===
i1850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1853 v1855 #next: v1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1850 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1847 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1850 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B115" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B78" 
    successors "B116" "B206" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v248 v250 
=== Succesors ===
next: a2662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v248 v250 #next: a2662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2703 
=== Succesors ===
next: i2663 
=== Usages ===
a1262 v2707 
=== Predecessor ===
v249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2703 #next: i2663  <|@  <|@
tid ?775 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?283 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?775 
values: a710 a627 i587 - - 
=== Succesors ===
=== Usages ===
v1870 i2663 i2665 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?775 values: a710 a627 i587 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2662 
=== Succesors ===
=== Usages ===
i2663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?283 
guard: - 
address: v2707 
=== Succesors ===
next: i2664 
=== Usages ===
i1314 v1269 
=== Predecessor ===
a2662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?283 guard: - address: v2707 #next: i2664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 293]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: v1631 
=== Usages ===
v2708 i297 v1269 
=== Predecessor ===
i2663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: v1631  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2664 
y: i2663 
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2664 y: i2663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1269 
=== Succesors ===
trueSuccessor: v1628 
falseSuccessor: v1630 
=== Usages ===
=== Predecessor ===
i2664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1269 #trueSuccessor: v1628 #falseSuccessor: v1630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B205" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2665 
=== Usages ===
i2667 
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?283 
guard: - 
address: v2699 
=== Succesors ===
next: v1639 
=== Usages ===
i1320 v1282 v1288 v1338 v1408 v1398 v1388 v1378 
=== Predecessor ===
v1628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?283 guard: - address: v2699 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i2665 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i587 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v1636 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
i2665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v1636 #falseSuccessor: v1638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B204" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
v1286 
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i591 
y: i2665 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i591 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1642 
=== Usages ===
=== Predecessor ===
v1636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v1640 #falseSuccessor: v1642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2666 
=== Usages ===
v1291 
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2666  <|@  <|@
f <@~|@floating>@ <|@
tid v2776 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 307]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2776 
=== Succesors ===
next: v1647 
=== Usages ===
v293 i303 
=== Predecessor ===
v1640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2776 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2666 
y: i292 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2666 y: i292  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v293 
=== Succesors ===
trueSuccessor: v1646 
falseSuccessor: v1644 
=== Usages ===
=== Predecessor ===
i2666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v293 #trueSuccessor: v1646 #falseSuccessor: v1644  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1875 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid i1876 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -331027
stableDimension: 0
stamp: i32 [-331027] ⇊00000000fffaf2ed ⇈00000000fffaf2ed
stampKind: i32
value: int[-331027|0xfffffffffffaf2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B203" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2666 
y: i153 
=== Succesors ===
=== Usages ===
i304 j2017 i1320 i1314 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2666 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i303 
y: i597 
=== Succesors ===
=== Usages ===
i305 v2709 i375 v1338 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i597  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i304 
y: i2665 
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i304 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1338 
=== Succesors ===
trueSuccessor: v1648 
falseSuccessor: v1650 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1338 #trueSuccessor: v1648 #falseSuccessor: v1650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2667 
=== Usages ===
v1346 
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2667  <|@  <|@
f <@~|@floating>@ <|@
tid a1262 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2662 
=== Succesors ===
=== Usages ===
j2010 v2708 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2662  <|@  <|@
f <@~|@floating>@ <|@
tid v2708 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1262 
index: i2664 
=== Succesors ===
=== Usages ===
i2667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1262 index: i2664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1628 
address: v2708 
=== Succesors ===
next: v1286 
=== Usages ===
v1286 
=== Predecessor ===
v1648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1628 address: v2708 #next: v1286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1636 
address: v2700 
value: i2667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1291 
=== Usages ===
=== Predecessor ===
i2667 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1636 address: v2700 value: i2667 stateAfter: - lastLocationAccess: - #next: v1291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1640 
address: v2701 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1319 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1640 address: v2701 value: i1442 stateAfter: - lastLocationAccess: - #next: v1319  <|@  <|@
f <@~|@floating>@ <|@
tid i1314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2663 
y: i303 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2663 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2664 
y: i4 
=== Succesors ===
=== Usages ===
j2011 v1315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2664 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1314 
y: i297 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1314 y: i297  <|@  <|@
f <@*|@fixed>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1315 
=== Succesors ===
trueSuccessor: v1318 
falseSuccessor: v1316 
=== Usages ===
=== Predecessor ===
v1291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1315 #trueSuccessor: v1318 #falseSuccessor: v1316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1317  <|@  <|@
f <@*|@fixed>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1305 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid i1320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2665 
y: i303 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2665 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1320 
y: i597 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1320 y: i597  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1321 
=== Succesors ===
trueSuccessor: v1324 
falseSuccessor: v1322 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1321 #trueSuccessor: v1324 #falseSuccessor: v1322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1305 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1317 v1323 
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1317 v1323 #next: v1326  <|@  <|@
tid ?777 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?777 
values: a710 a627 i597 - - 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?777 values: a710 a627 i597 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?290 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2010 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1262 
=== Succesors ===
next: j2015 
=== Usages ===
v2728 
=== Predecessor ===
v1322 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1262 #next: j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a627 
=== Succesors ===
next: v2018 
=== Usages ===
v2729 
=== Predecessor ===
j2010 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a627 #next: v2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2011 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i297 
=== Succesors ===
=== Usages ===
v2728 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v2728 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2010 
index: j2011 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2010 index: j2011  <|@  <|@
f <@~|@floating>@ <|@
tid v2729 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2015 
index: i597 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2015 index: i597  <|@  <|@
f <@~|@floating>@ <|@
tid j2017 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2728 v2729 j2017 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
j2015 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2728 v2729 j2017 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i304 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i304  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1648 
address: v2709 
value: i1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v2018 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1648 address: v2709 value: i1452 stateAfter: - lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i304 
y: i4 
=== Succesors ===
=== Usages ===
?308 v2713 i323 v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i304 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v311 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i305 
y: i2665 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i305 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1408 
=== Succesors ===
trueSuccessor: v1652 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1408 #trueSuccessor: v1652 #falseSuccessor: v1654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1415 
=== Usages ===
v1415 
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v2713 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i305 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1652 
address: v2713 
value: i1438 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1652 address: v2713 value: i1438 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i304 
y: i292 
=== Succesors ===
=== Usages ===
i323 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i304 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i4 
y: i577 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4 y: i577  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1653 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1653  <|@  <|@
tid ?779 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?779 
values: a710 a627 i305 - - 
=== Succesors ===
=== Usages ===
v1653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?779 values: a710 a627 i305 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1409
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?308 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i577 
y: i153 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B128" "B130" 
    successors "B132" "B201" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v321 
values: i375 i305 
=== Succesors ===
=== Usages ===
?325 i331 i378 v1378 v2710 i376 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i375 i305  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v321 
values: i317 i319 
=== Succesors ===
=== Usages ===
?325 v327 i332 i486 v338 i487 i458 i455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i317 i319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v320 v322 
=== Succesors ===
next: v1659 
=== Usages ===
i323 i324 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v320 v322 #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i2665 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1378 
=== Succesors ===
trueSuccessor: v1656 
falseSuccessor: v1658 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1378 #trueSuccessor: v1656 #falseSuccessor: v1658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
v1366 v1356 v1386 
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i323 
y: i4 
=== Succesors ===
=== Usages ===
i382 v2711 v1388 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i323 
=== Succesors ===
=== Usages ===
v1386 v1366 v1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i323  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i326 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i326  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v328 #falseSuccessor: v329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i324 
y: i236 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i324 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i332 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2710 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2710 value: i333 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B200" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i331 
y: i2665 
=== Succesors ===
=== Usages ===
v1663 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i331 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1388 
=== Succesors ===
trueSuccessor: v1660 
falseSuccessor: v1662 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1388 #trueSuccessor: v1660 #falseSuccessor: v1662  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
v1396 v1376 
=== Predecessor ===
v1663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i323 
y: i292 
=== Succesors ===
=== Usages ===
v1398 i382 v2712 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid v2711 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i331 
=== Succesors ===
=== Usages ===
v1396 v1376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i331  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 i457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i337 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i337  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i486 i488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i324 
y: i464 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i324 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i486 
y: i292 
=== Succesors ===
=== Usages ===
i452 i2771 i453 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i486 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i2771 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i466 
y: i236 
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i466 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2771 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2710 
value: i344 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2710 value: i344 stateAfter: - lastLocationAccess: - #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i466 
y: i377 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i466 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i466 
y: i4 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i466 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i452 
y: i453 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i452 y: i453  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i324 
y: i454 
=== Succesors ===
=== Usages ===
i349 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i324 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i455 
y: i236 
=== Succesors ===
=== Usages ===
i1375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i455 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i1375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i349 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1660 
address: v2711 
value: i1375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1660 address: v2711 value: i1375 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B199" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i2665 
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1398 
=== Succesors ===
trueSuccessor: v1664 
falseSuccessor: v1666 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1398 #trueSuccessor: v1664 #falseSuccessor: v1666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1386 
=== Usages ===
v1406 
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i324 
y: i470 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i324 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i487 
y: i472 
=== Succesors ===
=== Usages ===
i457 i2772 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i487 y: i472  <|@  <|@
f <@~|@floating>@ <|@
tid i2772 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i473 
y: i236 
=== Succesors ===
=== Usages ===
i354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i473 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2772 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2710 
value: i354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2710 value: i354 stateAfter: - lastLocationAccess: - #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i473 
y: i337 
=== Succesors ===
=== Usages ===
i458 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i473 y: i337  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i324 
y: i457 
=== Succesors ===
=== Usages ===
i477 i488 i463 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i324 y: i457  <|@  <|@
f <@~|@floating>@ <|@
tid i488 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i458 
y: i464 
=== Succesors ===
=== Usages ===
i476 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i458 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i488 
y: i292 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i488 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i458 
y: i467 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i458 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i476 
y: i477 
=== Succesors ===
=== Usages ===
i360 i460 i461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i476 y: i477  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i478 
y: i236 
=== Succesors ===
=== Usages ===
i1395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i478 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i1395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i360 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1660 
address: v2711 
value: i1395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1406 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1660 address: v2711 value: i1395 stateAfter: - lastLocationAccess: - #next: v1406  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i376 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i478 
y: i377 
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i478 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i478 
y: i4 
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i478 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i460 
y: i461 
=== Succesors ===
=== Usages ===
i463 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i460 y: i461  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i458 
y: i462 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i458 y: i462  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i463 
y: i236 
=== Succesors ===
=== Usages ===
i1405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i463 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i1405 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i364 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1664 
address: v2712 
value: i1405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1664 address: v2712 value: i1405 stateAfter: - lastLocationAccess: - #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i323 
y: i377 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B59" "B110" "B133" "B136" "B138" "B71" 
    successors "B140" "B146" 
    xhandlers
    flags 
    probability 4606746645773056613
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v380 
values: i235 i282 i331 i376 i378 i367 
=== Succesors ===
=== Usages ===
?141 j2252 v388 v392 i401 a2096 v1777 i1799 v2119 i2072 v2081 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i235 i282 i331 i376 i378 i367  <|@  <|@
f <@~|@floating>@ <|@
tid a715 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v380 
values: a712 a710 a710 a710 a710 a712 
=== Succesors ===
=== Usages ===
v2714 ?141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: a712 a710 a710 a710 a710 a712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v383 v384 v385 v386 v387 
=== Succesors ===
next: a2668 
=== Usages ===
i382 a715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v383 v384 v385 v386 v387 #next: a2668  <|@  <|@
f <@~|@floating>@ <|@
tid v2714 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a715 
index: - 
=== Succesors ===
=== Usages ===
a2668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a715 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 14]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2714 
=== Succesors ===
next: v2773 
=== Usages ===
v2716 v2773 v2715 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2714 #next: v2773  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: ?148 
values: a715 - i382 
=== Succesors ===
=== Usages ===
v1840 a2096 a2142 a2034 v2773 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a715 - i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
object: a2668 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
a2668 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?141 object: a2668 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i4 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i382 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2063 v2166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2158 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2053 
=== Succesors ===
=== Usages ===
v2745 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2158 
index: - 
=== Succesors ===
=== Usages ===
j2162 j2059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2158 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2034 a2142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2182 j2175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v2773 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v389 #falseSuccessor: v390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1675  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i17 
=== Succesors ===
=== Usages ===
v1675 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i382 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v1674 
falseSuccessor: v1672 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v1674 #falseSuccessor: v1672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1841 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1841  <|@  <|@
f <@~|@floating>@ <|@
tid i1842 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363283
stableDimension: 0
stamp: i32 [-363283] ⇊00000000fffa74ed ⇈00000000fffa74ed
stampKind: i32
value: int[-363283|0xfffffffffffa74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
v1674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2022 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2022 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2041 
=== Usages ===
v2730 v2731 
=== Predecessor ===
v1672 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2041  <|@  <|@
f <@~|@floating>@ <|@
tid v2730 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2022 
index: - 
=== Succesors ===
=== Usages ===
j2041 v2043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2022 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2730 
=== Succesors ===
next: j2042 
=== Usages ===
j2175 j2047 v2748 
=== Predecessor ===
j2022 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2730 #next: j2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2022 
index: - 
=== Succesors ===
=== Usages ===
j2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2022 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2042 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2731 
=== Succesors ===
next: v2030 
=== Usages ===
v2027 
=== Predecessor ===
j2041 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2731 #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid j2175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2041 
y: j929 
=== Succesors ===
=== Usages ===
v2027 v2043 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2041 y: j929  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2042 
y: j2175 
=== Succesors ===
=== Usages ===
v2030 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2042 y: j2175  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2027 
=== Succesors ===
trueSuccessor: v2028 
falseSuccessor: v2029 
=== Usages ===
=== Predecessor ===
j2042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2027 #trueSuccessor: v2028 #falseSuccessor: v2029  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4561287956867168280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2034 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2034 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2020 i292 i4 
=== Succesors ===
next: j2035 
=== Usages ===
j2035 
=== Predecessor ===
v2028 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2020 i292 i4 #next: j2035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2035 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2034 
=== Succesors ===
next: v2048 
=== Usages ===
j2047 
=== Predecessor ===
a2034 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2034 #next: v2048  <|@  <|@
f <@*|@fixed>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
j2035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4590966956803509341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2043 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2730 
value: j2175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2039 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2730 value: j2175 stateAfter: - lastLocationAccess: - #next: v2039  <|@  <|@
f <@~|@floating>@ <|@
tid v2748 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: - 
=== Succesors ===
=== Usages ===
v2039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2039 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2748 
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v2043 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2748 #next: v2046  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
v2039 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2047 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2045 
values: j2041 j2035 
=== Succesors ===
=== Usages ===
v2733 v2732 a1701 v2749 v2750 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2045 values: j2041 j2035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2046 v2048 
=== Succesors ===
next: a1701 
=== Usages ===
j2047 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2046 v2048 #next: a1701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1701 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2047 
=== Succesors ===
next: j2059 
=== Usages ===
a1707 
=== Predecessor ===
v2045 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2047 #next: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2745 
=== Succesors ===
next: v2060 
=== Usages ===
v2060 
=== Predecessor ===
a1701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2745 #next: v2060  <|@  <|@
f <@~|@floating>@ <|@
tid v2732 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2732 
value: j2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2063 
=== Usages ===
=== Predecessor ===
j2059 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2732 value: j2059 stateAfter: - lastLocationAccess: - #next: v2063  <|@  <|@
f <@~|@floating>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2733 
value: v2178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v2060 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2733 value: v2178 stateAfter: - lastLocationAccess: - #next: v2067  <|@  <|@
f <@~|@floating>@ <|@
tid v2749 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2749 
value: a1723 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2069 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2749 value: a1723 stateAfter: - lastLocationAccess: - #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2750 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1707 
=== Usages ===
=== Predecessor ===
v2067 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2750 value: i17 stateAfter: - lastLocationAccess: - #next: a1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1707 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1701 
=== Succesors ===
next: v1708 
=== Usages ===
v414 
=== Predecessor ===
v2069 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1701 #next: v1708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
a1707 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1707 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1707 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B147" "B149" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2669 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2669  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2668 
=== Succesors ===
=== Usages ===
i2669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2715 
=== Succesors ===
next: v1679 
=== Usages ===
i401 i1799 v1777 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2715 #next: v1679  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2669 
y: i382 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2669 y: i382  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i401 
y: i17 
=== Succesors ===
=== Usages ===
v1679 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i401 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v1678 
falseSuccessor: v1676 
=== Usages ===
=== Predecessor ===
i2669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v1678 #falseSuccessor: v1676  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
v1679 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid i1844 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -365843
stableDimension: 0
stamp: i32 [-365843] ⇊00000000fffa6aed ⇈00000000fffa6aed
stampKind: i32
value: int[-365843|0xfffffffffffa6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
v1678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B141" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1838 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-386571 - -363283] ⇊00000000fffa00e5 ⇈00000000fffa7ffd
valueDescription: i32
=== Inputs ===
merge: v1835 
values: i1842 i1844 
=== Succesors ===
=== Usages ===
v1840 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1835 values: i1842 i1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1841 v1843 
=== Succesors ===
next: v1840 
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1841 v1843 #next: v1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
actionAndReason: i1838 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?141 actionAndReason: i1838 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B150" "B153" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2075 
=== Usages ===
=== Predecessor ===
v1679 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2075 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2116 
=== Usages ===
v2734 v2735 
=== Predecessor ===
v1676 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2075 
index: - 
=== Succesors ===
=== Usages ===
j2116 v2118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2075 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
=== Succesors ===
next: j2117 
=== Usages ===
j2079 v2736 v2737 a2095 v2742 v2738 v2739 v2740 v2741 
=== Predecessor ===
j2075 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2734 #next: j2117  <|@  <|@
f <@~|@floating>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2075 
index: - 
=== Succesors ===
=== Usages ===
j2117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2075 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2735 
=== Succesors ===
next: v2084 
=== Usages ===
v2085 
=== Predecessor ===
j2116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2735 #next: v2084  <|@  <|@
f <@~|@floating>@ <|@
tid i2080 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i2080 
=== Succesors ===
=== Usages ===
v2084 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i382 y: i2080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2081 
=== Succesors ===
trueSuccessor: v2083 
falseSuccessor: v2082 
=== Usages ===
=== Predecessor ===
j2117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2081 #trueSuccessor: v2083 #falseSuccessor: v2082  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4605173305861603092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2091 
=== Usages ===
=== Predecessor ===
v2084 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2091  <|@  <|@
f <@~|@floating>@ <|@
tid i2072 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i382 
y: i4 
=== Succesors ===
=== Usages ===
i2104 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i382 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2072 
y: i2103 
=== Succesors ===
=== Usages ===
i2074 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2072 y: i2103  <|@  <|@
f <@~|@floating>@ <|@
tid i2073 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2074 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2104 
y: i2073 
=== Succesors ===
=== Usages ===
j2078 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2104 y: i2073  <|@  <|@
f <@~|@floating>@ <|@
tid j2078 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2074 
=== Succesors ===
=== Usages ===
j2079 v2738 v2739 v2740 v2741 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2074  <|@  <|@
f <@~|@floating>@ <|@
tid j2079 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
x: j2078 
y: j2116 
=== Succesors ===
=== Usages ===
v2085 v2118 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2078 y: j2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2085 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2117 
y: j2079 
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2117 y: j2079  <|@  <|@
f <@*|@fixed>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2085 
=== Succesors ===
trueSuccessor: v2090 
falseSuccessor: v2089 
=== Usages ===
=== Predecessor ===
v2083 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2085 #trueSuccessor: v2090 #falseSuccessor: v2089  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" 
    xhandlers
    flags 
    probability 4575607572638581097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2088 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2088  <|@  <|@
f <@*|@fixed>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2087 
=== Predecessor ===
v2090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4605103324998439825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2118 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
value: j2079 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2089 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2734 value: j2079 stateAfter: - lastLocationAccess: - #next: v2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2738 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2738 
=== Succesors ===
next: v2108 
=== Usages ===
=== Predecessor ===
v2118 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2738 #next: v2108  <|@  <|@
f <@~|@floating>@ <|@
tid v2739 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2739 
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2739 #next: v2111  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2740 
=== Succesors ===
next: v2114 
=== Usages ===
=== Predecessor ===
v2108 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2740 #next: v2114  <|@  <|@
f <@~|@floating>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2741 
=== Succesors ===
next: v2119 
=== Usages ===
=== Predecessor ===
v2111 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2741 #next: v2119  <|@  <|@
f <@~|@floating>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2116 
index: - 
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
value: i382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2120 
=== Usages ===
=== Predecessor ===
v2114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2736 value: i382 stateAfter: - lastLocationAccess: - #next: v2120  <|@  <|@
f <@~|@floating>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2116 
index: - 
=== Succesors ===
=== Usages ===
v2120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
value: j2071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2123 
=== Usages ===
=== Predecessor ===
v2119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2737 value: j2071 stateAfter: - lastLocationAccess: - #next: v2123  <|@  <|@
f <@~|@floating>@ <|@
tid v2742 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2116 
index: - 
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2116 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2742 
value: v2181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2094 
=== Usages ===
=== Predecessor ===
v2120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2742 value: v2181 stateAfter: - lastLocationAccess: - #next: v2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2094 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2095 
=== Usages ===
=== Predecessor ===
v2123 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2116 
=== Succesors ===
next: v2097 
=== Usages ===
a2100 
=== Predecessor ===
v2094 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2116 #next: v2097  <|@  <|@
f <@*|@fixed>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
a2095 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4590884941833233083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2086 
=== Usages ===
=== Predecessor ===
v2084 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2086  <|@  <|@
f <@*|@fixed>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2087 
=== Predecessor ===
v2082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4591444788738539218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2086 v2088 
=== Succesors ===
next: a2096 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2086 v2088 #next: a2096  <|@  <|@
f <@~|@floating>@ <|@
tid v2070 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2096 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2096 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2070 i382 i17 
=== Succesors ===
next: v2099 
=== Usages ===
a2100 
=== Predecessor ===
v2087 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2070 i382 i17 #next: v2099  <|@  <|@
f <@*|@fixed>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
a2096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B152" "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2098 
values: a2095 a2096 
=== Succesors ===
=== Usages ===
v2754 a1811 v2718 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2098 values: a2095 a2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2097 v2099 
=== Succesors ===
next: v2445 
=== Usages ===
a2100 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2097 v2099 #next: v2445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2265 
=== Usages ===
j2446 j2448 
=== Predecessor ===
v2098 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2265  <|@  <|@
f <@~|@floating>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2669 
y: i382 
=== Succesors ===
=== Usages ===
i1799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2669 y: i382  <|@  <|@
f <@~|@floating>@ <|@
tid i1799 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1777 
trueValue: i2669 
falseValue: i382 
=== Succesors ===
=== Usages ===
j2253 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1777 trueValue: i2669 falseValue: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j2253 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1799 
=== Succesors ===
=== Usages ===
j2503 v2754 j2257 v2262 v2387 j2489 j2494 j2497 j2500 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1799  <|@  <|@
f <@~|@floating>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2253 
y: j2071 
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2253 y: j2071  <|@  <|@
f <@~|@floating>@ <|@
tid j2410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2527 j2472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2548 j2497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1964 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2480 j2533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2545 j2494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2540 j2489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2262 
=== Succesors ===
trueSuccessor: v2263 
falseSuccessor: v2264 
=== Usages ===
=== Predecessor ===
v2445 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2262 #trueSuccessor: v2263 #falseSuccessor: v2264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B174" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2281 
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2281  <|@  <|@
f <@*|@fixed>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
v2263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2268 
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2268  <|@  <|@
f <@~|@floating>@ <|@
tid v2718 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2100 
index: - 
=== Succesors ===
=== Usages ===
j2448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2448 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2445 
address: v2718 
=== Succesors ===
=== Usages ===
v2756 v2758 v2760 v2762 v2764 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2445 address: v2718  <|@  <|@
f <@~|@floating>@ <|@
tid v2716 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2668 
=== Succesors ===
=== Usages ===
j2446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2668  <|@  <|@
f <@~|@floating>@ <|@
tid j2446 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2445 
address: v2716 
=== Succesors ===
=== Usages ===
v2757 v2759 v2761 v2763 v2765 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2445 address: v2716  <|@  <|@
f <@~|@floating>@ <|@
tid j2489 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2253 
y: j2424 
=== Succesors ===
=== Usages ===
v2490 v2492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2424  <|@  <|@
f <@~|@floating>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2489 
y: j1699 
=== Succesors ===
=== Usages ===
v2268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2489 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2490 
=== Succesors ===
trueSuccessor: v2266 
falseSuccessor: v2267 
=== Usages ===
=== Predecessor ===
v2264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2490 #trueSuccessor: v2266 #falseSuccessor: v2267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2277 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2277  <|@  <|@
f <@*|@fixed>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
v2266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2269 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2269  <|@  <|@
f <@*|@fixed>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v2267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B198" 
    successors "B161" "B198" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2481 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2270 
values: j1699 j2488 
=== Succesors ===
=== Usages ===
v2765 j2488 v2764 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2270 values: j1699 j2488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2269 
=== Succesors ===
next: v2670 
=== Usages ===
v2670 v2273 v2274 j2481 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2269 #next: v2670  <|@  <|@
f <@~|@floating>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2481 
=== Succesors ===
=== Usages ===
v2670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2270 
address: v2765 
=== Succesors ===
next: v2585 
=== Usages ===
v2585 
=== Predecessor ===
v2270 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2270 address: v2765 #next: v2585  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2481 
=== Succesors ===
=== Usages ===
v2585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2764 
value: v2670 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2276 
=== Usages ===
=== Predecessor ===
v2670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2764 value: v2670 stateAfter: - lastLocationAccess: - #next: v2276  <|@  <|@
f <@~|@floating>@ <|@
tid j2488 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2481 
y: j924 
=== Succesors ===
=== Usages ===
j2473 j2481 v2492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j924  <|@  <|@
f <@~|@floating>@ <|@
tid v2492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2489 
y: j2488 
=== Succesors ===
=== Usages ===
v2276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2489 y: j2488  <|@  <|@
f <@*|@fixed>@ <|@
tid v2276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2492 
=== Succesors ===
trueSuccessor: v2273 
falseSuccessor: v2275 
=== Usages ===
=== Predecessor ===
v2585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2492 #trueSuccessor: v2273 #falseSuccessor: v2275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2270 
=== Succesors ===
next: v2279 
=== Usages ===
=== Predecessor ===
v2276 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2270 #next: v2279  <|@  <|@
f <@*|@fixed>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
v2273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B158" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2473 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2278 
values: j1699 j2488 
=== Succesors ===
=== Usages ===
v2763 j2480 j2465 v2495 v2762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2278 values: j1699 j2488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2277 v2279 
=== Succesors ===
next: v2300 
=== Usages ===
j2473 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2277 v2279 #next: v2300  <|@  <|@
f <@~|@floating>@ <|@
tid j2494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2253 
y: j2430 
=== Succesors ===
=== Usages ===
v2495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2430  <|@  <|@
f <@~|@floating>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2494 
y: j2473 
=== Succesors ===
=== Usages ===
v2300 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2494 y: j2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2495 
=== Succesors ===
trueSuccessor: v2299 
falseSuccessor: v2298 
=== Usages ===
=== Predecessor ===
v2278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2495 #trueSuccessor: v2299 #falseSuccessor: v2298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2303 
=== Usages ===
=== Predecessor ===
v2300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2303  <|@  <|@
f <@*|@fixed>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2289 
=== Predecessor ===
v2299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2671 
=== Usages ===
v2671 
=== Predecessor ===
v2300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2671  <|@  <|@
f <@~|@floating>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2473 
=== Succesors ===
=== Usages ===
v2671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2298 
address: v2763 
=== Succesors ===
next: v2583 
=== Usages ===
v2583 
=== Predecessor ===
v2298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2298 address: v2763 #next: v2583  <|@  <|@
f <@~|@floating>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2473 
=== Succesors ===
=== Usages ===
v2583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2762 
value: v2671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v2671 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2762 value: v2671 stateAfter: - lastLocationAccess: - #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid j2480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2473 
y: j1964 
=== Succesors ===
=== Usages ===
j2465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2473 y: j1964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2289 
=== Predecessor ===
v2583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2465 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2289 
values: j2480 j2473 
=== Succesors ===
=== Usages ===
v2761 j2472 j2457 v2498 v2760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2289 values: j2480 j2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2288 v2303 
=== Succesors ===
next: v2306 
=== Usages ===
j2465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2288 v2303 #next: v2306  <|@  <|@
f <@~|@floating>@ <|@
tid j2497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2253 
y: j2434 
=== Succesors ===
=== Usages ===
v2498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2434  <|@  <|@
f <@~|@floating>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2497 
y: j2465 
=== Succesors ===
=== Usages ===
v2306 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2497 y: j2465  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2498 
=== Succesors ===
trueSuccessor: v2305 
falseSuccessor: v2304 
=== Usages ===
=== Predecessor ===
v2289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2498 #trueSuccessor: v2305 #falseSuccessor: v2304  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2309 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2309  <|@  <|@
f <@*|@fixed>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
v2305 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2672 
=== Usages ===
v2672 
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2672  <|@  <|@
f <@~|@floating>@ <|@
tid v2761 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2465 
=== Succesors ===
=== Usages ===
v2672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2304 
address: v2761 
=== Succesors ===
next: v2581 
=== Usages ===
v2581 
=== Predecessor ===
v2304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2304 address: v2761 #next: v2581  <|@  <|@
f <@~|@floating>@ <|@
tid v2760 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2465 
=== Succesors ===
=== Usages ===
v2581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2760 
value: v2672 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v2672 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2760 value: v2672 stateAfter: - lastLocationAccess: - #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid j2472 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2465 
y: j2410 
=== Succesors ===
=== Usages ===
j2457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2410  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
v2581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2457 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2292 
values: j2472 j2465 
=== Succesors ===
=== Usages ===
v2759 j2464 j2449 v2501 v2758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2292 values: j2472 j2465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2291 v2309 
=== Succesors ===
next: v2312 
=== Usages ===
j2457 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2291 v2309 #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid j2500 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2253 
y: j2438 
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2438  <|@  <|@
f <@~|@floating>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2500 
y: j2457 
=== Succesors ===
=== Usages ===
v2312 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2500 y: j2457  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2501 
=== Succesors ===
trueSuccessor: v2311 
falseSuccessor: v2310 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2501 #trueSuccessor: v2311 #falseSuccessor: v2310  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2315 
=== Usages ===
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2315  <|@  <|@
f <@*|@fixed>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2295 
=== Predecessor ===
v2311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2673 
=== Usages ===
v2673 
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2673  <|@  <|@
f <@~|@floating>@ <|@
tid v2759 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2457 
=== Succesors ===
=== Usages ===
v2673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2673 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2310 
address: v2759 
=== Succesors ===
next: v2579 
=== Usages ===
v2579 
=== Predecessor ===
v2310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2310 address: v2759 #next: v2579  <|@  <|@
f <@~|@floating>@ <|@
tid v2758 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2457 
=== Succesors ===
=== Usages ===
v2579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2758 
value: v2673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2294 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2758 value: v2673 stateAfter: - lastLocationAccess: - #next: v2294  <|@  <|@
f <@~|@floating>@ <|@
tid j2464 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2457 
y: j1724 
=== Succesors ===
=== Usages ===
j2449 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2457 y: j1724  <|@  <|@
f <@*|@fixed>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2295 
=== Predecessor ===
v2579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2449 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2295 
values: j2464 j2457 
=== Succesors ===
=== Usages ===
v2757 v2504 v2756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2295 values: j2464 j2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2294 v2315 
=== Succesors ===
next: v2318 
=== Usages ===
j2449 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2294 v2315 #next: v2318  <|@  <|@
f <@~|@floating>@ <|@
tid j2503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2253 
y: j1527 
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j1527  <|@  <|@
f <@~|@floating>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2503 
y: j2449 
=== Succesors ===
=== Usages ===
v2318 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2503 y: j2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v2318 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2504 
=== Succesors ===
trueSuccessor: v2317 
falseSuccessor: v2316 
=== Usages ===
=== Predecessor ===
v2295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2504 #trueSuccessor: v2317 #falseSuccessor: v2316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2321 
=== Usages ===
=== Predecessor ===
v2318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2321  <|@  <|@
f <@*|@fixed>@ <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
v2317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2674 
=== Usages ===
i2674 
=== Predecessor ===
v2318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2674  <|@  <|@
f <@~|@floating>@ <|@
tid v2757 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2449 
=== Succesors ===
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2674 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2316 
address: v2757 
=== Succesors ===
next: v2577 
=== Usages ===
v2577 
=== Predecessor ===
v2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2316 address: v2757 #next: v2577  <|@  <|@
f <@~|@floating>@ <|@
tid v2756 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2449 
=== Succesors ===
=== Usages ===
v2577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2756 
value: i2674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2297 
=== Usages ===
=== Predecessor ===
i2674 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2756 value: i2674 stateAfter: - lastLocationAccess: - #next: v2297  <|@  <|@
f <@*|@fixed>@ <|@
tid v2297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
v2577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B156" "B173" "B172" 
    successors "B175" "B193" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2281 v2297 v2321 
=== Succesors ===
next: v2507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2281 v2297 v2321 #next: v2507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2328 
=== Usages ===
j2509 
=== Predecessor ===
v2282 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2328  <|@  <|@
f <@~|@floating>@ <|@
tid j2252 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j2257 v2387 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2253 
y: j2252 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2253 y: j2252  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2387 
=== Succesors ===
trueSuccessor: v2327 
falseSuccessor: v2326 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2387 #trueSuccessor: v2327 #falseSuccessor: v2326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2100 
index: j2253 
=== Succesors ===
=== Usages ===
j2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2100 index: j2253  <|@  <|@
f <@~|@floating>@ <|@
tid j2509 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2507 
address: v2754 
=== Succesors ===
=== Usages ===
v2766 v2767 v2768 v2769 v2770 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2507 address: v2754  <|@  <|@
f <@~|@floating>@ <|@
tid j2257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2252 
y: j2253 
=== Succesors ===
=== Usages ===
j2554 j2540 j2545 j2548 j2551 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2252 y: j2253  <|@  <|@
f <@~|@floating>@ <|@
tid j2540 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2257 
y: j2424 
=== Succesors ===
=== Usages ===
v2541 v2543 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2424  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2540 
y: j1699 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2540 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2541 
=== Succesors ===
trueSuccessor: v2329 
falseSuccessor: v2330 
=== Usages ===
=== Predecessor ===
v2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2541 #trueSuccessor: v2329 #falseSuccessor: v2330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B180" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2332 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2332  <|@  <|@
f <@~|@floating>@ <|@
tid v2600 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
v2330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B192" 
    successors "B179" "B192" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2534 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2333 
values: j1699 j2539 
=== Succesors ===
=== Usages ===
v2770 j2539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2333 values: j1699 j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2332 
=== Succesors ===
next: v2595 
=== Usages ===
j2534 v2336 v2337 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2332 #next: v2595  <|@  <|@
f <@~|@floating>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2534 
=== Succesors ===
=== Usages ===
v2595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2770 
value: v2600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2339 
=== Usages ===
=== Predecessor ===
v2333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2770 value: v2600 stateAfter: - lastLocationAccess: - #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid j2539 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2534 
y: j924 
=== Succesors ===
=== Usages ===
j2528 j2534 v2543 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2534 y: j924  <|@  <|@
f <@~|@floating>@ <|@
tid v2543 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2540 
y: j2539 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2540 y: j2539  <|@  <|@
f <@*|@fixed>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2543 
=== Succesors ===
trueSuccessor: v2336 
falseSuccessor: v2338 
=== Usages ===
=== Predecessor ===
v2595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2543 #trueSuccessor: v2336 #falseSuccessor: v2338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2333 
=== Succesors ===
next: v2342 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2333 #next: v2342  <|@  <|@
f <@*|@fixed>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B176" "B179" 
    successors "B181" "B182" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2528 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2341 
values: j1699 j2539 
=== Succesors ===
=== Usages ===
v2769 j2533 j2522 v2546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2341 values: j1699 j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2340 v2342 
=== Succesors ===
next: v2363 
=== Usages ===
j2528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2340 v2342 #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid j2545 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2257 
y: j2430 
=== Succesors ===
=== Usages ===
v2546 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2430  <|@  <|@
f <@~|@floating>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2545 
y: j2528 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2545 y: j2528  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2546 
=== Succesors ===
trueSuccessor: v2362 
falseSuccessor: v2361 
=== Usages ===
=== Predecessor ===
v2341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2546 #trueSuccessor: v2362 #falseSuccessor: v2361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2366 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2594 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2594  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2528 
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2528  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
value: v2604 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2769 value: v2604 stateAfter: - lastLocationAccess: - #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid j2533 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2528 
y: j1964 
=== Succesors ===
=== Usages ===
j2522 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2528 y: j1964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2522 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2352 
values: j2533 j2528 
=== Succesors ===
=== Usages ===
v2768 j2527 j2516 v2549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2352 values: j2533 j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2351 v2366 
=== Succesors ===
next: v2369 
=== Usages ===
j2522 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2351 v2366 #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid j2548 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2257 
y: j2434 
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2434  <|@  <|@
f <@~|@floating>@ <|@
tid v2549 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2548 
y: j2522 
=== Succesors ===
=== Usages ===
v2369 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2548 y: j2522  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2549 
=== Succesors ===
trueSuccessor: v2368 
falseSuccessor: v2367 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2549 #trueSuccessor: v2368 #falseSuccessor: v2367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2592 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2592  <|@  <|@
f <@~|@floating>@ <|@
tid v2768 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2522 
=== Succesors ===
=== Usages ===
v2592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2522  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2592 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
value: v2603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2354 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2768 value: v2603 stateAfter: - lastLocationAccess: - #next: v2354  <|@  <|@
f <@~|@floating>@ <|@
tid j2527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2522 
y: j2410 
=== Succesors ===
=== Usages ===
j2516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2522 y: j2410  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B184" 
    successors "B187" "B188" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2516 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2355 
values: j2527 j2522 
=== Succesors ===
=== Usages ===
v2767 j2521 j2510 v2552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2355 values: j2527 j2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2354 v2372 
=== Succesors ===
next: v2375 
=== Usages ===
j2516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2354 v2372 #next: v2375  <|@  <|@
f <@~|@floating>@ <|@
tid j2551 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2257 
y: j2438 
=== Succesors ===
=== Usages ===
v2552 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2438  <|@  <|@
f <@~|@floating>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2551 
y: j2516 
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2551 y: j2516  <|@  <|@
f <@*|@fixed>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2552 
=== Succesors ===
trueSuccessor: v2374 
falseSuccessor: v2373 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2552 #trueSuccessor: v2374 #falseSuccessor: v2373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2378 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2378  <|@  <|@
f <@*|@fixed>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2590 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2590  <|@  <|@
f <@~|@floating>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2516 
=== Succesors ===
=== Usages ===
v2590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2516  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2767 
value: v2602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2767 value: v2602 stateAfter: - lastLocationAccess: - #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid j2521 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2516 
y: j1724 
=== Succesors ===
=== Usages ===
j2510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2516 y: j1724  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2510 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2358 
values: j2521 j2516 
=== Succesors ===
=== Usages ===
v2766 v2555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2358 values: j2521 j2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2357 v2378 
=== Succesors ===
next: v2381 
=== Usages ===
j2510 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2357 v2378 #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid j2554 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2257 
y: j1527 
=== Succesors ===
=== Usages ===
v2555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j1527  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2554 
y: j2510 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2554 y: j2510  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2555 
=== Succesors ===
trueSuccessor: v2380 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
v2358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2555 #trueSuccessor: v2380 #falseSuccessor: v2379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2588 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2510 
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2510  <|@  <|@
f <@~|@floating>@ <|@
tid i2601 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2766 
value: i2601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v2379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2766 value: i2601 stateAfter: - lastLocationAccess: - #next: v2360  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B178" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2337  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2333 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B194" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2344 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2344  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" "B191" "B190" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2344 v2360 v2384 
=== Succesors ===
next: a1811 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2344 v2360 v2384 #next: a1811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2100 
=== Succesors ===
next: j2131 
=== Usages ===
a1714 
=== Predecessor ===
v2345 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2100 #next: j2131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2131 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2146 
=== Usages ===
v2743 v2744 
=== Predecessor ===
a1811 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2146  <|@  <|@
f <@~|@floating>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2131 
index: - 
=== Succesors ===
=== Usages ===
j2146 v2148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2743 
=== Succesors ===
next: j2147 
=== Usages ===
j2182 j2152 v2751 
=== Predecessor ===
j2131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2743 #next: j2147  <|@  <|@
f <@~|@floating>@ <|@
tid v2744 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2131 
index: - 
=== Succesors ===
=== Usages ===
j2147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2744 
=== Succesors ===
next: v2139 
=== Usages ===
v2136 
=== Predecessor ===
j2146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2744 #next: v2139  <|@  <|@
f <@~|@floating>@ <|@
tid j2182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2146 
y: j929 
=== Succesors ===
=== Usages ===
v2136 v2148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2146 y: j929  <|@  <|@
f <@~|@floating>@ <|@
tid v2136 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2147 
y: j2182 
=== Succesors ===
=== Usages ===
v2139 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2147 y: j2182  <|@  <|@
f <@*|@fixed>@ <|@
tid v2139 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2136 
=== Succesors ===
trueSuccessor: v2137 
falseSuccessor: v2138 
=== Usages ===
=== Predecessor ===
j2147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2136 #trueSuccessor: v2137 #falseSuccessor: v2138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4576130038717107969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2142 
=== Usages ===
=== Predecessor ===
v2139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2142 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2020 i292 i4 
=== Succesors ===
next: j2143 
=== Usages ===
j2143 
=== Predecessor ===
v2137 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2020 i292 i4 #next: j2143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2143 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2142 
=== Succesors ===
next: v2153 
=== Usages ===
j2152 
=== Predecessor ===
a2142 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2142 #next: v2153  <|@  <|@
f <@*|@fixed>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
j2143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4605873114493235759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2148 
=== Usages ===
=== Predecessor ===
v2139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2743 
value: j2182 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2145 
=== Usages ===
=== Predecessor ===
v2138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2743 value: j2182 stateAfter: - lastLocationAccess: - #next: v2145  <|@  <|@
f <@~|@floating>@ <|@
tid v2751 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2146 
index: - 
=== Succesors ===
=== Usages ===
v2145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2751 
=== Succesors ===
next: v2151 
=== Usages ===
=== Predecessor ===
v2148 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2751 #next: v2151  <|@  <|@
f <@*|@fixed>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
v2145 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B195" 
    successors 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2152 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2150 
values: j2146 j2143 
=== Succesors ===
=== Usages ===
v2747 v2746 a1711 v2752 v2753 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2150 values: j2146 j2143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2151 v2153 
=== Succesors ===
next: a1711 
=== Usages ===
j2152 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2151 v2153 #next: a1711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1711 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2152 
=== Succesors ===
next: j2162 
=== Usages ===
a1717 
=== Predecessor ===
v2150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2152 #next: j2162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2745 
=== Succesors ===
next: v2163 
=== Usages ===
v2163 
=== Predecessor ===
a1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2745 #next: v2163  <|@  <|@
f <@~|@floating>@ <|@
tid v2746 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2746 
value: j2162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2166 
=== Usages ===
=== Predecessor ===
j2162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2746 value: j2162 stateAfter: - lastLocationAccess: - #next: v2166  <|@  <|@
f <@~|@floating>@ <|@
tid v2747 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2747 
value: v2178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2170 
=== Usages ===
=== Predecessor ===
v2163 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2747 value: v2178 stateAfter: - lastLocationAccess: - #next: v2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2752 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1714 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1811 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2752 
value: a1714 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2172 
=== Usages ===
=== Predecessor ===
v2166 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2752 value: a1714 stateAfter: - lastLocationAccess: - #next: v2172  <|@  <|@
f <@~|@floating>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2753 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1717 
=== Usages ===
=== Predecessor ===
v2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2753 value: i17 stateAfter: - lastLocationAccess: - #next: a1717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1717 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1711 
=== Succesors ===
next: v1718 
=== Usages ===
v415 
=== Predecessor ===
v2172 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1711 #next: v1718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
a1717 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1717 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1717 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2274 
=== Usages ===
=== Predecessor ===
v2276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2274  <|@  <|@
f <@*|@fixed>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2270 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2275 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1891 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1891  <|@  <|@
f <@~|@floating>@ <|@
tid i1892 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -358171
stableDimension: 0
stamp: i32 [-358171] ⇊00000000fffa88e5 ⇈00000000fffa88e5
stampKind: i32
value: int[-358171|0xfffffffffffa88e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1889 
=== Usages ===
=== Predecessor ===
v1663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid i1890 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -386331
stableDimension: 0
stamp: i32 [-386331] ⇊00000000fffa1ae5 ⇈00000000fffa1ae5
stampKind: i32
value: int[-386331|0xfffffffffffa1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1884 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid i1885 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -388123
stableDimension: 0
stamp: i32 [-388123] ⇊00000000fffa13e5 ⇈00000000fffa13e5
stampKind: i32
value: int[-388123|0xfffffffffffa13e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B200" "B199" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1886 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-388123 - -358171] ⇊00000000fffa00e5 ⇈00000000fffa9be5
valueDescription: i32
=== Inputs ===
merge: v1883 
values: i1885 i1890 i1892 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1883 values: i1885 i1890 i1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1884 v1889 v1891 
=== Succesors ===
next: v1888 
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1884 v1889 v1891 #next: v1888  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?325 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?781 
values: - a627 i323 i324 - 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?781 values: - a627 i323 i324 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?325 
actionAndReason: i1886 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?325 actionAndReason: i1886 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1881 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1881  <|@  <|@
f <@~|@floating>@ <|@
tid i1882 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342811
stableDimension: 0
stamp: i32 [-342811] ⇊00000000fffac4e5 ⇈00000000fffac4e5
stampKind: i32
value: int[-342811|0xfffffffffffac4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1879 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1879  <|@  <|@
f <@~|@floating>@ <|@
tid i1880 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330011
stableDimension: 0
stamp: i32 [-330011] ⇊00000000fffaf6e5 ⇈00000000fffaf6e5
stampKind: i32
value: int[-330011|0xfffffffffffaf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1877  <|@  <|@
f <@~|@floating>@ <|@
tid i1878 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328475
stableDimension: 0
stamp: i32 [-328475] ⇊00000000fffafce5 ⇈00000000fffafce5
stampKind: i32
value: int[-328475|0xfffffffffffafce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -325147
stableDimension: 0
stamp: i32 [-325147] ⇊00000000fffb09e5 ⇈00000000fffb09e5
stampKind: i32
value: int[-325147|0xfffffffffffb09e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B119" "B205" "B204" "B203" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1868 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-342811 - -323851] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1865 
values: i1874 i1876 i1878 i1880 i1882 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1865 values: i1874 i1876 i1878 i1880 i1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1873 v1875 v1877 v1879 v1881 
=== Succesors ===
next: v1870 
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1873 v1875 v1877 v1879 v1881 #next: v1870  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?283 
actionAndReason: i1868 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1865 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?283 actionAndReason: i1868 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1908 
=== Usages ===
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid i1910 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250147
stableDimension: 0
stamp: i32 [-250147] ⇊00000000fffc2edd ⇈00000000fffc2edd
stampKind: i32
value: int[-250147|0xfffffffffffc2edd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?520 
actionAndReason: i1910 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1958 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?520 actionAndReason: i1910 speculation: a1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1901 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1901  <|@  <|@
f <@~|@floating>@ <|@
tid i1902 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -247315
stableDimension: 0
stamp: i32 [-247315] ⇊00000000fffc39ed ⇈00000000fffc39ed
stampKind: i32
value: int[-247315|0xfffffffffffc39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1900 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244251
stableDimension: 0
stamp: i32 [-244251] ⇊00000000fffc45e5 ⇈00000000fffc45e5
stampKind: i32
value: int[-244251|0xfffffffffffc45e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1896 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-247315 - -242699] ⇊00000000fffc01e5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1893 
values: i1900 i1902 
=== Succesors ===
=== Usages ===
v1898 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1893 values: i1900 i1902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1899 v1901 
=== Succesors ===
next: v1898 
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1899 v1901 #next: v1898  <|@  <|@
f <@*|@fixed>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?496 
actionAndReason: i1896 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1893 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?496 actionAndReason: i1896 speculation: a1829  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: d2635 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: d2635  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Double;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2676 ?7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2676 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
d2635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d2635 <|@
result v1|DOUBLE <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Double.value
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
nullCheck: false
stamp: f64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2676 
=== Succesors ===
next: a2636 
=== Usages ===
j15 ?8 ?9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2676 #next: a2636  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@org.graalvm.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2675 <|@
result [r15|QWORD + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times1
stamp: void*
=== Inputs ===
base: j101 
index: - 
=== Succesors ===
=== Usages ===
a2636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j101 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2636 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: JavaThread::_threadObj:final
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.lang.ThreadLocal.get(ThreadLocal.java:160) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: a! Ljava/lang/Thread;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2675 
=== Succesors ===
next: a2637 
=== Usages ===
v2679 
=== Predecessor ===
d2635 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2675 #next: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid v2679 <|@
result [v2|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a2636 
index: - 
=== Succesors ===
=== Usages ===
a2637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2636 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2637 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Thread.threadLocals
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2679 
=== Succesors ===
next: v33 
=== Usages ===
a939 v1430 v2634 v2680 
=== Predecessor ===
a2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2679 #next: v33  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Double.toString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: Double.java
sourceLine: 204
stackSize: 0
=== Inputs ===
outerFrameState: ?7 
values: d2635 - 
=== Succesors ===
=== Usages ===
?9 ?148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?7 values: d2635 -  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: - - 
=== Succesors ===
=== Usages ===
?141 ?772 ?781 ?763 ?773 ?771 ?766 ?775 ?779 ?769 ?777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: - -  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<FloatingDecimal.toJavaFormatString(double)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 70
stackSize: 0
=== Inputs ===
outerFrameState: ?8 
values: d2635 - 
=== Succesors ===
=== Usages ===
?625 ?80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?8 values: d2635 -  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 0
=== Inputs ===
outerFrameState: ?9 
values: - - 
=== Succesors ===
=== Usages ===
?519 ?521 ?517 ?137 ?496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1750) [bci: 1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
value: d2635 
=== Succesors ===
=== Usages ===
v18 j21 j23 v34 j2633 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d2635  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j16 
=== Succesors ===
=== Usages ===
i19 v1547 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j16  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v30 v1233 v180 v1116 i586 v260 v392 v402 v2172 v2069 i587 v835 i587 i586 v996 v1226 v1084 v1222 v1073 a2096 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 1]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v982 i19 ?519 ?521 a2142 i586 v193 i219 i461 i593 i297 i305 i453 i317 i331 v388 a2034 ?496 ?517 i2072 i864 v584 v615 i591 i587 i893 v910 i591 i593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1751) [bci: 12]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v18 
trueValue: i17 
falseValue: i4 
=== Succesors ===
=== Usages ===
?519 ?521 i979 ?496 ?517 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i17 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j22 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 30]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j15 
y: j22 
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j22  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
j25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j25 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 36]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j23 
y: i24 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j23 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1753) [bci: 37]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j25 
=== Succesors ===
=== Usages ===
v28 v30 i507 i550 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j25  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i17 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid j2438 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2439 j2500 j2551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1699 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2528 v2490 j2481 v2541 v2440 j2473 j2393 j2534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2071 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2120 v2191 v2262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1527 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1528 j2503 j2554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1724 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1736 j1736 j1750 j1750 j2393 j2464 j2521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i378 i452 i460 i597 i599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1742 <|@
result long[18|0x12] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1744 j1746 j1746 j1754 j1755 j1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j924 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Double.toString(Double.java:644) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2539 j2488 j1744 j1754 j1744 j1754 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v293 i367 i599 i375 i376 i466 i476 i591 i597 i593 i597 i599 a2142 a2034 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1445 <|@
result short[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1177 v1189 v2568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1442 <|@
result short[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1068 v1167 v1197 v1291 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1438 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1004 v1415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a59 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 0]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$1;
stampKind: a -
value: Object[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 v962 ?112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 i319 i303 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1829 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1832 v1862 v1888 v1936 v1898 v1840 v1870 v1908 v1852 v1916 ?559 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 23]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j21 v34 j2633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1767) [bci: 76]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.13709283671618888
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v1540 
=== Usages ===
=== Predecessor ===
a2637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v31 #falseSuccessor: v1540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38051102 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DOUBLE = H [v0|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = VMOVQ v1|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND (x: v4|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR v9|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 79]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j15 y: j20  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1768) [bci: 83]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997455902306649
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 86]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1547 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1547  <|@  <|@
f <@*|@fixed>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1546 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v1544 #falseSuccessor: v1546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2638 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2638  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 97]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal.BinaryToASCIIBuffer@1898887381
stableDimension: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
stampKind: a -
value: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2677 v2678 a711 a710 a712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2677 <|@
result [v14|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2638 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2677 
=== Succesors ===
next: v183 
=== Usages ===
i932 
=== Predecessor ===
v1544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2677 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i932 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2638 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2638  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i17 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i932 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a840 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: char[26]{0, ., 0,  ,  , ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[26]{0, ., 0,  ,  , ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
a627 a628 a629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
i2638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVZXB [v14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2639 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2639  <|@  <|@
f <@~|@floating>@ <|@
tid v2678 <|@
result [v14|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a39 
index: - 
=== Succesors ===
=== Usages ===
i2639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a39 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2639 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2678 
=== Succesors ===
next: v618 
=== Usages ===
v615 i577 i894 i1757 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2678 #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2639 
y: i4 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2639 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v615 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
i2639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v615 #trueSuccessor: v616 #falseSuccessor: v617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592799553960260321
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B5 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582611712791629603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], v17|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.], v14|QWORD[.]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1770) [bci: 88]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1833 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1833  <|@  <|@
f <@~|@floating>@ <|@
tid i1834 <|@
result int[-237587|0xfffffffffffc5fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237587
stableDimension: 0
stamp: i32 [-237587] ⇊00000000fffc5fed ⇈00000000fffc5fed
stampKind: i32
value: int[-237587|0xfffffffffffc5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
v1546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237587|0xfffffffffffc5fed]] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 101]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2637 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result int[-1011|0xfffffffffffffc0d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1011
stableDimension: 0
stamp: i32 [-1011] ⇊00000000fffffc0d ⇈00000000fffffc0d
stampKind: i32
value: int[-1011|0xfffffffffffffc0d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j21 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
i41 j44 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfLeadingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1772) [bci: 103]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [12 - 64] ⇈000000000000007f
=== Inputs ===
value: j21 
=== Succesors ===
=== Usages ===
i43 i46 i79 i553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: j21  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1075 - -1023] ⇊00000000fffff800
=== Inputs ===
x: i552 
y: i41 
=== Succesors ===
=== Usages ===
i523 i524 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i552 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-11|0xfffffffffffffff5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -11
stableDimension: 0
stamp: i32 [-11] ⇊00000000fffffff5 ⇈00000000fffffff5
stampKind: i32
value: int[-11|0xfffffffffffffff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1773) [bci: 112]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [1 - 53] ⇈000000000000003f
=== Inputs ===
x: i41 
y: i42 
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i41 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1774) [bci: 119]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j21 
y: i43 
=== Succesors ===
=== Usages ===
j502 j503 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j21 y: i43  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 128]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1776) [bci: 132]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [0 - 52] ⇈000000000000003f
=== Inputs ===
x: i45 
y: i41 
=== Succesors ===
=== Usages ===
i510 i511 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i45 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v1430 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1430 #trueSuccessor: v107 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LZCNT v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v19|DWORD - 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHL (x: v18|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v24|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD, v25|DWORD, v21|DWORD] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1775) [bci: 125]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-52 - 0]
=== Inputs ===
x: i78 
y: i41 
=== Succesors ===
=== Usages ===
i507 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i78 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v25|DWORD, v23|QWORD, v27|DWORD] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1543 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1543  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[2047|0x7ff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 42]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 2047
stableDimension: 0
stamp: i32 [2047] ⇊00000000000007ff ⇈00000000000007ff
stampKind: i32
value: int[2047|0x7ff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i27 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1542 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v1540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1542 #falseSuccessor: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 2047 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1755) [bci: 45]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1827 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1827  <|@  <|@
f <@~|@floating>@ <|@
tid i1828 <|@
result int[-237331|0xfffffffffffc60ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237331
stableDimension: 0
stamp: i32 [-237331] ⇊00000000fffc60ed ⇈00000000fffc60ed
stampKind: i32
value: int[-237331|0xfffffffffffc60ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237331|0xfffffffffffc60ed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1830 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-237587 - -237331] ⇊00000000fffc40ed ⇈00000000fffc7fed
valueDescription: i32
=== Inputs ===
merge: v1826 
values: i1828 i1834 
=== Succesors ===
=== Usages ===
v1832 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1826 values: i1828 i1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1827 v1833 
=== Succesors ===
next: v1832 
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1827 v1833 #next: v1832  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Double.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Double.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v1832 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1830 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1826 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1830 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Double.toString(Double.java:644) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 138]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid v2634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2637 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i26 
y: i57 
=== Succesors ===
=== Usages ===
i523 i524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i26 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid j2633 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1752) [bci: 26]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j15 
y: j20 
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j15 y: j20  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 140]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1778) [bci: 143]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j2633 
y: j47 
=== Succesors ===
=== Usages ===
j502 j503 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j2633 y: j47  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[53|0x35] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1779) [bci: 146]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i510 i511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:162) [bci: 11]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.7057423817280878E-5
=== Inputs ===
condition: v2634 
=== Succesors ===
trueSuccessor: v544 
falseSuccessor: v545 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2634 #trueSuccessor: v544 #falseSuccessor: v545  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v11|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = OR (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD, int[53|0x35], v29|DWORD] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 14]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD, int[53|0x35], v32|QWORD, v11|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B210" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i523 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v494 
values: i553 i550 
=== Succesors ===
=== Usages ===
i522 i524 ?517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i553 i550  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v494 
values: i46 i49 
=== Succesors ===
=== Usages ===
i509 i511 ?496 ?517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i46 i49  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v494 
values: j44 j48 
=== Succesors ===
=== Usages ===
j501 j503 ?496 ?517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: j44 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-52 - 2047]
valueDescription: i32
=== Inputs ===
merge: v494 
values: i79 i26 
=== Succesors ===
=== Usages ===
?496 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v494 values: i79 i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v495 v497 
=== Succesors ===
next: a2640 
=== Usages ===
i523 i510 j502 i507 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v495 v497 #next: a2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2680 <|@
result [v3|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2637 
=== Succesors ===
=== Usages ===
a2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2640 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap.table
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2680 
=== Succesors ===
next: i2641 
=== Usages ===
a946 v2681 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2680 #next: i2641  <|@  <|@
tid ?496 <|@
d <@d|@=== Debug Properties ===
bci: 150
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1781
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j502 - i507 i510 - - 
=== Succesors ===
=== Usages ===
v1898 i2641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j502 - i507 i510 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2681 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2640 
=== Succesors ===
=== Usages ===
i2641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2641 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 8]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?496 
guard: - 
address: v2681 
=== Succesors ===
next: v1555 
=== Usages ===
i154 v953 
=== Predecessor ===
a2640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?496 guard: - address: v2681 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 10]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2641 
y: i153 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2641 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result int[-1401181199|0xffffffffac7babf1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal.access$400(ThreadLocal.java:74) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -1401181199
stableDimension: 0
stamp: i32 [-1401181199] ⇊00000000ac7babf1 ⇈00000000ac7babf1
stampKind: i32
value: int[-1401181199|0xffffffffac7babf1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 11]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 746302449] ⇈00000000ac7babf1
=== Inputs ===
x: i154 
y: i172 
=== Succesors ===
=== Usages ===
v2682 v962 v953 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i154 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i2641 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i2641  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v1552 
falseSuccessor: v1554 
=== Usages ===
=== Predecessor ===
i2641 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v1552 #falseSuccessor: v1554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|QWORD, v36|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = DEC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND v39|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2642 
=== Usages ===
a2642 
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2642  <|@  <|@
f <@~|@floating>@ <|@
tid a946 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2640 
=== Succesors ===
=== Usages ===
v2682 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2682 <|@
result [v41|QWORD[.] + v40|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a946 
index: i173 
=== Succesors ===
=== Usages ===
a2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a946 index: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2642 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
stateBefore: - 
guard: v1552 
address: v2682 
=== Succesors ===
next: v160 
=== Usages ===
a961 v1433 v2683 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1552 address: v2682 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid a961 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
=== Inputs ===
value: a2642 
=== Succesors ===
=== Usages ===
a562 v962 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2642  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a2642 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2642  <|@  <|@
tid ?517 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j502 - i523 i510 - - 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j502 - i523 i510 - -  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?517 
=== Succesors ===
=== Usages ===
?112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?517  <|@  <|@
f <@~|@floating>@ <|@
tid a939 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.getMap(ThreadLocal.java:233) [bci: 1]
at java.lang.ThreadLocal.get(ThreadLocal.java:161) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap;
=== Inputs ===
value: a2637 
=== Succesors ===
=== Usages ===
?112 v962 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2637  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 163
stackSize: 0
=== Inputs ===
outerFrameState: ?514 
values: a59 - a939 - - 
=== Succesors ===
=== Usages ===
?559 ?174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: a59 - a939 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 21]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.3646055437100213E-4
=== Inputs ===
condition: v1433 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
a2642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1433 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v41|QWORD[.] + v40|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 34]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a169 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a169  <|@  <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
signature: [Ljdk.vm.ci.meta.JavaType;@228e079a
stamp: void
targetMethod: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>
=== Inputs ===
arguments: a939 a59 i173 a961 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a939 a59 i173 a961  <|@  <|@
tid ?174 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 0
=== Inputs ===
outerFrameState: ?112 
values: - - 
=== Succesors ===
=== Usages ===
?1725 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - -  <|@  <|@
tid ?1725 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 419
stackSize: 0
=== Inputs ===
outerFrameState: ?174 
values: - - - - 
=== Succesors ===
=== Usages ===
a169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?174 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a169 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 38
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
targetMethod: Direct#ThreadLocal$ThreadLocalMap.getEntryAfterMiss
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v962 
stateDuring: ?1725 
=== Succesors ===
next: v120 
=== Usages ===
v114 a562 
=== Predecessor ===
v158 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v962 stateDuring: ?1725 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a169 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a169  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:164) [bci: 21]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.364582267253437E-4
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
a169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v119 #falseSuccessor: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|QWORD[.], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD, v34|DWORD, v33|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j503 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v116 
values: j44 j502 j48 
=== Succesors ===
=== Usages ===
j501 ?519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: j44 j502 j48  <|@  <|@
f <@~|@floating>@ <|@
tid i511 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v116 
values: i46 i510 i49 
=== Succesors ===
=== Usages ===
i509 ?519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i46 i510 i49  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v116 
values: i553 i523 i550 
=== Succesors ===
=== Usages ===
i522 ?519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v116 values: i553 i523 i550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 33]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v115 v117 v551 
=== Succesors ===
next: a125 
=== Usages ===
j503 i511 i524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v117 v551 #next: a125  <|@  <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@13f83fe6
stamp: void
targetMethod: HotSpotMethod<ThreadLocal.setInitialValue()>
=== Inputs ===
arguments: a59 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a59  <|@  <|@
tid ?519 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j503 - i524 i511 - - 
=== Succesors ===
=== Usages ===
?516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j503 - i524 i511 - -  <|@  <|@
tid ?516 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: true
localsSize: 0
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 0
=== Inputs ===
outerFrameState: ?519 
=== Succesors ===
=== Usages ===
?1726 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?519  <|@  <|@
tid ?1726 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<ThreadLocal.get()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 170
stackSize: 0
=== Inputs ===
outerFrameState: ?516 
values: - - - - - 
=== Succesors ===
=== Usages ===
a125 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?516 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a125 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#ThreadLocal.setInitialValue
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v974 
stateDuring: ?1726 
=== Succesors ===
next: v132 
=== Usages ===
a131 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v974 stateDuring: ?1726 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD, v47|DWORD, v48|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v46|QWORD - v48|DWORD v47|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.], v46|QWORD, v47|DWORD, v48|DWORD] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 24]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B209" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 24]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2643 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2643  <|@  <|@
f <@~|@floating>@ <|@
tid v2683 <|@
result [v42|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2642 
=== Succesors ===
=== Usages ===
a2643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2643 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2683 
=== Succesors ===
next: v1559 
=== Usages ===
v1435 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2683 #next: v1559  <|@  <|@
f <@~|@floating>@ <|@
tid a1434 <|@
result NarrowOop[FloatingDecimal$1@1399508980] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: FloatingDecimal$1@1399508980
stableDimension: 0
stamp: n!# Lsun/misc/FloatingDecimal$1;
stampKind: n -
value: NarrowOop[FloatingDecimal$1@1399508980]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1435 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2643 
y: a1434 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2643 y: a1434  <|@  <|@
f <@*|@fixed>@ <|@
tid v1559 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1435 
=== Succesors ===
trueSuccessor: v1556 
falseSuccessor: v1558 
=== Usages ===
=== Predecessor ===
a2643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1435 #trueSuccessor: v1556 #falseSuccessor: v1558  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v42|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.get(Reference.java:254) [bci: 1]
at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 25]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v560  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a562 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;
valueDescription: a -
=== Inputs ===
merge: v557 
values: a169 a961 
=== Succesors ===
=== Usages ===
v2684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v557 values: a169 a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v558 v560 
=== Succesors ===
next: a2644 
=== Usages ===
a562 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v558 v560 #next: a2644  <|@  <|@
tid ?559 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ThreadLocal$ThreadLocalMap.access$000(ThreadLocal$ThreadLocalMap, ThreadLocal)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: ThreadLocal.java
sourceLine: 298
stackSize: 1
=== Inputs ===
outerFrameState: ?112 
values: - - a1829 
=== Succesors ===
=== Usages ===
a2644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?112 values: - - a1829  <|@  <|@
f <@~|@floating>@ <|@
tid v2684 <|@
result [v50|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a562 
index: - 
=== Succesors ===
=== Usages ===
a2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a562 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2644 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ThreadLocal$ThreadLocalMap$Entry.value
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: ?559 
guard: - 
address: v2684 
=== Succesors ===
next: v130 
=== Usages ===
a973 
=== Predecessor ===
v557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?559 guard: - address: v2684 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid a973 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ThreadLocal.get(ThreadLocal.java:166) [bci: 25]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2644 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2644  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
a2644 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v51|DWORD[.] = MOV [v50|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.], v35|QWORD, v34|DWORD, v33|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a131 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v129 
values: a973 a125 
=== Succesors ===
=== Usages ===
?520 v2719 ?137 v67 v2687 v2685 a710 a711 v2686 v982 a712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: a973 a125  <|@  <|@
f <@~|@floating>@ <|@
tid j501 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806]
valueDescription: i64
=== Inputs ===
merge: v129 
values: j502 j503 
=== Succesors ===
=== Usages ===
?521 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: j502 j503  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 53] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v129 
values: i510 i511 
=== Succesors ===
=== Usages ===
?521 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i510 i511  <|@  <|@
f <@~|@floating>@ <|@
tid i522 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1075 - 1024]
valueDescription: i32
=== Inputs ===
merge: v129 
values: i523 i524 
=== Succesors ===
=== Usages ===
?521 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v129 values: i523 i524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 
=== Succesors ===
next: v1684 
=== Usages ===
a131 j501 i509 i522 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 #next: v1684  <|@  <|@
tid ?521 <|@
d <@d|@=== Debug Properties ===
bci: 156
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1782
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - i4 - - i19 j501 - i522 i509 - - 
=== Succesors ===
=== Usages ===
?520 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - i4 - - i19 j501 - i522 i509 - -  <|@  <|@
tid ?520 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIBuffer()>
duringCall: false
localsSize: 0
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 986
stackSize: 1
=== Inputs ===
outerFrameState: ?521 
values: a131 
=== Succesors ===
=== Usages ===
v1908 v981 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?521 values: a131  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
v1684 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a131  <|@  <|@
f <@*|@fixed>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v1683 
falseSuccessor: v1682 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v1683 #falseSuccessor: v1682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[.], v54|QWORD, v55|DWORD, v56|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD[.], y: v53|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1953 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1953  <|@  <|@
f <@*|@fixed>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
v1683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B208" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2645 
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2645  <|@  <|@
f <@~|@floating>@ <|@
tid v2719 <|@
result [v53|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v2645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2645 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2719 
=== Succesors ===
next: v2626 
=== Usages ===
v2174 
=== Predecessor ===
v1682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2719 #next: v2626  <|@  <|@
f <@~|@floating>@ <|@
tid v2173 <|@
result meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2174 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2645 
y: v2173 
=== Succesors ===
=== Usages ===
v2626 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2645 y: v2173  <|@  <|@
f <@*|@fixed>@ <|@
tid v2626 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2174 
=== Succesors ===
trueSuccessor: v2625 
falseSuccessor: v1958 
=== Usages ===
=== Predecessor ===
v2645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2174 #trueSuccessor: v2625 #falseSuccessor: v1958  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v53|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1961 
=== Usages ===
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1961  <|@  <|@
f <@*|@fixed>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
v2625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1953 v1961 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1953 v1961 #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v2685 <|@
result [v53|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
v981 i2646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i979 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i19 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.setSign(FloatingDecimal.java:349) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$000(FloatingDecimal.java:259) [bci: 2]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1783) [bci: 165]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?520 
guard: - 
address: v2685 
value: i979 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v1951 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?520 guard: - address: v2685 value: i979 stateAfter: - lastLocationAccess: - #next: v134  <|@  <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@197af8b9
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
=== Inputs ===
arguments: a131 i522 j501 i509 i4 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a131 i522 j501 i509 i4  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 177
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double, boolean)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1785
stackSize: 0
=== Inputs ===
outerFrameState: ?80 
values: - - - - - - - - - - a131 - 
=== Succesors ===
=== Usages ===
?1727 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?80 values: - - - - - - - - - - a131 -  <|@  <|@
tid ?1727 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal$BinaryToASCIIBuffer, int, long, int, boolean)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 259
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.dtoa
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v982 
stateDuring: ?1727 
=== Succesors ===
next: i2646 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v982 stateDuring: ?1727 #next: i2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2646 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2685 
=== Succesors ===
next: a2647 
=== Usages ===
i988 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2685 #next: a2647  <|@  <|@
f <@~|@floating>@ <|@
tid v2686 <|@
result [v53|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
a2647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2647 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2686 
=== Succesors ===
next: v838 
=== Usages ===
a986 
=== Predecessor ===
i2646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2686 #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid a986 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2647 
=== Succesors ===
=== Usages ===
a629 a628 a627 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2647  <|@  <|@
f <@~|@floating>@ <|@
tid i988 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2646 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2646  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i988 
y: i17 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i988 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v835 
=== Succesors ===
trueSuccessor: v836 
falseSuccessor: v837 
=== Usages ===
=== Predecessor ===
a2647 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v835 #trueSuccessor: v836 #falseSuccessor: v837  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction MOVB (x: [v53|QWORD[.] + 24], y: v6|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v53|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSXB [v53|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v53|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZXB v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2648 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2648  <|@  <|@
f <@~|@floating>@ <|@
tid v2687 <|@
result [v53|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a131 
index: - 
=== Succesors ===
=== Usages ===
i2648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2648 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2687 
=== Succesors ===
next: v913 
=== Usages ===
v910 i577 i894 i1757 
=== Predecessor ===
v836 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2687 #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2648 
y: i4 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2648 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v912 
=== Usages ===
=== Predecessor ===
i2648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v911 #falseSuccessor: v912  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B76" 
    xhandlers
    flags 
    probability 4604577755910952677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B33 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641364409144322
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], v61|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v626  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v837 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.], v53|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a628 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v623 
values: a840 a986 
=== Succesors ===
=== Usages ===
a627 a629 v2689 v2688 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v623 values: a840 a986  <|@  <|@
f <@~|@floating>@ <|@
tid a711 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v623 
values: a39 a131 
=== Succesors ===
=== Usages ===
a710 a712 ?625 v2690 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v623 values: a39 a131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v624 v626 
=== Succesors ===
next: i2649 
=== Usages ===
a628 a711 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v624 v626 #next: i2649  <|@  <|@
tid ?625 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal.getBinaryToASCIIConverter(double)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 1738
stackSize: 1
=== Inputs ===
outerFrameState: ?9 
values: - - a711 
=== Succesors ===
=== Usages ===
v1936 i2649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?9 values: - - a711  <|@  <|@
f <@~|@floating>@ <|@
tid v2688 <|@
result [v62|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a628 
index: - 
=== Succesors ===
=== Usages ===
i2649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2649 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?625 
guard: - 
address: v2688 
=== Succesors ===
next: v1579 
=== Usages ===
v996 
=== Predecessor ===
v623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?625 guard: - address: v2688 #next: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2649 
y: i17 
=== Succesors ===
=== Usages ===
v1579 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2649 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1579 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v996 
=== Succesors ===
trueSuccessor: v1578 
falseSuccessor: v1576 
=== Usages ===
=== Predecessor ===
i2649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v996 #trueSuccessor: v1578 #falseSuccessor: v1576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.], v63|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v62|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1936 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid i1938 <|@
result int[-367643|0xfffffffffffa63e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -367643
stableDimension: 0
stamp: i32 [-367643] ⇊00000000fffa63e5 ⇈00000000fffa63e5
stampKind: i32
value: int[-367643|0xfffffffffffa63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1936 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?625 
actionAndReason: i1938 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1578 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?625 actionAndReason: i1938 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -367643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1004 
=== Usages ===
v1004 
=== Predecessor ===
v1579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v2689 <|@
result [v62|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a628 
index: - 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a628 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1576 
address: v2689 
value: i1438 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2650 
=== Usages ===
=== Predecessor ===
v1576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1576 address: v2689 value: i1438 stateAfter: - lastLocationAccess: - #next: i2650  <|@  <|@
f <@~|@floating>@ <|@
tid v2690 <|@
result [v63|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a711 
index: - 
=== Succesors ===
=== Usages ===
i2650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2650 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2690 
=== Succesors ===
next: v196 
=== Usages ===
v193 i1757 i577 i893 
=== Predecessor ===
v1004 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2690 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2650 
y: i4 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2650 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j1734 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1736 j1750 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j943 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:414) [bci: 5]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1746 j1755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8239147472715149
=== Inputs ===
condition: v193 
=== Succesors ===
trueSuccessor: v194 
falseSuccessor: v195 
=== Usages ===
=== Predecessor ===
i2650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v193 #trueSuccessor: v194 #falseSuccessor: v195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v62|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B76" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], long[3|0x3], long[20|0x14], long[18|0x12]] destination: B39 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2650 
y: i4 
=== Succesors ===
=== Usages ===
i894 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2650 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], v65|DWORD, long[20|0x14], long[3|0x3], long[18|0x12]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B75" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1757 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v572 
values: i2650 i2639 i2648 
=== Succesors ===
=== Usages ===
i1040 v1515 i229 v422 ?222 i577 v862 i232 j1978 i1034 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i2650 i2639 i2648  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v572 
values: i4 i17 i17 
=== Succesors ===
=== Usages ===
i861 v2725 v1041 v1139 i587 ?574 v2721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i4 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v572 
values: i292 i4 i4 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i292 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v572 
values: i377 i292 i292 
=== Succesors ===
=== Usages ===
i597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i377 i292 i292  <|@  <|@
f <@~|@floating>@ <|@
tid a629 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v572 
values: a628 a840 a986 
=== Succesors ===
=== Usages ===
a627 ?574 j1973 ?222 v2775 v2696 v2697 v2698 j1994 j1985 v2694 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: a628 a840 a986  <|@  <|@
f <@~|@floating>@ <|@
tid a712 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v572 
values: a711 a39 a131 
=== Succesors ===
=== Usages ===
a710 a715 a715 v2691 ?763 v2692 v2693 ?766 ?222 ?574 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: a711 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid i894 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v572 
values: i893 i2639 i2648 
=== Succesors ===
=== Usages ===
i219 v2694 v1060 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: i893 i2639 i2648  <|@  <|@
f <@~|@floating>@ <|@
tid j1755 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v572 
values: j943 j1742 j1742 
=== Succesors ===
=== Usages ===
j1746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j943 j1742 j1742  <|@  <|@
f <@~|@floating>@ <|@
tid j1750 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v572 
values: j1734 j1724 j1724 
=== Succesors ===
=== Usages ===
j1736 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j1734 j1724 j1724  <|@  <|@
f <@~|@floating>@ <|@
tid j1754 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v572 
values: j1742 j924 j924 
=== Succesors ===
=== Usages ===
j1744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v572 values: j1742 j924 j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v573 v575 v915 
=== Succesors ===
next: v205 
=== Usages ===
i1757 i586 i593 i599 a629 a712 i894 j1755 j1750 j1754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v573 v575 v915 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1757 
y: i198 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1757 y: i198  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9952836455427129
=== Inputs ===
condition: v1515 
=== Succesors ===
trueSuccessor: v200 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1515 #trueSuccessor: v200 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v72|DWORD, v73|QWORD, v74|QWORD, v75|QWORD] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2775 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2775  <|@  <|@
tid ?763 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a712 - 
=== Succesors ===
=== Usages ===
?574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a712 -  <|@  <|@
tid ?574 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?763 
values: a712 a629 i586 - - 
=== Succesors ===
=== Usages ===
v1916 v2775 i2652 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?763 values: a712 a629 i586 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?574 
object: a629 
=== Succesors ===
next: a2651 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?574 object: a629 #next: a2651  <|@  <|@
f <@~|@floating>@ <|@
tid v2692 <|@
result [v71|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a712 
index: - 
=== Succesors ===
=== Usages ===
a2651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2651 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2692 
=== Succesors ===
next: i2652 
=== Usages ===
a1011 v2695 
=== Predecessor ===
v2775 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2692 #next: i2652  <|@  <|@
f <@~|@floating>@ <|@
tid v2695 <|@
result [v76|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2651 
=== Succesors ===
=== Usages ===
i2652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2652 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?574 
guard: - 
address: v2695 
=== Succesors ===
next: i2653 
=== Usages ===
i1089 i1034 i1132 
=== Predecessor ===
a2651 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?574 guard: - address: v2695 #next: i2653  <|@  <|@
f <@~|@floating>@ <|@
tid v2696 <|@
result [v70|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a629 
index: - 
=== Succesors ===
=== Usages ===
i2653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2653 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2696 
=== Succesors ===
next: i2654 
=== Usages ===
i1138 v1160 v1169 i1040 v1060 i1095 
=== Predecessor ===
i2652 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2696 #next: i2654  <|@  <|@
f <@~|@floating>@ <|@
tid v2693 <|@
result [v71|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a712 
index: - 
=== Succesors ===
=== Usages ===
i2654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2654 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2693 
=== Succesors ===
next: i2655 
=== Usages ===
j1969 i232 v1116 v1133 v1035 
=== Predecessor ===
i2653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2693 #next: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v2691 <|@
result [v71|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a712 
index: - 
=== Succesors ===
=== Usages ===
i2655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a712 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2655 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2691 
=== Succesors ===
next: v425 
=== Usages ===
v862 v422 i1132 i229 j1996 i1138 i861 
=== Predecessor ===
i2654 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2691 #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1757 
y: i2655 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1757 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid j1969 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2654 
=== Succesors ===
=== Usages ===
v2724 v2720 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2654  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2654 
y: i17 
=== Succesors ===
=== Usages ===
v1119 v1021 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2654 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a1011 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2651 
=== Succesors ===
=== Usages ===
j1968 j1980 j1992 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2651  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.44778072425335824
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
i2655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v70|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v71|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV [v71|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOV [v71|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44778072425335824 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1591 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i894 
y: i2653 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i894 y: i2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v1588 
falseSuccessor: v1590 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v1588 #falseSuccessor: v1590  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
v1068 
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid i1924 <|@
result int[-267873|0xfffffffffffbe99f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267873
stableDimension: 0
stamp: i32 [-267873] ⇊00000000fffbe99f ⇈00000000fffbe99f
stampKind: i32
value: int[-267873|0xfffffffffffbe99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 i1914 i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1020 
falseSuccessor: v1019 
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1020 #falseSuccessor: v1019  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560377329857577916
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1923 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1923  <|@  <|@
f <@*|@fixed>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267873|0xfffffffffffbe99f]] destination: B45 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590262643725779295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2652 
y: i1757 
=== Succesors ===
=== Usages ===
v1035 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2652 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1034 
y: i2654 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1034 y: i2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1035 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1036 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1035 #trueSuccessor: v1038 #falseSuccessor: v1036  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v77|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560304948791717852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1940 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267873|0xfffffffffffbe99f]] destination: B47 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590206661495153151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid i1040 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2653 
y: i1757 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2653 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1040 
y: i586 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1040 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1041 
=== Succesors ===
trueSuccessor: v1044 
falseSuccessor: v1042 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1041 #trueSuccessor: v1044 #falseSuccessor: v1042  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v78|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560233291536516388
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267873|0xfffffffffffbe99f]] destination: B49 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590151239086833269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1968 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1968  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1968 <|@
result v85|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1011 
=== Succesors ===
next: j1973 
=== Usages ===
v2720 
=== Predecessor ===
v1042 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1011 #next: j1973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1973 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a629 
=== Succesors ===
next: v1979 
=== Usages ===
v2721 
=== Predecessor ===
j1968 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a629 #next: v1979  <|@  <|@
f <@~|@floating>@ <|@
tid v2720 <|@
result [v85|QWORD[*] + v81|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1968 
index: j1969 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1968 index: j1969  <|@  <|@
f <@~|@floating>@ <|@
tid v2721 <|@
result [v86|QWORD[*] + v67|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1973 
index: i586 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1973 index: i586  <|@  <|@
f <@~|@floating>@ <|@
tid j1978 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
value: i1757 
=== Succesors ===
=== Usages ===
v1979 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2720 v2721 j1978 
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
j1973 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2720 v2721 j1978 #next: v1068  <|@  <|@
f <@~|@floating>@ <|@
tid v2694 <|@
result [v70|QWORD[.] + v72|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a629 
index: i894 
=== Succesors ===
=== Usages ===
v1068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: i894  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1588 
address: v2694 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1588 address: v2694 value: i1442 stateAfter: - lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i1757 
y: i2654 
=== Succesors ===
=== Usages ===
j1981 v1073 v1090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1757 y: i2654  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i17 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i232 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i894 
y: i4 
=== Succesors ===
=== Usages ===
?222 i235 v1096 j1986 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i894 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1075 #falseSuccessor: v1074  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v85|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v86|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v87|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v72|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v66|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560162350853866939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1079 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590096370902596586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1088 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1088  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2655 
y: i1757 
=== Succesors ===
=== Usages ===
j1990 i1095 i235 v1084 i1089 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2655 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i229 
y: i17 
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i229 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1084 
=== Succesors ===
trueSuccessor: v1087 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1084 #trueSuccessor: v1087 #falseSuccessor: v1085  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v80|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v90|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560092119578043984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1086 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1087 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590042051400202269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid i1089 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2652 
y: i229 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2652 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1089 
y: i232 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1089 y: i232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1093 
falseSuccessor: v1091 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1093 #falseSuccessor: v1091  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v77|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560022590614979259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1092 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1092  <|@  <|@
f <@*|@fixed>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589988275092831896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid i1095 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2653 
y: i229 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2653 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1095 
y: i219 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1095 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1096 
=== Succesors ===
trueSuccessor: v1099 
falseSuccessor: v1097 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1096 #trueSuccessor: v1099 #falseSuccessor: v1097  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v78|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559953756941545181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
v1099 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569064903751849833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1079 v1086 v1092 v1098 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1079 v1086 v1092 v1098 #next: v1101  <|@  <|@
tid ?766 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a712 - 
=== Succesors ===
=== Usages ===
?222 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a712 -  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?766 
values: a712 a629 i219 i1757 - 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?766 values: a712 a629 i219 i1757 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?222 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -281953 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v71|QWORD[.] v70|QWORD[.] v89|DWORD v66|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B139" 
    xhandlers
    flags 
    probability 4589935036548535226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1980 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1980 <|@
result v93|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1011 
=== Succesors ===
next: j1985 
=== Usages ===
v2722 
=== Predecessor ===
v1097 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1011 #next: j1985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1985 <|@
result v94|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a629 
=== Succesors ===
next: v1991 
=== Usages ===
v2723 
=== Predecessor ===
j1980 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a629 #next: v1991  <|@  <|@
f <@~|@floating>@ <|@
tid j1981 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i232 
=== Succesors ===
=== Usages ===
v2722 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v2722 <|@
result [v93|QWORD[*] + v95|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1980 
index: j1981 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1980 index: j1981  <|@  <|@
f <@~|@floating>@ <|@
tid j1986 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v2723 <|@
result [v94|QWORD[*] + v96|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1985 
index: j1986 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1985 index: j1986  <|@  <|@
f <@~|@floating>@ <|@
tid j1990 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i229 
=== Succesors ===
=== Usages ===
v1991 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2722 v2723 j1990 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
j1985 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2722 v2723 j1990 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i219 
y: i229 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i219 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v88|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v89|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v90|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v94|QWORD[*] + v96|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v89|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD, v71|QWORD[.]] destination: B59 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid i1922 <|@
result int[-271643|0xfffffffffffbdae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -271643
stableDimension: 0
stamp: i32 [-271643] ⇊00000000fffbdae5 ⇈00000000fffbdae5
stampKind: i32
value: int[-271643|0xfffffffffffbdae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-271643|0xfffffffffffbdae5]] destination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2655 
y: i1757 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2655 y: i1757  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v862 
=== Succesors ===
trueSuccessor: v1594 
falseSuccessor: v1592 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v862 #trueSuccessor: v1594 #falseSuccessor: v1592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid i1920 <|@
result int[-295699|0xfffffffffffb7ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295699
stableDimension: 0
stamp: i32 [-295699] ⇊00000000fffb7ced ⇈00000000fffb7ced
stampKind: i32
value: int[-295699|0xfffffffffffb7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295699|0xfffffffffffb7ced]] destination: B62 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B73" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1599 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid i861 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i586 
y: i2655 
=== Succesors ===
=== Usages ===
i864 v2697 i367 v1160 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i586 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i861 
y: i2653 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i861 y: i2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1160 
=== Succesors ===
trueSuccessor: v1596 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
v1592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1160 #trueSuccessor: v1596 #falseSuccessor: v1598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ADD (x: v67|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B72" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1603 
=== Usages ===
v1167 
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1603  <|@  <|@
f <@~|@floating>@ <|@
tid i864 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i861 
y: i4 
=== Succesors ===
=== Usages ===
v1169 v2698 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i861 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i864 
y: i2653 
=== Succesors ===
=== Usages ===
v1603 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i864 y: i2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1169 
=== Succesors ===
trueSuccessor: v1600 
falseSuccessor: v1602 
=== Usages ===
=== Predecessor ===
v1596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1169 #trueSuccessor: v1600 #falseSuccessor: v1602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1119 
=== Usages ===
v1177 
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1119  <|@  <|@
f <@~|@floating>@ <|@
tid i1930 <|@
result int[-292961|0xfffffffffffb879f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -292961
stableDimension: 0
stamp: i32 [-292961] ⇊00000000fffb879f ⇈00000000fffb879f
stampKind: i32
value: int[-292961|0xfffffffffffb879f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 i1914 i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v1118 
falseSuccessor: v1117 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v1118 #falseSuccessor: v1117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562065516343624141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1929 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1929  <|@  <|@
f <@*|@fixed>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292961|0xfffffffffffb879f]] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4591568350461080670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1137 
=== Usages ===
=== Predecessor ===
v1119 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1137  <|@  <|@
f <@~|@floating>@ <|@
tid i1132 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2652 
y: i2655 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2652 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1132 
y: i2654 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1132 y: i2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1133 
=== Succesors ===
trueSuccessor: v1136 
falseSuccessor: v1134 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1133 #trueSuccessor: v1136 #falseSuccessor: v1134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v77|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561976253412903614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292961|0xfffffffffffb879f]] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4591499311163101513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1143 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1143  <|@  <|@
f <@~|@floating>@ <|@
tid i1138 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2653 
y: i2655 
=== Succesors ===
=== Usages ===
v1139 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2653 y: i2655  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1138 
y: i586 
=== Succesors ===
=== Usages ===
v1143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1138 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1139 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
v1134 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1139 #trueSuccessor: v1142 #falseSuccessor: v1140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = SUB (x: v78|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561887883111490293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1941 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1941  <|@  <|@
f <@*|@fixed>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292961|0xfffffffffffb879f]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B139" 
    xhandlers
    flags 
    probability 4591430962258102147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1992 
=== Usages ===
=== Predecessor ===
v1143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1992  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1992 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1011 
=== Succesors ===
next: j1994 
=== Usages ===
v2724 
=== Predecessor ===
v1140 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1011 #next: j1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1994 <|@
result v104|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a629 
=== Succesors ===
next: v1997 
=== Usages ===
v2725 
=== Predecessor ===
j1992 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a629 #next: v1997  <|@  <|@
f <@~|@floating>@ <|@
tid v2724 <|@
result [v103|QWORD[*] + v81|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1992 
index: j1969 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1992 index: j1969  <|@  <|@
f <@~|@floating>@ <|@
tid v2725 <|@
result [v104|QWORD[*] + v67|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1994 
index: i586 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1994 index: i586  <|@  <|@
f <@~|@floating>@ <|@
tid j1996 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2655 
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2724 v2725 j1996 
=== Succesors ===
next: v1167 
=== Usages ===
=== Predecessor ===
j1994 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2724 v2725 j1996 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
result [v70|QWORD[.] + v99|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a629 
index: i861 
=== Succesors ===
=== Usages ===
v1167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: i861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1596 
address: v2697 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v1997 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1596 address: v2697 value: i1442 stateAfter: - lastLocationAccess: - #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid v2698 <|@
result [v70|QWORD[.] + v100|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a629 
index: i864 
=== Succesors ===
=== Usages ===
v1177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a629 index: i864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1600 
address: v2698 
value: i1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1600 address: v2698 value: i1445 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i861 
y: i292 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i861 y: i292  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v99|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v100|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v99|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|DWORD, v71|QWORD[.]] destination: B71 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1927 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1927  <|@  <|@
f <@~|@floating>@ <|@
tid i1928 <|@
result int[-299547|0xfffffffffffb6de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299547
stableDimension: 0
stamp: i32 [-299547] ⇊00000000fffb6de5 ⇈00000000fffb6de5
stampKind: i32
value: int[-299547|0xfffffffffffb6de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1602 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299547|0xfffffffffffb6de5]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1925 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1925  <|@  <|@
f <@~|@floating>@ <|@
tid i1926 <|@
result int[-297243|0xfffffffffffb76e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -297243
stableDimension: 0
stamp: i32 [-297243] ⇊00000000fffb76e5 ⇈00000000fffb76e5
stampKind: i32
value: int[-297243|0xfffffffffffb76e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297243|0xfffffffffffb76e5]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" "B45" "B73" "B72" "B66" "B49" "B47" "B70" "B68" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733128
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1914 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-385803 - -267873] ⇊00000000fffa0085 ⇈00000000fffbffff
valueDescription: i32
=== Inputs ===
merge: v1911 
values: i1920 i1922 i1924 i1926 i1928 i1930 i1924 i1924 i1930 i1930 
=== Succesors ===
=== Usages ===
v1916 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1911 values: i1920 i1922 i1924 i1926 i1928 i1930 i1924 i1924 i1930 i1930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1919 v1921 v1923 v1925 v1927 v1929 v1939 v1940 v1941 v1942 
=== Succesors ===
next: v1916 
=== Usages ===
i1914 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1919 v1921 v1923 v1925 v1927 v1929 v1939 v1940 v1941 v1942 #next: v1916  <|@  <|@
f <@*|@fixed>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?574 
actionAndReason: i1914 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1911 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?574 actionAndReason: i1914 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B76" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v74|QWORD, v73|QWORD, v75|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B39" "B75" "B5" "B33" 
    successors "B77" "B114" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i577 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v202 
values: i2650 i1757 i2639 i2648 
=== Succesors ===
=== Usages ===
i317 v247 v260 i265 i319 v584 i1525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i2650 i1757 i2639 i2648  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v202 
values: i4 i586 i17 i17 
=== Succesors ===
=== Usages ===
?239 v1282 v1183 ?283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i4 i586 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i292 i593 i4 i4 
=== Succesors ===
=== Usages ===
v1191 v1288 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i292 i593 i4 i4  <|@  <|@
f <@~|@floating>@ <|@
tid i597 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v202 
values: i377 i599 i292 i292 
=== Succesors ===
=== Usages ===
?258 i265 v2717 ?450 i270 i274 ?290 v1532 ?1728 i304 v1199 v1535 v1321 v2729 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: i377 i599 i292 i292  <|@  <|@
f <@~|@floating>@ <|@
tid a627 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v202 
values: a628 a629 a840 a986 
=== Succesors ===
=== Usages ===
?325 ?239 j2003 ?1728 ?308 ?258 ?290 ?450 ?275 v2712 ?283 v2711 v2699 v2700 v2701 v2717 v2710 v2713 j2015 v2709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a628 a629 a840 a986  <|@  <|@
f <@~|@floating>@ <|@
tid a710 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v202 
values: a711 a712 a39 a131 
=== Succesors ===
=== Usages ===
v2703 v2704 a715 a715 a715 a715 ?775 v2705 ?308 ?781 ?777 ?772 ?283 ?239 ?769 ?771 ?773 ?258 ?290 ?779 ?450 v2702 ?275 v2776 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: a711 a712 a39 a131  <|@  <|@
f <@~|@floating>@ <|@
tid j1736 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1734 j1750 j1724 j1724 
=== Succesors ===
=== Usages ===
j1529 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1734 j1750 j1724 j1724  <|@  <|@
f <@~|@floating>@ <|@
tid j1746 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v202 
values: j943 j1755 j1742 j1742 
=== Succesors ===
=== Usages ===
v2701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j943 j1755 j1742 j1742  <|@  <|@
f <@~|@floating>@ <|@
tid j1744 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v202 
values: j1742 j1754 j924 j924 
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v202 values: j1742 j1754 j924 j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v201 v203 v619 v914 
=== Succesors ===
next: v244 
=== Usages ===
i577 i587 i591 i597 a627 a710 j1736 j1746 j1744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v201 v203 v619 v914 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v2704 <|@
result [v113|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2659 i2664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2703 <|@
result [v113|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
a2658 a2662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2701 <|@
result [v112|QWORD[.] + v115|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a627 
index: j1746 
=== Succesors ===
=== Usages ===
v1197 v1291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: j1746  <|@  <|@
f <@~|@floating>@ <|@
tid v2700 <|@
result [v112|QWORD[.] + v116|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a627 
index: j1744 
=== Succesors ===
=== Usages ===
v1189 v1286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: j1744  <|@  <|@
f <@~|@floating>@ <|@
tid v2699 <|@
result [v112|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a627 
index: - 
=== Succesors ===
=== Usages ===
i2656 i2665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i4 
=== Succesors ===
=== Usages ===
v313 v244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i577 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 191]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1728 i364 i360 i332 i2771 i349 i2772 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|DWORD, v110|DWORD, v111|DWORD, v112|QWORD[.], v113|QWORD[.], v114|QWORD, v115|QWORD, v116|QWORD] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i246 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i577 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v252 #falseSuccessor: v251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B115" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B112" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2656 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2656  <|@  <|@
tid ?769 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?239 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?769 
values: a710 a627 i587 - - 
=== Succesors ===
=== Usages ===
v1852 i2656 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?769 values: a710 a627 i587 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2656 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?239 
guard: - 
address: v2699 
=== Succesors ===
next: v1611 
=== Usages ===
v1183 v1191 v1199 v1532 i1244 j1522 
=== Predecessor ===
v251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?239 guard: - address: v2699 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i2656 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i587 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1183 
=== Succesors ===
trueSuccessor: v1608 
falseSuccessor: v1610 
=== Usages ===
=== Predecessor ===
i2656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1183 #trueSuccessor: v1608 #falseSuccessor: v1610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v117|DWORD = MOV [v112|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B111" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1615 
=== Usages ===
v1189 
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1615  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i591 
y: i2656 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i591 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1191 
=== Succesors ===
trueSuccessor: v1612 
falseSuccessor: v1614 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1191 #trueSuccessor: v1612 #falseSuccessor: v1614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1189 
=== Usages ===
v1197 
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1608 
address: v2700 
value: i1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1197 
=== Usages ===
=== Predecessor ===
v1612 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1608 address: v2700 value: i1445 stateAfter: - lastLocationAccess: - #next: v1197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1612 
address: v2701 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1612 address: v2701 value: i1442 stateAfter: - lastLocationAccess: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i17 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i577 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v260 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v262 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v260 #trueSuccessor: v261 #falseSuccessor: v262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v116|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v115|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B99" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD] destination: B82 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B90" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2612 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2612  <|@  <|@
f <@~|@floating>@ <|@
tid i1525 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i577 
=== Succesors ===
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j1526 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1525 
=== Succesors ===
=== Usages ===
j1528 j2439 v2191 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1525  <|@  <|@
f <@~|@floating>@ <|@
tid j1528 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1526 
y: j1527 
=== Succesors ===
=== Usages ===
j1529 v2442 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j1527  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 243]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i597 
y: i577 
=== Succesors ===
=== Usages ===
v1535 v1199 ?1728 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i597 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i597 
y: i265 
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i597 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1535 
=== Succesors ===
trueSuccessor: v2611 
falseSuccessor: v2608 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1535 #trueSuccessor: v2611 #falseSuccessor: v2608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = NEG v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVSXD v118|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = DEC v119|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SUB (x: v111|DWORD, ~y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2620 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2620  <|@  <|@
f <@~|@floating>@ <|@
tid j1529 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j1528 
y: j1736 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1528 y: j1736  <|@  <|@
f <@~|@floating>@ <|@
tid j1522 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2656 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2656  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1529 
y: j1522 
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1529 y: j1522  <|@  <|@
f <@*|@fixed>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1531 
=== Succesors ===
trueSuccessor: v2619 
falseSuccessor: v2616 
=== Usages ===
=== Predecessor ===
v2611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1531 #trueSuccessor: v2619 #falseSuccessor: v2616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v120|QWORD, y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOV v117|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2618 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2618  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i597 
y: i2656 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i597 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1532 
=== Succesors ===
trueSuccessor: v2609 
falseSuccessor: v2617 
=== Usages ===
=== Predecessor ===
v2619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1532 #trueSuccessor: v2609 #falseSuccessor: v2617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2607 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2607  <|@  <|@
f <@*|@fixed>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2615 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2615  <|@  <|@
f <@*|@fixed>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v2617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2614 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2614  <|@  <|@
f <@*|@fixed>@ <|@
tid v2614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2613 
=== Predecessor ===
v2616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2614 v2615 
=== Succesors ===
next: v1617 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2614 v2615 #next: v1617  <|@  <|@
tid ?771 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?771 
values: a710 a627 i597 - - 
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?771 values: a710 a627 i597 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1202
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[d.a@710620907]
stamp: void
=== Inputs ===
stateBefore: ?258 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2613 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@710620907] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -307739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v124|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v113|QWORD[.] v112|QWORD[.] v111|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2606 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2606  <|@  <|@
f <@*|@fixed>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
v2608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B86" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2606 v2607 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2606 v2607 #next: v434  <|@  <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6ae57913
stamp: void
targetMethod: HotSpotMethod<Arrays.rangeCheck(int, int, int)>
=== Inputs ===
arguments: i2656 i597 i265 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i2656 i597 i265  <|@  <|@
tid ?772 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?450 <|@
d <@d|@=== Debug Properties ===
bci: 246
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: ?772 
values: a710 a627 i597 - - 
=== Succesors ===
=== Usages ===
?1728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?772 values: a710 a627 i597 - -  <|@  <|@
tid ?1728 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<Arrays.fill(char[], int, int, char)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Arrays.java
sourceLine: 2973
stackSize: 0
=== Inputs ===
outerFrameState: ?450 
values: a627 i597 i265 i236 - 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?450 values: a627 i597 i265 i236 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.rangeCheck
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1199 
stateDuring: ?1728 
=== Succesors ===
next: v2390 
=== Usages ===
=== Predecessor ===
v2605 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1199 stateDuring: ?1728 #next: v2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i2657 
=== Usages ===
j2392 
=== Predecessor ===
v434 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2702 <|@
result [v113|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2657 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 251]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2702 
=== Succesors ===
next: v2194 
=== Usages ===
i270 
=== Predecessor ===
v2390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2702 #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i597 
y: i2657 
=== Succesors ===
=== Usages ===
i274 i274 i274 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i597 y: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j2071 
=== Succesors ===
=== Usages ===
v2194 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1526 y: j2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2191 
=== Succesors ===
trueSuccessor: v2192 
falseSuccessor: v2193 
=== Usages ===
=== Predecessor ===
i2657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2191 #trueSuccessor: v2192 #falseSuccessor: v2193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v117|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v121|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: v112|QWORD[.] v111|DWORD v121|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: v113|QWORD[.] v112|QWORD[.] v111|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = SUB (x: v111|DWORD, ~y: [v113|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v119|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B99" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v2192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|DWORD] destination: B92 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2242  <|@  <|@
f <@~|@floating>@ <|@
tid v2717 <|@
result [v112|QWORD[.] + v111|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i597 
=== Succesors ===
=== Usages ===
j2392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i597  <|@  <|@
f <@~|@floating>@ <|@
tid j2392 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2390 
address: v2717 
=== Succesors ===
=== Usages ===
v2755 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2390 address: v2717  <|@  <|@
f <@~|@floating>@ <|@
tid v2755 <|@
result [v126|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2392 
index: - 
=== Succesors ===
=== Usages ===
v2568 v2570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2392 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2439 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1526 
y: j2438 
=== Succesors ===
=== Usages ===
v2440 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1526 y: j2438  <|@  <|@
f <@~|@floating>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2439 
y: j1699 
=== Succesors ===
=== Usages ===
v2242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2439 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2440 
=== Succesors ===
trueSuccessor: v2241 
falseSuccessor: v2240 
=== Usages ===
=== Predecessor ===
v2193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2440 #trueSuccessor: v2241 #falseSuccessor: v2240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = LEA [v112|QWORD[.] + v111|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v119|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2245 
=== Usages ===
=== Predecessor ===
v2242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2245  <|@  <|@
f <@*|@fixed>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2225 
=== Predecessor ===
v2241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2570 
=== Usages ===
=== Predecessor ===
v2242 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2570  <|@  <|@
f <@~|@floating>@ <|@
tid v2597 <|@
result v128|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
value: v2597 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2224 
=== Usages ===
=== Predecessor ===
v2240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2755 value: v2597 stateAfter: - lastLocationAccess: - #next: v2224  <|@  <|@
f <@*|@fixed>@ <|@
tid v2224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2225 
=== Predecessor ===
v2570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v126|QWORD[.]], input: v128|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2393 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v2225 
values: j1724 j1699 
=== Succesors ===
=== Usages ===
v2442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2225 values: j1724 j1699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2224 v2245 
=== Succesors ===
next: v2248 
=== Usages ===
j2393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2224 v2245 #next: v2248  <|@  <|@
f <@~|@floating>@ <|@
tid v2442 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1528 
y: j2393 
=== Succesors ===
=== Usages ===
v2248 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1528 y: j2393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2248 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2442 
=== Succesors ===
trueSuccessor: v2247 
falseSuccessor: v2246 
=== Usages ===
=== Predecessor ===
v2225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2442 #trueSuccessor: v2247 #falseSuccessor: v2246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2557 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2557  <|@  <|@
f <@*|@fixed>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v2247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|DWORD] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2568 
=== Usages ===
=== Predecessor ===
v2248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
value: i1445 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2558 
=== Usages ===
=== Predecessor ===
v2246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2755 value: i1445 stateAfter: - lastLocationAccess: - #next: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v2568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v126|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|DWORD] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B82" "B92" "B97" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i274 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i597 i270 i270 i270 
=== Succesors ===
=== Usages ===
?275 j2004 v1245 i282 v1226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v272 values: i597 i270 i270 i270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v271 v273 v2557 v2558 
=== Succesors ===
next: a2658 
=== Usages ===
i274 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v271 v273 v2557 v2558 #next: a2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2658 <|@
result v131|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2703 
=== Succesors ===
next: v2774 
=== Usages ===
a1213 v2774 v2706 
=== Predecessor ===
v272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2703 #next: v2774  <|@  <|@
tid ?773 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?275 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?773 
values: a710 a627 i274 - - 
=== Succesors ===
=== Usages ===
v1862 v2774 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?773 values: a710 a627 i274 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
object: a2658 
=== Succesors ===
next: i2659 
=== Usages ===
=== Predecessor ===
a2658 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?275 object: a2658 #next: i2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2659 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 261]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: v1225 
=== Usages ===
j1999 v1222 v1239 
=== Predecessor ===
v2774 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: v1225  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2659 
y: i17 
=== Succesors ===
=== Usages ===
v1225 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2659 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i1864 <|@
result int[-320097|0xfffffffffffb1d9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -320097
stableDimension: 0
stamp: i32 [-320097] ⇊00000000fffb1d9f ⇈00000000fffb1d9f
stampKind: i32
value: int[-320097|0xfffffffffffb1d9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1860 i1860 i1860 i1860 i1860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1222 
=== Succesors ===
trueSuccessor: v1224 
falseSuccessor: v1223 
=== Usages ===
=== Predecessor ===
i2659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1222 #trueSuccessor: v1224 #falseSuccessor: v1223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD[.] = MOV [v113|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v113|QWORD[.] v112|QWORD[.] v130|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v131|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOV [v113|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1863  <|@  <|@
f <@*|@fixed>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B100 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1232 
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1232  <|@  <|@
f <@~|@floating>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i17 
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i274 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1226 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1226 #trueSuccessor: v1231 #falseSuccessor: v1227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1947 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1947  <|@  <|@
f <@*|@fixed>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B102 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2660 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v2705 <|@
result [v113|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2660 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 267]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2705 
=== Succesors ===
next: v1237 
=== Usages ===
j2008 i282 v1233 i1238 i1244 
=== Predecessor ===
v1227 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2705 #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2660 
y: i17 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2660 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1233 
=== Succesors ===
trueSuccessor: v1236 
falseSuccessor: v1234 
=== Usages ===
=== Predecessor ===
i2660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1233 #trueSuccessor: v1236 #falseSuccessor: v1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOV [v113|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v133|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B104 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2661 
=== Usages ===
=== Predecessor ===
v1237 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2661  <|@  <|@
f <@~|@floating>@ <|@
tid v2706 <|@
result [v131|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2658 
=== Succesors ===
=== Usages ===
i2661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2661 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v1243 
=== Usages ===
i1238 
=== Predecessor ===
v1234 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v1243  <|@  <|@
f <@~|@floating>@ <|@
tid i1238 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2661 
y: i2660 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2661 y: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1238 
y: i2659 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1238 y: i2659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1239 
=== Succesors ===
trueSuccessor: v1242 
falseSuccessor: v1240 
=== Usages ===
=== Predecessor ===
i2661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1239 #trueSuccessor: v1242 #falseSuccessor: v1240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOV [v131|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SUB (x: v134|DWORD, ~y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1945 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B110" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1249  <|@  <|@
f <@~|@floating>@ <|@
tid i1244 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2656 
y: i2660 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2656 y: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1244 
y: i274 
=== Succesors ===
=== Usages ===
v1249 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1244 y: i274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1245 
=== Succesors ===
trueSuccessor: v1248 
falseSuccessor: v1246 
=== Usages ===
=== Predecessor ===
v1240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1245 #trueSuccessor: v1248 #falseSuccessor: v1246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = SUB (x: v117|DWORD, ~y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B107 -> B108 falseDestination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575673847185677614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
v1248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B106" "B104" "B102" 
    successors 
    xhandlers
    flags 
    probability 4585926408733826383
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1860 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-320779 - -320097] ⇊00000000fffb1895 ⇈00000000fffb1fff
valueDescription: i32
=== Inputs ===
merge: v1857 
values: i1864 i1864 i1864 i1864 i1864 
=== Succesors ===
=== Usages ===
v1862 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1857 values: i1864 i1864 i1864 i1864 i1864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1863 v1944 v1945 v1946 v1947 
=== Succesors ===
next: v1862 
=== Usages ===
i1860 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1863 v1944 v1945 v1946 v1947 #next: v1862  <|@  <|@
f <@*|@fixed>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
actionAndReason: i1860 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1857 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?275 actionAndReason: i1860 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v113|QWORD[.] v112|QWORD[.] v130|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B139" 
    xhandlers
    flags 
    probability 4605167443218054429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1998 
=== Usages ===
=== Predecessor ===
v1249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1998  <|@  <|@
f <@~|@floating>@ <|@
tid a1213 <|@
result v138|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2658 
=== Succesors ===
=== Usages ===
j1998 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1998 <|@
result v139|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1213 
=== Succesors ===
next: j2003 
=== Usages ===
v2726 
=== Predecessor ===
v1246 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1213 #next: j2003  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2003 <|@
result v140|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a627 
=== Succesors ===
next: v2009 
=== Usages ===
v2727 
=== Predecessor ===
j1998 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a627 #next: v2009  <|@  <|@
f <@~|@floating>@ <|@
tid j1999 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2659 
=== Succesors ===
=== Usages ===
v2726 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2659  <|@  <|@
f <@~|@floating>@ <|@
tid v2726 <|@
result [v139|QWORD[*] + v141|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1998 
index: j1999 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: j1999  <|@  <|@
f <@~|@floating>@ <|@
tid j2004 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i274 
=== Succesors ===
=== Usages ===
v2727 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i274  <|@  <|@
f <@~|@floating>@ <|@
tid v2727 <|@
result [v140|QWORD[*] + v142|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2003 
index: j2004 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2003 index: j2004  <|@  <|@
f <@~|@floating>@ <|@
tid j2008 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2660 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2726 v2727 j2008 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
j2003 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2726 v2727 j2008 #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i274 
y: i2660 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i274 y: i2660  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v2009 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = UNCOMPRESSPOINTER (input: v131|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[*] = MOVE v138|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[*] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOVSXD v132|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOVSXD v130|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = MOVSXD v133|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v139|QWORD[*] + v141|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v140|QWORD[*] + v142|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v143|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ADD (x: v130|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v113|QWORD[.]] destination: B110 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1855 
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1855  <|@  <|@
f <@~|@floating>@ <|@
tid i1856 <|@
result int[-305179|0xfffffffffffb57e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305179
stableDimension: 0
stamp: i32 [-305179] ⇊00000000fffb57e5 ⇈00000000fffb57e5
stampKind: i32
value: int[-305179|0xfffffffffffb57e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1847 
=== Predecessor ===
v1614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305179|0xfffffffffffb57e5]] destination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1853 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1853  <|@  <|@
f <@~|@floating>@ <|@
tid i1854 <|@
result int[-303131|0xfffffffffffb5fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303131
stableDimension: 0
stamp: i32 [-303131] ⇊00000000fffb5fe5 ⇈00000000fffb5fe5
stampKind: i32
value: int[-303131|0xfffffffffffb5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1847 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303131|0xfffffffffffb5fe5]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1850 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-305179 - -301835] ⇊00000000fffb44e5 ⇈00000000fffb7ff5
valueDescription: i32
=== Inputs ===
merge: v1847 
values: i1854 i1856 
=== Succesors ===
=== Usages ===
v1852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1847 values: i1854 i1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1853 v1855 
=== Succesors ===
next: v1852 
=== Usages ===
i1850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1853 v1855 #next: v1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?239 
actionAndReason: i1850 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1847 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?239 actionAndReason: i1850 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B115" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
v243 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B78" 
    successors "B116" "B206" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v248 v250 
=== Succesors ===
next: a2662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v248 v250 #next: a2662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2662 <|@
result v146|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2703 
=== Succesors ===
next: i2663 
=== Usages ===
a1262 v2707 
=== Predecessor ===
v249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2703 #next: i2663  <|@  <|@
tid ?775 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?283 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?775 
values: a710 a627 i587 - - 
=== Succesors ===
=== Usages ===
v1870 i2663 i2665 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?775 values: a710 a627 i587 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2707 <|@
result [v146|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2662 
=== Succesors ===
=== Usages ===
i2663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2663 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?283 
guard: - 
address: v2707 
=== Succesors ===
next: i2664 
=== Usages ===
i1314 v1269 
=== Predecessor ===
a2662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?283 guard: - address: v2707 #next: i2664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2664 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 293]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: v1631 
=== Usages ===
v2708 i297 v1269 
=== Predecessor ===
i2663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: v1631  <|@  <|@
f <@~|@floating>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2664 
y: i2663 
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2664 y: i2663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1269 
=== Succesors ===
trueSuccessor: v1628 
falseSuccessor: v1630 
=== Usages ===
=== Predecessor ===
i2664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1269 #trueSuccessor: v1628 #falseSuccessor: v1630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD[.] = MOV [v113|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v147|DWORD = MOV [v146|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOV [v113|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v147|DWORD, y: v148|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B205" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2665 
=== Usages ===
i2667 
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2665 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?283 
guard: - 
address: v2699 
=== Succesors ===
next: v1639 
=== Usages ===
i1320 v1282 v1288 v1338 v1408 v1398 v1388 v1378 
=== Predecessor ===
v1628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?283 guard: - address: v2699 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i587 
y: i2665 
=== Succesors ===
=== Usages ===
v1639 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i587 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1282 
=== Succesors ===
trueSuccessor: v1636 
falseSuccessor: v1638 
=== Usages ===
=== Predecessor ===
i2665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1282 #trueSuccessor: v1636 #falseSuccessor: v1638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v149|DWORD = MOV [v112|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B116 -> B117 falseDestination: B116 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B204" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1643 
=== Usages ===
v1286 
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i591 
y: i2665 
=== Succesors ===
=== Usages ===
v1643 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i591 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1288 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1642 
=== Usages ===
=== Predecessor ===
v1636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1288 #trueSuccessor: v1640 #falseSuccessor: v1642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2666 
=== Usages ===
v1291 
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2666  <|@  <|@
f <@~|@floating>@ <|@
tid v2776 <|@
result [v113|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i2666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2666 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 307]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2776 
=== Succesors ===
next: v1647 
=== Usages ===
v293 i303 
=== Predecessor ===
v1640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2776 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2666 
y: i292 
=== Succesors ===
=== Usages ===
v1647 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2666 y: i292  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v293 
=== Succesors ===
trueSuccessor: v1646 
falseSuccessor: v1644 
=== Usages ===
=== Predecessor ===
i2666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v293 #trueSuccessor: v1646 #falseSuccessor: v1644  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOV [v113|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v150|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1875 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid i1876 <|@
result int[-331027|0xfffffffffffaf2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -331027
stableDimension: 0
stamp: i32 [-331027] ⇊00000000fffaf2ed ⇈00000000fffaf2ed
stampKind: i32
value: int[-331027|0xfffffffffffaf2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-331027|0xfffffffffffaf2ed]] destination: B119 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B203" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1651 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1651  <|@  <|@
f <@~|@floating>@ <|@
tid i303 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2666 
y: i153 
=== Succesors ===
=== Usages ===
i304 j2017 i1320 i1314 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2666 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i304 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i303 
y: i597 
=== Succesors ===
=== Usages ===
i305 v2709 i375 v1338 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i303 y: i597  <|@  <|@
f <@~|@floating>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i304 
y: i2665 
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i304 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1338 
=== Succesors ===
trueSuccessor: v1648 
falseSuccessor: v1650 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1338 #trueSuccessor: v1648 #falseSuccessor: v1650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = DEC v150|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = ADD (x: v151|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2667 
=== Usages ===
v1346 
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2667  <|@  <|@
f <@~|@floating>@ <|@
tid a1262 <|@
result v153|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 289]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2662 
=== Succesors ===
=== Usages ===
j2010 v2708 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2662  <|@  <|@
f <@~|@floating>@ <|@
tid v2708 <|@
result [v153|QWORD[.] + v148|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1262 
index: i2664 
=== Succesors ===
=== Usages ===
i2667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1262 index: i2664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2667 <|@
result v154|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1628 
address: v2708 
=== Succesors ===
next: v1286 
=== Usages ===
v1286 
=== Predecessor ===
v1648 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1628 address: v2708 #next: v1286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1636 
address: v2700 
value: i2667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1291 
=== Usages ===
=== Predecessor ===
i2667 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1636 address: v2700 value: i2667 stateAfter: - lastLocationAccess: - #next: v1291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1640 
address: v2701 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1319 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1640 address: v2701 value: i1442 stateAfter: - lastLocationAccess: - #next: v1319  <|@  <|@
f <@~|@floating>@ <|@
tid i1314 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2663 
y: i303 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2663 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result v156|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2664 
y: i4 
=== Succesors ===
=== Usages ===
j2011 v1315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2664 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1314 
y: i297 
=== Succesors ===
=== Usages ===
v1319 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1314 y: i297  <|@  <|@
f <@*|@fixed>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1315 
=== Succesors ===
trueSuccessor: v1318 
falseSuccessor: v1316 
=== Usages ===
=== Predecessor ===
v1291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1315 #trueSuccessor: v1318 #falseSuccessor: v1316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = UNCOMPRESSPOINTER (input: v146|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVSX [v153|QWORD[.] + v148|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v116|QWORD * 1], y: v154|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v115|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = SUB (x: v147|DWORD, ~y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = INC v148|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v156|DWORD, y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1317 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1317  <|@  <|@
f <@*|@fixed>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1305 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1325 
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1325  <|@  <|@
f <@~|@floating>@ <|@
tid i1320 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2665 
y: i303 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2665 y: i303  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1320 
y: i597 
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1320 y: i597  <|@  <|@
f <@*|@fixed>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1321 
=== Succesors ===
trueSuccessor: v1324 
falseSuccessor: v1322 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1321 #trueSuccessor: v1324 #falseSuccessor: v1322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = SUB (x: v149|DWORD, ~y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1305 
=== Predecessor ===
v1324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1317 v1323 
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1317 v1323 #next: v1326  <|@  <|@
tid ?777 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?777 
values: a710 a627 i597 - - 
=== Succesors ===
=== Usages ===
v1326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?777 values: a710 a627 i597 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?290 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -339553 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v113|QWORD[.] v112|QWORD[.] v111|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2010 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2010 <|@
result v158|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a1262 
=== Succesors ===
next: j2015 
=== Usages ===
v2728 
=== Predecessor ===
v1322 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1262 #next: j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2015 <|@
result v159|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
object: a627 
=== Succesors ===
next: v2018 
=== Usages ===
v2729 
=== Predecessor ===
j2010 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a627 #next: v2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2011 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i297 
=== Succesors ===
=== Usages ===
v2728 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v2728 <|@
result [v158|QWORD[*] + v160|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2010 
index: j2011 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2010 index: j2011  <|@  <|@
f <@~|@floating>@ <|@
tid v2729 <|@
result [v159|QWORD[*] + v111|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2015 
index: i597 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2015 index: i597  <|@  <|@
f <@~|@floating>@ <|@
tid j2017 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i303 
=== Succesors ===
=== Usages ===
v2018 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2728 v2729 j2017 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
j2015 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2728 v2729 j2017 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
result [v112|QWORD[.] + v152|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i304 
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i304  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
result short[69|0x45] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1648 
address: v2709 
value: i1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v2018 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1648 address: v2709 value: i1452 stateAfter: - lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid i305 <|@
result v162|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i304 
y: i4 
=== Succesors ===
=== Usages ===
?308 v2713 i323 v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i304 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v311 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v311 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[*] = MOVE v153|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[*] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVSXD v156|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOVSXD v151|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v158|QWORD[*] + v160|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v159|QWORD[*] + v111|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v161|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v152|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = INC v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i305 
y: i2665 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i305 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1408 
=== Succesors ===
trueSuccessor: v1652 
falseSuccessor: v1654 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1408 #trueSuccessor: v1652 #falseSuccessor: v1654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v162|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1415 
=== Usages ===
v1415 
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1415  <|@  <|@
f <@~|@floating>@ <|@
tid v2713 <|@
result [v112|QWORD[.] + v162|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i305 
=== Succesors ===
=== Usages ===
v1415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1652 
address: v2713 
value: i1438 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1652 address: v2713 value: i1438 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result v163|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i304 
y: i292 
=== Succesors ===
=== Usages ===
i323 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i304 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result v165|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i4 
y: i577 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i4 y: i577  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v162|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = LEA [v152|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = SUB (x: v164|DWORD, ~y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|DWORD, v165|DWORD] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1653 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1653  <|@  <|@
tid ?779 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?308 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?779 
values: a710 a627 i305 - - 
=== Succesors ===
=== Usages ===
v1653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?779 values: a710 a627 i305 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1409
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?308 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -360731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v113|QWORD[.] v112|QWORD[.] v162|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v166|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i577 
y: i153 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = DEC v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|DWORD, v166|DWORD] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B128" "B130" 
    successors "B132" "B201" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i323 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v321 
values: i375 i305 
=== Succesors ===
=== Usages ===
?325 i331 i378 v1378 v2710 i376 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i375 i305  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v168|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v321 
values: i317 i319 
=== Succesors ===
=== Usages ===
?325 v327 i332 i486 v338 i487 i458 i455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: i317 i319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v320 v322 
=== Succesors ===
next: v1659 
=== Usages ===
i323 i324 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v320 v322 #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i2665 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1378 
=== Succesors ===
trueSuccessor: v1656 
falseSuccessor: v1658 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1378 #trueSuccessor: v1656 #falseSuccessor: v1658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|DWORD, v168|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
v1366 v1356 v1386 
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v169|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i323 
y: i4 
=== Succesors ===
=== Usages ===
i382 v2711 v1388 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2710 <|@
result [v112|QWORD[.] + v167|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i323 
=== Succesors ===
=== Usages ===
v1386 v1366 v1356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i323  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i326 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i326  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
v1656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v328 #falseSuccessor: v329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = INC v167|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v168|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result v170|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i324 
y: i236 
=== Succesors ===
=== Usages ===
i333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i324 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i333 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i332 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1356 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2710 
value: i333 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2710 value: i333 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = LEA [v168|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v167|DWORD * 2 + 16], y: v170|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v169|DWORD, v113|QWORD[.]] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B200" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i331 
y: i2665 
=== Succesors ===
=== Usages ===
v1663 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i331 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1388 
=== Succesors ===
trueSuccessor: v1660 
falseSuccessor: v1662 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1388 #trueSuccessor: v1660 #falseSuccessor: v1662  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
v1396 v1376 
=== Predecessor ===
v1663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i323 
y: i292 
=== Succesors ===
=== Usages ===
v1398 i382 v2712 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid v2711 <|@
result [v112|QWORD[.] + v169|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i331 
=== Succesors ===
=== Usages ===
v1396 v1376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i331  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 i457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i337 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i337  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
result int[1717986919|0x66666667] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i486 i488 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = LEA [v167|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v168|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i324 
y: i464 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i324 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i486 
y: i292 
=== Succesors ===
=== Usages ===
i452 i2771 i453 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i486 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i2771 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i466 
y: i236 
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i466 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2771 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2710 
value: i344 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1376 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2710 value: i344 stateAfter: - lastLocationAccess: - #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i466 
y: i377 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i466 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i466 
y: i4 
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i466 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i452 
y: i453 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i452 y: i453  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i324 
y: i454 
=== Succesors ===
=== Usages ===
i349 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i324 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i455 
y: i236 
=== Succesors ===
=== Usages ===
i1375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i455 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i1375 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i349 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1376 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1660 
address: v2711 
value: i1375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1660 address: v2711 value: i1375 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v168|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SAR v173|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = LEA [v174|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v167|DWORD * 2 + 16], y: v175|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = SHL v174|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = SHL v174|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = ADD (x: v176|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = SUB (x: v168|DWORD, ~y: v178|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = LEA [v179|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v169|DWORD * 2 + 16], y: v180|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|DWORD, v113|QWORD[.]] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B199" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i376 
y: i2665 
=== Succesors ===
=== Usages ===
v1667 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i376 y: i2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1398 
=== Succesors ===
trueSuccessor: v1664 
falseSuccessor: v1666 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1398 #trueSuccessor: v1664 #falseSuccessor: v1666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v171|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B137 -> B138 falseDestination: B137 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1386 
=== Usages ===
v1406 
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
result v182|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i324 
y: i470 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i324 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result v183|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i487 
y: i472 
=== Succesors ===
=== Usages ===
i457 i2772 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i487 y: i472  <|@  <|@
f <@~|@floating>@ <|@
tid i2772 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i473 
y: i236 
=== Succesors ===
=== Usages ===
i354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i473 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2772 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1656 
address: v2710 
value: i354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1664 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1656 address: v2710 value: i354 stateAfter: - lastLocationAccess: - #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i473 
y: i337 
=== Succesors ===
=== Usages ===
i458 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i473 y: i337  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i324 
y: i457 
=== Succesors ===
=== Usages ===
i477 i488 i463 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i324 y: i457  <|@  <|@
f <@~|@floating>@ <|@
tid i488 <|@
result v188|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i458 
y: i464 
=== Succesors ===
=== Usages ===
i476 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i458 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
result v189|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i488 
y: i292 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i488 y: i292  <|@  <|@
f <@~|@floating>@ <|@
tid i467 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i458 
y: i467 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i458 y: i467  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i476 
y: i477 
=== Succesors ===
=== Usages ===
i360 i460 i461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i476 y: i477  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i478 
y: i236 
=== Succesors ===
=== Usages ===
i1395 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i478 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i1395 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i360 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1396 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1660 
address: v2711 
value: i1395 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1406 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1660 address: v2711 value: i1395 stateAfter: - lastLocationAccess: - #next: v1406  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
result [v112|QWORD[.] + v171|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a627 
index: i376 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a627 index: i376  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i478 
y: i377 
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i478 y: i377  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result v194|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i478 
y: i4 
=== Succesors ===
=== Usages ===
i462 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i478 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i462 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i460 
y: i461 
=== Succesors ===
=== Usages ===
i463 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i460 y: i461  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result v196|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i458 
y: i462 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i458 y: i462  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result v197|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i463 
y: i236 
=== Succesors ===
=== Usages ===
i1405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i463 y: i236  <|@  <|@
f <@~|@floating>@ <|@
tid i1405 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 16
stamp: i16
=== Inputs ===
value: i364 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1406 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1664 
address: v2712 
value: i1405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1664 address: v2712 value: i1405 stateAfter: - lastLocationAccess: - #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid i378 <|@
result v198|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i323 
y: i377 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v168|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v181|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = SAR v182|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = LEA [v183|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v167|DWORD * 2 + 16], y: v184|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = IMUL v183|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = SUB (x: v168|DWORD, ~y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v186|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = SAR v188|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = SHR v186|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = ADD (x: v189|DWORD, y: v190|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = LEA [v191|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v169|DWORD * 2 + 16], y: v192|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = SHL v191|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = SHL v191|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = ADD (x: v193|DWORD, y: v194|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = SUB (x: v186|DWORD, ~y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = LEA [v196|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v171|DWORD * 2 + 16], y: v197|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = LEA [v167|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|DWORD, v113|QWORD[.]] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B59" "B110" "B133" "B136" "B138" "B71" 
    successors "B140" "B146" 
    xhandlers
    flags 
    probability 4606746645773056613
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v380 
values: i235 i282 i331 i376 i378 i367 
=== Succesors ===
=== Usages ===
?141 j2252 v388 v392 i401 a2096 v1777 i1799 v2119 i2072 v2081 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: i235 i282 i331 i376 i378 i367  <|@  <|@
f <@~|@floating>@ <|@
tid a715 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
valueDescription: a -
=== Inputs ===
merge: v380 
values: a712 a710 a710 a710 a710 a712 
=== Succesors ===
=== Usages ===
v2714 ?141 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v380 values: a712 a710 a710 a710 a710 a712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v383 v384 v385 v386 v387 
=== Succesors ===
next: a2668 
=== Usages ===
i382 a715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v383 v384 v385 v386 v387 #next: a2668  <|@  <|@
f <@~|@floating>@ <|@
tid v2714 <|@
result [v200|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a715 
index: - 
=== Succesors ===
=== Usages ===
a2668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a715 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2668 <|@
result v201|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 14]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2714 
=== Succesors ===
next: v2773 
=== Usages ===
v2716 v2773 v2715 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2714 #next: v2773  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: ?148 
values: a715 - i382 
=== Succesors ===
=== Usages ===
v1840 a2096 a2142 a2034 v2773 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a715 - i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
object: a2668 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
a2668 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?141 object: a2668 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i4 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i382 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v2178 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2063 v2166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2053 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2158 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2053 
=== Succesors ===
=== Usages ===
v2745 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2745 <|@
result [v202|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2158 
index: - 
=== Succesors ===
=== Usages ===
j2162 j2059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2158 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2020 <|@
result v203|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2034 a2142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2182 j2175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v389 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v2773 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v389 #falseSuccessor: v390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v199|DWORD, v200|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|DWORD[.] = MOV [v200|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v201|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1675  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i17 
=== Succesors ===
=== Usages ===
v1675 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i382 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v392 
=== Succesors ===
trueSuccessor: v1674 
falseSuccessor: v1672 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v392 #trueSuccessor: v1674 #falseSuccessor: v1672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v199|DWORD, y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1841 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1841  <|@  <|@
f <@~|@floating>@ <|@
tid i1842 <|@
result int[-363283|0xfffffffffffa74ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -363283
stableDimension: 0
stamp: i32 [-363283] ⇊00000000fffa74ed ⇈00000000fffa74ed
stampKind: i32
value: int[-363283|0xfffffffffffa74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
v1674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-363283|0xfffffffffffa74ed]] destination: B141 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2022 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2022 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2041 
=== Usages ===
v2730 v2731 
=== Predecessor ===
v1672 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2041  <|@  <|@
f <@~|@floating>@ <|@
tid v2730 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2022 
index: - 
=== Succesors ===
=== Usages ===
j2041 v2043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2022 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2041 <|@
result v204|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2730 
=== Succesors ===
next: j2042 
=== Usages ===
j2175 j2047 v2748 
=== Predecessor ===
j2022 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2730 #next: j2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2731 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2022 
index: - 
=== Succesors ===
=== Usages ===
j2042 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2022 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2042 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2731 
=== Succesors ===
next: v2030 
=== Usages ===
v2027 
=== Predecessor ===
j2041 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2731 #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid j2175 <|@
result v205|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2041 
y: j929 
=== Succesors ===
=== Usages ===
v2027 v2043 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2041 y: j929  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2042 
y: j2175 
=== Succesors ===
=== Usages ===
v2030 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2042 y: j2175  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2027 
=== Succesors ===
trueSuccessor: v2028 
falseSuccessor: v2029 
=== Usages ===
=== Predecessor ===
j2042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2027 #trueSuccessor: v2028 #falseSuccessor: v2029  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = LEA [v204|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v205|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4561287956867168280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2034 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2034 <|@
result v206|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2020 i292 i4 
=== Succesors ===
next: j2035 
=== Usages ===
j2035 
=== Predecessor ===
v2028 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2020 i292 i4 #next: j2035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2035 <|@
result v206|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2034 
=== Succesors ===
next: v2048 
=== Usages ===
j2047 
=== Predecessor ===
a2034 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2034 #next: v2048  <|@  <|@
f <@*|@fixed>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
j2035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v203|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v206|QWORD[.]] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4590966956803509341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2043 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2730 
value: j2175 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2039 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2730 value: j2175 stateAfter: - lastLocationAccess: - #next: v2039  <|@  <|@
f <@~|@floating>@ <|@
tid v2748 <|@
result [v204|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2041 
index: - 
=== Succesors ===
=== Usages ===
v2039 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2041 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2039 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2748 
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v2043 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2748 #next: v2046  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
v2039 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v205|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v204|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2047 <|@
result v207|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2045 
values: j2041 j2035 
=== Succesors ===
=== Usages ===
v2733 v2732 a1701 v2749 v2750 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2045 values: j2041 j2035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2046 v2048 
=== Succesors ===
next: a1701 
=== Usages ===
j2047 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2046 v2048 #next: a1701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1701 <|@
result v208|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2047 
=== Succesors ===
next: j2059 
=== Usages ===
a1707 
=== Predecessor ===
v2045 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2047 #next: j2059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
result v209|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2745 
=== Succesors ===
next: v2060 
=== Usages ===
v2060 
=== Predecessor ===
a1701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2745 #next: v2060  <|@  <|@
f <@~|@floating>@ <|@
tid v2732 <|@
result [v207|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2732 
value: j2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2063 
=== Usages ===
=== Predecessor ===
j2059 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2732 value: j2059 stateAfter: - lastLocationAccess: - #next: v2063  <|@  <|@
f <@~|@floating>@ <|@
tid v2733 <|@
result [v207|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2733 
value: v2178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v2060 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2733 value: v2178 stateAfter: - lastLocationAccess: - #next: v2067  <|@  <|@
f <@~|@floating>@ <|@
tid v2749 <|@
result [v207|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1723 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2067 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2749 
value: a1723 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2069 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2749 value: a1723 stateAfter: - lastLocationAccess: - #next: v2069  <|@  <|@
f <@~|@floating>@ <|@
tid v2750 <|@
result [v207|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2047 
index: - 
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2750 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1707 
=== Usages ===
=== Predecessor ===
v2067 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2750 value: i17 stateAfter: - lastLocationAccess: - #next: a1707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1707 <|@
result v208|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1701 
=== Succesors ===
next: v1708 
=== Usages ===
v414 
=== Predecessor ===
v2069 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1701 #next: v1708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
a1707 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1707 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1707 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v207|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = MOVE v207|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [v202|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v207|QWORD[*]], y: v209|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v207|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v207|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v207|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v208|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B147" "B149" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2669 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2669  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
result [v201|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2668 
=== Succesors ===
=== Usages ===
i2669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2669 <|@
result v210|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2715 
=== Succesors ===
next: v1679 
=== Usages ===
i401 i1799 v1777 
=== Predecessor ===
v390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2715 #next: v1679  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
result v211|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32
=== Inputs ===
x: i2669 
y: i382 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2669 y: i382  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i401 
y: i17 
=== Succesors ===
=== Usages ===
v1679 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i401 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v1678 
falseSuccessor: v1676 
=== Usages ===
=== Predecessor ===
i2669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v1678 #falseSuccessor: v1676  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = MOV [v201|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = SUB (x: v210|DWORD, ~y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v211|DWORD, y: v211|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
v1679 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid i1844 <|@
result int[-365843|0xfffffffffffa6aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -365843
stableDimension: 0
stamp: i32 [-365843] ⇊00000000fffa6aed ⇈00000000fffa6aed
stampKind: i32
value: int[-365843|0xfffffffffffa6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
v1678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-365843|0xfffffffffffa6aed]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B141" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1838 <|@
result v212|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-386571 - -363283] ⇊00000000fffa00e5 ⇈00000000fffa7ffd
valueDescription: i32
=== Inputs ===
merge: v1835 
values: i1842 i1844 
=== Succesors ===
=== Usages ===
v1840 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1835 values: i1842 i1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1841 v1843 
=== Succesors ===
next: v1840 
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1841 v1843 #next: v1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?141 
actionAndReason: i1838 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1835 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?141 actionAndReason: i1838 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v212|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v212|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B150" "B153" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2075 
=== Usages ===
=== Predecessor ===
v1679 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2075 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2116 
=== Usages ===
v2734 v2735 
=== Predecessor ===
v1676 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2734 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2075 
index: - 
=== Succesors ===
=== Usages ===
j2116 v2118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2075 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2116 <|@
result v213|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
=== Succesors ===
next: j2117 
=== Usages ===
j2079 v2736 v2737 a2095 v2742 v2738 v2739 v2740 v2741 
=== Predecessor ===
j2075 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2734 #next: j2117  <|@  <|@
f <@~|@floating>@ <|@
tid v2735 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2075 
index: - 
=== Succesors ===
=== Usages ===
j2117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2075 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2117 <|@
result v214|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2735 
=== Succesors ===
next: v2084 
=== Usages ===
v2085 
=== Predecessor ===
j2116 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2735 #next: v2084  <|@  <|@
f <@~|@floating>@ <|@
tid i2080 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2081 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i382 
y: i2080 
=== Succesors ===
=== Usages ===
v2084 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i382 y: i2080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2081 
=== Succesors ===
trueSuccessor: v2083 
falseSuccessor: v2082 
=== Usages ===
=== Predecessor ===
j2117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2081 #trueSuccessor: v2083 #falseSuccessor: v2082  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v213|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B149 -> B150 falseDestination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4605173305861603092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2091 
=== Usages ===
=== Predecessor ===
v2084 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2091  <|@  <|@
f <@~|@floating>@ <|@
tid i2072 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i382 
y: i4 
=== Succesors ===
=== Usages ===
i2104 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i382 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i2103 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2104 <|@
result v216|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2072 
y: i2103 
=== Succesors ===
=== Usages ===
i2074 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2072 y: i2103  <|@  <|@
f <@~|@floating>@ <|@
tid i2073 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2074 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2074 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2104 
y: i2073 
=== Succesors ===
=== Usages ===
j2078 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2104 y: i2073  <|@  <|@
f <@~|@floating>@ <|@
tid j2078 <|@
result v218|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2074 
=== Succesors ===
=== Usages ===
j2079 v2738 v2739 v2740 v2741 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2074  <|@  <|@
f <@~|@floating>@ <|@
tid j2079 <|@
result v219|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: i64
=== Inputs ===
x: j2078 
y: j2116 
=== Succesors ===
=== Usages ===
v2085 v2118 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2078 y: j2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2085 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2117 
y: j2079 
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2117 y: j2079  <|@  <|@
f <@*|@fixed>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2085 
=== Succesors ===
trueSuccessor: v2090 
falseSuccessor: v2089 
=== Usages ===
=== Predecessor ===
v2083 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2085 #trueSuccessor: v2090 #falseSuccessor: v2089  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = SHL v199|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = LEA [v215|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = AND v216|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = MOVSXD v217|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v219|QWORD = ADD (x: v218|QWORD, y: v213|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v219|QWORD, y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" 
    xhandlers
    flags 
    probability 4575607572638581097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2088 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2088  <|@  <|@
f <@*|@fixed>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2087 
=== Predecessor ===
v2090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B151 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4605103324998439825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2118 
=== Usages ===
=== Predecessor ===
v2091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
value: j2079 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2089 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2734 value: j2079 stateAfter: - lastLocationAccess: - #next: v2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2738 <|@
result [v218|QWORD + v213|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2738 
=== Succesors ===
next: v2108 
=== Usages ===
=== Predecessor ===
v2118 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2738 #next: v2108  <|@  <|@
f <@~|@floating>@ <|@
tid v2739 <|@
result [v218|QWORD + v213|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2739 
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2739 #next: v2111  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
result [v218|QWORD + v213|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2740 
=== Succesors ===
next: v2114 
=== Usages ===
=== Predecessor ===
v2108 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2740 #next: v2114  <|@  <|@
f <@~|@floating>@ <|@
tid v2741 <|@
result [v218|QWORD + v213|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2078 
index: j2116 
=== Succesors ===
=== Usages ===
v2114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2078 index: j2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
address: v2741 
=== Succesors ===
next: v2119 
=== Usages ===
=== Predecessor ===
v2111 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2741 #next: v2119  <|@  <|@
f <@~|@floating>@ <|@
tid v2736 <|@
result [v213|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2116 
index: - 
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
value: i382 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2120 
=== Usages ===
=== Predecessor ===
v2114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2736 value: i382 stateAfter: - lastLocationAccess: - #next: v2120  <|@  <|@
f <@~|@floating>@ <|@
tid v2737 <|@
result [v213|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2116 
index: - 
=== Succesors ===
=== Usages ===
v2120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2116 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
value: j2071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2123 
=== Usages ===
=== Predecessor ===
v2119 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2737 value: j2071 stateAfter: - lastLocationAccess: - #next: v2123  <|@  <|@
f <@~|@floating>@ <|@
tid v2742 <|@
result [v213|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2116 
index: - 
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2116 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2181 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2742 
value: v2181 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2094 
=== Usages ===
=== Predecessor ===
v2120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2742 value: v2181 stateAfter: - lastLocationAccess: - #next: v2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2094 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2095 
=== Usages ===
=== Predecessor ===
v2123 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
result v220|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2116 
=== Succesors ===
next: v2097 
=== Usages ===
a2100 
=== Predecessor ===
v2094 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2116 #next: v2097  <|@  <|@
f <@*|@fixed>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
a2095 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v219|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v213|QWORD + 12], y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v213|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v213|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE v213|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v220|QWORD[.]] destination: B152 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4590884941833233083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2086 
=== Usages ===
=== Predecessor ===
v2084 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2086  <|@  <|@
f <@*|@fixed>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2087 
=== Predecessor ===
v2082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4591444788738539218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2086 v2088 
=== Succesors ===
next: a2096 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2086 v2088 #next: a2096  <|@  <|@
f <@~|@floating>@ <|@
tid v2070 <|@
result v221|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2096 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2096 <|@
result v222|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2070 i382 i17 
=== Succesors ===
next: v2099 
=== Usages ===
a2100 
=== Predecessor ===
v2087 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2070 i382 i17 #next: v2099  <|@  <|@
f <@*|@fixed>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
a2096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v221|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v199|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v222|QWORD[.]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B152" "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2100 <|@
result v223|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2098 
values: a2095 a2096 
=== Succesors ===
=== Usages ===
v2754 a1811 v2718 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2098 values: a2095 a2096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2097 v2099 
=== Succesors ===
next: v2445 
=== Usages ===
a2100 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2097 v2099 #next: v2445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2265 
=== Usages ===
j2446 j2448 
=== Predecessor ===
v2098 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2265  <|@  <|@
f <@~|@floating>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2669 
y: i382 
=== Succesors ===
=== Usages ===
i1799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2669 y: i382  <|@  <|@
f <@~|@floating>@ <|@
tid i1799 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1777 
trueValue: i2669 
falseValue: i382 
=== Succesors ===
=== Usages ===
j2253 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1777 trueValue: i2669 falseValue: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j2253 <|@
result v225|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1799 
=== Succesors ===
=== Usages ===
j2503 v2754 j2257 v2262 v2387 j2489 j2494 j2497 j2500 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1799  <|@  <|@
f <@~|@floating>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2253 
y: j2071 
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2253 y: j2071  <|@  <|@
f <@~|@floating>@ <|@
tid j2410 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2527 j2472 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2434 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2548 j2497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1964 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2480 j2533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2430 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2545 j2494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2424 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2540 j2489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2262 
=== Succesors ===
trueSuccessor: v2263 
falseSuccessor: v2264 
=== Usages ===
=== Predecessor ===
v2445 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2262 #trueSuccessor: v2263 #falseSuccessor: v2264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v223|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v199|DWORD, y: v210|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = CMOVE (falseValue: v199|DWORD, ~trueValue: v210|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = MOVSXD v224|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v225|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B174" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2281 
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2281  <|@  <|@
f <@*|@fixed>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
v2263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B156 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2268 
=== Usages ===
=== Predecessor ===
v2265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2268  <|@  <|@
f <@~|@floating>@ <|@
tid v2718 <|@
result [v223|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2100 
index: - 
=== Succesors ===
=== Usages ===
j2448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2100 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2448 <|@
result v226|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2445 
address: v2718 
=== Succesors ===
=== Usages ===
v2756 v2758 v2760 v2762 v2764 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2445 address: v2718  <|@  <|@
f <@~|@floating>@ <|@
tid v2716 <|@
result [v201|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2668 
=== Succesors ===
=== Usages ===
j2446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2668  <|@  <|@
f <@~|@floating>@ <|@
tid j2446 <|@
result v227|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2445 
address: v2716 
=== Succesors ===
=== Usages ===
v2757 v2759 v2761 v2763 v2765 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2445 address: v2716  <|@  <|@
f <@~|@floating>@ <|@
tid j2489 <|@
result v228|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2253 
y: j2424 
=== Succesors ===
=== Usages ===
v2490 v2492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2424  <|@  <|@
f <@~|@floating>@ <|@
tid v2490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2489 
y: j1699 
=== Succesors ===
=== Usages ===
v2268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2489 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2490 
=== Succesors ===
trueSuccessor: v2266 
falseSuccessor: v2267 
=== Usages ===
=== Predecessor ===
v2264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2490 #trueSuccessor: v2266 #falseSuccessor: v2267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|QWORD[.] = LEA [v223|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[*] = LEA [v201|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v228|QWORD = LEA [v225|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v228|QWORD, y: v228|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2277 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2277  <|@  <|@
f <@*|@fixed>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
v2266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B158 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2269 
=== Usages ===
=== Predecessor ===
v2268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2269  <|@  <|@
f <@*|@fixed>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
v2267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B198" 
    successors "B161" "B198" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2481 <|@
result v229|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2270 
values: j1699 j2488 
=== Succesors ===
=== Usages ===
v2765 j2488 v2764 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2270 values: j1699 j2488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2269 
=== Succesors ===
next: v2670 
=== Usages ===
v2670 v2273 v2274 j2481 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2269 #next: v2670  <|@  <|@
f <@~|@floating>@ <|@
tid v2765 <|@
result [v227|QWORD[*] + v229|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2481 
=== Succesors ===
=== Usages ===
v2670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2670 <|@
result v230|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2270 
address: v2765 
=== Succesors ===
next: v2585 
=== Usages ===
v2585 
=== Predecessor ===
v2270 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2270 address: v2765 #next: v2585  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
result [v226|QWORD[.] + v229|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2481 
=== Succesors ===
=== Usages ===
v2585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2764 
value: v2670 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2276 
=== Usages ===
=== Predecessor ===
v2670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2764 value: v2670 stateAfter: - lastLocationAccess: - #next: v2276  <|@  <|@
f <@~|@floating>@ <|@
tid j2488 <|@
result v231|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2481 
y: j924 
=== Succesors ===
=== Usages ===
j2473 j2481 v2492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j924  <|@  <|@
f <@~|@floating>@ <|@
tid v2492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2489 
y: j2488 
=== Succesors ===
=== Usages ===
v2276 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2489 y: j2488  <|@  <|@
f <@*|@fixed>@ <|@
tid v2276 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2492 
=== Succesors ===
trueSuccessor: v2273 
falseSuccessor: v2275 
=== Usages ===
=== Predecessor ===
v2585 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2492 #trueSuccessor: v2273 #falseSuccessor: v2275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v229|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|V256_WORD = H [v227|QWORD[*] + v229|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v229|QWORD * 2], input: v230|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = LEA [v229|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v231|QWORD, y: v228|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2270 
=== Succesors ===
next: v2279 
=== Usages ===
=== Predecessor ===
v2276 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2270 #next: v2279  <|@  <|@
f <@*|@fixed>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2278 
=== Predecessor ===
v2273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B158" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2473 <|@
result v232|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2278 
values: j1699 j2488 
=== Succesors ===
=== Usages ===
v2763 j2480 j2465 v2495 v2762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2278 values: j1699 j2488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2277 v2279 
=== Succesors ===
next: v2300 
=== Usages ===
j2473 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2277 v2279 #next: v2300  <|@  <|@
f <@~|@floating>@ <|@
tid j2494 <|@
result v233|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2253 
y: j2430 
=== Succesors ===
=== Usages ===
v2495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2430  <|@  <|@
f <@~|@floating>@ <|@
tid v2495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2494 
y: j2473 
=== Succesors ===
=== Usages ===
v2300 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2494 y: j2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2495 
=== Succesors ===
trueSuccessor: v2299 
falseSuccessor: v2298 
=== Usages ===
=== Predecessor ===
v2278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2495 #trueSuccessor: v2299 #falseSuccessor: v2298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|QWORD = LEA [v225|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|QWORD, y: v233|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2303 
=== Usages ===
=== Predecessor ===
v2300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2303  <|@  <|@
f <@*|@fixed>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2289 
=== Predecessor ===
v2299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v232|QWORD] destination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2671 
=== Usages ===
v2671 
=== Predecessor ===
v2300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2671  <|@  <|@
f <@~|@floating>@ <|@
tid v2763 <|@
result [v227|QWORD[*] + v232|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2473 
=== Succesors ===
=== Usages ===
v2671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2671 <|@
result v234|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2298 
address: v2763 
=== Succesors ===
next: v2583 
=== Usages ===
v2583 
=== Predecessor ===
v2298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2298 address: v2763 #next: v2583  <|@  <|@
f <@~|@floating>@ <|@
tid v2762 <|@
result [v226|QWORD[.] + v232|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2473 
=== Succesors ===
=== Usages ===
v2583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2762 
value: v2671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v2671 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2762 value: v2671 stateAfter: - lastLocationAccess: - #next: v2288  <|@  <|@
f <@~|@floating>@ <|@
tid j2480 <|@
result v235|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2473 
y: j1964 
=== Succesors ===
=== Usages ===
j2465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2473 y: j1964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2289 
=== Predecessor ===
v2583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|V128_WORD = H [v227|QWORD[*] + v232|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v232|QWORD * 2], input: v234|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = LEA [v232|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v235|QWORD] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2465 <|@
result v236|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2289 
values: j2480 j2473 
=== Succesors ===
=== Usages ===
v2761 j2472 j2457 v2498 v2760 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2289 values: j2480 j2473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2288 v2303 
=== Succesors ===
next: v2306 
=== Usages ===
j2465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2288 v2303 #next: v2306  <|@  <|@
f <@~|@floating>@ <|@
tid j2497 <|@
result v237|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2253 
y: j2434 
=== Succesors ===
=== Usages ===
v2498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2434  <|@  <|@
f <@~|@floating>@ <|@
tid v2498 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2497 
y: j2465 
=== Succesors ===
=== Usages ===
v2306 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2497 y: j2465  <|@  <|@
f <@*|@fixed>@ <|@
tid v2306 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2498 
=== Succesors ===
trueSuccessor: v2305 
falseSuccessor: v2304 
=== Usages ===
=== Predecessor ===
v2289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2498 #trueSuccessor: v2305 #falseSuccessor: v2304  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v236|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v237|QWORD = LEA [v225|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v236|QWORD, y: v237|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2309 
=== Usages ===
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2309  <|@  <|@
f <@*|@fixed>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
v2305 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v236|QWORD] destination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2672 
=== Usages ===
v2672 
=== Predecessor ===
v2306 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2672  <|@  <|@
f <@~|@floating>@ <|@
tid v2761 <|@
result [v227|QWORD[*] + v236|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2465 
=== Succesors ===
=== Usages ===
v2672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2672 <|@
result v238|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2304 
address: v2761 
=== Succesors ===
next: v2581 
=== Usages ===
v2581 
=== Predecessor ===
v2304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2304 address: v2761 #next: v2581  <|@  <|@
f <@~|@floating>@ <|@
tid v2760 <|@
result [v226|QWORD[.] + v236|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2465 
=== Succesors ===
=== Usages ===
v2581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2760 
value: v2672 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v2672 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2760 value: v2672 stateAfter: - lastLocationAccess: - #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid j2472 <|@
result v239|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2465 
y: j2410 
=== Succesors ===
=== Usages ===
j2457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2465 y: j2410  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2292 
=== Predecessor ===
v2581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v238|V64_WORD = H [v227|QWORD[*] + v236|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v236|QWORD * 2], input: v238|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = LEA [v236|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v239|QWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2457 <|@
result v240|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2292 
values: j2472 j2465 
=== Succesors ===
=== Usages ===
v2759 j2464 j2449 v2501 v2758 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2292 values: j2472 j2465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2291 v2309 
=== Succesors ===
next: v2312 
=== Usages ===
j2457 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2291 v2309 #next: v2312  <|@  <|@
f <@~|@floating>@ <|@
tid j2500 <|@
result v241|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2253 
y: j2438 
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j2438  <|@  <|@
f <@~|@floating>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2500 
y: j2457 
=== Succesors ===
=== Usages ===
v2312 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2500 y: j2457  <|@  <|@
f <@*|@fixed>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2501 
=== Succesors ===
trueSuccessor: v2311 
falseSuccessor: v2310 
=== Usages ===
=== Predecessor ===
v2292 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2501 #trueSuccessor: v2311 #falseSuccessor: v2310  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v240|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v241|QWORD = LEA [v225|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v240|QWORD, y: v241|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2315 
=== Usages ===
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2315  <|@  <|@
f <@*|@fixed>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2295 
=== Predecessor ===
v2311 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2673 
=== Usages ===
v2673 
=== Predecessor ===
v2312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2673  <|@  <|@
f <@~|@floating>@ <|@
tid v2759 <|@
result [v227|QWORD[*] + v240|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2457 
=== Succesors ===
=== Usages ===
v2673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2673 <|@
result v242|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2310 
address: v2759 
=== Succesors ===
next: v2579 
=== Usages ===
v2579 
=== Predecessor ===
v2310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2310 address: v2759 #next: v2579  <|@  <|@
f <@~|@floating>@ <|@
tid v2758 <|@
result [v226|QWORD[.] + v240|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2457 
=== Succesors ===
=== Usages ===
v2579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2758 
value: v2673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2294 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2758 value: v2673 stateAfter: - lastLocationAccess: - #next: v2294  <|@  <|@
f <@~|@floating>@ <|@
tid j2464 <|@
result v243|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2457 
y: j1724 
=== Succesors ===
=== Usages ===
j2449 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2457 y: j1724  <|@  <|@
f <@*|@fixed>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2295 
=== Predecessor ===
v2579 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|V32_WORD = H [v227|QWORD[*] + v240|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v240|QWORD * 2], input: v242|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v243|QWORD = LEA [v240|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v243|QWORD] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2449 <|@
result v244|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2295 
values: j2464 j2457 
=== Succesors ===
=== Usages ===
v2757 v2504 v2756 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2295 values: j2464 j2457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2294 v2315 
=== Succesors ===
next: v2318 
=== Usages ===
j2449 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2294 v2315 #next: v2318  <|@  <|@
f <@~|@floating>@ <|@
tid j2503 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2253 
y: j1527 
=== Succesors ===
=== Usages ===
v2504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2253 y: j1527  <|@  <|@
f <@~|@floating>@ <|@
tid v2504 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2503 
y: j2449 
=== Succesors ===
=== Usages ===
v2318 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2503 y: j2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v2318 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2504 
=== Succesors ===
trueSuccessor: v2317 
falseSuccessor: v2316 
=== Usages ===
=== Predecessor ===
v2295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2504 #trueSuccessor: v2317 #falseSuccessor: v2316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v244|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = DEC v225|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v244|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2321 
=== Usages ===
=== Predecessor ===
v2318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2321  <|@  <|@
f <@*|@fixed>@ <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
v2317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2674 
=== Usages ===
i2674 
=== Predecessor ===
v2318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2674  <|@  <|@
f <@~|@floating>@ <|@
tid v2757 <|@
result [v227|QWORD[*] + v244|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2446 
index: j2449 
=== Succesors ===
=== Usages ===
i2674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2446 index: j2449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2674 <|@
result v246|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2316 
address: v2757 
=== Succesors ===
next: v2577 
=== Usages ===
v2577 
=== Predecessor ===
v2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2316 address: v2757 #next: v2577  <|@  <|@
f <@~|@floating>@ <|@
tid v2756 <|@
result [v226|QWORD[.] + v244|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2448 
index: j2449 
=== Succesors ===
=== Usages ===
v2577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: j2449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2756 
value: i2674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2297 
=== Usages ===
=== Predecessor ===
i2674 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2756 value: i2674 stateAfter: - lastLocationAccess: - #next: v2297  <|@  <|@
f <@*|@fixed>@ <|@
tid v2297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2282 
=== Predecessor ===
v2577 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v246|DWORD = MOVSX [v227|QWORD[*] + v244|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v226|QWORD[.] + v244|QWORD * 2], y: v246|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B156" "B173" "B172" 
    successors "B175" "B193" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2281 v2297 v2321 
=== Succesors ===
next: v2507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2281 v2297 v2321 #next: v2507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2328 
=== Usages ===
j2509 
=== Predecessor ===
v2282 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2328  <|@  <|@
f <@~|@floating>@ <|@
tid j2252 <|@
result v247|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j2257 v2387 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2253 
y: j2252 
=== Succesors ===
=== Usages ===
v2328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2253 y: j2252  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2387 
=== Succesors ===
trueSuccessor: v2327 
falseSuccessor: v2326 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2387 #trueSuccessor: v2327 #falseSuccessor: v2326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|QWORD = MOVSXD v199|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v247|QWORD, y: v225|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid v2754 <|@
result [v223|QWORD[.] + v225|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2100 
index: j2253 
=== Succesors ===
=== Usages ===
j2509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2100 index: j2253  <|@  <|@
f <@~|@floating>@ <|@
tid j2509 <|@
result v248|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2507 
address: v2754 
=== Succesors ===
=== Usages ===
v2766 v2767 v2768 v2769 v2770 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2507 address: v2754  <|@  <|@
f <@~|@floating>@ <|@
tid j2257 <|@
result v249|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2252 
y: j2253 
=== Succesors ===
=== Usages ===
j2554 j2540 j2545 j2548 j2551 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2252 y: j2253  <|@  <|@
f <@~|@floating>@ <|@
tid j2540 <|@
result v250|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2257 
y: j2424 
=== Succesors ===
=== Usages ===
v2541 v2543 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2424  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2540 
y: j1699 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2540 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2541 
=== Succesors ===
trueSuccessor: v2329 
falseSuccessor: v2330 
=== Usages ===
=== Predecessor ===
v2327 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2541 #trueSuccessor: v2329 #falseSuccessor: v2330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v248|QWORD[.] = LEA [v223|QWORD[.] + v225|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v249|QWORD = SUB (x: v247|QWORD, ~y: v225|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = LEA [v249|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v250|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B180" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2340  <|@  <|@
f <@*|@fixed>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B176 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2332 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2332  <|@  <|@
f <@~|@floating>@ <|@
tid v2600 <|@
result v251|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2333 
=== Predecessor ===
v2330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B192" 
    successors "B179" "B192" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2534 <|@
result v252|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2333 
values: j1699 j2539 
=== Succesors ===
=== Usages ===
v2770 j2539 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2333 values: j1699 j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2333 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2332 
=== Succesors ===
next: v2595 
=== Usages ===
j2534 v2336 v2337 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2332 #next: v2595  <|@  <|@
f <@~|@floating>@ <|@
tid v2770 <|@
result [v248|QWORD[.] + v252|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2534 
=== Succesors ===
=== Usages ===
v2595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2770 
value: v2600 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2339 
=== Usages ===
=== Predecessor ===
v2333 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2770 value: v2600 stateAfter: - lastLocationAccess: - #next: v2339  <|@  <|@
f <@~|@floating>@ <|@
tid j2539 <|@
result v253|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2534 
y: j924 
=== Succesors ===
=== Usages ===
j2528 j2534 v2543 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2534 y: j924  <|@  <|@
f <@~|@floating>@ <|@
tid v2543 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2540 
y: j2539 
=== Succesors ===
=== Usages ===
v2339 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2540 y: j2539  <|@  <|@
f <@*|@fixed>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2543 
=== Succesors ===
trueSuccessor: v2336 
falseSuccessor: v2338 
=== Usages ===
=== Predecessor ===
v2595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2543 #trueSuccessor: v2336 #falseSuccessor: v2338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v252|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v252|QWORD * 2], input: v251|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = LEA [v252|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v253|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2333 
=== Succesors ===
next: v2342 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2333 #next: v2342  <|@  <|@
f <@*|@fixed>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2341 
=== Predecessor ===
v2336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B179 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B176" "B179" 
    successors "B181" "B182" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2528 <|@
result v254|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2341 
values: j1699 j2539 
=== Succesors ===
=== Usages ===
v2769 j2533 j2522 v2546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2341 values: j1699 j2539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2340 v2342 
=== Succesors ===
next: v2363 
=== Usages ===
j2528 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2340 v2342 #next: v2363  <|@  <|@
f <@~|@floating>@ <|@
tid j2545 <|@
result v255|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2257 
y: j2430 
=== Succesors ===
=== Usages ===
v2546 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2430  <|@  <|@
f <@~|@floating>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2545 
y: j2528 
=== Succesors ===
=== Usages ===
v2363 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2545 y: j2528  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2546 
=== Succesors ===
trueSuccessor: v2362 
falseSuccessor: v2361 
=== Usages ===
=== Predecessor ===
v2341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2546 #trueSuccessor: v2362 #falseSuccessor: v2361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v254|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|QWORD = LEA [v249|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2366 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v254|QWORD] destination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2594 
=== Usages ===
=== Predecessor ===
v2363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2594  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
result [v248|QWORD[.] + v254|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2528 
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2528  <|@  <|@
f <@~|@floating>@ <|@
tid v2604 <|@
result v256|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
value: v2604 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2769 value: v2604 stateAfter: - lastLocationAccess: - #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid j2533 <|@
result v257|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2528 
y: j1964 
=== Succesors ===
=== Usages ===
j2522 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2528 y: j1964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
v2594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v254|QWORD * 2], input: v256|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v257|QWORD = LEA [v254|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v257|QWORD] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2522 <|@
result v258|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2352 
values: j2533 j2528 
=== Succesors ===
=== Usages ===
v2768 j2527 j2516 v2549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2352 values: j2533 j2528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2351 v2366 
=== Succesors ===
next: v2369 
=== Usages ===
j2522 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2351 v2366 #next: v2369  <|@  <|@
f <@~|@floating>@ <|@
tid j2548 <|@
result v259|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2257 
y: j2434 
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2434  <|@  <|@
f <@~|@floating>@ <|@
tid v2549 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2548 
y: j2522 
=== Succesors ===
=== Usages ===
v2369 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2548 y: j2522  <|@  <|@
f <@*|@fixed>@ <|@
tid v2369 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2549 
=== Succesors ===
trueSuccessor: v2368 
falseSuccessor: v2367 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2549 #trueSuccessor: v2368 #falseSuccessor: v2367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v258|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|QWORD = LEA [v249|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v258|QWORD, y: v259|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2372 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2372  <|@  <|@
f <@*|@fixed>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2368 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|QWORD] destination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2592 
=== Usages ===
=== Predecessor ===
v2369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2592  <|@  <|@
f <@~|@floating>@ <|@
tid v2768 <|@
result [v248|QWORD[.] + v258|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2522 
=== Succesors ===
=== Usages ===
v2592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2522  <|@  <|@
f <@~|@floating>@ <|@
tid v2603 <|@
result v260|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2592 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
value: v2603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2354 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2768 value: v2603 stateAfter: - lastLocationAccess: - #next: v2354  <|@  <|@
f <@~|@floating>@ <|@
tid j2527 <|@
result v261|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2522 
y: j2410 
=== Succesors ===
=== Usages ===
j2516 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2522 y: j2410  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
v2592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v258|QWORD * 2], input: v260|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v261|QWORD = LEA [v258|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v261|QWORD] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B184" 
    successors "B187" "B188" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2516 <|@
result v262|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2355 
values: j2527 j2522 
=== Succesors ===
=== Usages ===
v2767 j2521 j2510 v2552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2355 values: j2527 j2522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2354 v2372 
=== Succesors ===
next: v2375 
=== Usages ===
j2516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2354 v2372 #next: v2375  <|@  <|@
f <@~|@floating>@ <|@
tid j2551 <|@
result v263|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2257 
y: j2438 
=== Succesors ===
=== Usages ===
v2552 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j2438  <|@  <|@
f <@~|@floating>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2551 
y: j2516 
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2551 y: j2516  <|@  <|@
f <@*|@fixed>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2552 
=== Succesors ===
trueSuccessor: v2374 
falseSuccessor: v2373 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2552 #trueSuccessor: v2374 #falseSuccessor: v2373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v262|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v263|QWORD = LEA [v249|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v262|QWORD, y: v263|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B187 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2378 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2378  <|@  <|@
f <@*|@fixed>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2590 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2590  <|@  <|@
f <@~|@floating>@ <|@
tid v2767 <|@
result [v248|QWORD[.] + v262|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2516 
=== Succesors ===
=== Usages ===
v2590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2516  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
result v264|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2767 
value: v2602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2767 value: v2602 stateAfter: - lastLocationAccess: - #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid j2521 <|@
result v265|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2516 
y: j1724 
=== Succesors ===
=== Usages ===
j2510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2516 y: j1724  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2358 
=== Predecessor ===
v2590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v262|QWORD * 2], input: v264|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v265|QWORD = LEA [v262|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v265|QWORD] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2510 <|@
result v266|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2358 
values: j2521 j2516 
=== Succesors ===
=== Usages ===
v2766 v2555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2358 values: j2521 j2516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2357 v2378 
=== Succesors ===
next: v2381 
=== Usages ===
j2510 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2357 v2378 #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid j2554 <|@
result v267|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2257 
y: j1527 
=== Succesors ===
=== Usages ===
v2555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2257 y: j1527  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2554 
y: j2510 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2554 y: j2510  <|@  <|@
f <@*|@fixed>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2555 
=== Succesors ===
trueSuccessor: v2380 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
v2358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2555 #trueSuccessor: v2380 #falseSuccessor: v2379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v266|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = DEC v249|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v266|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@*|@fixed>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B190 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2588 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2588  <|@  <|@
f <@~|@floating>@ <|@
tid v2766 <|@
result [v248|QWORD[.] + v266|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2509 
index: j2510 
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2509 index: j2510  <|@  <|@
f <@~|@floating>@ <|@
tid i2601 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2766 
value: i2601 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2360 
=== Usages ===
=== Predecessor ===
v2379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2766 value: i2601 stateAfter: - lastLocationAccess: - #next: v2360  <|@  <|@
f <@*|@fixed>@ <|@
tid v2360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v248|QWORD[.] + v266|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B191 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B178" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v2339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2337  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2333 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B192 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B194" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2344 
=== Usages ===
=== Predecessor ===
v2328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2344  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
v2326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B193 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" "B191" "B190" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2344 v2360 v2384 
=== Succesors ===
next: a1811 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2344 v2360 v2384 #next: a1811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1811 <|@
result v223|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2100 
=== Succesors ===
next: j2131 
=== Usages ===
a1714 
=== Predecessor ===
v2345 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2100 #next: j2131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2131 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2146 
=== Usages ===
v2743 v2744 
=== Predecessor ===
a1811 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2146  <|@  <|@
f <@~|@floating>@ <|@
tid v2743 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2131 
index: - 
=== Succesors ===
=== Usages ===
j2146 v2148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2146 <|@
result v268|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2743 
=== Succesors ===
next: j2147 
=== Usages ===
j2182 j2152 v2751 
=== Predecessor ===
j2131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2743 #next: j2147  <|@  <|@
f <@~|@floating>@ <|@
tid v2744 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2131 
index: - 
=== Succesors ===
=== Usages ===
j2147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2131 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2147 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2744 
=== Succesors ===
next: v2139 
=== Usages ===
v2136 
=== Predecessor ===
j2146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2744 #next: v2139  <|@  <|@
f <@~|@floating>@ <|@
tid j2182 <|@
result v269|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2146 
y: j929 
=== Succesors ===
=== Usages ===
v2136 v2148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2146 y: j929  <|@  <|@
f <@~|@floating>@ <|@
tid v2136 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2147 
y: j2182 
=== Succesors ===
=== Usages ===
v2139 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2147 y: j2182  <|@  <|@
f <@*|@fixed>@ <|@
tid v2139 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2136 
=== Succesors ===
trueSuccessor: v2137 
falseSuccessor: v2138 
=== Usages ===
=== Predecessor ===
j2147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2136 #trueSuccessor: v2137 #falseSuccessor: v2138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = LEA [v268|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v269|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4576130038717107969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2142 
=== Usages ===
=== Predecessor ===
v2139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2142 <|@
result v270|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?141 
arguments: v2020 i292 i4 
=== Succesors ===
next: j2143 
=== Usages ===
j2143 
=== Predecessor ===
v2137 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?141 arguments: v2020 i292 i4 #next: j2143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2143 <|@
result v270|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2142 
=== Succesors ===
next: v2153 
=== Usages ===
j2152 
=== Predecessor ===
a2142 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2142 #next: v2153  <|@  <|@
f <@*|@fixed>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
j2143 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v203|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD[.]] destination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4605873114493235759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2148 
=== Usages ===
=== Predecessor ===
v2139 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2743 
value: j2182 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2145 
=== Usages ===
=== Predecessor ===
v2138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2743 value: j2182 stateAfter: - lastLocationAccess: - #next: v2145  <|@  <|@
f <@~|@floating>@ <|@
tid v2751 <|@
result [v268|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2146 
index: - 
=== Succesors ===
=== Usages ===
v2145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2751 
=== Succesors ===
next: v2151 
=== Usages ===
=== Predecessor ===
v2148 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2751 #next: v2151  <|@  <|@
f <@*|@fixed>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2150 
=== Predecessor ===
v2145 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v269|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v268|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v268|QWORD] destination: B196 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B195" 
    successors 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2152 <|@
result v271|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2150 
values: j2146 j2143 
=== Succesors ===
=== Usages ===
v2747 v2746 a1711 v2752 v2753 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2150 values: j2146 j2143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2151 v2153 
=== Succesors ===
next: a1711 
=== Usages ===
j2152 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2151 v2153 #next: a1711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1711 <|@
result v272|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2152 
=== Succesors ===
next: j2162 
=== Usages ===
a1717 
=== Predecessor ===
v2150 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2152 #next: j2162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2162 <|@
result v273|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2745 
=== Succesors ===
next: v2163 
=== Usages ===
v2163 
=== Predecessor ===
a1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2745 #next: v2163  <|@  <|@
f <@~|@floating>@ <|@
tid v2746 <|@
result [v271|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2746 
value: j2162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2166 
=== Usages ===
=== Predecessor ===
j2162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2746 value: j2162 stateAfter: - lastLocationAccess: - #next: v2166  <|@  <|@
f <@~|@floating>@ <|@
tid v2747 <|@
result [v271|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2747 
value: v2178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2170 
=== Usages ===
=== Predecessor ===
v2163 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2747 value: v2178 stateAfter: - lastLocationAccess: - #next: v2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2752 <|@
result [v271|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1714 <|@
result v274|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1811 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2752 
value: a1714 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2172 
=== Usages ===
=== Predecessor ===
v2166 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2752 value: a1714 stateAfter: - lastLocationAccess: - #next: v2172  <|@  <|@
f <@~|@floating>@ <|@
tid v2753 <|@
result [v271|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2152 
index: - 
=== Succesors ===
=== Usages ===
v2172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2753 
value: i17 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1717 
=== Usages ===
=== Predecessor ===
v2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2753 value: i17 stateAfter: - lastLocationAccess: - #next: a1717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1717 <|@
result v272|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1711 
=== Succesors ===
next: v1718 
=== Usages ===
v415 
=== Predecessor ===
v2172 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1711 #next: v1718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
a1717 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1717 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1717 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|QWORD[.] = MOVE v271|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v273|QWORD = MOV [v202|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v271|QWORD[*]], y: v273|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v271|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v274|DWORD[.] = COMPRESSPOINTER (input: v223|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v271|QWORD[*] + 12], y: v274|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v271|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v272|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2274 
=== Usages ===
=== Predecessor ===
v2276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2274  <|@  <|@
f <@*|@fixed>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2270 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2275 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B198 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1891 
=== Usages ===
=== Predecessor ===
v1667 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1891  <|@  <|@
f <@~|@floating>@ <|@
tid i1892 <|@
result int[-358171|0xfffffffffffa88e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -358171
stableDimension: 0
stamp: i32 [-358171] ⇊00000000fffa88e5 ⇈00000000fffa88e5
stampKind: i32
value: int[-358171|0xfffffffffffa88e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1666 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-358171|0xfffffffffffa88e5]] destination: B199 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1889 
=== Usages ===
=== Predecessor ===
v1663 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1889  <|@  <|@
f <@~|@floating>@ <|@
tid i1890 <|@
result int[-386331|0xfffffffffffa1ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -386331
stableDimension: 0
stamp: i32 [-386331] ⇊00000000fffa1ae5 ⇈00000000fffa1ae5
stampKind: i32
value: int[-386331|0xfffffffffffa1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-386331|0xfffffffffffa1ae5]] destination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1884 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1884  <|@  <|@
f <@~|@floating>@ <|@
tid i1885 <|@
result int[-388123|0xfffffffffffa13e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -388123
stableDimension: 0
stamp: i32 [-388123] ⇊00000000fffa13e5 ⇈00000000fffa13e5
stampKind: i32
value: int[-388123|0xfffffffffffa13e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-388123|0xfffffffffffa13e5]] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B200" "B199" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1886 <|@
result v275|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-388123 - -358171] ⇊00000000fffa00e5 ⇈00000000fffa9be5
valueDescription: i32
=== Inputs ===
merge: v1883 
values: i1885 i1890 i1892 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1883 values: i1885 i1890 i1892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1884 v1889 v1891 
=== Succesors ===
next: v1888 
=== Usages ===
i1886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1884 v1889 v1891 #next: v1888  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: ?148 
values: a710 - 
=== Succesors ===
=== Usages ===
?325 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?148 values: a710 -  <|@  <|@
tid ?325 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?781 
values: - a627 i323 i324 - 
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?781 values: - a627 i323 i324 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?325 
actionAndReason: i1886 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?325 actionAndReason: i1886 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v275|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v112|QWORD[.] v167|DWORD v168|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1881 
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1881  <|@  <|@
f <@~|@floating>@ <|@
tid i1882 <|@
result int[-342811|0xfffffffffffac4e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -342811
stableDimension: 0
stamp: i32 [-342811] ⇊00000000fffac4e5 ⇈00000000fffac4e5
stampKind: i32
value: int[-342811|0xfffffffffffac4e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342811|0xfffffffffffac4e5]] destination: B203 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1879 
=== Usages ===
=== Predecessor ===
v1643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1879  <|@  <|@
f <@~|@floating>@ <|@
tid i1880 <|@
result int[-330011|0xfffffffffffaf6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330011
stableDimension: 0
stamp: i32 [-330011] ⇊00000000fffaf6e5 ⇈00000000fffaf6e5
stampKind: i32
value: int[-330011|0xfffffffffffaf6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-330011|0xfffffffffffaf6e5]] destination: B204 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1877 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1877  <|@  <|@
f <@~|@floating>@ <|@
tid i1878 <|@
result int[-328475|0xfffffffffffafce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328475
stableDimension: 0
stamp: i32 [-328475] ⇊00000000fffafce5 ⇈00000000fffafce5
stampKind: i32
value: int[-328475|0xfffffffffffafce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328475|0xfffffffffffafce5]] destination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid i1874 <|@
result int[-325147|0xfffffffffffb09e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -325147
stableDimension: 0
stamp: i32 [-325147] ⇊00000000fffb09e5 ⇈00000000fffb09e5
stampKind: i32
value: int[-325147|0xfffffffffffb09e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
v1630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-325147|0xfffffffffffb09e5]] destination: B206 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B119" "B205" "B204" "B203" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1868 <|@
result v276|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-342811 - -323851] ⇊00000000fffa00e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1865 
values: i1874 i1876 i1878 i1880 i1882 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1865 values: i1874 i1876 i1878 i1880 i1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1873 v1875 v1877 v1879 v1881 
=== Succesors ===
next: v1870 
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1873 v1875 v1877 v1879 v1881 #next: v1870  <|@  <|@
f <@*|@fixed>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?283 
actionAndReason: i1868 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1865 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?283 actionAndReason: i1868 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v276|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1908 
=== Usages ===
=== Predecessor ===
v2626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid i1910 <|@
result int[-250147|0xfffffffffffc2edd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -250147
stableDimension: 0
stamp: i32 [-250147] ⇊00000000fffc2edd ⇈00000000fffc2edd
stampKind: i32
value: int[-250147|0xfffffffffffc2edd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?520 
actionAndReason: i1910 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1958 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?520 actionAndReason: i1910 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -250147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:416) [bci: 29]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1901 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1901  <|@  <|@
f <@~|@floating>@ <|@
tid i1902 <|@
result int[-247315|0xfffffffffffc39ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -247315
stableDimension: 0
stamp: i32 [-247315] ⇊00000000fffc39ed ⇈00000000fffc39ed
stampKind: i32
value: int[-247315|0xfffffffffffc39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
v1558 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-247315|0xfffffffffffc39ed]] destination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:415) [bci: 18]
at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
at java.lang.Double.toString(Double.java:204) [bci: 1]
at java.lang.Double.toString(Double.java:644) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1899 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1899  <|@  <|@
f <@~|@floating>@ <|@
tid i1900 <|@
result int[-244251|0xfffffffffffc45e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244251
stableDimension: 0
stamp: i32 [-244251] ⇊00000000fffc45e5 ⇈00000000fffc45e5
stampKind: i32
value: int[-244251|0xfffffffffffc45e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1893 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244251|0xfffffffffffc45e5]] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1896 <|@
result v277|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-247315 - -242699] ⇊00000000fffc01e5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1893 
values: i1900 i1902 
=== Succesors ===
=== Usages ===
v1898 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1893 values: i1900 i1902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1899 v1901 
=== Succesors ===
next: v1898 
=== Usages ===
i1896 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1899 v1901 #next: v1898  <|@  <|@
f <@*|@fixed>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?496 
actionAndReason: i1896 
speculation: a1829 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1893 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?496 actionAndReason: i1896 speculation: a1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v277|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38051102 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DOUBLE = H [v0|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = VMOVQ v1|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND (x: v4|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR v9|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 2047 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA [v11|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = OR (x: v30|QWORD, y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD, int[53|0x35], v32|QWORD, v11|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B210" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD, v35|QWORD, v36|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = DEC v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = AND v39|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v41|QWORD[.] + v40|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B209" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v42|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v51|DWORD[.] = MOV [v50|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.], v35|QWORD, v34|DWORD, v33|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[.], v54|QWORD, v55|DWORD, v56|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD[.], y: v53|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B208" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v53|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction MOVB (x: [v53|QWORD[.] + 24], y: v6|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - v53|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSXB [v53|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v53|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZXB v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v61|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B76" 
    xhandlers
    flags 
    probability 4604577755910952677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B33 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B39" "B75" "B5" "B33" 
    successors "B77" "B114" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|DWORD, v110|DWORD, v111|DWORD, v112|QWORD[.], v113|QWORD[.], v114|QWORD, v115|QWORD, v116|QWORD] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B112" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v117|DWORD = MOV [v112|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B111" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v116|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v115|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v108|DWORD, y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B99" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD] destination: B82 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B82" "B92" "B97" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD[.] = MOV [v113|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v113|QWORD[.] v112|QWORD[.] v130|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v131|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOV [v113|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v130|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOV [v113|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v133|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOV [v131|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SUB (x: v134|DWORD, ~y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B110" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = SUB (x: v117|DWORD, ~y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|DWORD, y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B107 -> B108 falseDestination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B139" 
    xhandlers
    flags 
    probability 4605167443218054429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = UNCOMPRESSPOINTER (input: v131|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[*] = MOVE v138|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[*] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOVSXD v132|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = MOVSXD v130|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = MOVSXD v133|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v139|QWORD[*] + v141|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v140|QWORD[*] + v142|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v143|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = ADD (x: v130|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD, v113|QWORD[.]] destination: B110 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B59" "B110" "B133" "B136" "B138" "B71" 
    successors "B140" "B146" 
    xhandlers
    flags 
    probability 4606746645773056613
    begin_IR
      LIR
      nr   -1  <|@ instruction [v199|DWORD, v200|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|DWORD[.] = MOV [v200|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v201|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B147" "B149" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = MOV [v201|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = SUB (x: v210|DWORD, ~y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v211|DWORD, y: v211|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B150" "B153" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v213|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B149 -> B150 falseDestination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4605173305861603092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = SHL v199|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = LEA [v215|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = AND v216|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = MOVSXD v217|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v219|QWORD = ADD (x: v218|QWORD, y: v213|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v219|QWORD, y: v214|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4605103324998439825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v219|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v218|QWORD + v213|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v213|QWORD + 12], y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v213|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v213|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v220|QWORD[.] = MOVE v213|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v220|QWORD[.]] destination: B152 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B152" "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr   -1  <|@ instruction [v223|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v199|DWORD, y: v210|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = CMOVE (falseValue: v199|DWORD, ~trueValue: v210|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = MOVSXD v224|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v225|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v226|QWORD[.] = LEA [v223|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v227|QWORD[*] = LEA [v201|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v228|QWORD = LEA [v225|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v228|QWORD, y: v228|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B158 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B158" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|QWORD = LEA [v225|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|QWORD, y: v233|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|V128_WORD = H [v227|QWORD[*] + v232|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v232|QWORD * 2], input: v234|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = LEA [v232|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v235|QWORD] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v236|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v237|QWORD = LEA [v225|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v236|QWORD, y: v237|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v238|V64_WORD = H [v227|QWORD[*] + v236|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v236|QWORD * 2], input: v238|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = LEA [v236|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v239|QWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v240|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v241|QWORD = LEA [v225|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v240|QWORD, y: v241|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|V32_WORD = H [v227|QWORD[*] + v240|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v240|QWORD * 2], input: v242|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v243|QWORD = LEA [v240|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v243|QWORD] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v244|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = DEC v225|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v244|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v246|DWORD = MOVSX [v227|QWORD[*] + v244|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v226|QWORD[.] + v244|QWORD * 2], y: v246|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B156" "B173" "B172" 
    successors "B175" "B193" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v247|QWORD = MOVSXD v199|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v247|QWORD, y: v225|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B194" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B193 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" "B191" "B190" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v269|QWORD = LEA [v268|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v269|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4605873114493235759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v269|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v268|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v268|QWORD] destination: B196 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B195" 
    successors 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|QWORD[.] = MOVE v271|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v273|QWORD = MOV [v202|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v271|QWORD[*]], y: v273|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v271|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v274|DWORD[.] = COMPRESSPOINTER (input: v223|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v271|QWORD[*] + 12], y: v274|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v271|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v272|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B174" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B156 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v248|QWORD[.] = LEA [v223|QWORD[.] + v225|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v249|QWORD = SUB (x: v247|QWORD, ~y: v225|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = LEA [v249|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v250|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B180" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B176 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B176" "B179" 
    successors "B181" "B182" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v254|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|QWORD = LEA [v249|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|QWORD, y: v255|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v256|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v254|QWORD * 2], input: v256|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v257|QWORD = LEA [v254|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v257|QWORD] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v258|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|QWORD = LEA [v249|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v258|QWORD, y: v259|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v258|QWORD * 2], input: v260|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v261|QWORD = LEA [v258|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v261|QWORD] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B184" 
    successors "B187" "B188" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v262|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v263|QWORD = LEA [v249|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v262|QWORD, y: v263|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B187 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v262|QWORD * 2], input: v264|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v265|QWORD = LEA [v262|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v265|QWORD] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v266|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = DEC v249|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v266|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v248|QWORD[.] + v266|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B191 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641364409144322
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v59|QWORD[.], v53|QWORD[.], v61|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B75" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v72|DWORD, v73|QWORD, v74|QWORD, v75|QWORD] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK [v70|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v71|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV [v71|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOV [v71|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v79|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44778072425335824 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B73" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ADD (x: v67|DWORD, y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B72" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = INC v99|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4591568350461080670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v77|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4591499311163101513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = SUB (x: v78|DWORD, ~y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B139" 
    xhandlers
    flags 
    probability 4591430962258102147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v99|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v100|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v99|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|DWORD, v71|QWORD[.]] destination: B71 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B90" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = NEG v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOVSXD v118|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = DEC v119|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SUB (x: v111|DWORD, ~y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B86" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v117|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v111|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v121|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: v112|QWORD[.] v111|DWORD v121|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: v113|QWORD[.] v112|QWORD[.] v111|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = SUB (x: v111|DWORD, ~y: [v113|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v119|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = LEA [v112|QWORD[.] + v111|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = LEA [v119|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|QWORD, y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v126|QWORD[.]], input: v128|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v126|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|DWORD] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVZXB [v14|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592799553960260321
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], long[2|0x2], long[18|0x12], long[16|0x10]] destination: B5 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v236|QWORD] destination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v251|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B178" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B192 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B192" 
    successors "B179" "B192" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v252|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v248|QWORD[.] + v252|QWORD * 2], input: v251|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = LEA [v252|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v253|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B190 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B198 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B198" 
    successors "B161" "B198" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [v229|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|V256_WORD = H [v227|QWORD[*] + v229|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v226|QWORD[.] + v229|QWORD * 2], input: v230|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = LEA [v229|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v231|QWORD, y: v228|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v232|QWORD] destination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v254|QWORD] destination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B179 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|QWORD] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v258|QWORD] destination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v262|QWORD] destination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v199|DWORD, y: v199|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v205|QWORD = LEA [v204|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v205|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4590966956803509341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v205|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v204|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr   -1  <|@ instruction [v207|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = MOVE v207|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [v202|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v207|QWORD[*]], y: v209|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v207|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v207|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v207|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v208|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4590884941833233083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4591444788738539218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v221|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v199|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v222|QWORD[.]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v72|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v79|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590262643725779295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = SUB (x: v77|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590206661495153151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = SUB (x: v78|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590151239086833269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = MOV v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v85|QWORD[*] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v86|QWORD[*] + v67|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v87|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD[.] + v72|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = ADD (x: v66|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = INC v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590096370902596586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v80|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v90|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590042051400202269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v77|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589988275092831896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v78|DWORD, ~y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B139" 
    xhandlers
    flags 
    probability 4589935036548535226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v88|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v89|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v90|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v94|QWORD[*] + v96|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v89|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD, v71|QWORD[.]] destination: B59 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = ADD (x: v120|QWORD, y: v114|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = MOV v117|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v123|QWORD, y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B99" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|DWORD] destination: B92 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582611712791629603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|DWORD, int[0|0x0], int[1|0x1], int[2|0x2], v16|QWORD[.], v14|QWORD[.], v17|DWORD, long[18|0x12], long[2|0x2], long[16|0x10]] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v125|DWORD] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4576130038717107969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v280|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v280|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD[.]] destination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B100 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B106" "B104" "B102" 
    successors 
    xhandlers
    flags 
    probability 4585926408733826383
    begin_IR
      LIR
      nr   -1  <|@ instruction [v137|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v137|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v113|QWORD[.] v112|QWORD[.] v130|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B102 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B104 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575673847185677614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-320097|0xfffffffffffb1d9f]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" 
    xhandlers
    flags 
    probability 4575607572638581097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B151 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B115" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B78 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B78" 
    successors "B116" "B206" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD[.] = MOV [v113|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v147|DWORD = MOV [v146|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOV [v113|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v147|DWORD, y: v148|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B205" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction v149|DWORD = MOV [v112|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B116 -> B117 falseDestination: B116 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B204" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOV [v113|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v150|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B203" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = DEC v150|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = ADD (x: v151|DWORD, y: v111|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = UNCOMPRESSPOINTER (input: v146|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOVSX [v153|QWORD[.] + v148|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v116|QWORD * 1], y: v154|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v115|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = SUB (x: v147|DWORD, ~y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = INC v148|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v156|DWORD, y: v155|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = SUB (x: v149|DWORD, ~y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[*] = MOVE v153|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[*] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = MOVSXD v156|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOVSXD v151|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v158|QWORD[*] + v160|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v159|QWORD[*] + v111|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v161|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v152|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = INC v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v162|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v112|QWORD[.] + v162|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = LEA [v152|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = SUB (x: v164|DWORD, ~y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|DWORD, v165|DWORD] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B128" "B130" 
    successors "B132" "B201" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|DWORD, v168|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = INC v167|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v168|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|DWORD = LEA [v168|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v167|DWORD * 2 + 16], y: v170|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v169|DWORD, v113|QWORD[.]] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562065516343624141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292961|0xfffffffffffb879f]] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" "B45" "B73" "B72" "B66" "B49" "B47" "B70" "B68" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733128
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v71|QWORD[.] v70|QWORD[.] v67|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561976253412903614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292961|0xfffffffffffb879f]] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561887883111490293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-292961|0xfffffffffffb879f]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4561287956867168280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v281|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v206|QWORD[.]] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B115" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B76" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD, v67|DWORD, v68|DWORD, v69|DWORD, v70|QWORD[.], v71|QWORD[.], v74|QWORD, v73|QWORD, v75|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD = DEC v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|DWORD, v166|DWORD] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560377329857577916
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267873|0xfffffffffffbe99f]] destination: B45 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560304948791717852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267873|0xfffffffffffbe99f]] destination: B47 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560233291536516388
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267873|0xfffffffffffbe99f]] destination: B49 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560162350853866939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569064903751849833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -281953 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v71|QWORD[.] v70|QWORD[.] v89|DWORD v66|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v71|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560092119578043984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560022590614979259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559953756941545181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD[.], v53|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.], v63|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v62|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v62|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B76" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], long[3|0x3], long[20|0x14], long[18|0x12]] destination: B39 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B200" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v169|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = LEA [v167|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v168|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v168|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v172|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SAR v173|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = LEA [v174|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v167|DWORD * 2 + 16], y: v175|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = SHL v174|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = SHL v174|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = ADD (x: v176|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = SUB (x: v168|DWORD, ~y: v178|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = LEA [v179|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v169|DWORD * 2 + 16], y: v180|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|DWORD, v113|QWORD[.]] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v279|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v279|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - v44|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v33|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|QWORD[.], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD[.]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -339553 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v113|QWORD[.] v112|QWORD[.] v111|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B199" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v149|DWORD, y: v171|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B137 -> B138 falseDestination: B137 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v168|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v181|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v181|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v183|DWORD = SAR v182|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = LEA [v183|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v167|DWORD * 2 + 16], y: v184|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = IMUL v183|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = SUB (x: v168|DWORD, ~y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v186|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = SAR v188|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = SHR v186|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = ADD (x: v189|DWORD, y: v190|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = LEA [v191|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v169|DWORD * 2 + 16], y: v192|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = SHL v191|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = SHL v191|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = ADD (x: v193|DWORD, y: v194|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = SUB (x: v186|DWORD, ~y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = LEA [v196|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v112|QWORD[.] + v171|DWORD * 2 + 16], y: v197|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = LEA [v167|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|DWORD, v113|QWORD[.]] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[1|0x1], int[2|0x2], int[3|0x3], v62|QWORD[.], v63|QWORD[.], v65|DWORD, long[20|0x14], long[3|0x3], long[18|0x12]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = AND (x: v4|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LZCNT v18|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA [v19|DWORD - 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = SHL (x: v18|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SUB (x: v24|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD, v25|DWORD, v23|QWORD, v27|DWORD] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.], v14|QWORD[.]] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD, int[53|0x35], v29|DWORD] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD, v47|DWORD, v48|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v278|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v46|QWORD - v48|DWORD v47|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.], v46|QWORD, v47|DWORD, v48|DWORD] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD, v34|DWORD, v33|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD, v25|DWORD, v21|DWORD] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -367643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: v63|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@710620907] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -307739 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v124|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v113|QWORD[.] v112|QWORD[.] v111|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-247315|0xfffffffffffc39ed]] destination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v277|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v277|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - v6|DWORD v35|QWORD - v36|DWORD v34|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303131|0xfffffffffffb5fe5]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v145|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-363283|0xfffffffffffa74ed]] destination: B141 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B141" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v212|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v212|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v199|DWORD 
locals: v200|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-244251|0xfffffffffffc45e5]] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305179|0xfffffffffffb57e5]] destination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-388123|0xfffffffffffa13e5]] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B200" "B199" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v275|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v112|QWORD[.] v167|DWORD v168|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-297243|0xfffffffffffb76e5]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-330011|0xfffffffffffaf6e5]] destination: B204 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B119" "B205" "B204" "B203" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v276|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v276|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v113|QWORD[.] v112|QWORD[.] v109|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237587|0xfffffffffffc5fed]] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Double.toString(Double.java:644) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-271643|0xfffffffffffbdae5]] destination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-386331|0xfffffffffffa1ae5]] destination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-358171|0xfffffffffffa88e5]] destination: B199 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328475|0xfffffffffffafce5]] destination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -360731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v113|QWORD[.] v112|QWORD[.] v162|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v113|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299547|0xfffffffffffb6de5]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-331027|0xfffffffffffaf2ed]] destination: B119 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-365843|0xfffffffffffa6aed]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -250147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: v53|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - v6|DWORD v54|QWORD - v56|DWORD v55|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: v1|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-325147|0xfffffffffffb09e5]] destination: B206 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237331|0xfffffffffffc60ed]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295699|0xfffffffffffb7ced]] destination: B62 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-342811|0xfffffffffffac4e5]] destination: B203 -> B207 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // value:double
     4: invokestatic  #2          // toString:(double)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38051102 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr    8  <|@ instruction rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   14  <|@ instruction rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   24  <|@ instruction rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   32  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP rcx|DWORD y: 2047 size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  228  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r11|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B210" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr  264  <|@ instruction rax|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" "B209" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rbx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B208" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  416  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  432  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr  436  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZXB rsi|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  454  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B76" 
    xhandlers
    flags 
    probability 4604577755910952677
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  462  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  466  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  472  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B33 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B39" "B75" "B5" "B33" 
    successors "B77" "B114" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr  940  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  944  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction CMP rsi|DWORD y: -2 size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B112" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr  962  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B111" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr  976  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr  978  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B99" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B82 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B82" "B92" "B97" "B98" 
    successors "B100" "B101" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: r10|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r10|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr 1148  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1152  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B99 -> B100 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1176  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1190  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1192  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" "B110" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B107 -> B108 falseDestination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B139" 
    xhandlers
    flags 
    probability 4605167443218054429
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr 1230  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1236  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1240  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1250  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1252  <|@ instruction r11|DWORD = ADD (x: stack:68|DWORD, y: stack:64|DWORD) size: DWORD <|@ <|@
      nr 1254  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B110 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B59" "B110" "B133" "B136" "B138" "B71" 
    successors "B140" "B146" 
    xhandlers
    flags 
    probability 4606746645773056613
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1602  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1604  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr 1606  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1608  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1610  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B147" "B149" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1684  <|@ instruction rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1686  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B150" "B153" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1706  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1710  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1712  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B149 -> B150 falseDestination: B149 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B152" 
    xhandlers
    flags 
    probability 4605173305861603092
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1720  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1722  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1724  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1726  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4605103324998439825
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1740  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1742  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1744  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1746  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1748  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1754  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1756  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1760  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction JUMP ~[] destination: B152 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B152" "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1792  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1796  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1806  <|@ instruction r10|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1808  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1810  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1812  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1814  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1816  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B162" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1822  <|@ instruction JUMP ~[] destination: B158 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B158" "B161" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1852  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1860  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1862  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1864  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1866  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1868  <|@ instruction JUMP ~[] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B163" 
    successors "B166" "B167" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1874  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1876  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B165 -> B166 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1884  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1886  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1888  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1892  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B166" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1894  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1896  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1898  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1900  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1908  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1910  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1912  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1914  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1920  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1922  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1932  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1934  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1936  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B156" "B173" "B172" 
    successors "B175" "B193" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1940  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1942  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1944  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B194" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2082  <|@ instruction JUMP ~[] destination: B193 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" "B191" "B190" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 2084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2086  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2088  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 2090  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2092  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4605873114493235759
    begin_IR
      LIR
      nr 2114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2118  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 2120  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2122  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2124  <|@ instruction JUMP ~[] destination: B196 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B195" 
    successors 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 2126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2128  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2130  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 2132  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2134  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2136  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr 2138  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2140  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2142  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B174" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction JUMP ~[] destination: B156 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1948  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1950  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1952  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1954  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1956  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B180" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1962  <|@ instruction JUMP ~[] destination: B176 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B176" "B179" 
    successors "B181" "B182" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1988  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1990  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2002  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2004  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2006  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2008  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2012  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2014  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2016  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2024  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2026  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2028  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2030  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2032  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B184" 
    successors "B187" "B188" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 2034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2036  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2038  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2040  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B187 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2048  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2050  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2052  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2054  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2056  <|@ instruction JUMP ~[] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2060  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2062  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2064  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2072  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2074  <|@ instruction JUMP ~[] destination: B191 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641364409144322
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  482  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  490  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B75" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr  566  <|@ instruction CMP rsi|DWORD y: 8 size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  576  <|@ instruction rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r9:0, stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  580  <|@ instruction r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  584  <|@ instruction rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction rbp|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  588  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  590  <|@ instruction CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.44778072425335824 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B73" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B72" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4591568350461080670
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4591499311163101513
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B139" 
    xhandlers
    flags 
    probability 4591430962258102147
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  878  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  880  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  882  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rcx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  892  <|@ instruction r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction MOV [rdx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  896  <|@ instruction rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  898  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B71 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B90" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction r10|DWORD = NEG rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1000  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B86" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction stack:112|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [stack:8, stack:56, stack:72]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: stack:104|QWORD[.] stack:64|DWORD stack:112|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: stack:40|QWORD[.] stack:104|QWORD[.] stack:64|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr 1076  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1082  <|@ instruction CMP stack:80|QWORD y: 1 size: QWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1100  <|@ instruction rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 1102  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr 1118  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr 1122  <|@ instruction rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction MOV [r8|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr 1140  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   54  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   56  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592799553960260321
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   76  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   86  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B5 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction JUMP ~[] destination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction JUMP ~[] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1968  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1970  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B178" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2078  <|@ instruction JUMP ~[] destination: B192 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B192" 
    successors "B179" "B192" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1974  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1976  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1978  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B179 falseDestination: B178 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 2066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2068  <|@ instruction JUMP ~[] destination: B190 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1904  <|@ instruction JUMP ~[] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1826  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1828  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B160" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2148  <|@ instruction JUMP ~[] destination: B198 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B198" 
    successors "B161" "B198" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1830  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1832  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1834  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1836  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1838  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction JUMP ~[] destination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" 
    successors "B180" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1984  <|@ instruction JUMP ~[] destination: B179 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B162" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1844  <|@ instruction JUMP ~[] destination: B161 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2020  <|@ instruction JUMP ~[] destination: B184 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 2042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2044  <|@ instruction JUMP ~[] destination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1628  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1630  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4590966956803509341
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1654  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1656  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1658  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 1668  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1670  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1672  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1674  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1676  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" 
    xhandlers
    flags 
    probability 4590884941833233083
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1770  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1772  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" "B151" 
    successors "B155" 
    xhandlers
    flags 
    probability 4591444788738539218
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1776  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1778  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1782  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1784  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1786  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4590882573390322656
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  402  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590262643725779295
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction r9|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction CMP (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590206661495153151
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590151239086833269
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction stack:96|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction stack:92|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction stack:108|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r9|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r14|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr  660  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = LEA [r9|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  664  <|@ instruction stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = LEA [r13|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rcx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  678  <|@ instruction rsi|DWORD = ADD (x: stack:112|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590096370902596586
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rax|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:112|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4590042051400202269
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B59" 
    xhandlers
    flags 
    probability 4589988275092831896
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B139" 
    xhandlers
    flags 
    probability 4589935036548535226
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  758  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  760  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  762  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  774  <|@ instruction rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B59 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1020  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B91" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B86 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B99" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B92 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582611712791629603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  114  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1110  <|@ instruction rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4576130038717107969
    begin_IR
      LIR
      nr 2094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2096  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2100  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2102  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2104  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 2106  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2108  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2110  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2112  <|@ instruction JUMP ~[] destination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575859268439552651
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f] <|@ <|@
      nr 1158  <|@ instruction JUMP ~[] destination: B100 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B100" "B108" "B106" "B104" "B102" 
    successors 
    xhandlers
    flags 
    probability 4585926408733826383
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1224  <|@ st <@st|@reference-map: [rdx:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:40|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575812211972967659
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1168  <|@ instruction rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f] <|@ <|@
      nr 1170  <|@ instruction JUMP ~[] destination: B102 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575765626071048516
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f] <|@ <|@
      nr 1184  <|@ instruction JUMP ~[] destination: B104 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575719506028148565
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f] <|@ <|@
      nr 1200  <|@ instruction JUMP ~[] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" 
    xhandlers
    flags 
    probability 4575673847185677614
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f] <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" 
    xhandlers
    flags 
    probability 4575607572638581097
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~[] destination: B151 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B115" 
    xhandlers
    flags 
    probability 4575429616257440223
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B78 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" "B78" 
    successors "B116" "B206" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1294  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1296  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1298  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1300  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B205" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1306  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B116 -> B117 falseDestination: B116 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B204" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1314  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1320  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr 1322  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B203" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" "B123" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr 1350  <|@ instruction r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD <|@ <|@
      nr 1354  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr 1356  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1358  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr 1360  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1362  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1372  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1374  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1376  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1398  <|@ instruction stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction rdi|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1408  <|@ instruction rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1412  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1416  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1422  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1424  <|@ instruction CMP stack:112|DWORD y: 1 size: DWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1430  <|@ instruction r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1432  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1434  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1440  <|@ instruction rax|DWORD = LEA [r14|DWORD + 2] size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1444  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:112|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B128" "B130" 
    successors "B132" "B201" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1472  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1474  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1478  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1480  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr 1482  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1488  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1490  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562065516343624141
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f] <|@ <|@
      nr  828  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" "B45" "B73" "B72" "B66" "B49" "B47" "B70" "B68" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733128
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  922  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:104|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561976253412903614
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f] <|@ <|@
      nr  844  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561887883111490293
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f] <|@ <|@
      nr  860  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4561287956867168280
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1638  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1640  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1642  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1644  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1646  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1650  <|@ instruction JUMP ~[] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B115" 
    xhandlers
    flags 
    probability 4560799887891645879
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B76" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1464  <|@ instruction rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1466  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560377329857577916
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B45 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560304948791717852
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B47 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560233291536516388
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f] <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B49 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560162350853866939
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B51 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" "B55" "B57" 
    successors 
    xhandlers
    flags 
    probability 4569064903751849833
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction MOV [r15|QWORD + 668] y: -281953 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:104|QWORD[.] rdx|QWORD[.] rcx|DWORD rsi|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560092119578043984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" 
    xhandlers
    flags 
    probability 4560022590614979259
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4559953756941545181
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 4551580655798929520
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV [rdx|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B76" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  528  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  532  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  536  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B39 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B200" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction r9|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1506  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1508  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1516  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1520  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1534  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1536  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction JUMP ~[] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  298  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - stack:104|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:88|QWORD - stack:96|DWORD stack:92|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  310  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545860217785470586
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1368  <|@ instruction JUMP ~[] destination: B122 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B122" "B124" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction MOV [r15|QWORD + 668] y: -339553 size: DWORD <|@ <|@
      nr 1388  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 4545797899851510480
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B199" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1546  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B137 -> B138 falseDestination: B137 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1554  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1556  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1558  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1560  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1562  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1566  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1570  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1572  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD <|@ <|@
      nr 1576  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1582  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1584  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1586  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1590  <|@ instruction rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1592  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1594  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1596  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r11|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  548  <|@ instruction rdi|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  550  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  560  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD = LZCNT r11|QWORD size: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr  154  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD <|@ <|@
      nr  158  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction r9|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr  162  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rcx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  128  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:68|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  246  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:80|QWORD - stack:64|DWORD stack:68|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction stack:64|DWORD = STACKMOVE (input: stack:96|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  318  <|@ instruction stack:68|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV [r15|QWORD + 668] y: -367643 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B87" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@710620907] <|@ <|@
      nr 1046  <|@ instruction MOV [r15|QWORD + 668] y: -307739 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2246  <|@ instruction r10|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed] <|@ <|@
      nr 2248  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2250  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2252  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2254  <|@ instruction JUMP ~[] destination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2270  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2272  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2274  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - stack:60|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction r8|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5] <|@ <|@
      nr 1272  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-363283|0xfffffffffffa74ed] <|@ <|@
      nr 1622  <|@ instruction JUMP ~[] destination: B141 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B141" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1702  <|@ st <@st|@reference-map: [r14:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2258  <|@ instruction r10|DWORD = MOVE input: int[-244251|0xfffffffffffc45e5] <|@ <|@
      nr 2260  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2262  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2264  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2266  <|@ instruction JUMP ~[] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r8|DWORD = MOVE input: int[-305179|0xfffffffffffb57e5] <|@ <|@
      nr 1264  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1266  <|@ instruction JUMP ~[] destination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2164  <|@ instruction r8|DWORD = MOVE input: int[-388123|0xfffffffffffa13e5] <|@ <|@
      nr 2166  <|@ instruction JUMP ~[] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B200" "B199" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - r11|QWORD[.] r10|DWORD rsi|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction rax|DWORD = MOVE input: int[-297243|0xfffffffffffb76e5] <|@ <|@
      nr  916  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction r8|DWORD = MOVE input: int[-330011|0xfffffffffffaf6e5] <|@ <|@
      nr 2192  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2194  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2196  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2198  <|@ instruction JUMP ~[] destination: B204 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B119" "B205" "B204" "B203" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2226  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2228  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2230  <|@ st <@st|@reference-map: [rsi:0, r9:0, r11:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r10|DWORD = MOVE input: int[-237587|0xfffffffffffc5fed] <|@ <|@
      nr  136  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.lang.Double.toString(Double.java:644) [bci: 0]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rax|DWORD = MOVE input: int[-271643|0xfffffffffffbdae5] <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction r8|DWORD = MOVE input: int[-386331|0xfffffffffffa1ae5] <|@ <|@
      nr 2160  <|@ instruction JUMP ~[] destination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2152  <|@ instruction r8|DWORD = MOVE input: int[-358171|0xfffffffffffa88e5] <|@ <|@
      nr 2154  <|@ instruction JUMP ~[] destination: B199 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2202  <|@ instruction r8|DWORD = MOVE input: int[-328475|0xfffffffffffafce5] <|@ <|@
      nr 2204  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2206  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2208  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2210  <|@ instruction JUMP ~[] destination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1454  <|@ instruction MOV [r15|QWORD + 668] y: -360731 size: DWORD <|@ <|@
      nr 1456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1040  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rax|DWORD = MOVE input: int[-299547|0xfffffffffffb6de5] <|@ <|@
      nr  908  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ instruction r8|DWORD = MOVE input: int[-331027|0xfffffffffffaf2ed] <|@ <|@
      nr 1328  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction JUMP ~[] destination: B119 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1692  <|@ instruction r10|DWORD = MOVE input: int[-365843|0xfffffffffffa6aed] <|@ <|@
      nr 1694  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2234  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2236  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2238  <|@ instruction MOV [r15|QWORD + 668] y: -250147 size: DWORD <|@ <|@
      nr 2240  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2242  <|@ st <@st|@reference-map: [r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2214  <|@ instruction r8|DWORD = MOVE input: int[-325147|0xfffffffffffb09e5] <|@ <|@
      nr 2216  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2220  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction JUMP ~[] destination: B206 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-237331|0xfffffffffffc60ed] <|@ <|@
      nr  208  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rax|DWORD = MOVE input: int[-295699|0xfffffffffffb7ced] <|@ <|@
      nr  798  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B62 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2178  <|@ instruction r8|DWORD = MOVE input: int[-342811|0xfffffffffffac4e5] <|@ <|@
      nr 2180  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2182  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2184  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2186  <|@ instruction JUMP ~[] destination: B203 -> B207 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // value:double
     4: invokestatic  #2          // toString:(double)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38051102 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD <|@ <|@
      nr    8  <|@ instruction rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr   14  <|@ instruction rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr   22  <|@ instruction rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   24  <|@ instruction rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = MOV rcx|QWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   32  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP rcx|DWORD y: 2047 size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605947596303317023
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  228  <|@ instruction r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4605947463726592593
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r11|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B11" "B17" 
    successors "B19" "B210" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4] <|@ <|@
      nr  264  <|@ instruction rax|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4605947777872140543
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  276  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B209" 
    xhandlers
    flags 
    probability 4605946717224522378
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980] <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4605947777727406450
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5]
stack: Object[null] 
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - r10|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD rdi|QWORD - rbx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  380  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  382  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B22" 
    successors "B31" "B29" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  394  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" "B208" 
    xhandlers
    flags 
    probability 4605170641363328862
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed} <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B29" 
    successors "B32" "B36" 
    xhandlers
    flags 
    probability 4605947910454223578
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  402  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4] <|@ <|@
      nr  424  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rcx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  432  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7]
locals: - - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177]
locals: - - - - - - - - - - stack:88|QWORD[.] - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4] <|@ <|@
      nr  436  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZXB rsi|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4605946091940604901
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  454  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B76" 
    xhandlers
    flags 
    probability 4604577755910952677
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  462  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  466  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  470  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  472  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B33 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B39" "B75" "B5" "B33" 
    successors "B77" "B115" 
    xhandlers
    flags 
    probability 4605603864145910071
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 9 align: false label: ? <|@ <|@
      nr  940  <|@ instruction stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  944  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B115" "B79" 
    xhandlers
    flags 
    probability 4605596383028117030
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  948  <|@ instruction CMP rsi|DWORD y: -2 size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B77 -> B115 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" "B112" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4] <|@ <|@
      nr  962  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" "B111" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  968  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  970  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  974  <|@ instruction MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD <|@ <|@
      nr  976  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr  978  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B99" 
    xhandlers
    flags 
    probability 4604199744109203169
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B82 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B82" "B92" "B96" "B98" 
    successors "B109" "B101" 
    xhandlers
    flags 
    probability 4605527792449181426
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1146  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r10:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: r10|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r10|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4] <|@ <|@
      nr 1148  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1150  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1152  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B99 -> B109 falseDestination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B109" "B103" 
    xhandlers
    flags 
    probability 4605454266720142376
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1162  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B101 -> B109 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" "B105" 
    xhandlers
    flags 
    probability 4605381476248393716
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1176  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B103 -> B109 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B109" "B107" 
    xhandlers
    flags 
    probability 4605309413681362543
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1190  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1192  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B105 -> B109 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4605238071740001682
    begin_IR
      LIR
      nr 1202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1204  <|@ instruction rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B107 -> B109 falseDestination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B139" 
    xhandlers
    flags 
    probability 4605167443218054429
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr 1230  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1236  <|@ instruction r9|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1240  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1250  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1252  <|@ instruction r11|DWORD = ADD (x: stack:68|DWORD, y: stack:64|DWORD) size: DWORD <|@ <|@
      nr 1254  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B110 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B59" "B110" "B133" "B136" "B138" "B71" 
    successors "B140" "B146" 
    xhandlers
    flags 
    probability 4606746645773056613
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1602  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1604  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4] <|@ <|@
      nr 1606  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1608  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1610  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B147" "B149" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1684  <|@ instruction rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1686  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1688  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B150" "B154" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1706  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1708  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1710  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1712  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B149 -> B150 falseDestination: B149 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B154" "B152" 
    xhandlers
    flags 
    probability 4605173305861603092
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1718  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 1720  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1722  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1724  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1726  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B150 -> B154 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4605103324998439825
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1740  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1742  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1744  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1746  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1748  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1750  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1754  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1756  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1760  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction JUMP ~[] destination: B152 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B152" "B154" 
    successors "B174" "B157" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1792  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1794  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1796  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B155 -> B174 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B162" "B160" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1806  <|@ instruction r10|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1808  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1810  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1812  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1814  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1820  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1816  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B157 -> B162 falseDestination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B157" "B160" 
    successors "B165" "B164" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1852  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B165 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B165" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1860  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1862  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1864  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1866  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1868  <|@ instruction JUMP ~[] destination: B164 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" "B162" 
    successors "B168" "B167" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1874  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1876  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B165 -> B168 falseDestination: B165 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B168" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1884  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1886  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1888  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1890  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1892  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B165" 
    successors "B171" "B170" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1894  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1896  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1898  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1900  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B171 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1908  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1910  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1912  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1914  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" 
    successors "B174" "B173" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1920  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1922  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1924  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B174 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1932  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1934  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1936  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B155" "B173" "B171" 
    successors "B175" "B194" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 1938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1940  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1942  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1944  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B174" "B191" "B189" 
    successors "B195" "B196" 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 2084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2086  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2088  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 2090  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2092  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4605873114493235759
    begin_IR
      LIR
      nr 2114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2118  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 2120  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2124  <|@ instruction JUMP ~[] destination: B196 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B195" 
    successors 
    xhandlers
    flags 
    probability 4605950871007861611
    begin_IR
      LIR
      nr 2126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2122  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2128  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2130  <|@ instruction rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 2132  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2134  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2136  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr 2138  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2140  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2142  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B176" "B177" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1948  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1950  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1952  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1954  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1956  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B180" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1962  <|@ instruction JUMP ~[] destination: B176 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B176" "B178" 
    successors "B183" "B182" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1988  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1990  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B180 -> B183 falseDestination: B180 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B183" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2002  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2004  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2006  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2008  <|@ instruction JUMP ~[] destination: B182 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" "B180" 
    successors "B186" "B185" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2012  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2014  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2016  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B183 -> B186 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2024  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2026  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2028  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2030  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2032  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B183" 
    successors "B189" "B188" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 2034  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2036  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2038  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2040  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B189 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2048  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2050  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2052  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2054  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2056  <|@ instruction JUMP ~[] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B186" 
    successors "B194" "B191" 
    xhandlers
    flags 
    probability 4601447271380491115
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2060  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2062  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2064  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B194 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B194" 
    xhandlers
    flags 
    probability 4599503358514844816
    begin_IR
      LIR
      nr 2070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2072  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2074  <|@ instruction JUMP ~[] destination: B191 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594641364409144322
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  482  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  490  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B34 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B6" "B34" 
    successors "B42" "B75" 
    xhandlers
    flags 
    probability 4595512160119122984
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 10 align: false label: ? <|@ <|@
      nr  566  <|@ instruction CMP rsi|DWORD y: 8 size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 0.9952836455427129 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B61" 
    xhandlers
    flags 
    probability 4595482238906964772
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  576  <|@ instruction rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r9:0, stack:24, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4] <|@ <|@
      nr  580  <|@ instruction r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  584  <|@ instruction rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  586  <|@ instruction rbp|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr  588  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr  590  <|@ instruction CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.44778072425335824 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B73" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rcx|DWORD = ADD (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  808  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B72" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4591638087125706082
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4591568350461080670
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  836  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B71" 
    xhandlers
    flags 
    probability 4591499311163101513
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B139" 
    xhandlers
    flags 
    probability 4591430962258102147
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  878  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  880  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  882  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  886  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction rcx|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  892  <|@ instruction r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction MOV [rdx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  896  <|@ instruction rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD <|@ <|@
      nr  898  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B71 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction r10|DWORD = NEG rsi|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  998  <|@ instruction r11|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 1000  <|@ instruction rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" "B85" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4594480213650448452
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1056  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction stack:112|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ st <@st|@reference-map: [stack:8, stack:56, stack:72]
live-base-pointers: []
java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
locals: stack:104|QWORD[.] stack:64|DWORD stack:112|DWORD int[48|0x30] - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
locals: stack:40|QWORD[.] stack:104|QWORD[.] stack:64|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4] <|@ <|@
      nr 1076  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1082  <|@ instruction CMP stack:80|QWORD y: 1 size: QWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1100  <|@ instruction rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 1102  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1104  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr 1118  <|@ instruction J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr 1124  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors "B99" "B98" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1122  <|@ instruction rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1130  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B99 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" 
    xhandlers
    flags 
    probability 4588129111075663974
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction MOV [r8|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr 1140  <|@ instruction JUMP ~[] destination: B98 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B9" 
    xhandlers
    flags 
    probability 4594107310277336964
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4594106053673710743
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381] <|@ <|@
      nr   52  <|@ instruction rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   54  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}] <|@ <|@
      nr   56  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594104898361983829
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B76" 
    xhandlers
    flags 
    probability 4592799553960260321
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   76  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   86  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B5 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B175" 
    successors "B178" 
    xhandlers
    flags 
    probability 4592440072125750123
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1968  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1970  <|@ instruction JUMP ~[] destination: B177 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" "B178" 
    successors "B180" "B178" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1974  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1976  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1978  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B180 falseDestination: B178 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B157" "B160" 
    successors "B162" "B160" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601447271380491115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1832  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1834  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1836  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1838  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B162 falseDestination: B160 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1628  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1630  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4590966956803509341
    begin_IR
      LIR
      nr 1652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1654  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1656  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1658  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors 
    xhandlers
    flags 
    probability 4591030618784724941
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr 1668  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1670  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1672  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1674  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1676  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B149" "B150" 
    successors "B155" 
    xhandlers
    flags 
    probability 4591444788738539218
    begin_IR
      LIR
      nr 1774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1770  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1776  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1778  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1780  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1782  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1784  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1786  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B60" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4590319191433482470
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590262643725779295
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction r9|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction CMP (x: rbx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4590206661495153151
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B58" "B52" 
    xhandlers
    flags 
    probability 4590151239086833269
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction stack:96|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction stack:92|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction stack:108|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r9|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r14|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr  660  <|@ instruction stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = LEA [r9|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  664  <|@ instruction stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rsi|QWORD = LEA [r13|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  672  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rcx|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  678  <|@ instruction rsi|DWORD = ADD (x: stack:112|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  680  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B58 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" "B54" 
    xhandlers
    flags 
    probability 4590096370902596586
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rax|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: stack:112|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B58 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B56" 
    xhandlers
    flags 
    probability 4590042051400202269
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B58 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4589988275092831896
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B139" 
    xhandlers
    flags 
    probability 4589935036548535226
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  758  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  760  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  762  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  770  <|@ instruction stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  774  <|@ instruction rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B59 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B89" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD = MOV rax|DWORD size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B91" "B89" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1020  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B91 falseDestination: B85 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B99" 
    xhandlers
    flags 
    probability 4589976614023077956
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B92 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 4582611712791629603
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  114  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" 
    xhandlers
    flags 
    probability 4580969414768336964
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1112  <|@ instruction JUMP ~[] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B197" 
    xhandlers
    flags 
    probability 4576130038717107969
    begin_IR
      LIR
      nr 2094  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2096  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2100  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2102  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2104  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 2106  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2108  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2112  <|@ instruction JUMP ~[] destination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B99" "B107" "B105" "B103" "B101" 
    successors 
    xhandlers
    flags 
    probability 4585926408733826383
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f] <|@ <|@
      nr 1220  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1224  <|@ st <@st|@reference-map: [rdx:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:40|QWORD[.] rdx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:256, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B76" "B77" 
    successors "B116" "B206" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1292  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1294  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1296  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1298  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1300  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B205" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4] <|@ <|@
      nr 1306  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B116 -> B117 falseDestination: B116 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B204" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1314  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1320  <|@ instruction CMP r11|DWORD y: 2 size: DWORD <|@ <|@
      nr 1322  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" "B203" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1340  <|@ instruction r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1344  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B125" "B123" 
    xhandlers
    flags 
    probability 4576022210371686731
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3 <|@ <|@
      nr 1350  <|@ instruction r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1352  <|@ instruction MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD <|@ <|@
      nr 1354  <|@ instruction MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD <|@ <|@
      nr 1356  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1358  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr 1360  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1362  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B121 -> B125 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B125" "B126" 
    xhandlers
    flags 
    probability 4575973524485780398
    begin_IR
      LIR
      nr 1370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1372  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1374  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1376  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B123 -> B125 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 1396  <|@ instruction stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1398  <|@ instruction stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction rdi|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1408  <|@ instruction rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1410  <|@ instruction rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1412  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1416  <|@ instruction r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1422  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1424  <|@ instruction CMP stack:112|DWORD y: 1 size: DWORD <|@ <|@
      nr 1430  <|@ instruction r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1432  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1434  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575254950392379555
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1438  <|@ instruction MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1440  <|@ instruction rax|DWORD = LEA [r14|DWORD + 2] size: DWORD <|@ <|@
      nr 1442  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1444  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:112|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1450  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B128" "B130" 
    successors "B132" "B201" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1470  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1472  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1474  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4575925325458733128
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1478  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1480  <|@ instruction CMP rsi|DWORD y: 10 size: DWORD <|@ <|@
      nr 1482  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" 
    xhandlers
    flags 
    probability 4575819581332911971
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1488  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1490  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B133 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4562065516343624141
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f] <|@ <|@
      nr  828  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" "B45" "B73" "B72" "B66" "B49" "B47" "B70" "B68" 
    successors 
    xhandlers
    flags 
    probability 4572651257581733128
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  922  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  926  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:104|QWORD[.] rdx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561976253412903614
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f] <|@ <|@
      nr  844  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B74" 
    xhandlers
    flags 
    probability 4561887883111490293
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f] <|@ <|@
      nr  860  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4561287956867168280
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1636  <|@ instruction stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1638  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1640  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1642  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1644  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4] <|@ <|@
      nr 1646  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1648  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1650  <|@ instruction JUMP ~[] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B76" 
    xhandlers
    flags 
    probability 4560799053584073665
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4560647056204873574
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1464  <|@ instruction rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr 1466  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr 1468  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560377329857577916
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B45 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560304948791717852
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B47 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B74" 
    xhandlers
    flags 
    probability 4560233291536516388
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f] <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B49 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 4569064903751849833
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction MOV [r15|QWORD + 668] y: -281953 size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  746  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:104|QWORD[.] rdx|QWORD[.] rcx|DWORD rsi|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:104|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:145, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B7" "B31" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4] <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV [rdx|QWORD[.] + 16] y: 45 size: WORD <|@ <|@
      nr  518  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  520  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B76" 
    xhandlers
    flags 
    probability 4551243785039465259
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  528  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  532  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  536  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B39 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B200" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1500  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4550899648069384485
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction r9|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1506  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr 1508  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B139" 
    xhandlers
    flags 
    probability 4548087954455152494
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1514  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1516  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1518  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1520  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1526  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1528  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1534  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1536  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1540  <|@ instruction JUMP ~[] destination: B136 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B23" 
    xhandlers
    flags 
    probability 4548317249677466235
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  298  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  302  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  306  <|@ instruction stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38]
locals: - - - - 
java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2]
locals: - - 
java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16]
locals: Object[FloatingDecimal$1@1399508980] - stack:104|QWORD[.] - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:88|QWORD - stack:96|DWORD stack:92|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  310  <|@ instruction TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4548316064015775107
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  362  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B121" "B123" 
    successors 
    xhandlers
    flags 
    probability 4550332658445861029
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction MOV [r15|QWORD + 668] y: -339553 size: DWORD <|@ <|@
      nr 1388  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1390  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:306, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B199" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1546  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B137 -> B138 falseDestination: B137 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4544704142428875484
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1552  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1554  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1556  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1558  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1560  <|@ instruction MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1562  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1564  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1566  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1570  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1572  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1574  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD <|@ <|@
      nr 1576  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1582  <|@ instruction rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1584  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1586  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1588  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1590  <|@ instruction rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD <|@ <|@
      nr 1592  <|@ instruction MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1594  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1596  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1598  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4541204464633385812
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction r11|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  548  <|@ instruction rdi|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  550  <|@ instruction rbx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  552  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  560  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4540271873215092251
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD = LZCNT r11|QWORD size: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d] <|@ <|@
      nr  154  <|@ instruction r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD <|@ <|@
      nr  158  <|@ instruction r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction r9|DWORD = MOVE input: int[64|0x40] <|@ <|@
      nr  162  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4540271785419705380
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rcx|DWORD = MOVE input: int[12|0xc] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction rdi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rbx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B36" 
    xhandlers
    flags 
    probability 4539856981595528768
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  128  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B7 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4534806173719559024
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:68|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr  240  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr  246  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B16 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B10" "B21" "B16" 
    successors "B27" 
    xhandlers
    flags 
    probability 4534816010194635529
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980] <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34]
locals: - - - - - 
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3]
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - stack:60|DWORD stack:80|QWORD - stack:64|DWORD stack:68|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4] <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B22 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4490441699147872908
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction [stack:64|DWORD, stack:68|DWORD] = MULTISTACKMOVE (inputs: [stack:96|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  320  <|@ instruction stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4468820989198136004
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV [r15|QWORD + 668] y: -367643 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5]
stack: r10|QWORD[.] 
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:5, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B84" "B85" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@710620907] <|@ <|@
      nr 1046  <|@ instruction MOV [r15|QWORD + 668] y: -307739 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:40|QWORD[.] r11|QWORD[.] r8|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:229, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2246  <|@ instruction r10|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed] <|@ <|@
      nr 2254  <|@ instruction JUMP ~[] destination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2260  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2262  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2264  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2270  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2272  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2274  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150]
locals: - - int[1|0x1] - - stack:60|DWORD rdi|QWORD - rcx|DWORD r11|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:150, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction r8|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5] <|@ <|@
      nr 1274  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" "B111" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1272  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1280  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1282  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:197, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction r10|DWORD = MOVE input: int[-363283|0xfffffffffffa74ed] <|@ <|@
      nr 1622  <|@ instruction JUMP ~[] destination: B141 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B141" "B147" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1702  <|@ st <@st|@reference-map: [r14:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: r14|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:8, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B211" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2258  <|@ instruction r10|DWORD = MOVE input: int[-244251|0xfffffffffffc45e5] <|@ <|@
      nr 2266  <|@ instruction JUMP ~[] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r8|DWORD = MOVE input: int[-305179|0xfffffffffffb57e5] <|@ <|@
      nr 1266  <|@ instruction JUMP ~[] destination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2164  <|@ instruction r8|DWORD = MOVE input: int[-388123|0xfffffffffffa13e5] <|@ <|@
      nr 2166  <|@ instruction JUMP ~[] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B200" "B199" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - r11|QWORD[.] r10|DWORD rsi|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:396, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction rax|DWORD = MOVE input: int[-297243|0xfffffffffffb76e5] <|@ <|@
      nr  916  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction r8|DWORD = MOVE input: int[-330011|0xfffffffffffaf6e5] <|@ <|@
      nr 2198  <|@ instruction JUMP ~[] destination: B204 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" "B119" "B205" "B204" "B203" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2224  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2216  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction xmm0|DOUBLE = VMOVE stack:48|DOUBLE <|@ <|@
      nr 2220  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2228  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2230  <|@ st <@st|@reference-map: [rsi:0, r9:0, r11:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: r9|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: r9|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: xmm0|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:283, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction r10|DWORD = MOVE input: int[-237587|0xfffffffffffc5fed] <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  208  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  218  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.lang.Double.toString(Double.java:644) [bci: 0]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rax|DWORD = MOVE input: int[-271643|0xfffffffffffbdae5] <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction r8|DWORD = MOVE input: int[-386331|0xfffffffffffa1ae5] <|@ <|@
      nr 2160  <|@ instruction JUMP ~[] destination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B202" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2152  <|@ instruction r8|DWORD = MOVE input: int[-358171|0xfffffffffffa88e5] <|@ <|@
      nr 2154  <|@ instruction JUMP ~[] destination: B199 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2202  <|@ instruction r8|DWORD = MOVE input: int[-328475|0xfffffffffffafce5] <|@ <|@
      nr 2210  <|@ instruction JUMP ~[] destination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1454  <|@ instruction MOV [r15|QWORD + 668] y: -360731 size: DWORD <|@ <|@
      nr 1456  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1458  <|@ st <@st|@reference-map: [r11:0, stack:56, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: stack:40|QWORD[.] r11|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:40|QWORD[.] - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4]
locals: - - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:363, 5, 4, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rax|DWORD = MOVE input: int[-299547|0xfffffffffffb6de5] <|@ <|@
      nr  908  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ instruction r8|DWORD = MOVE input: int[-331027|0xfffffffffffaf2ed] <|@ <|@
      nr 1334  <|@ instruction JUMP ~[] destination: B119 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1692  <|@ instruction r10|DWORD = MOVE input: int[-365843|0xfffffffffffa6aed] <|@ <|@
      nr 1694  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2234  <|@ instruction stack:48|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr 2236  <|@ instruction stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2238  <|@ instruction MOV [r15|QWORD + 668] y: -250147 size: DWORD <|@ <|@
      nr 2240  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2242  <|@ st <@st|@reference-map: [r10:0, stack:56]
live-base-pointers: []
sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6]
stack: r10|QWORD[.] 
locals: 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156]
locals: - - int[1|0x1] - - r9|DWORD r11|QWORD - rcx|DWORD r8|DWORD - - 
sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2]
locals: - - 
sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:204) [bci: 1]
locals: stack:48|DOUBLE - 
java.lang.Double.toString(Double.java:644) [bci: 4]
locals: stack:56|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:6, 156, 2, 1, 1, 4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2214  <|@ instruction r8|DWORD = MOVE input: int[-325147|0xfffffffffffb09e5] <|@ <|@
      nr 2222  <|@ instruction JUMP ~[] destination: B206 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-237331|0xfffffffffffc60ed] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction rax|DWORD = MOVE input: int[-295699|0xfffffffffffb7ced] <|@ <|@
      nr  798  <|@ instruction stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B62 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B207" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2178  <|@ instruction r8|DWORD = MOVE input: int[-342811|0xfffffffffffac4e5] <|@ <|@
      nr 2186  <|@ instruction JUMP ~[] destination: B203 -> B207 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // value:double
     4: invokestatic  #2          // toString:(double)java.lang.String
     7: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c2460c5fb104610498b97d0010000448b5250c4c1f97ec348ba00000000000000804985d3b90000000041b901000000440f44c948b9000000000000f07f4923cb48c1e9348bc949b8ffffffffffff0f0085c90f84f605000081f9ff0700000f842e0f00008d9901fcffff4d23d848ba00000000000010004c0bda4585d20f84d10c0000498bfb41bb35000000428b14d514000000448b04d50c000000418bc0ffc881e0f1ab7bac443bc00f86d20d000048c1e2038b548210448bc249c1e00349c1e20385d20f84fb0a0000813cd50c000000addeadde0f85450d0000418b501c48c1e2038bcb458bc34c8bdf4c8bd24d85d20f840e00000041817a08addeadde0f855e0e0000c5fb11442440488974243845884a18498bf28bd1498bcb41b9010000004c8954241890e800000000904c8b542418410fbe7218418b522048c1e203400fb6f685f60f85df090000418b720c83fe010f8d5003000048c7c71000000048c7c31200000048c7c1020000004c8954244841b80200000041bb0100000041ba00000000488954240883fe010f8dc107000083fefe0f8cb80700008b420c413bc20f86a20c0000413bc30f86d80c000066c7043a300066c7041a2e0085f60f85de030000458bd88944242c4c8b542448418b7a1c418504fc418b721085f60f8c560700004585db0f8c4d070000458b42144585c00f8c40070000448b0cfd0c000000452bc8413bf10f8f2c0700008b44242c412bc0443bd80f8f1c07000048c1e7034863f64d63cb4963c8488d7c77104a8d744a10488bd144895c242c4489442430e80000000090448b5c242c44035c24304c8b742448458beb458b5620438504d449bbaddeaddeaddeadde4183fd010f8ca4040000468b04d50c000000418bc0412bc585c00f8ccb0c0000498b4760498b77704181fdffffff000f83d4040000418bd5d1e28d521783e2f84863d2488bca4803c8483bce0f87b704000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489680c48c70001000000c74008addeadde448914244c89742408458bf0453bee418bf5410f4ff64863f64883fe010f8c9d000000448b1424488d50104a8d0cd5100000004c8d56f04d85d249c7c3000000000f8dc50300004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8f5c000000498b7760488d5618493b57700f8740050000498957600f1886d800000049bbaddeaddeaddeadde488bd6498b8ba800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24604883c468850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8d9e02000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff48c7c01000000048c7c70200000048c7c3120000008bce4d8bca41b80200000041bb0100000041ba0000000083fe080f83fd05000048895424188502418b791c448b1cfd0c000000448b420c418b5910418b41144863eb48c1e7033bc60f8f930200003bf00f8f880a0000418bca03c8443bc10f8689090000448be941ffc5453bc50f860d0a000085db0f8c3e050000442bd8413bdb0f8f50050000442bc0453bd00f8f5005000044896c242c890c244c894c2408488bf24c63d8488d7c6f104a8d745610498bd3e80000000090488b5424188b0c2466c7444a102e00448b6c242c6642c7446a1030008d79024c8b742408448befe9b8fcffff448bd641f7da4d63d24d8bda49ffcb418bd82bde413bd80f8fdb0200004c895c24184c895424208bf0418bd08bcb891c248944242c4489442430666690e800000000904c8b542448448b442430458bd8452b5a0c48837c2420010f8cb7020000488b7c2420488b5424084e8d444210488d7ffe4885ff0f8ce8020000c4c1796e0500000000c4c1797e0048c7c602000000488b7c2418483bf70f8f8ffbffff6641c7003000e984fbffff4d85c30f85900600004985d30f858308000049baaddeaddeaddeadde410fb6521849bbaddeaddeaddeadde85d20f85c0060000458b420c4183f8010f8d3602000048c7c71000000048c7c31200000048c7c1020000004c89542448498bd341bb0100000041ba00000000c5fb114424404889742438418bf041b802000000e9b5faffffc5f9efc049c7c200000000660f1f440000c4a17e7f04514d8d52104c3bd67ef1e944fdffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe921fcffff4585ed0f8c43070000498b4760488d7018493b77700f8777030000498977600f1880d8000000488bf0498b93a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24604883c468850500000000c5f877c3448914244c8974240848beaddeaddeaddeadde418bd5b900000000458bf0e80000000090e962fbffff4c894c2408443bc10f865407000085db0f8c40030000458bcb442bce413bd90f8f38030000458bc8442bce453bd10f8f3303000089442410895c2414448944242c44895c2430894c24044c8bcf4c8bea448bf648897c2420498d7c69108934244b8d745510498bd6e80000000090488b5424188b4c240466c7444a102e008b342403742414ffc185f60f8ce20200008b4424102b042485c00f8cd3020000448b5c2430442bd8413bf30f8fc2020000448b44242c442bc0413bc80f8fb1020000488b7c24204863f64c63d14c63d8488d7c77104a8d745210498bd3890c248944242ce800000000908b0c24034c242c4c8b742408448be9e9c0f9ffff498bf34803f18bc8483bce0f864f050000413bc00f870bfdffffe941050000488b542408e90df9ffff48c7c01000000048c7c70200000048c7c312000000418bc84d8bca498bd341bb0100000041ba00000000c5fb114424404889742438418bf041b802000000e9cefbffff48c7c600000000e921fdffff4c8bf048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0498bc6e9a3faffffbe9f1dfbff4189b79c0200004d89a7a8020000e800000000904c8b4c2448418b491c8b04cd0c000000418b69103bc50f8616060000448b6a0c453bea0f86a1050000453beb0f8634050000458b59144183fb020f8cb905000041ffcb458bf34503f0453bee0f860506000048c1e103440fbf546910664489143a66c7041a2e00412bc3ffc53be80f8f6a020000418bfd412bfb443bc70f8f5b020000448974243044896c242c8934244c8bca4863fd4d63db488d7c79104b8d744110498bd3e800000000904c8b5c2408448b7424306643c74473104500458bd641ffc2833c2401448b6c242c0f8dc4000000453bea0f86f60400006643c74453102d00418d4602ba010000002b14248bf2448bd0453bea0f863f040000458bc241ffc083fe0a0f8d180100008d46306643894453104c8b742448458be8e9e4f7ffffb89f87fbff4c894c24084189879c0200004d89a7a8020000e80000000090b89f87fbff4c894c2408ebe0b89f87fbff4c894c2408ebd44c8974240848beaddeaddeaddeaddeba02000000b901000000e8000000009049bbaddeaddeaddeaddee966fcffff488bcf4c894c2448488bf8e99af6ffff8b3424ffcee954ffffffb89fe9fbffeb85b89fe9fbffe97bffffffb89fe9fbffe971ffffff8b342441c7879c0200009fb2fbff4d89a7a8020000e80000000090837a0c000f84ae02000066c742102d00418b720c83fe010f8d6601000048c7c71200000048c7c31400000048c7c1030000004c8954244841b80300000041bb0200000041ba01000000e90cf6ffff453be80f8689030000458d4a0283fe640f8dbe0000008bc6ba67666666f7eac1fa028d4a306643894c53108bcac1e103d1e203ca2bf18d76306643897443104c8b742448458be9e996f6ffff48897c241844895c2414895c241044894c2434c5fb11442440488974243848baaddeaddeaddeadde498bf28bc84c8954240890e800000000904885c00f84a50100004c8bc04c8b542408488b7c2418448b5c24148b5c2410448b4c2434c5fb10442440488b742438e9a9f4ffff4c8bda41c7879c0200009fd1faff4d89a7a8020000e80000000090453be90f86bd0200008bc6ba1f85eb51f7eac1fa058d42306643894453106bc2642bf08bc6ba67666666f7eac1fa028bcec1e91f03d18d4a306643894c43108bcac1e103d1e203ca2bf18d4e306643894c4b10458d6a034c8b742448e9adf5ffff448bde41ffc348c7c01200000048c7c70300000048c7c314000000418bcb4d8bca41b80300000041bb0200000041ba01000000e9eff7ffff44894c2434c5fb1144244048897424384d23d8f3490fbdf3b90dfcffff448bc1442bc68d4ef549d3e341b940000000442bce4585d20f84b1000000b90c0000002bce498bfb458bd9418bd8448b4c2434488b742438e94bf3ffff498bd3c5fb114424404889742438e9d8fdffff895c2430c744242c350000004c895c242044894c2434c5fb11442440488974243848beaddeaddeaddeadde6690e800000000908b4c2430448b44242c4c8b5c24204c8bd0448b4c2434c5fb10442440488b742438e942f3ffff48894424508b442410894424308b4424148944242c488b44245048ff742418488f442420eba2448944243044894c242c4c895c2420eb9141c7879c020000e563faff4d89a7a8020000e800000000904c8bda49baaddeaddeaddeadde41c7879c020000e54dfbff4d8997a8020000e8000000009041baed39fcff44894c2434c5fb1144244048897424384589979c0200004d89a7a8020000e8000000009041b8e55ffbff4c8bda4589879c0200004d89a7a8020000e8000000009041baed74faff4589979c0200004d89a7a8020000e8000000009041bae545fcffeb9d41b8e557fbffebbf41b8e513faff4589879c0200004d89a7a8020000e80000000090b8e576fbff4c894c2408e9c7fbffff41b8e5f6faff4c8bdac5fb10442440488b7424384589879c0200004d89a7a8020000e8000000009041baed5ffcff48897424384589979c0200004d89a7a8020000e80000000090b8e5dafbffe976fbffff41b8e51afaffeb8441b8e588faffe979ffffff41b8e5fcfaffeb9a41c7879c020000e57efaff4d89a7a8020000e80000000090b8e56dfbff4c894c2408e934fbffff41b8edf2faffe968ffffff41baed6afaffe90affffffc5fb11442440488974243841c7879c020000dd2efcff4d89a7a8020000e8000000009041b8e509fbffe92fffffff41baed60fcffe94cffffffb8ed7cfbff4c894c2408e9d6faffff41b8e5c4faffe90affffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38051102 slotKind: QWORD  <||@
  Comment 48 6 xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD  <||@
  Comment 53 8 rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 60 10 r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD  <||@
  Comment 64 12 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 69 14 rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 79 16 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 82 18 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 87 20 r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 97 22 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 107 24 rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 110 26 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 114 28 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 116 30 r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 126 32 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 128 34 BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12  <||@
  Comment 134 block B12 null  <||@
  Comment 134 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 200 CMP rcx|DWORD y: 2047 size: DWORD  <||@
  Comment 140 202 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15  <||@
  Comment 146 block B15 null  <||@
  Comment 146 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 222 rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 152 224 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 155 226 rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 165 228 r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 168 230 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 171 232 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 177 block B17 null  <||@
  Comment 177 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 252 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 180 254 r11|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 186 256 JUMP ~[] destination: B17 -> B18  <||@
  Comment 186 block B18 null  <||@
  Comment 186 258 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 186 260 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 194 262 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4]  <||@
  Comment 194 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 194 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 264 rax|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 207 266 rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD  <||@
  Comment 213 268 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 216 270 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B210  <||@
  Comment 222 block B19 null  <||@
  Comment 222 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 274 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 226 276 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 230 278 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 237 280 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 241 282 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 243 284 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24  <||@
  Comment 249 block B24 null  <||@
  Comment 249 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 249 368 CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980]  <||@
  Comment 249 {NarrowOop[FloatingDecimal$1@1399508980]}  <||@
  Comment 260 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B209  <||@
  Comment 266 block B26 null  <||@
  Comment 266 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 266 378 rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 266 [rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rbx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 380 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 274 382 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 276 384 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 279 386 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 282 388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 285 390 JUMP ~[] destination: B26 -> B27  <||@
  Comment 285 block B27 null  <||@
  Comment 285 392 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 285 394 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 288 396 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29  <||@
  Comment 294 block B29 null  <||@
  Comment 294 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 408 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 294 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 302 410 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B208  <||@
  Comment 308 block B31 null  <||@
  Comment 308 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 400 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 314 402 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 319 422 MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 319 [r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 323 424 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 326 426 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 428 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 331 430 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 337 432 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 342 434 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4]  <||@
  Comment 342 9  <||@
  Comment 343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>}  <||@
  Comment 348 [stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 349 436 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 354 438 rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 359 440 rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 363 442 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 367 444 rsi|DWORD = MOVZXB rsi|DWORD size: DWORD  <||@
  Comment 371 446 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 373 448 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B36  <||@
  Comment 379 block B32 null  <||@
  Comment 379 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 452 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 383 454 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 386 456 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 392 block B33 null  <||@
  Comment 392 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 460 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 399 462 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 406 464 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 413 466 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 418 468 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 424 470 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 430 472 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 436 474 JUMP ~[] destination: B33 -> B76  <||@
  Comment 436 block B76 null  <||@
  Comment 436 938 [] = LABEL numbPhis: 9 align: false label: ?  <||@
  Comment 436 940 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 441 942 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 444 944 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B115  <||@
  Comment 450 block B77 null  <||@
  Comment 450 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 948 CMP rsi|DWORD y: -2 size: DWORD  <||@
  Comment 453 950 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B77 -> B115 falseDestination: B77 -> B79  <||@
  Comment 459 block B79 null  <||@
  Comment 459 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 960 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4]  <||@
  Comment 459 [rdx:0, stack:8, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 459 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 462 962 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 465 964 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B112  <||@
  Comment 471 block B80 null  <||@
  Comment 471 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 968 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 474 970 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B111  <||@
  Comment 480 block B81 null  <||@
  Comment 480 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 974 MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD  <||@
  Comment 486 976 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 492 978 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 494 980 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 500 block B82 null  <||@
  Comment 500 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 984 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 503 986 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 507 988 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 512 990 JUMP ~[] destination: B82 -> B99  <||@
  Comment 512 block B99 null  <||@
  Comment 512 1142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 1144 rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1146 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4]  <||@
  Comment 516 [rdx:0, rdi:0, r10:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 516 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 520 1148 rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 524 1150 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 526 1152 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B99 -> B109 falseDestination: B99 -> B101  <||@
  Comment 532 block B101 null  <||@
  Comment 532 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 532 1162 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 535 1164 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B101 -> B109 falseDestination: B101 -> B103  <||@
  Comment 541 block B103 null  <||@
  Comment 541 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 1174 r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 545 1176 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 548 1178 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B103 -> B109 falseDestination: B103 -> B105  <||@
  Comment 554 block B105 null  <||@
  Comment 554 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 1188 r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 562 1190 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 565 1192 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 568 1194 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B105 -> B109 falseDestination: B105 -> B107  <||@
  Comment 574 block B107 null  <||@
  Comment 574 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 574 1204 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 578 1206 rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 581 1208 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 584 1210 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B107 -> B109 falseDestination: B107 -> B110  <||@
  Comment 590 block B110 null  <||@
  Comment 590 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 1228 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 594 1230 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1232 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1234 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 597 1236 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 600 1238 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 603 1240 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 608 1242 rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD  <||@
  Comment 613 1244 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 616 1246 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 621 1248 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 626 1250 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 626 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 632 1252 r11|DWORD = ADD (x: stack:68|DWORD, y: stack:64|DWORD) size: DWORD  <||@
  Comment 642 1254 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 647 1256 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 650 1258 JUMP ~[] destination: B110 -> B139  <||@
  Comment 650 block B139 null  <||@
  Comment 650 1600 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 650 1602 r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 654 1604 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4]  <||@
  Comment 654 [r10:0, r14:0, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 654 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 658 1606 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 658 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 668 1608 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 672 1610 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B146  <||@
  Comment 678 block B146 null  <||@
  Comment 678 1680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 1682 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 686 1684 rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 692 1686 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 694 1688 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B149  <||@
  Comment 700 block B149 null  <||@
  Comment 700 1704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 1706 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 704 1708 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 708 1710 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 715 1712 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B149 -> B150 falseDestination: B149 -> B154  <||@
  Comment 721 block B150 null  <||@
  Comment 721 1714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 1716 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 726 1718 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 729 1720 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 732 1722 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 735 1724 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 741 1726 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 744 1728 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B150 -> B154 falseDestination: B150 -> B152  <||@
  Comment 750 block B152 null  <||@
  Comment 750 1738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 1740 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 754 1742 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 762 1744 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 770 1746 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 778 1748 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 786 1750 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 790 1752 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 797 1754 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 804 1756 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 804 1758 stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 808 1760 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 813 1762 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 816 1764 JUMP ~[] destination: B152 -> B155  <||@
  Comment 816 block B155 null  <||@
  Comment 816 1788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 816 1790 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 819 1792 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 826 1794 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 829 1796 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 833 1798 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B155 -> B174 falseDestination: B155 -> B157  <||@
  Comment 839 block B157 null  <||@
  Comment 839 1804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 1806 r10|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 843 1808 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 847 1810 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 855 1812 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 859 1814 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 862 1820 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 869 1816 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B157 -> B162 falseDestination: B157 -> B160  <||@
  Comment 875 block B162 null  <||@
  Comment 875 1846 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 1848 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 879 1850 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 882 1852 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B165 falseDestination: B162 -> B164  <||@
  Comment 888 block B164 null  <||@
  Comment 888 1858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 1860 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 894 1862 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 900 1864 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 904 1866 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 907 1868 JUMP ~[] destination: B164 -> B165  <||@
  Comment 907 block B165 null  <||@
  Comment 907 1870 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 907 1872 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 911 1874 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 914 1876 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B165 -> B168 falseDestination: B165 -> B167  <||@
  Comment 920 block B167 null  <||@
  Comment 920 1882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 920 1884 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 926 1886 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 932 1888 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 936 1890 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 939 1892 JUMP ~[] destination: B167 -> B168  <||@
  Comment 939 block B168 null  <||@
  Comment 939 1894 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 939 1896 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 943 1898 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 946 1900 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B171 falseDestination: B168 -> B170  <||@
  Comment 952 block B170 null  <||@
  Comment 952 1906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 1908 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 958 1910 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 964 1912 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 968 1914 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 971 1916 JUMP ~[] destination: B170 -> B171  <||@
  Comment 971 block B171 null  <||@
  Comment 971 1918 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 971 1920 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 977 1922 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 980 1924 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B174 falseDestination: B171 -> B173  <||@
  Comment 986 block B173 null  <||@
  Comment 986 1930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 1932 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 991 1934 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 996 1936 JUMP ~[] destination: B173 -> B174  <||@
  Comment 996 block B174 null  <||@
  Comment 996 1938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 1940 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 999 1942 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1002 1944 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B194  <||@
  Comment 1008 block B194 null  <||@
  Comment 1008 2084 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 2086 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1012 2088 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1016 2090 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1020 2092 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B196  <||@
  Comment 1026 block B196 null  <||@
  Comment 1026 2114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 2116 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1030 2118 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1037 2120 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1037 2124 JUMP ~[] destination: B196 -> B197  <||@
  Comment 1037 block B197 null  <||@
  Comment 1037 2126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1037 2122 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1037 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1047 2128 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1050 2130 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1057 2132 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1060 2134 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1060 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1067 2136 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 1071 2138 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1074 2140 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1078 2142 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 2144 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1090 12  <||@
  Comment 1100 block B175 null  <||@
  Comment 1100 1946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 1948 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1105 1950 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1108 1952 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1112 1954 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1115 1956 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B177  <||@
  Comment 1121 block B176 null  <||@
  Comment 1121 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 1960 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1128 1962 JUMP ~[] destination: B176 -> B180  <||@
  Comment 1128 block B180 null  <||@
  Comment 1128 1986 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1128 1988 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1132 1990 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1135 1992 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B180 -> B183 falseDestination: B180 -> B182  <||@
  Comment 1141 block B182 null  <||@
  Comment 1141 1998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1141 2000 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1145 2002 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1151 2004 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1155 2006 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1158 2008 JUMP ~[] destination: B182 -> B183  <||@
  Comment 1158 block B183 null  <||@
  Comment 1158 2010 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1158 2012 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1162 2014 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1165 2016 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B183 -> B186 falseDestination: B183 -> B185  <||@
  Comment 1171 block B185 null  <||@
  Comment 1171 2022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 2024 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1175 2026 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1181 2028 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1185 2030 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1188 2032 JUMP ~[] destination: B185 -> B186  <||@
  Comment 1188 block B186 null  <||@
  Comment 1188 2034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1188 2036 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1192 2038 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1195 2040 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B189 falseDestination: B186 -> B188  <||@
  Comment 1201 block B188 null  <||@
  Comment 1201 2046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 2048 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1205 2050 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1211 2052 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1215 2054 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1218 2056 JUMP ~[] destination: B188 -> B189  <||@
  Comment 1218 block B189 null  <||@
  Comment 1218 2058 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1218 2060 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1221 2062 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1224 2064 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B194 falseDestination: B189 -> B191  <||@
  Comment 1230 block B191 null  <||@
  Comment 1230 2070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1230 2072 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1235 2074 JUMP ~[] destination: B191 -> B194  <||@
  Comment 1240 block B34 null  <||@
  Comment 1240 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1240 478 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1247 480 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1254 482 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1261 484 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1263 486 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 488 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1272 490 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1278 492 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1284 494 JUMP ~[] destination: B34 -> B41  <||@
  Comment 1284 block B41 null  <||@
  Comment 1284 564 [] = LABEL numbPhis: 10 align: false label: ?  <||@
  Comment 1284 566 CMP rsi|DWORD y: 8 size: DWORD  <||@
  Comment 1287 568 BRANCH trueDestinationProbability: 0.9952836455427129 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B75  <||@
  Comment 1293 block B42 null  <||@
  Comment 1293 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 572 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1298 574 NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1298 [rdx:0, r9:0, stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1298 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1300 576 rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1304 578 r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1304 [rdx:0, rdi:0, r9:0, stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1304 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1312 580 r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1316 582 rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 1320 584 rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 1324 586 rbp|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 1327 588 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 1331 590 CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1333 592 BRANCH trueDestinationProbability: 0.44778072425335824 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61  <||@
  Comment 1339 block B61 null  <||@
  Comment 1339 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1339 790 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1341 792 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1347 block B63 null  <||@
  Comment 1347 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1347 804 rcx|DWORD = ADD (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1352 806 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1355 808 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B73  <||@
  Comment 1361 block B64 null  <||@
  Comment 1361 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1361 812 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1367 814 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1370 816 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B72  <||@
  Comment 1376 block B65 null  <||@
  Comment 1376 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1376 820 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1378 822 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1384 block B67 null  <||@
  Comment 1384 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 834 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1387 836 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1390 838 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1396 block B69 null  <||@
  Comment 1396 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 850 r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1399 852 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1402 854 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1408 block B71 null  <||@
  Comment 1408 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 866 stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1413 868 stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1416 870 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1421 872 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1421 874 rsi|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 876 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1427 878 rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1432 880 rsi|QWORD = LEA [rsi|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1437 882 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1440 884 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1440 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1446 886 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1451 888 rcx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 1454 890 MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1461 892 r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1466 894 MOV [rdx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1474 896 rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 1477 898 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1482 900 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1485 902 JUMP ~[] destination: B71 -> B139  <||@
  Comment 1490 block B83 null  <||@
  Comment 1490 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1490 994 r10|DWORD = NEG rsi|DWORD size: DWORD  <||@
  Comment 1496 996 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1499 998 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1505 1000 rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1510 1002 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1513 1004 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B91  <||@
  Comment 1519 block B91 null  <||@
  Comment 1519 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1519 1054 stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1524 1056 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1529 1062 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1531 1064 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1534 1066 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1536 1068 stack:112|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1539 1070 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1543 1072 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1548 1074 - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4]  <||@
  Comment 1548 8  <||@
  Comment 1551 {HotSpotMethod<Arrays.rangeCheck(int, int, int)>}  <||@
  Comment 1556 [stack:8, stack:56, stack:72]at java.util.Arrays.fill(Arrays.java:2973) [bci: 4, duringCall: true, rethrow: false]
              |0                   |1               |2                |3             |4 
     locals:  |stack:104|QWORD[.]  |stack:64|DWORD  |stack:112|DWORD  |int[48|0x30]  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246, duringCall: true, rethrow: false]
              |0                  |1                   |2               |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:104|QWORD[.]  |stack:64|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1557 1076 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1562 1078 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1567 1080 r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1574 1082 CMP stack:80|QWORD y: 1 size: QWORD  <||@
  Comment 1580 1084 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1586 block B93 null  <||@
  Comment 1586 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 1094 rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 1591 1096 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 1098 r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1601 1100 rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 1605 1102 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1608 1104 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95  <||@
  Comment 1614 block B95 null  <||@
  Comment 1614 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1614 1116 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1614 {DataSection[0x0]}  <||@
  Comment 1623 1118 J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1628 1120 rsi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1635 1124 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1635 block B96 null  <||@
  Comment 1635 1126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 1122 rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 1640 1128 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1643 1130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B99 falseDestination: B96 -> B98  <||@
  Comment 1649 block B98 null  <||@
  Comment 1649 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1649 1138 MOV [r8|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1655 1140 JUMP ~[] destination: B98 -> B99  <||@
  Comment 1660 block B1 null  <||@
  Comment 1660 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 38 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1663 40 BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 1669 block B2 null  <||@
  Comment 1669 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1669 44 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1672 46 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 1678 block B3 null  <||@
  Comment 1678 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 50 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]  <||@
  Comment 1678 {Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]}  <||@
  Comment 1688 52 rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1693 54 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}]  <||@
  Comment 1693 {Object[char[26]{0, ., 0,  ,  , ...}]}  <||@
  Comment 1703 56 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1705 58 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 1711 block B4 null  <||@
  Comment 1711 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1711 62 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1715 64 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1719 66 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1725 block B5 null  <||@
  Comment 1725 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1725 70 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1732 72 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1739 74 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1746 76 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1751 78 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 80 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1760 82 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1766 84 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1772 86 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 88 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1780 90 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1786 92 JUMP ~[] destination: B5 -> B76  <||@
  Comment 1791 block B177 null  <||@
  Comment 1791 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1791 1966 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1795 1968 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1802 1970 JUMP ~[] destination: B177 -> B178  <||@
  Comment 1802 block B178 loop 1 depth 1 header:2333|LoopBegin  <||@
  Comment 1802 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1808 1974 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1814 1976 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1818 1978 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1821 1980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B180 falseDestination: B178 -> B178  <||@
  Comment 1828 block B160 loop 0 depth 1 header:2270|LoopBegin  <||@
  Comment 1828 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1840 1832 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1846 1834 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1852 1836 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1856 1838 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1859 1840 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B162 falseDestination: B160 -> B160  <||@
  Comment 1866 block B140 null  <||@
  Comment 1866 1612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 1614 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1869 1616 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142  <||@
  Comment 1875 block B142 null  <||@
  Comment 1875 1624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 1626 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1879 1628 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1883 1630 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1887 1632 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 1893 block B144 null  <||@
  Comment 1893 1652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1893 1654 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1897 1656 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1904 1658 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1904 1660 JUMP ~[] destination: B144 -> B145  <||@
  Comment 1904 block B145 null  <||@
  Comment 1904 1662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1904 1664 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1907 1666 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1914 1668 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1917 1670 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1917 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1924 1672 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1924 {NarrowOop[char[0]{}]}  <||@
  Comment 1931 1674 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1935 1676 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1938 1678 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1947 12  <||@
  Comment 1957 block B154 null  <||@
  Comment 1957 1774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1957 1768 stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1961 1770 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 1776 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1966 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1976 1778 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1979 1780 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1984 1782 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1987 1784 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 1987 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1992 [stack:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
     stack:   |r13|DWORD           |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1993 1786 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1998 block B43 null  <||@
  Comment 1998 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1998 596 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 598 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2006 600 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60  <||@
  Comment 2012 block B44 null  <||@
  Comment 2012 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2012 604 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2014 606 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 2020 block B46 null  <||@
  Comment 2020 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 616 r9|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2026 618 CMP (x: rbx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2029 620 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 2035 block B48 null  <||@
  Comment 2035 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 630 r9|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2041 632 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2044 634 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 2050 block B50 null  <||@
  Comment 2050 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2050 644 stack:96|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2054 646 stack:92|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2058 648 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2063 650 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2068 652 stack:108|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2072 654 r9|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2075 656 r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 658 r14|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 2081 660 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2086 662 rdi|QWORD = LEA [r9|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2091 664 stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2094 666 rsi|QWORD = LEA [r13|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2099 668 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2102 670 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2102 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2108 672 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 674 rcx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 2117 676 MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 2124 678 rsi|DWORD = ADD (x: stack:112|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 2131 680 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2133 682 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2135 684 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B58 falseDestination: B50 -> B52  <||@
  Comment 2141 block B52 null  <||@
  Comment 2141 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2141 694 rax|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2145 696 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:112|DWORD) size: DWORD  <||@
  Comment 2148 698 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2150 700 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B58 falseDestination: B52 -> B54  <||@
  Comment 2156 block B54 null  <||@
  Comment 2156 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2156 710 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2161 712 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2164 714 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2167 716 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 2173 block B56 null  <||@
  Comment 2173 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2173 726 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2178 728 r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2181 730 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2184 732 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B59  <||@
  Comment 2190 block B59 null  <||@
  Comment 2190 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2190 750 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 752 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 754 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 756 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2198 758 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2201 760 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2204 762 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2209 764 rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2214 766 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2217 768 stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2220 770 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2224 772 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2224 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2230 774 rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2237 776 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2242 778 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2245 780 JUMP ~[] destination: B59 -> B139  <||@
  Comment 2250 block B84 null  <||@
  Comment 2250 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2250 1008 rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2256 1010 rcx|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 2258 1012 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2261 1014 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B89  <||@
  Comment 2267 block B85 null  <||@
  Comment 2267 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2267 1018 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2270 1020 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B91 falseDestination: B85 -> B89  <||@
  Comment 2281 block B92 null  <||@
  Comment 2281 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2281 1088 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2286 1090 JUMP ~[] destination: B92 -> B99  <||@
  Comment 2291 block B6 null  <||@
  Comment 2291 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2291 96 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 2298 98 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 2305 100 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2312 102 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2315 104 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 106 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2321 108 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2327 110 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2333 112 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 2339 114 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2344 116 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2347 118 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2353 120 JUMP ~[] destination: B6 -> B41  <||@
  Comment 2358 block B94 null  <||@
  Comment 2358 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2358 1108 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2365 1112 JUMP ~[] destination: B94 -> B96  <||@
  Comment 2370 block B195 null  <||@
  Comment 2370 2094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2370 2096 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2373 2098 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2373 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2383 2100 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2388 2102 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2393 2104 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2393 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2398 [r14:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
     stack:   |r13|DWORD           |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2399 2106 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2402 2108 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2405 2112 JUMP ~[] destination: B195 -> B197  <||@
  Comment 2410 block B109 null  <||@
  Comment 2410 1218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2410 1156 rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f]  <||@
  Comment 2415 1220 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 2422 1222 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2429 1224 DEOPT info [bci:256, 5, 4, 1, 4]  <||@
  Comment 2429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2434 [rdx:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2435 block B115 null  <||@
  Comment 2435 1290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2435 1286 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2440 1292 rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 2444 1294 rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2444 [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2444 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2451 1296 rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 2455 1298 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2457 1300 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B206  <||@
  Comment 2463 block B116 null  <||@
  Comment 2463 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2463 1304 r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2463 [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2463 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2467 1306 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2470 1308 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B116 -> B117 falseDestination: B116 -> B205  <||@
  Comment 2476 block B117 null  <||@
  Comment 2476 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2476 1312 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2479 1314 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B204  <||@
  Comment 2485 block B118 null  <||@
  Comment 2485 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2485 1318 r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 2489 1320 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 2493 1322 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120  <||@
  Comment 2499 block B120 null  <||@
  Comment 2499 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2499 1338 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2502 1340 r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2508 1342 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2511 1344 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B203  <||@
  Comment 2517 block B121 null  <||@
  Comment 2517 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2517 1348 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 2521 1350 r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD  <||@
  Comment 2527 1352 MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD  <||@
  Comment 2532 1354 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 2538 1356 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2541 1358 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 2543 1360 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2545 1362 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B121 -> B125 falseDestination: B121 -> B123  <||@
  Comment 2551 block B123 null  <||@
  Comment 2551 1370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2551 1372 rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2557 1374 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2560 1376 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B123 -> B125 falseDestination: B123 -> B126  <||@
  Comment 2566 block B126 null  <||@
  Comment 2566 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2566 1394 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2571 1396 stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2576 1398 stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2579 1400 rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2579 1402 r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2582 1404 rdi|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 2585 1406 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2588 1408 rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2593 1410 rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2598 1412 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2601 1414 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2601 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2607 1416 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2612 1418 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2617 1420 MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2625 1422 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 2631 1424 CMP stack:112|DWORD y: 1 size: DWORD  <||@
  Comment 2635 1430 r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2640 1426 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B130  <||@
  Comment 2646 block B127 null  <||@
  Comment 2646 1428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2646 1432 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2649 1434 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 2655 block B128 null  <||@
  Comment 2655 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2655 1438 MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2663 1440 rax|DWORD = LEA [r14|DWORD + 2] size: DWORD  <||@
  Comment 2667 1442 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2672 1444 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:112|DWORD) size: DWORD  <||@
  Comment 2675 1446 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2677 1448 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2680 1450 JUMP ~[] destination: B128 -> B131  <||@
  Comment 2680 block B131 null  <||@
  Comment 2680 1470 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2680 1472 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2683 1474 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B201  <||@
  Comment 2689 block B132 null  <||@
  Comment 2689 1476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2689 1478 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2695 1480 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 2698 1482 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134  <||@
  Comment 2704 block B133 null  <||@
  Comment 2704 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2704 1486 rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 2707 1488 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2713 1490 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2718 1492 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2721 1494 JUMP ~[] destination: B133 -> B139  <||@
  Comment 2726 block B66 null  <||@
  Comment 2726 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2726 826 rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f]  <||@
  Comment 2731 828 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2736 830 JUMP ~[] destination: B66 -> B74  <||@
  Comment 2736 block B74 null  <||@
  Comment 2736 920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2736 922 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2743 924 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2750 926 DEOPT info [bci:43, 5, 4, 1, 4]  <||@
  Comment 2750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2755 [rdx:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                   |1             |2          |3  |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2756 block B68 null  <||@
  Comment 2756 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2756 842 rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f]  <||@
  Comment 2761 844 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2766 846 JUMP ~[] destination: B68 -> B74  <||@
  Comment 2768 block B70 null  <||@
  Comment 2768 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2768 858 rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f]  <||@
  Comment 2773 860 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2778 862 JUMP ~[] destination: B70 -> B74  <||@
  Comment 2780 block B143 null  <||@
  Comment 2780 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2780 1636 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2785 1638 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2785 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2795 1640 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2800 1642 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2805 1644 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2805 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2810 [stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
     stack:   |r13|DWORD           |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2811 1646 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2811 1648 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2811 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2821 1650 JUMP ~[] destination: B143 -> B145  <||@
  Comment 2826 block B75 null  <||@
  Comment 2826 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2826 930 rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2829 932 stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2834 934 rdi|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2837 936 JUMP ~[] destination: B75 -> B76  <||@
  Comment 2842 block B130 null  <||@
  Comment 2842 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 1464 rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 2845 1466 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 2847 1468 JUMP ~[] destination: B130 -> B131  <||@
  Comment 2852 block B45 null  <||@
  Comment 2852 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2852 610 rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f]  <||@
  Comment 2857 612 JUMP ~[] destination: B45 -> B74  <||@
  Comment 2859 block B47 null  <||@
  Comment 2859 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2859 624 rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f]  <||@
  Comment 2864 626 JUMP ~[] destination: B47 -> B74  <||@
  Comment 2869 block B49 null  <||@
  Comment 2869 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 638 rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f]  <||@
  Comment 2874 640 JUMP ~[] destination: B49 -> B74  <||@
  Comment 2879 block B58 null  <||@
  Comment 2879 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2879 688 rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 2882 742 MOV [r15|QWORD + 668] y: -281953 size: DWORD  <||@
  Comment 2893 744 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2900 746 DEOPT info [bci:145, 5, 4, 1, 4]  <||@
  Comment 2900 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2905 [rdx:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                   |1             |2          |3          |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rsi|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2906 block B36 null  <||@
  Comment 2906 500 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2906 502 CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4]  <||@
  Comment 2906 [rdx:0, r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2906 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2910 504 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 2916 block B38 null  <||@
  Comment 2916 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2916 516 MOV [rdx|QWORD[.] + 16] y: 45 size: WORD  <||@
  Comment 2922 518 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2926 520 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 2929 522 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 2935 block B39 null  <||@
  Comment 2935 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2935 526 rdi|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2942 528 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2949 530 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2956 532 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2961 534 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2967 536 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2973 538 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2979 540 JUMP ~[] destination: B39 -> B76  <||@
  Comment 2984 block B134 null  <||@
  Comment 2984 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2984 1498 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2987 1500 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B200  <||@
  Comment 2993 block B135 null  <||@
  Comment 2993 1502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2993 1504 r9|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2997 1506 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 3000 1508 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137  <||@
  Comment 3006 block B136 null  <||@
  Comment 3006 1510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3006 1512 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3008 1514 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3013 1516 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3015 1518 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3018 1520 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3021 1522 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3027 1524 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3032 1526 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3034 1528 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3036 1530 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3038 1532 rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3041 1534 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 3047 1536 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3052 1538 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3055 1540 JUMP ~[] destination: B136 -> B139  <||@
  Comment 3060 block B20 null  <||@
  Comment 3060 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3060 288 stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3065 290 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3070 292 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3074 294 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3079 296 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3085 298 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3090 300 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3090 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3100 302 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3103 304 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3105 306 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3110 308 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3110 9  <||@
  Comment 3111 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 3116 [stack:8, stack:56]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2                   |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |stack:104|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:88|QWORD  |-  |stack:96|DWORD  |stack:92|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3117 310 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 3120 312 BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23  <||@
  Comment 3126 block B23 null  <||@
  Comment 3126 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3126 348 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3129 350 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3134 352 rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 3139 354 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3144 356 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3148 358 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3153 360 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3159 362 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3164 364 JUMP ~[] destination: B23 -> B26  <||@
  Comment 3169 block B125 null  <||@
  Comment 3169 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3169 1366 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3172 1386 MOV [r15|QWORD + 668] y: -339553 size: DWORD  <||@
  Comment 3183 1388 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3190 1390 DEOPT info [bci:306, 5, 4, 1, 4]  <||@
  Comment 3190 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3195 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3196 block B137 null  <||@
  Comment 3196 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3196 1544 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3199 1546 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B137 -> B138 falseDestination: B137 -> B199  <||@
  Comment 3205 block B138 null  <||@
  Comment 3205 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3205 1550 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3207 1552 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 3212 1554 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3214 1556 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 3217 1558 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3220 1560 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3226 1562 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 3229 1564 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3231 1566 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3233 1568 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3238 1570 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3240 1572 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3243 1574 rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD  <||@
  Comment 3248 1576 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3250 1578 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3253 1580 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3259 1582 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3264 1584 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3266 1586 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3268 1588 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3270 1590 rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3273 1592 MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3279 1594 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 3283 1596 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3288 1598 JUMP ~[] destination: B138 -> B139  <||@
  Comment 3293 block B40 null  <||@
  Comment 3293 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3293 544 r11|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 3299 546 rax|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 3306 548 rdi|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 3313 550 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3320 552 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3323 554 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3326 556 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 3332 558 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3338 560 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3344 562 JUMP ~[] destination: B40 -> B41  <||@
  Comment 3349 block B9 null  <||@
  Comment 3349 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3349 142 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3354 144 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3360 146 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3365 148 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3368 150 rsi|DWORD = LZCNT r11|QWORD size: QWORD  <||@
  Comment 3373 152 rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d]  <||@
  Comment 3378 154 r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3384 156 rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD  <||@
  Comment 3387 158 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 3390 160 r9|DWORD = MOVE input: int[64|0x40]  <||@
  Comment 3396 162 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3399 164 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 3402 166 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 3408 block B11 null  <||@
  Comment 3408 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3408 180 rcx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3413 182 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3415 184 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3418 186 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3421 188 rbx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3424 190 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3429 194 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3434 196 JUMP ~[] destination: B11 -> B18  <||@
  Comment 3439 block B7 null  <||@
  Comment 3439 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3439 124 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3442 126 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3448 128 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3453 130 JUMP ~[] destination: B7 -> B36  <||@
  Comment 3458 block B16 null  <||@
  Comment 3458 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3458 236 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3462 238 stack:68|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 3470 240 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3475 242 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3480 244 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3486 246 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3491 248 JUMP ~[] destination: B16 -> B22  <||@
  Comment 3491 block B22 null  <||@
  Comment 3491 324 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 3491 326 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3491 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3501 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3501 9  <||@
  Comment 3503 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 3508 [stack:56]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:80|QWORD  |-  |stack:64|DWORD  |stack:68|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3509 330 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3513 332 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3518 334 r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 3523 336 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3526 338 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3531 340 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3537 342 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3542 344 JUMP ~[] destination: B22 -> B27  <||@
  Comment 3547 block B21 null  <||@
  Comment 3547 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3547 -1 [stack:64|DWORD, stack:68|DWORD] = MULTISTACKMOVE (inputs: [stack:96|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 3573 320 stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD  <||@
  Comment 3583 322 JUMP ~[] destination: B21 -> B22  <||@
  Comment 3585 block B10 null  <||@
  Comment 3585 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3585 170 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3590 172 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3595 174 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3600 176 JUMP ~[] destination: B10 -> B22  <||@
  Comment 3602 block B37 null  <||@
  Comment 3602 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3602 508 MOV [r15|QWORD + 668] y: -367643 size: DWORD  <||@
  Comment 3613 510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3620 512 DEOPT info [bci:5, 1, 1, 4]  <||@
  Comment 3620 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3625 [r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3626 block B89 null  <||@
  Comment 3626 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3626 1038 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3629 1044 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@710620907]  <||@
  Comment 3629 {Object[d.a@710620907]}  <||@
  Comment 3639 1046 MOV [r15|QWORD + 668] y: -307739 size: DWORD  <||@
  Comment 3650 1048 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 3657 1050 DEOPT info [bci:229, 5, 4, 1, 4]  <||@
  Comment 3657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3662 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3663 block B209 null  <||@
  Comment 3663 2244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3663 2246 r10|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed]  <||@
  Comment 3669 2254 JUMP ~[] destination: B209 -> B211  <||@
  Comment 3669 block B211 null  <||@
  Comment 3669 2268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3669 2260 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3674 2262 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3680 2264 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3685 2270 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3692 2272 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3699 2274 DEOPT info [bci:150, 2, 1, 1, 4]  <||@
  Comment 3699 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3704 [stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3705 block B112 null  <||@
  Comment 3705 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3705 1270 r8|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5]  <||@
  Comment 3711 1274 JUMP ~[] destination: B112 -> B113  <||@
  Comment 3711 block B113 null  <||@
  Comment 3711 1276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3711 1272 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3714 1278 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3721 1280 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3728 1282 DEOPT info [bci:197, 5, 4, 1, 4]  <||@
  Comment 3728 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3733 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3734 block B141 null  <||@
  Comment 3734 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3734 1620 r10|DWORD = MOVE input: int[-363283|0xfffffffffffa74ed]  <||@
  Comment 3740 1622 JUMP ~[] destination: B141 -> B148  <||@
  Comment 3740 block B148 null  <||@
  Comment 3740 1696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3740 1698 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3747 1700 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3754 1702 DEOPT info [bci:8, 4, 1, 4]  <||@
  Comment 3754 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3759 [r14:0, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3760 block B210 null  <||@
  Comment 3760 2256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3760 2258 r10|DWORD = MOVE input: int[-244251|0xfffffffffffc45e5]  <||@
  Comment 3766 2266 JUMP ~[] destination: B210 -> B211  <||@
  Comment 3768 block B111 null  <||@
  Comment 3768 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3768 1262 r8|DWORD = MOVE input: int[-305179|0xfffffffffffb57e5]  <||@
  Comment 3774 1266 JUMP ~[] destination: B111 -> B113  <||@
  Comment 3776 block B201 null  <||@
  Comment 3776 2162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3776 2164 r8|DWORD = MOVE input: int[-388123|0xfffffffffffa13e5]  <||@
  Comment 3782 2166 JUMP ~[] destination: B201 -> B202  <||@
  Comment 3782 block B202 null  <||@
  Comment 3782 2168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3782 2170 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3789 2172 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3796 2174 DEOPT info [bci:396, 5, 4, 1, 4]  <||@
  Comment 3796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3801 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |r11|QWORD[.]  |r10|DWORD  |rsi|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3802 block B73 null  <||@
  Comment 3802 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3802 914 rax|DWORD = MOVE input: int[-297243|0xfffffffffffb76e5]  <||@
  Comment 3807 916 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 3812 918 JUMP ~[] destination: B73 -> B74  <||@
  Comment 3817 block B204 null  <||@
  Comment 3817 2188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3817 2190 r8|DWORD = MOVE input: int[-330011|0xfffffffffffaf6e5]  <||@
  Comment 3823 2198 JUMP ~[] destination: B204 -> B207  <||@
  Comment 3823 block B207 null  <||@
  Comment 3823 2224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3823 2216 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3826 2218 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3832 2220 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3837 2226 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3844 2228 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3851 2230 DEOPT info [bci:283, 5, 4, 1, 4]  <||@
  Comment 3851 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3856 [rsi:0, r9:0, r11:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 3857 block B8 null  <||@
  Comment 3857 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3857 134 r10|DWORD = MOVE input: int[-237587|0xfffffffffffc5fed]  <||@
  Comment 3863 138 JUMP ~[] destination: B8 -> B14  <||@
  Comment 3863 block B14 null  <||@
  Comment 3863 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3863 208 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3868 214 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3875 216 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3882 218 DEOPT info [bci:0]  <||@
  Comment 3882 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3887 [stack:56]at java.lang.Double.toString(Double.java:644) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3888 block B60 null  <||@
  Comment 3888 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3888 784 rax|DWORD = MOVE input: int[-271643|0xfffffffffffbdae5]  <||@
  Comment 3893 786 JUMP ~[] destination: B60 -> B74  <||@
  Comment 3898 block B200 null  <||@
  Comment 3898 2156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3898 2158 r8|DWORD = MOVE input: int[-386331|0xfffffffffffa1ae5]  <||@
  Comment 3904 2160 JUMP ~[] destination: B200 -> B202  <||@
  Comment 3906 block B199 null  <||@
  Comment 3906 2150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3906 2152 r8|DWORD = MOVE input: int[-358171|0xfffffffffffa88e5]  <||@
  Comment 3912 2154 JUMP ~[] destination: B199 -> B202  <||@
  Comment 3917 block B205 null  <||@
  Comment 3917 2200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3917 2202 r8|DWORD = MOVE input: int[-328475|0xfffffffffffafce5]  <||@
  Comment 3923 2210 JUMP ~[] destination: B205 -> B207  <||@
  Comment 3925 block B129 null  <||@
  Comment 3925 1452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3925 1454 MOV [r15|QWORD + 668] y: -360731 size: DWORD  <||@
  Comment 3936 1456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3943 1458 DEOPT info [bci:363, 5, 4, 1, 4]  <||@
  Comment 3943 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3948 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3949 block B72 null  <||@
  Comment 3949 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3949 906 rax|DWORD = MOVE input: int[-299547|0xfffffffffffb6de5]  <||@
  Comment 3954 908 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 3959 910 JUMP ~[] destination: B72 -> B74  <||@
  Comment 3964 block B119 null  <||@
  Comment 3964 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3964 1326 r8|DWORD = MOVE input: int[-331027|0xfffffffffffaf2ed]  <||@
  Comment 3970 1334 JUMP ~[] destination: B119 -> B207  <||@
  Comment 3975 block B147 null  <||@
  Comment 3975 1690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3975 1692 r10|DWORD = MOVE input: int[-365843|0xfffffffffffa6aed]  <||@
  Comment 3981 1694 JUMP ~[] destination: B147 -> B148  <||@
  Comment 3986 block B208 null  <||@
  Comment 3986 2232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3986 2234 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3992 2236 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3997 2238 MOV [r15|QWORD + 668] y: -250147 size: DWORD  <||@
  Comment 4008 2240 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4015 2242 DEOPT info [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 4015 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4020 [r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4021 block B206 null  <||@
  Comment 4021 2212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4021 2214 r8|DWORD = MOVE input: int[-325147|0xfffffffffffb09e5]  <||@
  Comment 4027 2222 JUMP ~[] destination: B206 -> B207  <||@
  Comment 4032 block B13 null  <||@
  Comment 4032 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4032 206 r10|DWORD = MOVE input: int[-237331|0xfffffffffffc60ed]  <||@
  Comment 4038 210 JUMP ~[] destination: B13 -> B14  <||@
  Comment 4043 block B62 null  <||@
  Comment 4043 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4043 796 rax|DWORD = MOVE input: int[-295699|0xfffffffffffb7ced]  <||@
  Comment 4048 798 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 800 JUMP ~[] destination: B62 -> B74  <||@
  Comment 4058 block B203 null  <||@
  Comment 4058 2176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4058 2178 r8|DWORD = MOVE input: int[-342811|0xfffffffffffac4e5]  <||@
  Comment 4064 2186 JUMP ~[] destination: B203 -> B207  <||@
  Comment 4069 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4069 4  <||@
  Comment 4075 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4075 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9241[java.lang.Double.toString()]"
  method "HotSpotCompilation-9241[java.lang.Double.toString()]"
  date 1527005203266
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106e5aae0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@38051102 slotKind: QWORD  <||@
  Comment 48 6 xmm0|DOUBLE = H [rsi|QWORD[.] + 16] nZ: XMM oh: VMOVSD  <||@
  Comment 53 8 rdx|QWORD[.] = MOV [r15|QWORD + 464] size: QWORD  <||@
  Comment 60 10 r10|DWORD[.] = MOV [rdx|QWORD[.] + 80] size: DWORD  <||@
  Comment 64 12 r11|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 69 14 rdx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 79 16 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 82 18 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 87 20 r9|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 97 22 rcx|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 107 24 rcx|QWORD = AND (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 110 26 rcx|QWORD = SHR rcx|QWORD y: 52 size: QWORD  <||@
  Comment 114 28 rcx|DWORD = MOV rcx|QWORD size: DWORD  <||@
  Comment 116 30 r8|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 126 32 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 128 34 BRANCH trueDestinationProbability: 0.13709283671618888 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12  <||@
  Comment 134 block B12 null  <||@
  Comment 134 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 200 CMP rcx|DWORD y: 2047 size: DWORD  <||@
  Comment 140 202 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15  <||@
  Comment 146 block B15 null  <||@
  Comment 146 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 222 rbx|DWORD = LEA [rcx|DWORD - 1023] size: DWORD  <||@
  Comment 152 224 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 155 226 rdx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 165 228 r11|QWORD = OR (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 168 230 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 171 232 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 177 block B17 null  <||@
  Comment 177 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 252 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 180 254 r11|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 186 256 JUMP ~[] destination: B17 -> B18  <||@
  Comment 186 block B18 null  <||@
  Comment 186 258 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 186 260 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 194 262 r8|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:150, 2, 1, 1, 4]  <||@
  Comment 194 [rdx:0, rsi:0, r10:0]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 194 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 264 rax|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 207 266 rax|DWORD = AND rax|DWORD y: -1401181199 size: DWORD  <||@
  Comment 213 268 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 216 270 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B210  <||@
  Comment 222 block B19 null  <||@
  Comment 222 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 274 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 226 276 rdx|DWORD[.] = MOV [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 230 278 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 237 280 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 241 282 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 243 284 BRANCH trueDestinationProbability: 1.3646055437100213E-4 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B24  <||@
  Comment 249 block B24 null  <||@
  Comment 249 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 249 368 CMP [rdx|DWORD[.] * 8 + 12] y: -559030611 size: DWORD c: NarrowOop[FloatingDecimal$1@1399508980]  <||@
  Comment 249 {NarrowOop[FloatingDecimal$1@1399508980]}  <||@
  Comment 260 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B26 falseDestination: B24 -> B209  <||@
  Comment 266 block B26 null  <||@
  Comment 266 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 266 378 rdx|DWORD[.] = MOV [r8|QWORD[.] + 28] size: DWORD state [bci:5, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 266 [rsi:0, r10:0]at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |Object[null]  |  
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2             |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |r10|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |rdi|QWORD  |-  |rbx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 380 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 274 382 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 276 384 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 279 386 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 282 388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 285 390 JUMP ~[] destination: B26 -> B27  <||@
  Comment 285 block B27 null  <||@
  Comment 285 392 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 285 394 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 288 396 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B31 falseDestination: B27 -> B29  <||@
  Comment 294 block B29 null  <||@
  Comment 294 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 408 CMP [r10|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}  <||@
  Comment 294 {meta{HotSpotType<Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;, resolved>;compressed}}  <||@
  Comment 302 410 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B31 falseDestination: B29 -> B208  <||@
  Comment 308 block B31 null  <||@
  Comment 308 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 400 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 314 402 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 319 422 MOVB (x: [r10|QWORD[.] + 24], y: r9|DWORD) size: BYTE state [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 319 [r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 323 424 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 326 426 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 428 rcx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 331 430 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 337 432 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 342 434 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:7, 177, 2, 1, 1, 4]  <||@
  Comment 342 9  <||@
  Comment 343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>}  <||@
  Comment 348 [stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100(FloatingDecimal.java:259) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1785) [bci: 177, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10                 |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |stack:88|QWORD[.]  |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 349 436 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 354 438 rsi|DWORD = MOVSXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 359 440 rdx|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 363 442 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 367 444 rsi|DWORD = MOVZXB rsi|DWORD size: DWORD  <||@
  Comment 371 446 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 373 448 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B36  <||@
  Comment 379 block B32 null  <||@
  Comment 379 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 452 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 383 454 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 386 456 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 392 block B33 null  <||@
  Comment 392 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 460 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 399 462 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 406 464 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 413 466 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 418 468 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 424 470 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 430 472 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 436 474 JUMP ~[] destination: B33 -> B76  <||@
  Comment 436 block B76 null  <||@
  Comment 436 938 [] = LABEL numbPhis: 9 align: false label: ?  <||@
  Comment 436 940 stack:104|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 441 942 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 444 944 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B76 -> B77 falseDestination: B76 -> B115  <||@
  Comment 450 block B77 null  <||@
  Comment 450 946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 948 CMP rsi|DWORD y: -2 size: DWORD  <||@
  Comment 453 950 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B77 -> B115 falseDestination: B77 -> B79  <||@
  Comment 459 block B79 null  <||@
  Comment 459 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 960 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:197, 5, 4, 1, 4]  <||@
  Comment 459 [rdx:0, stack:8, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 459 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 462 962 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 465 964 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B112  <||@
  Comment 471 block B80 null  <||@
  Comment 471 966 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 968 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 474 970 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B80 -> B81 falseDestination: B80 -> B111  <||@
  Comment 480 block B81 null  <||@
  Comment 480 972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 974 MOV [rdx|QWORD[.] + rdi|QWORD * 1] y: 48 size: WORD  <||@
  Comment 486 976 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 492 978 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 494 980 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 500 block B82 null  <||@
  Comment 500 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 984 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 503 986 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 507 988 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 512 990 JUMP ~[] destination: B82 -> B99  <||@
  Comment 512 block B99 null  <||@
  Comment 512 1142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 512 1144 rdi|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 516 1146 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:256, 5, 4, 1, 4]  <||@
  Comment 516 [rdx:0, rdi:0, r10:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 516 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 520 1148 rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 524 1150 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 526 1152 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B99 -> B109 falseDestination: B99 -> B101  <||@
  Comment 532 block B101 null  <||@
  Comment 532 1160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 532 1162 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 535 1164 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B101 -> B109 falseDestination: B101 -> B103  <||@
  Comment 541 block B103 null  <||@
  Comment 541 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 1174 r8|DWORD = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 545 1176 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 548 1178 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B103 -> B109 falseDestination: B103 -> B105  <||@
  Comment 554 block B105 null  <||@
  Comment 554 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 1188 r9|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 562 1190 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 565 1192 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 568 1194 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B105 -> B109 falseDestination: B105 -> B107  <||@
  Comment 574 block B107 null  <||@
  Comment 574 1202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 574 1204 rax|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 578 1206 rax|DWORD = SUB (x: rax|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 581 1208 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 584 1210 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B107 -> B109 falseDestination: B107 -> B110  <||@
  Comment 590 block B110 null  <||@
  Comment 590 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 1228 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 594 1230 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1232 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 594 1234 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 597 1236 r9|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 600 1238 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 603 1240 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 608 1242 rsi|QWORD = LEA [rdx|QWORD[*] + r9|QWORD * 2 + 16] size: QWORD  <||@
  Comment 613 1244 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 616 1246 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 621 1248 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 626 1250 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 626 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 632 1252 r11|DWORD = ADD (x: stack:68|DWORD, y: stack:64|DWORD) size: DWORD  <||@
  Comment 642 1254 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 647 1256 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 650 1258 JUMP ~[] destination: B110 -> B139  <||@
  Comment 650 block B139 null  <||@
  Comment 650 1600 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 650 1602 r10|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 654 1604 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:8, 4, 1, 4]  <||@
  Comment 654 [r10:0, r14:0, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 654 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 658 1606 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 658 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 668 1608 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 672 1610 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B139 -> B140 falseDestination: B139 -> B146  <||@
  Comment 678 block B146 null  <||@
  Comment 678 1680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 1682 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 686 1684 rax|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 692 1686 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 694 1688 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B149  <||@
  Comment 700 block B149 null  <||@
  Comment 700 1704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 1706 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 704 1708 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 708 1710 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 715 1712 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B149 -> B150 falseDestination: B149 -> B154  <||@
  Comment 721 block B150 null  <||@
  Comment 721 1714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 1716 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 726 1718 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 729 1720 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 732 1722 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 735 1724 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 741 1726 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 744 1728 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B150 -> B154 falseDestination: B150 -> B152  <||@
  Comment 750 block B152 null  <||@
  Comment 750 1738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 750 1740 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 754 1742 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 762 1744 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 770 1746 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 778 1748 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 786 1750 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 790 1752 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 797 1754 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 797 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 804 1756 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 804 1758 stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 808 1760 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 813 1762 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 816 1764 JUMP ~[] destination: B152 -> B155  <||@
  Comment 816 block B155 null  <||@
  Comment 816 1788 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 816 1790 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 819 1792 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 826 1794 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 829 1796 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 833 1798 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B155 -> B174 falseDestination: B155 -> B157  <||@
  Comment 839 block B157 null  <||@
  Comment 839 1804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 1806 r10|DWORD[.] = MOVE stack:112|DWORD[.] moveKind: DWORD  <||@
  Comment 843 1808 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 847 1810 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 855 1812 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 859 1814 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 862 1820 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 869 1816 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B157 -> B162 falseDestination: B157 -> B160  <||@
  Comment 875 block B162 null  <||@
  Comment 875 1846 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 1848 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 879 1850 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 882 1852 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B162 -> B165 falseDestination: B162 -> B164  <||@
  Comment 888 block B164 null  <||@
  Comment 888 1858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 1860 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 894 1862 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 900 1864 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 904 1866 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 907 1868 JUMP ~[] destination: B164 -> B165  <||@
  Comment 907 block B165 null  <||@
  Comment 907 1870 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 907 1872 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 911 1874 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 914 1876 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B165 -> B168 falseDestination: B165 -> B167  <||@
  Comment 920 block B167 null  <||@
  Comment 920 1882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 920 1884 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 926 1886 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 932 1888 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 936 1890 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 939 1892 JUMP ~[] destination: B167 -> B168  <||@
  Comment 939 block B168 null  <||@
  Comment 939 1894 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 939 1896 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 943 1898 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 946 1900 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B171 falseDestination: B168 -> B170  <||@
  Comment 952 block B170 null  <||@
  Comment 952 1906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 1908 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 958 1910 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 964 1912 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 968 1914 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 971 1916 JUMP ~[] destination: B170 -> B171  <||@
  Comment 971 block B171 null  <||@
  Comment 971 1918 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 971 1920 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 977 1922 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 980 1924 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B174 falseDestination: B171 -> B173  <||@
  Comment 986 block B173 null  <||@
  Comment 986 1930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 1932 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 991 1934 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 996 1936 JUMP ~[] destination: B173 -> B174  <||@
  Comment 996 block B174 null  <||@
  Comment 996 1938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 1940 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 999 1942 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1002 1944 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B194  <||@
  Comment 1008 block B194 null  <||@
  Comment 1008 2084 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 2086 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1012 2088 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1016 2090 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1020 2092 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B194 -> B195 falseDestination: B194 -> B196  <||@
  Comment 1026 block B196 null  <||@
  Comment 1026 2114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 2116 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1030 2118 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1037 2120 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1037 2124 JUMP ~[] destination: B196 -> B197  <||@
  Comment 1037 block B197 null  <||@
  Comment 1037 2126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1037 2122 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1037 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1047 2128 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1050 2130 rcx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1057 2132 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1060 2134 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1060 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1067 2136 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 1071 2138 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1074 2140 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1078 2142 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 2144 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1090 12  <||@
  Comment 1100 block B175 null  <||@
  Comment 1100 1946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 1948 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1105 1950 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1108 1952 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1112 1954 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1115 1956 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B175 -> B176 falseDestination: B175 -> B177  <||@
  Comment 1121 block B176 null  <||@
  Comment 1121 1958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 1960 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1128 1962 JUMP ~[] destination: B176 -> B180  <||@
  Comment 1128 block B180 null  <||@
  Comment 1128 1986 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1128 1988 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1132 1990 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1135 1992 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B180 -> B183 falseDestination: B180 -> B182  <||@
  Comment 1141 block B182 null  <||@
  Comment 1141 1998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1141 2000 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1145 2002 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1151 2004 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1155 2006 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1158 2008 JUMP ~[] destination: B182 -> B183  <||@
  Comment 1158 block B183 null  <||@
  Comment 1158 2010 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1158 2012 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1162 2014 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1165 2016 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B183 -> B186 falseDestination: B183 -> B185  <||@
  Comment 1171 block B185 null  <||@
  Comment 1171 2022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 2024 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1175 2026 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1181 2028 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1185 2030 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1188 2032 JUMP ~[] destination: B185 -> B186  <||@
  Comment 1188 block B186 null  <||@
  Comment 1188 2034 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1188 2036 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1192 2038 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1195 2040 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B189 falseDestination: B186 -> B188  <||@
  Comment 1201 block B188 null  <||@
  Comment 1201 2046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1201 2048 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1205 2050 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1211 2052 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1215 2054 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1218 2056 JUMP ~[] destination: B188 -> B189  <||@
  Comment 1218 block B189 null  <||@
  Comment 1218 2058 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1218 2060 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1221 2062 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1224 2064 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B194 falseDestination: B189 -> B191  <||@
  Comment 1230 block B191 null  <||@
  Comment 1230 2070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1230 2072 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1235 2074 JUMP ~[] destination: B191 -> B194  <||@
  Comment 1240 block B34 null  <||@
  Comment 1240 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1240 478 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1247 480 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1254 482 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1261 484 rcx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1263 486 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 488 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1272 490 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1278 492 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1284 494 JUMP ~[] destination: B34 -> B41  <||@
  Comment 1284 block B41 null  <||@
  Comment 1284 564 [] = LABEL numbPhis: 10 align: false label: ?  <||@
  Comment 1284 566 CMP rsi|DWORD y: 8 size: DWORD  <||@
  Comment 1287 568 BRANCH trueDestinationProbability: 0.9952836455427129 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B75  <||@
  Comment 1293 block B42 null  <||@
  Comment 1293 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 572 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1298 574 NULLCHECK [rdx|QWORD[.]] state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1298 [rdx:0, r9:0, stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1298 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1300 576 rdi|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1304 578 r11|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5, 4, 1, 4]  <||@
  Comment 1304 [rdx:0, rdi:0, r9:0, stack:24, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1304 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1312 580 r8|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1316 582 rbx|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 1320 584 rax|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 1324 586 rbp|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 1327 588 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 1331 590 CMP (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1333 592 BRANCH trueDestinationProbability: 0.44778072425335824 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B61  <||@
  Comment 1339 block B61 null  <||@
  Comment 1339 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1339 790 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1341 792 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 1347 block B63 null  <||@
  Comment 1347 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1347 804 rcx|DWORD = ADD (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1352 806 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1355 808 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B63 -> B64 falseDestination: B63 -> B73  <||@
  Comment 1361 block B64 null  <||@
  Comment 1361 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1361 812 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1367 814 CMP (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1370 816 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B72  <||@
  Comment 1376 block B65 null  <||@
  Comment 1376 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1376 820 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1378 822 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1384 block B67 null  <||@
  Comment 1384 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 834 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1387 836 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1390 838 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1396 block B69 null  <||@
  Comment 1396 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 850 r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1399 852 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1402 854 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 1408 block B71 null  <||@
  Comment 1408 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 866 stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1413 868 stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1416 870 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1421 872 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1421 874 rsi|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 876 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 1427 878 rdi|QWORD = LEA [rdi|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1432 880 rsi|QWORD = LEA [rsi|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1437 882 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1440 884 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1440 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1446 886 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1451 888 rcx|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 1454 890 MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1461 892 r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1466 894 MOV [rdx|QWORD[.] + r13|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1474 896 rdi|DWORD = LEA [rcx|DWORD + 2] size: DWORD  <||@
  Comment 1477 898 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1482 900 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1485 902 JUMP ~[] destination: B71 -> B139  <||@
  Comment 1490 block B83 null  <||@
  Comment 1490 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1490 994 r10|DWORD = NEG rsi|DWORD size: DWORD  <||@
  Comment 1496 996 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1499 998 r11|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 1505 1000 rbx|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1510 1002 CMP (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1513 1004 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B91  <||@
  Comment 1519 block B91 null  <||@
  Comment 1519 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1519 1054 stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1524 1056 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1529 1062 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1531 1064 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1534 1066 rcx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1536 1068 stack:112|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1539 1070 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1543 1072 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1548 1074 - = CALL_DIRECT [rsi|DWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<Arrays.rangeCheck(int, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:4, 246, 5, 4, 1, 4]  <||@
  Comment 1548 8  <||@
  Comment 1551 {HotSpotMethod<Arrays.rangeCheck(int, int, int)>}  <||@
  Comment 1556 [stack:8, stack:56, stack:72]at java.util.Arrays.fill(Arrays.java:2973) [bci: 4, duringCall: true, rethrow: false]
              |0                   |1               |2                |3             |4 
     locals:  |stack:104|QWORD[.]  |stack:64|DWORD  |stack:112|DWORD  |int[48|0x30]  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246, duringCall: true, rethrow: false]
              |0                  |1                   |2               |3  |4 
     locals:  |stack:40|QWORD[.]  |stack:104|QWORD[.]  |stack:64|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1557 1076 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1562 1078 r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1567 1080 r11|DWORD = SUB (x: r8|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1574 1082 CMP stack:80|QWORD y: 1 size: QWORD  <||@
  Comment 1580 1084 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1586 block B93 null  <||@
  Comment 1586 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 1094 rdi|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 1591 1096 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 1098 r8|QWORD[.] = LEA [rdx|QWORD[.] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1601 1100 rdi|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 1605 1102 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1608 1104 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95  <||@
  Comment 1614 block B95 null  <||@
  Comment 1614 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1614 1116 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1614 {DataSection[0x0]}  <||@
  Comment 1623 1118 J (address: [r8|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1628 1120 rsi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1635 1124 JUMP ~[] destination: B95 -> B96  <||@
  Comment 1635 block B96 null  <||@
  Comment 1635 1126 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 1122 rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 1640 1128 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1643 1130 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B96 -> B99 falseDestination: B96 -> B98  <||@
  Comment 1649 block B98 null  <||@
  Comment 1649 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1649 1138 MOV [r8|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1655 1140 JUMP ~[] destination: B98 -> B99  <||@
  Comment 1660 block B1 null  <||@
  Comment 1660 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 38 TEST (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1663 40 BRANCH trueDestinationProbability: 0.9997455902306649 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B9  <||@
  Comment 1669 block B2 null  <||@
  Comment 1669 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1669 44 TEST (x: rdx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1672 46 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B8  <||@
  Comment 1678 block B3 null  <||@
  Comment 1678 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1678 50 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]  <||@
  Comment 1678 {Object[FloatingDecimal.BinaryToASCIIBuffer@1898887381]}  <||@
  Comment 1688 52 rdx|DWORD = MOVZXB [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 1693 54 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[26]{0, ., 0,  ,  , ...}]  <||@
  Comment 1693 {Object[char[26]{0, ., 0,  ,  , ...}]}  <||@
  Comment 1703 56 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1705 58 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 1711 block B4 null  <||@
  Comment 1711 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1711 62 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1715 64 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1719 66 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1725 block B5 null  <||@
  Comment 1725 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1725 70 rdi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1732 72 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 1739 74 rcx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1746 76 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1751 78 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 80 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1760 82 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1766 84 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 1772 86 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1777 88 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1780 90 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1786 92 JUMP ~[] destination: B5 -> B76  <||@
  Comment 1791 block B177 null  <||@
  Comment 1791 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1791 1966 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1795 1968 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1802 1970 JUMP ~[] destination: B177 -> B178  <||@
  Comment 1802 block B178 loop 1 depth 1 header:2333|LoopBegin  <||@
  Comment 1802 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1808 1974 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1814 1976 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1818 1978 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1821 1980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B178 -> B180 falseDestination: B178 -> B178  <||@
  Comment 1828 block B160 loop 0 depth 1 header:2270|LoopBegin  <||@
  Comment 1828 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1840 1832 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1846 1834 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1852 1836 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1856 1838 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1859 1840 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B162 falseDestination: B160 -> B160  <||@
  Comment 1866 block B140 null  <||@
  Comment 1866 1612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 1614 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1869 1616 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B140 -> B141 falseDestination: B140 -> B142  <||@
  Comment 1875 block B142 null  <||@
  Comment 1875 1624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 1626 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1879 1628 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1883 1630 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1887 1632 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B142 -> B143 falseDestination: B142 -> B144  <||@
  Comment 1893 block B144 null  <||@
  Comment 1893 1652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1893 1654 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1897 1656 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1904 1658 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1904 1660 JUMP ~[] destination: B144 -> B145  <||@
  Comment 1904 block B145 null  <||@
  Comment 1904 1662 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1904 1664 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1907 1666 rdx|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 1914 1668 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1917 1670 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1917 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1924 1672 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1924 {NarrowOop[char[0]{}]}  <||@
  Comment 1931 1674 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1935 1676 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1938 1678 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1947 12  <||@
  Comment 1957 block B154 null  <||@
  Comment 1957 1774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1957 1768 stack:112|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1961 1770 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 1776 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1966 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1976 1778 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1979 1780 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1984 1782 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1987 1784 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 1987 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1992 [stack:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
     stack:   |r13|DWORD           |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 1993 1786 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1998 block B43 null  <||@
  Comment 1998 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1998 596 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 598 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2006 600 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B60  <||@
  Comment 2012 block B44 null  <||@
  Comment 2012 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2012 604 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 2014 606 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 2020 block B46 null  <||@
  Comment 2020 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 616 r9|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2026 618 CMP (x: rbx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2029 620 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 2035 block B48 null  <||@
  Comment 2035 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 630 r9|DWORD = SUB (x: r8|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2041 632 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2044 634 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 2050 block B50 null  <||@
  Comment 2050 642 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2050 644 stack:96|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2054 646 stack:92|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2058 648 stack:68|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2063 650 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2068 652 stack:108|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2072 654 r9|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2075 656 r13|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 658 r14|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 2081 660 stack:80|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2086 662 rdi|QWORD = LEA [r9|QWORD[*] + rbp|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2091 664 stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2094 666 rsi|QWORD = LEA [r13|QWORD[*] + r10|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2099 668 rdx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2102 670 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2102 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2108 672 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2113 674 rcx|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 2117 676 MOV [rdx|QWORD[.] + rcx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 2124 678 rsi|DWORD = ADD (x: stack:112|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 2131 680 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2133 682 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2135 684 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B50 -> B58 falseDestination: B50 -> B52  <||@
  Comment 2141 block B52 null  <||@
  Comment 2141 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2141 694 rax|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 2145 696 rax|DWORD = SUB (x: rax|DWORD, ~y: stack:112|DWORD) size: DWORD  <||@
  Comment 2148 698 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2150 700 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B52 -> B58 falseDestination: B52 -> B54  <||@
  Comment 2156 block B54 null  <||@
  Comment 2156 708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2156 710 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2161 712 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2164 714 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2167 716 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B54 -> B58 falseDestination: B54 -> B56  <||@
  Comment 2173 block B56 null  <||@
  Comment 2173 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2173 726 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2178 728 r8|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2181 730 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2184 732 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B56 -> B58 falseDestination: B56 -> B59  <||@
  Comment 2190 block B59 null  <||@
  Comment 2190 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2190 750 rdi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 752 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 754 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2195 756 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2198 758 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 2201 760 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2204 762 rdi|QWORD = LEA [rdi|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2209 764 rsi|QWORD = LEA [rdx|QWORD[*] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2214 766 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2217 768 stack:112|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2220 770 stack:68|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2224 772 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2224 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2230 774 rcx|DWORD = ADD (x: stack:112|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2237 776 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2242 778 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2245 780 JUMP ~[] destination: B59 -> B139  <||@
  Comment 2250 block B84 null  <||@
  Comment 2250 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2250 1008 rsi|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2256 1010 rcx|QWORD = MOV rax|DWORD size: DWORD  <||@
  Comment 2258 1012 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2261 1014 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B89  <||@
  Comment 2267 block B85 null  <||@
  Comment 2267 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2267 1018 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2270 1020 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B85 -> B91 falseDestination: B85 -> B89  <||@
  Comment 2281 block B92 null  <||@
  Comment 2281 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2281 1088 rdx|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2286 1090 JUMP ~[] destination: B92 -> B99  <||@
  Comment 2291 block B6 null  <||@
  Comment 2291 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2291 96 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 2298 98 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 2305 100 rbx|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2312 102 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2315 104 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 106 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2321 108 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2327 110 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2333 112 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 2339 114 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2344 116 rsi|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2347 118 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2353 120 JUMP ~[] destination: B6 -> B41  <||@
  Comment 2358 block B94 null  <||@
  Comment 2358 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2358 1108 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2365 1112 JUMP ~[] destination: B94 -> B96  <||@
  Comment 2370 block B195 null  <||@
  Comment 2370 2094 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2370 2096 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2373 2098 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2373 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2383 2100 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2388 2102 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2393 2104 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2393 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2398 [r14:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
     stack:   |r13|DWORD           |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2399 2106 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2402 2108 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2405 2112 JUMP ~[] destination: B195 -> B197  <||@
  Comment 2410 block B109 null  <||@
  Comment 2410 1218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2410 1156 rsi|DWORD = MOVE input: int[-320097|0xfffffffffffb1d9f]  <||@
  Comment 2415 1220 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 2422 1222 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2429 1224 DEOPT info [bci:256, 5, 4, 1, 4]  <||@
  Comment 2429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2434 [rdx:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2435 block B115 null  <||@
  Comment 2435 1290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2435 1286 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2440 1292 rcx|DWORD[.] = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 2444 1294 rax|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2444 [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2444 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2451 1296 rbp|DWORD = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 2455 1298 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 2457 1300 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B206  <||@
  Comment 2463 block B116 null  <||@
  Comment 2463 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2463 1304 r13|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:283, 5, 4, 1, 4]  <||@
  Comment 2463 [rcx:0, rdx:0, r9:0, stack:8, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2463 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2467 1306 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2470 1308 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B116 -> B117 falseDestination: B116 -> B205  <||@
  Comment 2476 block B117 null  <||@
  Comment 2476 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2476 1312 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2479 1314 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B117 -> B118 falseDestination: B117 -> B204  <||@
  Comment 2485 block B118 null  <||@
  Comment 2485 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2485 1318 r11|DWORD = MOV [r9|QWORD[.] + 20] size: DWORD  <||@
  Comment 2489 1320 CMP r11|DWORD y: 2 size: DWORD  <||@
  Comment 2493 1322 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120  <||@
  Comment 2499 block B120 null  <||@
  Comment 2499 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2499 1338 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 2502 1340 r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2508 1342 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2511 1344 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B120 -> B121 falseDestination: B120 -> B203  <||@
  Comment 2517 block B121 null  <||@
  Comment 2517 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2517 1348 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6ad01eeb encoding: base: 0 shift: 3  <||@
  Comment 2521 1350 r10|DWORD = MOVSX [rcx|QWORD[.] + rbp|DWORD * 2 + 16] size: DWORD  <||@
  Comment 2527 1352 MOV (x: [rdx|QWORD[.] + rdi|QWORD * 1], y: r10|DWORD) size: WORD  <||@
  Comment 2532 1354 MOV [rdx|QWORD[.] + rbx|QWORD * 1] y: 46 size: WORD  <||@
  Comment 2538 1356 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2541 1358 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 2543 1360 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2545 1362 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B121 -> B125 falseDestination: B121 -> B123  <||@
  Comment 2551 block B123 null  <||@
  Comment 2551 1370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2551 1372 rdi|DWORD = SUB (x: r13|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2557 1374 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2560 1376 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B123 -> B125 falseDestination: B123 -> B126  <||@
  Comment 2566 block B126 null  <||@
  Comment 2566 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2566 1394 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2571 1396 stack:68|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2576 1398 stack:112|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2579 1400 rcx|QWORD[*] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2579 1402 r9|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2582 1404 rdi|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 2585 1406 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2588 1408 rdi|QWORD = LEA [rcx|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2593 1410 rsi|QWORD = LEA [r9|QWORD[*] + r8|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2598 1412 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2601 1414 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2601 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2607 1416 r11|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 2612 1418 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2617 1420 MOV [r11|QWORD[.] + r14|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2625 1422 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 2631 1424 CMP stack:112|DWORD y: 1 size: DWORD  <||@
  Comment 2635 1430 r13|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2640 1426 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B126 -> B127 falseDestination: B126 -> B130  <||@
  Comment 2646 block B127 null  <||@
  Comment 2646 1428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2646 1432 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2649 1434 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 2655 block B128 null  <||@
  Comment 2655 1436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2655 1438 MOV [r11|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2663 1440 rax|DWORD = LEA [r14|DWORD + 2] size: DWORD  <||@
  Comment 2667 1442 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2672 1444 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:112|DWORD) size: DWORD  <||@
  Comment 2675 1446 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2677 1448 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2680 1450 JUMP ~[] destination: B128 -> B131  <||@
  Comment 2680 block B131 null  <||@
  Comment 2680 1470 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2680 1472 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2683 1474 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B131 -> B132 falseDestination: B131 -> B201  <||@
  Comment 2689 block B132 null  <||@
  Comment 2689 1476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2689 1478 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2695 1480 CMP rsi|DWORD y: 10 size: DWORD  <||@
  Comment 2698 1482 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134  <||@
  Comment 2704 block B133 null  <||@
  Comment 2704 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2704 1486 rax|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 2707 1488 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2713 1490 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2718 1492 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2721 1494 JUMP ~[] destination: B133 -> B139  <||@
  Comment 2726 block B66 null  <||@
  Comment 2726 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2726 826 rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f]  <||@
  Comment 2731 828 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2736 830 JUMP ~[] destination: B66 -> B74  <||@
  Comment 2736 block B74 null  <||@
  Comment 2736 920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2736 922 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2743 924 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2750 926 DEOPT info [bci:43, 5, 4, 1, 4]  <||@
  Comment 2750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2755 [rdx:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                   |1             |2          |3  |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2756 block B68 null  <||@
  Comment 2756 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2756 842 rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f]  <||@
  Comment 2761 844 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2766 846 JUMP ~[] destination: B68 -> B74  <||@
  Comment 2768 block B70 null  <||@
  Comment 2768 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2768 858 rax|DWORD = MOVE input: int[-292961|0xfffffffffffb879f]  <||@
  Comment 2773 860 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2778 862 JUMP ~[] destination: B70 -> B74  <||@
  Comment 2780 block B143 null  <||@
  Comment 2780 1634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2780 1636 stack:104|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2785 1638 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2785 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2795 1640 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2800 1642 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2805 1644 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8, 4, 1, 4]  <||@
  Comment 2805 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2810 [stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
     stack:   |r13|DWORD           |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2811 1646 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2811 1648 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2811 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2821 1650 JUMP ~[] destination: B143 -> B145  <||@
  Comment 2826 block B75 null  <||@
  Comment 2826 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2826 930 rcx|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 2829 932 stack:40|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2834 934 rdi|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2837 936 JUMP ~[] destination: B75 -> B76  <||@
  Comment 2842 block B130 null  <||@
  Comment 2842 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 1464 rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 2845 1466 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 2847 1468 JUMP ~[] destination: B130 -> B131  <||@
  Comment 2852 block B45 null  <||@
  Comment 2852 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2852 610 rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f]  <||@
  Comment 2857 612 JUMP ~[] destination: B45 -> B74  <||@
  Comment 2859 block B47 null  <||@
  Comment 2859 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2859 624 rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f]  <||@
  Comment 2864 626 JUMP ~[] destination: B47 -> B74  <||@
  Comment 2869 block B49 null  <||@
  Comment 2869 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 638 rax|DWORD = MOVE input: int[-267873|0xfffffffffffbe99f]  <||@
  Comment 2874 640 JUMP ~[] destination: B49 -> B74  <||@
  Comment 2879 block B58 null  <||@
  Comment 2879 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2879 688 rsi|DWORD = MOVE stack:112|DWORD moveKind: DWORD  <||@
  Comment 2882 742 MOV [r15|QWORD + 668] y: -281953 size: DWORD  <||@
  Comment 2893 744 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2900 746 DEOPT info [bci:145, 5, 4, 1, 4]  <||@
  Comment 2900 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2905 [rdx:0, stack:8, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                   |1             |2          |3          |4 
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rsi|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2906 block B36 null  <||@
  Comment 2906 500 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2906 502 CMP [rdx|QWORD[.] + 12] y: 0 size: DWORD state [bci:5, 1, 1, 4]  <||@
  Comment 2906 [rdx:0, r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 2906 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2910 504 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 2916 block B38 null  <||@
  Comment 2916 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2916 516 MOV [rdx|QWORD[.] + 16] y: 45 size: WORD  <||@
  Comment 2922 518 rsi|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2926 520 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 2929 522 BRANCH trueDestinationProbability: 0.8239147472715149 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 2935 block B39 null  <||@
  Comment 2935 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2935 526 rdi|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2942 528 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2949 530 rcx|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2956 532 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2961 534 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2967 536 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2973 538 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2979 540 JUMP ~[] destination: B39 -> B76  <||@
  Comment 2984 block B134 null  <||@
  Comment 2984 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2984 1498 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2987 1500 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B200  <||@
  Comment 2993 block B135 null  <||@
  Comment 2993 1502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2993 1504 r9|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2997 1506 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 3000 1508 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B135 -> B136 falseDestination: B135 -> B137  <||@
  Comment 3006 block B136 null  <||@
  Comment 3006 1510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3006 1512 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3008 1514 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3013 1516 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3015 1518 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3018 1520 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3021 1522 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3027 1524 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3032 1526 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3034 1528 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3036 1530 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3038 1532 rsi|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3041 1534 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 3047 1536 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3052 1538 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3055 1540 JUMP ~[] destination: B136 -> B139  <||@
  Comment 3060 block B20 null  <||@
  Comment 3060 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3060 288 stack:88|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3065 290 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3070 292 stack:96|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3074 294 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3079 296 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3085 298 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3090 300 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3090 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3100 302 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3103 304 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3105 306 stack:104|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3110 308 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:38, 2, 16, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3110 9  <||@
  Comment 3111 {HotSpotMethod<ThreadLocal$ThreadLocalMap.getEntryAfterMiss(ThreadLocal, int, ThreadLocal$ThreadLocalMap$Entry)>}  <||@
  Comment 3116 [stack:8, stack:56]at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:419) [bci: 38, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:298) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.ThreadLocal.get(ThreadLocal.java:163) [bci: 16, duringCall: true, rethrow: false]
              |0                                     |1  |2                   |3  |4 
     locals:  |Object[FloatingDecimal$1@1399508980]  |-  |stack:104|QWORD[.]  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:88|QWORD  |-  |stack:96|DWORD  |stack:92|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3117 310 TEST (x: rax|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 3120 312 BRANCH trueDestinationProbability: 1.364582267253437E-4 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B23  <||@
  Comment 3126 block B23 null  <||@
  Comment 3126 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3126 348 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3129 350 r10|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3134 352 rdi|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 3139 354 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3144 356 rbx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 3148 358 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3153 360 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3159 362 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3164 364 JUMP ~[] destination: B23 -> B26  <||@
  Comment 3169 block B125 null  <||@
  Comment 3169 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3169 1366 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3172 1386 MOV [r15|QWORD + 668] y: -339553 size: DWORD  <||@
  Comment 3183 1388 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3190 1390 DEOPT info [bci:306, 5, 4, 1, 4]  <||@
  Comment 3190 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3195 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3196 block B137 null  <||@
  Comment 3196 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3196 1544 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3199 1546 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B137 -> B138 falseDestination: B137 -> B199  <||@
  Comment 3205 block B138 null  <||@
  Comment 3205 1548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3205 1550 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3207 1552 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 3212 1554 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3214 1556 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 3217 1558 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3220 1560 MOV (x: [r11|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 3226 1562 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 3229 1564 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 3231 1566 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 3233 1568 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 3238 1570 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3240 1572 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 3243 1574 rcx|DWORD = SHR rsi|DWORD y: 31 size: DWORD  <||@
  Comment 3248 1576 rdx|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3250 1578 rcx|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 3253 1580 MOV (x: [r11|QWORD[.] + r8|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3259 1582 rcx|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 3264 1584 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 3266 1586 rcx|DWORD = ADD (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 3268 1588 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 3270 1590 rcx|DWORD = LEA [rsi|DWORD + 48] size: DWORD  <||@
  Comment 3273 1592 MOV (x: [r11|QWORD[.] + r9|DWORD * 2 + 16], y: rcx|DWORD) size: WORD  <||@
  Comment 3279 1594 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 3283 1596 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3288 1598 JUMP ~[] destination: B138 -> B139  <||@
  Comment 3293 block B40 null  <||@
  Comment 3293 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3293 544 r11|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 3299 546 rax|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 3306 548 rdi|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 3313 550 rbx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3320 552 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3323 554 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3326 556 r8|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 3332 558 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3338 560 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3344 562 JUMP ~[] destination: B40 -> B41  <||@
  Comment 3349 block B9 null  <||@
  Comment 3349 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3349 142 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3354 144 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3360 146 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3365 148 r11|QWORD = AND (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3368 150 rsi|DWORD = LZCNT r11|QWORD size: QWORD  <||@
  Comment 3373 152 rcx|DWORD = MOVE input: int[-1011|0xfffffffffffffc0d]  <||@
  Comment 3378 154 r8|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3384 156 rcx|DWORD = LEA [rsi|DWORD - 11] size: DWORD  <||@
  Comment 3387 158 r11|QWORD = SHL (x: r11|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 3390 160 r9|DWORD = MOVE input: int[64|0x40]  <||@
  Comment 3396 162 r9|DWORD = SUB (x: r9|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3399 164 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 3402 166 BRANCH trueDestinationProbability: 1.7057423817280878E-5 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 3408 block B11 null  <||@
  Comment 3408 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3408 180 rcx|DWORD = MOVE input: int[12|0xc]  <||@
  Comment 3413 182 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 3415 184 rdi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3418 186 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3421 188 rbx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3424 190 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3429 194 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3434 196 JUMP ~[] destination: B11 -> B18  <||@
  Comment 3439 block B7 null  <||@
  Comment 3439 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3439 124 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3442 126 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3448 128 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3453 130 JUMP ~[] destination: B7 -> B36  <||@
  Comment 3458 block B16 null  <||@
  Comment 3458 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3458 236 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3462 238 stack:68|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 3470 240 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3475 242 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3480 244 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3486 246 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3491 248 JUMP ~[] destination: B16 -> B22  <||@
  Comment 3491 block B22 null  <||@
  Comment 3491 324 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 3491 326 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FloatingDecimal$1@1399508980]  <||@
  Comment 3491 {Object[FloatingDecimal$1@1399508980]}  <||@
  Comment 3501 328 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ThreadLocal.setInitialValue()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34, 3, 156, 2, 1, 1, 4]  <||@
  Comment 3501 9  <||@
  Comment 3503 {HotSpotMethod<ThreadLocal.setInitialValue()>}  <||@
  Comment 3508 [stack:56]at java.lang.ThreadLocal.get(ThreadLocal.java:170) [bci: 34, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 3, duringCall: true, rethrow: false]
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6               |7  |8               |9               |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |stack:80|QWORD  |-  |stack:64|DWORD  |stack:68|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3509 330 rcx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3513 332 r8|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 3518 334 r11|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 3523 336 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3526 338 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3531 340 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3537 342 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3542 344 JUMP ~[] destination: B22 -> B27  <||@
  Comment 3547 block B21 null  <||@
  Comment 3547 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3547 -1 [stack:64|DWORD, stack:68|DWORD] = MULTISTACKMOVE (inputs: [stack:96|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 3573 320 stack:80|QWORD = STACKMOVE stack:88|QWORD size: QWORD  <||@
  Comment 3583 322 JUMP ~[] destination: B21 -> B22  <||@
  Comment 3585 block B10 null  <||@
  Comment 3585 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3585 170 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3590 172 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3595 174 stack:80|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3600 176 JUMP ~[] destination: B10 -> B22  <||@
  Comment 3602 block B37 null  <||@
  Comment 3602 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3602 508 MOV [r15|QWORD + 668] y: -367643 size: DWORD  <||@
  Comment 3613 510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3620 512 DEOPT info [bci:5, 1, 1, 4]  <||@
  Comment 3620 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3625 [r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 5, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |r10|QWORD[.]  |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3626 block B89 null  <||@
  Comment 3626 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3626 1038 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3629 1044 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@710620907]  <||@
  Comment 3629 {Object[d.a@710620907]}  <||@
  Comment 3639 1046 MOV [r15|QWORD + 668] y: -307739 size: DWORD  <||@
  Comment 3650 1048 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 3657 1050 DEOPT info [bci:229, 5, 4, 1, 4]  <||@
  Comment 3657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3662 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2         |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r8|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3663 block B209 null  <||@
  Comment 3663 2244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3663 2246 r10|DWORD = MOVE input: int[-247315|0xfffffffffffc39ed]  <||@
  Comment 3669 2254 JUMP ~[] destination: B209 -> B211  <||@
  Comment 3669 block B211 null  <||@
  Comment 3669 2268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3669 2260 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3674 2262 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3680 2264 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3685 2270 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3692 2272 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3699 2274 DEOPT info [bci:150, 2, 1, 1, 4]  <||@
  Comment 3699 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3704 [stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1781) [bci: 150, duringCall: false, rethrow: false]
              |0  |1  |2           |3  |4  |5               |6          |7  |8          |9          |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |stack:60|DWORD  |rdi|QWORD  |-  |rcx|DWORD  |r11|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3705 block B112 null  <||@
  Comment 3705 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3705 1270 r8|DWORD = MOVE input: int[-303131|0xfffffffffffb5fe5]  <||@
  Comment 3711 1274 JUMP ~[] destination: B112 -> B113  <||@
  Comment 3711 block B113 null  <||@
  Comment 3711 1276 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3711 1272 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3714 1278 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3721 1280 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3728 1282 DEOPT info [bci:197, 5, 4, 1, 4]  <||@
  Comment 3728 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3733 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3734 block B141 null  <||@
  Comment 3734 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3734 1620 r10|DWORD = MOVE input: int[-363283|0xfffffffffffa74ed]  <||@
  Comment 3740 1622 JUMP ~[] destination: B141 -> B148  <||@
  Comment 3740 block B148 null  <||@
  Comment 3740 1696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3740 1698 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3747 1700 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3754 1702 DEOPT info [bci:8, 4, 1, 4]  <||@
  Comment 3754 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3759 [r14:0, stack:56]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
     stack:   |r13|DWORD     |  
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3760 block B210 null  <||@
  Comment 3760 2256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3760 2258 r10|DWORD = MOVE input: int[-244251|0xfffffffffffc45e5]  <||@
  Comment 3766 2266 JUMP ~[] destination: B210 -> B211  <||@
  Comment 3768 block B111 null  <||@
  Comment 3768 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3768 1262 r8|DWORD = MOVE input: int[-305179|0xfffffffffffb57e5]  <||@
  Comment 3774 1266 JUMP ~[] destination: B111 -> B113  <||@
  Comment 3776 block B201 null  <||@
  Comment 3776 2162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3776 2164 r8|DWORD = MOVE input: int[-388123|0xfffffffffffa13e5]  <||@
  Comment 3782 2166 JUMP ~[] destination: B201 -> B202  <||@
  Comment 3782 block B202 null  <||@
  Comment 3782 2168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3782 2170 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3789 2172 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3796 2174 DEOPT info [bci:396, 5, 4, 1, 4]  <||@
  Comment 3796 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3801 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |r11|QWORD[.]  |r10|DWORD  |rsi|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3802 block B73 null  <||@
  Comment 3802 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3802 914 rax|DWORD = MOVE input: int[-297243|0xfffffffffffb76e5]  <||@
  Comment 3807 916 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 3812 918 JUMP ~[] destination: B73 -> B74  <||@
  Comment 3817 block B204 null  <||@
  Comment 3817 2188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3817 2190 r8|DWORD = MOVE input: int[-330011|0xfffffffffffaf6e5]  <||@
  Comment 3823 2198 JUMP ~[] destination: B204 -> B207  <||@
  Comment 3823 block B207 null  <||@
  Comment 3823 2224 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3823 2216 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3826 2218 xmm0|DOUBLE = VMOVE stack:48|DOUBLE  <||@
  Comment 3832 2220 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 3837 2226 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 3844 2228 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3851 2230 DEOPT info [bci:283, 5, 4, 1, 4]  <||@
  Comment 3851 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3856 [rsi:0, r9:0, r11:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0            |1             |2          |3  |4 
     locals:  |r9|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r9|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |xmm0|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 3857 block B8 null  <||@
  Comment 3857 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3857 134 r10|DWORD = MOVE input: int[-237587|0xfffffffffffc5fed]  <||@
  Comment 3863 138 JUMP ~[] destination: B8 -> B14  <||@
  Comment 3863 block B14 null  <||@
  Comment 3863 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3863 208 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3868 214 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3875 216 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3882 218 DEOPT info [bci:0]  <||@
  Comment 3882 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3887 [stack:56]at java.lang.Double.toString(Double.java:644) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3888 block B60 null  <||@
  Comment 3888 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3888 784 rax|DWORD = MOVE input: int[-271643|0xfffffffffffbdae5]  <||@
  Comment 3893 786 JUMP ~[] destination: B60 -> B74  <||@
  Comment 3898 block B200 null  <||@
  Comment 3898 2156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3898 2158 r8|DWORD = MOVE input: int[-386331|0xfffffffffffa1ae5]  <||@
  Comment 3904 2160 JUMP ~[] destination: B200 -> B202  <||@
  Comment 3906 block B199 null  <||@
  Comment 3906 2150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3906 2152 r8|DWORD = MOVE input: int[-358171|0xfffffffffffa88e5]  <||@
  Comment 3912 2154 JUMP ~[] destination: B199 -> B202  <||@
  Comment 3917 block B205 null  <||@
  Comment 3917 2200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3917 2202 r8|DWORD = MOVE input: int[-328475|0xfffffffffffafce5]  <||@
  Comment 3923 2210 JUMP ~[] destination: B205 -> B207  <||@
  Comment 3925 block B129 null  <||@
  Comment 3925 1452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3925 1454 MOV [r15|QWORD + 668] y: -360731 size: DWORD  <||@
  Comment 3936 1456 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3943 1458 DEOPT info [bci:363, 5, 4, 1, 4]  <||@
  Comment 3943 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3948 [r11:0, stack:56, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:40|QWORD[.]  |r11|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 4, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 3949 block B72 null  <||@
  Comment 3949 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3949 906 rax|DWORD = MOVE input: int[-299547|0xfffffffffffb6de5]  <||@
  Comment 3954 908 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 3959 910 JUMP ~[] destination: B72 -> B74  <||@
  Comment 3964 block B119 null  <||@
  Comment 3964 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3964 1326 r8|DWORD = MOVE input: int[-331027|0xfffffffffffaf2ed]  <||@
  Comment 3970 1334 JUMP ~[] destination: B119 -> B207  <||@
  Comment 3975 block B147 null  <||@
  Comment 3975 1690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3975 1692 r10|DWORD = MOVE input: int[-365843|0xfffffffffffa6aed]  <||@
  Comment 3981 1694 JUMP ~[] destination: B147 -> B148  <||@
  Comment 3986 block B208 null  <||@
  Comment 3986 2232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3986 2234 stack:48|DOUBLE = VMOVE xmm0|DOUBLE  <||@
  Comment 3992 2236 stack:56|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3997 2238 MOV [r15|QWORD + 668] y: -250147 size: DWORD  <||@
  Comment 4008 2240 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4015 2242 DEOPT info [bci:6, 156, 2, 1, 1, 4]  <||@
  Comment 4015 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4020 [r10:0, stack:56]at sun.misc.FloatingDecimal.getBinaryToASCIIBuffer(FloatingDecimal.java:986) [bci: 6, duringCall: false, rethrow: false]
             |0            
     stack:  |r10|QWORD[.] 
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1782) [bci: 156, duringCall: true, rethrow: false]
              |0  |1  |2           |3  |4  |5         |6          |7  |8          |9         |10  |11 
     locals:  |-  |-  |int[1|0x1]  |-  |-  |r9|DWORD  |r11|QWORD  |-  |rcx|DWORD  |r8|DWORD  |-   |-  
  at sun.misc.FloatingDecimal.getBinaryToASCIIConverter(FloatingDecimal.java:1738) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at sun.misc.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:70) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:204) [bci: 1, duringCall: true, rethrow: false]
              |0                |1 
     locals:  |stack:48|DOUBLE  |- 
  at java.lang.Double.toString(Double.java:644) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.]   <||@
  Comment 4021 block B206 null  <||@
  Comment 4021 2212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4021 2214 r8|DWORD = MOVE input: int[-325147|0xfffffffffffb09e5]  <||@
  Comment 4027 2222 JUMP ~[] destination: B206 -> B207  <||@
  Comment 4032 block B13 null  <||@
  Comment 4032 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4032 206 r10|DWORD = MOVE input: int[-237331|0xfffffffffffc60ed]  <||@
  Comment 4038 210 JUMP ~[] destination: B13 -> B14  <||@
  Comment 4043 block B62 null  <||@
  Comment 4043 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4043 796 rax|DWORD = MOVE input: int[-295699|0xfffffffffffb7ced]  <||@
  Comment 4048 798 stack:104|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 800 JUMP ~[] destination: B62 -> B74  <||@
  Comment 4058 block B203 null  <||@
  Comment 4058 2176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4058 2178 r8|DWORD = MOVE input: int[-342811|0xfffffffffffac4e5]  <||@
  Comment 4064 2186 JUMP ~[] destination: B203 -> B207  <||@
  Comment 4069 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4069 4  <||@
  Comment 4075 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4075 5  <||@
  HexCodeFile>>> <|@
end_nmethod
