begin_compilation
  name " HotSpotCompilation-8847[java.util.LinkedList.linkLast(Object)]"
  method "HotSpotCompilation-8847[java.util.LinkedList.linkLast(Object)]"
  date 1527005198730
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j100 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j120 
=== Usages ===
v187 v188 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j120  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
j120 v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
=== Succesors ===
next: j121 
=== Usages ===
j170 j126 v194 
=== Predecessor ===
j100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 #next: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
=== Succesors ===
next: v108 
=== Usages ===
v105 
=== Predecessor ===
j120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 1]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j120 
y: j51 
=== Succesors ===
=== Usages ===
v105 v122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j120 y: j51  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j121 
y: j170 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j121 y: j170  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i41 a113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v182 v183 v185 v184 j153 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 a86 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v106 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
j121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v106 #falseSuccessor: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a113 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a113  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.linkLast(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 141
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v98 i111 i30 
=== Succesors ===
next: j114 
=== Usages ===
j114 
=== Predecessor ===
v106 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v98 i111 i30 #next: j114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a113 
=== Succesors ===
next: v127 
=== Usages ===
j126 
=== Predecessor ===
a113 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a113 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
j114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
value: j170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 value: j170 stateAfter: - lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v194 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v194 #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j126 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v124 
values: j120 j114 
=== Succesors ===
=== Usages ===
v191 v190 a83 v195 v196 v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v124 values: j120 j114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v125 v127 
=== Succesors ===
next: a83 
=== Usages ===
j126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v125 v127 #next: a83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j126 
=== Succesors ===
next: j138 
=== Usages ===
a91 
=== Predecessor ===
v124 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j126 #next: j138  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v132 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j133 
index: - 
=== Succesors ===
=== Usages ===
j138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j133 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
=== Succesors ===
next: v139 
=== Usages ===
v139 
=== Predecessor ===
a83 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v189 #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
value: j138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
j138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 value: j138 stateAfter: - lastLocationAccess: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
value: v174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 value: v174 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
value: a86 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 value: a86 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
value: i148 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a179 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 value: i148 stateAfter: - lastLocationAccess: - #next: a179  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a179 v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
=== Succesors ===
next: v152 
=== Usages ===
a54 v68 v152 v186 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v197 
value: a179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a91 
=== Usages ===
=== Predecessor ===
a179 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v197 value: a179 stateAfter: - lastLocationAccess: - #next: a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a83 
=== Succesors ===
next: v92 
=== Usages ===
a55 
=== Predecessor ===
v152 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a83 #next: v92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
a91 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid a55 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
op: Compress
stamp: n -
=== Inputs ===
value: a91 
=== Succesors ===
=== Usages ===
v56 v59 v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
value: a55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j153 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 value: a55 stateAfter: - lastLocationAccess: - #next: j153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v159 
=== Usages ===
j155 
=== Predecessor ===
v56 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j155 j164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j153 
y: i154 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j153 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j155 
index: j158 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j155 index: j158  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
value: i160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i180 
=== Usages ===
=== Predecessor ===
j153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v192 value: i160 stateAfter: - lastLocationAccess: - #next: i180  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i180 v67 v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
=== Succesors ===
next: i181 
=== Usages ===
i44 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v185 #next: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i181 v63 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 40]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
=== Succesors ===
next: v19 
=== Usages ===
i41 
=== Predecessor ===
i180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 44]
stamp: i32
=== Inputs ===
x: i181 
y: i30 
=== Succesors ===
=== Usages ===
v74 v63 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i181 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 54]
stamp: i32
=== Inputs ===
x: i180 
y: i30 
=== Succesors ===
=== Usages ===
v76 v67 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i180 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
stamp: void
=== Inputs ===
value: a179 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a179  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:144) [bci: 22]
stamp: void
trueSuccessorProbability: 0.4978248833346516
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602639635754232710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:145) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:145) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
value: a55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 value: a55 stateAfter: - lastLocationAccess: - #next: v63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 value: i41 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: i44 stateAfter: - lastLocationAccess: - #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:150) [bci: 58]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602698410881854013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a179 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
value: a55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j163 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 value: a55 stateAfter: - lastLocationAccess: - #next: j163  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 1]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a179 
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a54 
=== Succesors ===
next: v167 
=== Usages ===
j164 
=== Predecessor ===
v72 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a54 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j163 
y: i154 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j163 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j164 
index: j158 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j164 index: j158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: i160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
j163 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: i160 stateAfter: - lastLocationAccess: - #next: v74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 value: i41 stateAfter: - lastLocationAccess: - #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: i44 stateAfter: - lastLocationAccess: - #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:150) [bci: 58]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j100 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j120 
=== Usages ===
v187 v188 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j120  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
j120 v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j120 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
=== Succesors ===
next: j121 
=== Usages ===
j170 j126 v194 
=== Predecessor ===
j100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 #next: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j100 
index: - 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j100 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
=== Succesors ===
next: v108 
=== Usages ===
v105 
=== Predecessor ===
j120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid j51 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 1]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j120 
y: j51 
=== Succesors ===
=== Usages ===
v105 v122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j120 y: j51  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j121 
y: j170 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j121 y: j170  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 i41 a113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v182 v183 v185 v184 j153 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 a86 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v105 
=== Succesors ===
trueSuccessor: v106 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
j121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v105 #trueSuccessor: v106 #falseSuccessor: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34b758f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a113 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a113  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.linkLast(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 141
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v98 i111 i30 
=== Succesors ===
next: j114 
=== Usages ===
j114 
=== Predecessor ===
v106 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v98 i111 i30 #next: j114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j114 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a113 
=== Succesors ===
next: v127 
=== Usages ===
j126 
=== Predecessor ===
a113 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a113 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
j114 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
value: j170 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 value: j170 stateAfter: - lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
result [v2|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v194 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v194 #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j126 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v124 
values: j120 j114 
=== Succesors ===
=== Usages ===
v191 v190 a83 v195 v196 v197 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v124 values: j120 j114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v125 v127 
=== Succesors ===
next: a83 
=== Usages ===
j126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v125 v127 #next: a83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a83 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j126 
=== Succesors ===
next: j138 
=== Usages ===
a91 
=== Predecessor ===
v124 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j126 #next: j138  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v132 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v8|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j133 
index: - 
=== Succesors ===
=== Usages ===
j138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j133 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j138 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
=== Succesors ===
next: v139 
=== Usages ===
v139 
=== Predecessor ===
a83 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v189 #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
result [v6|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
value: j138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
j138 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 value: j138 stateAfter: - lastLocationAccess: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result [v6|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
value: v174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 value: v174 stateAfter: - lastLocationAccess: - #next: v147  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
result [v6|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
value: a86 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 value: a86 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result [v6|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
value: i148 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a179 
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 value: i148 stateAfter: - lastLocationAccess: - #next: a179  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a179 v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a179 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
=== Succesors ===
next: v152 
=== Usages ===
a54 v68 v152 v186 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
result [v6|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j126 
index: - 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v197 
value: a179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a91 
=== Usages ===
=== Predecessor ===
a179 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v197 value: a179 stateAfter: - lastLocationAccess: - #next: a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a91 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a83 
=== Succesors ===
next: v92 
=== Usages ===
a55 
=== Predecessor ===
v152 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a83 #next: v92  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
a91 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid a55 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
op: Compress
stamp: n -
=== Inputs ===
value: a91 
=== Succesors ===
=== Usages ===
v56 v59 v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
value: a55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j153 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 value: a55 stateAfter: - lastLocationAccess: - #next: j153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v159 
=== Usages ===
j155 
=== Predecessor ===
v56 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j155 j164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j155 <|@
result v13|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j153 
y: i154 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j153 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid j158 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
result [v13|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j155 
index: j158 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j155 index: j158  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 v167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:143) [bci: 18]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
value: i160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i180 
=== Usages ===
=== Predecessor ===
j153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v192 value: i160 stateAfter: - lastLocationAccess: - #next: i180  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i180 v67 v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i180 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
=== Succesors ===
next: i181 
=== Usages ===
i44 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v185 #next: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i181 v63 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i181 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 40]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
=== Succesors ===
next: v19 
=== Usages ===
i41 
=== Predecessor ===
i180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 44]
stamp: i32
=== Inputs ===
x: i181 
y: i30 
=== Succesors ===
=== Usages ===
v74 v63 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i181 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 54]
stamp: i32
=== Inputs ===
x: i180 
y: i30 
=== Succesors ===
=== Usages ===
v76 v67 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i180 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
stamp: void
=== Inputs ===
value: a179 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a179  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:144) [bci: 22]
stamp: void
trueSuccessorProbability: 0.4978248833346516
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*]], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 12], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 20], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v13|QWORD[*] + v14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4978248833346516 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602639635754232710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:145) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:145) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
value: a55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 value: a55 stateAfter: - lastLocationAccess: - #next: v63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 value: i41 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: i44 stateAfter: - lastLocationAccess: - #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:150) [bci: 58]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602698410881854013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v11|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a179 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
value: a55 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j163 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 value: a55 stateAfter: - lastLocationAccess: - #next: j163  <|@  <|@
f <@~|@floating>@ <|@
tid a54 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 1]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a179 
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j163 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a54 
=== Succesors ===
next: v167 
=== Usages ===
j164 
=== Predecessor ===
v72 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a54 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j163 
y: i154 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j163 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
result [v20|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j164 
index: j158 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j164 index: j158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.linkLast(LinkedList.java:147) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
value: i160 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
j163 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 value: i160 stateAfter: - lastLocationAccess: - #next: v74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:148) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 value: i41 stateAfter: - lastLocationAccess: - #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:149) [bci: 55]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: i44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: i44 stateAfter: - lastLocationAccess: - #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.linkLast(LinkedList.java:150) [bci: 58]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[.] * 8 + 16], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = SHR v19|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v20|QWORD[*] + v14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34b758f1 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = LEA [v2|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v2|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE v6|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*]], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 12], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[*] + 20], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = COMPRESSPOINTER (input: v7|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v13|QWORD[*] + v14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, ~y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4978248833346516 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602698410881854013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|DWORD[.] * 8 + 16], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = SHR v19|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v20|QWORD[*] + v14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602639635754232710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v4|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // last:java.util.LinkedList$Node
     4: astore_2      
     5: new           #6          // java.util.LinkedList$Node
     8: dup           
     9: aload_2       
    10: aload_1       
    11: aconst_null   
    12: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    15: astore_3      
    16: aload_0       
    17: aload_3       
    18: putfield      #6          // last:java.util.LinkedList$Node
    21: aload_2       
    22: ifnonnull     33
    25: aload_0       
    26: aload_3       
    27: putfield      #4          // first:java.util.LinkedList$Node
    30: goto          38
    33: aload_2       
    34: aload_3       
    35: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #8          // java.util.AbstractList.modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #8          // java.util.AbstractList.modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34b758f1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   56  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   60  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [r13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.4978248833346516 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602698410881854013
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [rcx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602639635754232710
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // last:java.util.LinkedList$Node
     4: astore_2      
     5: new           #6          // java.util.LinkedList$Node
     8: dup           
     9: aload_2       
    10: aload_1       
    11: aconst_null   
    12: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    15: astore_3      
    16: aload_0       
    17: aload_3       
    18: putfield      #6          // last:java.util.LinkedList$Node
    21: aload_2       
    22: ifnonnull     33
    25: aload_0       
    26: aload_3       
    27: putfield      #4          // first:java.util.LinkedList$Node
    30: goto          38
    33: aload_2       
    34: aload_3       
    35: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #8          // java.util.AbstractList.modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #8          // java.util.AbstractList.modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34b758f1 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   38  <|@ instruction r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   54  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   56  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   60  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [r13|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.4978248833346516 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602698410881854013
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [rcx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4602639635754232710
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  104  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // last:java.util.LinkedList$Node
     4: astore_2      
     5: new           #6          // java.util.LinkedList$Node
     8: dup           
     9: aload_2       
    10: aload_1       
    11: aconst_null   
    12: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    15: astore_3      
    16: aload_0       
    17: aload_3       
    18: putfield      #6          // last:java.util.LinkedList$Node
    21: aload_2       
    22: ifnonnull     33
    25: aload_0       
    26: aload_3       
    27: putfield      #4          // first:java.util.LinkedList$Node
    30: goto          38
    33: aload_2       
    34: aload_3       
    35: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #8          // java.util.AbstractList.modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #8          // java.util.AbstractList.modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee4c8bf2498b7760488d5618493b57700f87be000000498957600f1886d8000000488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde49c1ee034489760c44896610418b4d18894e1448c1ea0341895518498bf548c1ee0949ba00e01b170100000046882416418b750c41bb0100000045035d10ffc685c90f842e0000008914cd1000000048c1e10348c1e9094688241145895d104189750c488b6c24104883c418850500000000c5f877c34189551445895d104189750c488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0e92bffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34b758f1 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 58 12 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 62 14 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B2 null  <||@
  Comment 72 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 20 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 76 22 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 83 -1 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 83 24 JUMP ~[] destination: B2 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 26 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 83 28 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 86 30 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 96 32 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 103 34 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 106 36 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 106 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 113 38 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3  <||@
  Comment 117 40 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 121 42 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 125 44 rcx|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 129 46 MOV (x: [rsi|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 132 48 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3  <||@
  Comment 136 50 MOV (x: [r13|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 140 52 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 147 54 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 157 56 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 161 58 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 165 60 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 171 62 r11|DWORD = ADD (x: r11|DWORD, ~y: [r13|QWORD[.] + 16]) size: DWORD  <||@
  Comment 175 64 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 177 66 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 179 68 BRANCH trueDestinationProbability: 0.4978248833346516 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 185 block B5 null  <||@
  Comment 185 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 72 MOV (x: [rcx|DWORD[.] * 8 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 192 74 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3  <||@
  Comment 196 76 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 200 78 MOVB (x: [rcx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 204 80 MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 208 82 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 212 84 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 221 12  <||@
  Comment 231 block B4 null  <||@
  Comment 231 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 231 88 MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 235 90 MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 239 92 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 243 94 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 252 12  <||@
  Comment 262 block B1 null  <||@
  Comment 262 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 98 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 262 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 272 102 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 277 104 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 282 106 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 282 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 287 [r13:0, r14:0]at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 288 -1 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 291 110 JUMP ~[] destination: B1 -> B3  <||@
  Comment 296 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 296 4  <||@
  Comment 302 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 302 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8847[java.util.LinkedList.linkLast(Object)]"
  method "HotSpotCompilation-8847[java.util.LinkedList.linkLast(Object)]"
  date 1527005198814
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106bdac20 448b560849c1e203493bc20f852fb2c2ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee4c8bf2498b7760488d5618493b57700f87be000000498957600f1886d8000000488bd648b9903904c007000000488b89a800000048890ec74608328700f849c1ee034489760c44896610418b4d18894e1448c1ea0341895518498bf548c1ee0949ba00e01b170100000046882416418b750c41bb0100000045035d10ffc685c90f842e0000008914cd1000000048c1e10348c1e9094688241145895d104189750c488b6c24104883c41885050343cbfdc5f877c34189551445895d104189750c488b6c24104883c4188505e442cbfdc5f877c348be680b00c007000000ba02000000b901000000e8a1c03b0090488bf0e92bffffffe8d3f8060090e8adc7c2ff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@34b758f1 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 58 12 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 62 14 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B2 null  <||@
  Comment 72 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 20 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 76 22 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 83 -1 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 83 24 JUMP ~[] destination: B2 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 26 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 83 28 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 86 30 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 96 32 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 103 34 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 106 36 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 106 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 113 38 r14|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3  <||@
  Comment 117 40 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 121 42 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 125 44 rcx|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 129 46 MOV (x: [rsi|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 132 48 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3  <||@
  Comment 136 50 MOV (x: [r13|QWORD[.] + 24], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 140 52 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 147 54 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 157 56 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 161 58 rsi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 165 60 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 171 62 r11|DWORD = ADD (x: r11|DWORD, ~y: [r13|QWORD[.] + 16]) size: DWORD  <||@
  Comment 175 64 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 177 66 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 179 68 BRANCH trueDestinationProbability: 0.4978248833346516 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 185 block B5 null  <||@
  Comment 185 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 72 MOV (x: [rcx|DWORD[.] * 8 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 192 74 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5b115b5d encoding: base: 0 shift: 3  <||@
  Comment 196 76 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 200 78 MOVB (x: [rcx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 204 80 MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 208 82 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 212 84 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 221 12  <||@
  Comment 231 block B4 null  <||@
  Comment 231 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 231 88 MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 235 90 MOV (x: [r13|QWORD[.] + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 239 92 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 243 94 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 252 12  <||@
  Comment 262 block B1 null  <||@
  Comment 262 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 262 98 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 262 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 272 102 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 277 104 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 282 106 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 282 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 287 [r13:0, r14:0]at java.util.LinkedList.linkLast(LinkedList.java:141) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 288 -1 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 291 110 JUMP ~[] destination: B1 -> B3  <||@
  Comment 296 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 296 4  <||@
  Comment 302 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 302 5  <||@
  HexCodeFile>>> <|@
end_nmethod
