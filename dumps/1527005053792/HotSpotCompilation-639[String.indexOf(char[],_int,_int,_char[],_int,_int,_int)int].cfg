begin_compilation
  name " HotSpotCompilation-639[java.lang.String.indexOf(char[], int, int, char[], int, int, int)]"
  method "HotSpotCompilation-639[java.lang.String.indexOf(char[], int, int, char[], int, int, int)]"
  date 1527005056312
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 v45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 v14 v41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v26 i73 v63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i13 
=== Succesors ===
=== Usages ===
v17 v37 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
index: 6
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 v9 v26 i73 i75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 v9 v70 i78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:66) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i7 
y: i3 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i7 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:66) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:69) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 i76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:69) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i7 
y: i13 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i7 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:69) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v27 #falseSuccessor: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:70) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:77) [bci: 40]
stamp: i32
=== Inputs ===
x: i2 
y: i7 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:78) [bci: 46]
stamp: i32
=== Inputs ===
x: i3 
y: i7 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v31 
values: i7 i13 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i7 i13  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v31 
values: i75 i2 
=== Succesors ===
=== Usages ===
i54 i67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i75 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v31 
values: i77 i3 
=== Succesors ===
=== Usages ===
v41 i62 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i77 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v30 v32 
=== Succesors ===
next: v37 
=== Usages ===
i73 i76 i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v30 v32 #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 31]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:74) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:74) [bci: 36]
stamp: void
=== Inputs ===
result: i73 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i73 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:77) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:78) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i6 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:78) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:80) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:80) [bci: 53]
stamp: void
=== Inputs ===
result: i19 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i19 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:82) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: j48 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j48  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 81]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j57 
=== Usages ===
j52 
=== Predecessor ===
v43 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: j57  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 108]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4 
=== Succesors ===
next: i62 
=== Usages ===
j58 
=== Predecessor ===
j48 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4 #next: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 90]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j52 j58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 90]
stamp: i64
=== Inputs ===
x: j48 
y: j72 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j48 y: j72  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:82) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i54 i59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 101]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i76 
y: i46 
=== Succesors ===
=== Usages ===
j55 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i76 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid j55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 102]
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j56 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 102]
stamp: i64
=== Inputs ===
x: j52 
y: j55 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j52 y: j55  <|@  <|@
f <@~|@floating>@ <|@
tid j58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 117]
stamp: i64
=== Inputs ===
x: j57 
y: j72 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j57 y: j72  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 128]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i5 
y: i46 
=== Succesors ===
=== Usages ===
j60 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i5 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 129]
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i59 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i59  <|@  <|@
f <@~|@floating>@ <|@
tid j61 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 129]
stamp: i64
=== Inputs ===
x: j58 
y: j60 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j58 y: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringIndexOfNode.optimizedStringIndexPointer(Pointer, int, Pointer, int) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:86) [bci: 144]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arguments: j56 i78 j61 i6 
=== Succesors ===
next: v66 
=== Usages ===
v63 i67 v69 
=== Predecessor ===
j57 >@ <|@
instruction <@AMD64StringIndexOf|@org.graalvm.compiler.replacements.amd64.AMD64StringIndexOfNode>@ lastLocationAccess: - arguments: j56 i78 j61 i6 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:87) [bci: 151]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i13 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:87) [bci: 151]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
i62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:90) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:90) [bci: 162]
stamp: void
=== Inputs ===
result: i62 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i62 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:88) [bci: 154]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:88) [bci: 158]
stamp: i32
=== Inputs ===
x: i62 
y: i76 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:88) [bci: 159]
stamp: void
=== Inputs ===
result: i67 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i67 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 20]
stamp: void
=== Inputs ===
result: i3 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i3 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 20]
stamp: void
=== Inputs ===
result: i19 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i19 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 v45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 v14 v41 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 v26 i73 v63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i13 
=== Succesors ===
=== Usages ===
v17 v37 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
index: 6
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 v9 v26 i73 i75 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 v9 v70 i78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:66) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i7 
y: i3 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i7 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:66) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, in:0|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e3f8ebe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:69) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i75 i76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:69) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i7 
y: i13 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i7 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:69) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v27 #falseSuccessor: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:70) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v1|DWORD, v2|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:77) [bci: 40]
stamp: i32
=== Inputs ===
x: i2 
y: i7 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:78) [bci: 46]
stamp: i32
=== Inputs ===
x: i3 
y: i7 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v2|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD, v7|DWORD, v8|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v31 
values: i7 i13 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i7 i13  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v31 
values: i75 i2 
=== Succesors ===
=== Usages ===
i54 i67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i75 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v31 
values: i77 i3 
=== Succesors ===
=== Usages ===
v41 i62 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i77 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v30 v32 
=== Succesors ===
next: v37 
=== Usages ===
i73 i76 i78 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v30 v32 #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:72) [bci: 31]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD, v11|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:74) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:74) [bci: 36]
stamp: void
=== Inputs ===
result: i73 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i73 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:77) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:78) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i6 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:78) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:80) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:80) [bci: 53]
stamp: void
=== Inputs ===
result: i19 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i19 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:82) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: j48 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j48  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j48 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 81]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j57 
=== Usages ===
j52 
=== Predecessor ===
v43 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: j57  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j57 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 108]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a4 
=== Succesors ===
next: i62 
=== Usages ===
j58 
=== Predecessor ===
j48 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a4 #next: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 90]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j52 j58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 90]
stamp: i64
=== Inputs ===
x: j48 
y: j72 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j48 y: j72  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:82) [bci: 54]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i54 i59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 101]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i76 
y: i46 
=== Succesors ===
=== Usages ===
j55 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i76 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid j55 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 102]
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j56 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:84) [bci: 102]
stamp: i64
=== Inputs ===
x: j52 
y: j55 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j52 y: j55  <|@  <|@
f <@~|@floating>@ <|@
tid j58 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 117]
stamp: i64
=== Inputs ===
x: j57 
y: j72 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j57 y: j72  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 128]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i5 
y: i46 
=== Succesors ===
=== Usages ===
j60 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i5 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 129]
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i59 
=== Succesors ===
=== Usages ===
j61 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i59  <|@  <|@
f <@~|@floating>@ <|@
tid j61 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:85) [bci: 129]
stamp: i64
=== Inputs ===
x: j58 
y: j60 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j58 y: j60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i62 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringIndexOfNode.optimizedStringIndexPointer(Pointer, int, Pointer, int) [bci: -1]
at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:86) [bci: 144]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
arguments: j56 i78 j61 i6 
=== Succesors ===
next: v66 
=== Usages ===
v63 i67 v69 
=== Predecessor ===
j57 >@ <|@
instruction <@AMD64StringIndexOf|@org.graalvm.compiler.replacements.amd64.AMD64StringIndexOfNode>@ lastLocationAccess: - arguments: j56 i78 j61 i6 #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:87) [bci: 151]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i13 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:87) [bci: 151]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v65 
=== Usages ===
=== Predecessor ===
i62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v64 #falseSuccessor: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = ADD (x: v12|QWORD[.], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = LEA [v3|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = ADD (x: v16|QWORD[.], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AMD64_STRING_INDEX_OF (cnt1Value: rdx|DWORD, cnt2Value: rax|DWORD, ~charPtr1Value: v15|QWORD[.], ~charPtr2Value: v19|QWORD[.]) {cnt1ValueT: rdx|DWORD, cnt2ValueT: rax|DWORD, temp1: rcx|ILLEGAL, vectorTemp1: xmm0|ILLEGAL} intCnt2: -1 vmPageSize: 4096 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:90) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:90) [bci: 162]
stamp: void
=== Inputs ===
result: i62 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i62 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:88) [bci: 154]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:88) [bci: 158]
stamp: i32
=== Inputs ===
x: i62 
y: i76 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i62 y: i76  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:88) [bci: 159]
stamp: void
=== Inputs ===
result: i67 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i67 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 20]
stamp: void
=== Inputs ===
result: i3 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i3 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.amd64.AMD64StringSubstitutions.indexOf(AMD64StringSubstitutions.java:67) [bci: 20]
stamp: void
=== Inputs ===
result: i19 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i19 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, in:0|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e3f8ebe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE in:0|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v2|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD, v7|DWORD, v8|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD, v11|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LEA [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = ADD (x: v12|QWORD[.], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = LEA [v3|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = ADD (x: v16|QWORD[.], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AMD64_STRING_INDEX_OF (cnt1Value: rdx|DWORD, cnt2Value: rax|DWORD, ~charPtr1Value: v15|QWORD[.], ~charPtr2Value: v19|QWORD[.]) {cnt1ValueT: rdx|DWORD, cnt2ValueT: rax|DWORD, temp1: rcx|ILLEGAL, vectorTemp1: xmm0|ILLEGAL} intCnt2: -1 vmPageSize: 4096 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v1|DWORD, v2|DWORD] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: v22|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         6
     2: istore        7
     4: iload         7
     6: iload_2       
     7: if_icmplt     21
    10: iload         5
    12: ifne          19
    15: iload_2       
    16: goto          20
    19: iconst_m1     
    20: ireturn       
    21: iload         7
    23: ifge          29
    26: iconst_0      
    27: istore        7
    29: iload         5
    31: ifne          37
    34: iload         7
    36: ireturn       
    37: iload_1       
    38: iload         7
    40: iadd          
    41: istore        8
    43: iload_2       
    44: iload         7
    46: isub          
    47: iload         5
    49: if_icmpge     54
    52: iconst_m1     
    53: ireturn       
    54: getstatic     #4          // $assertionsDisabled:boolean
    57: ifne          80
    60: iload_2       
    61: iload         7
    63: isub          
    64: ifle          72
    67: iload         5
    69: ifgt          80
    72: new           #6          // java.lang.AssertionError
    75: dup           
    76: invokespecial #5          // java.lang.AssertionError.<init>:()void
    79: athrow        
    80: aload_0       
    81: invokestatic  #6          // org.graalvm.compiler.word.Word.objectToTrackedPointer:(java.lang.Object)org.graalvm.compiler.word.Word
    84: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
    87: invokestatic  #8          // charArrayBaseOffset:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
    90: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
    93: iload         8
    95: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
    98: invokestatic  #10         // charArrayIndexScale:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   101: imul          
   102: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   105: astore        9
   107: aload_3       
   108: invokestatic  #6          // org.graalvm.compiler.word.Word.objectToTrackedPointer:(java.lang.Object)org.graalvm.compiler.word.Word
   111: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
   114: invokestatic  #8          // charArrayBaseOffset:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   117: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   120: iload         4
   122: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
   125: invokestatic  #10         // charArrayIndexScale:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   128: imul          
   129: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   132: astore        10
   134: aload         9
   136: iload_2       
   137: iload         7
   139: isub          
   140: aload         10
   142: iload         5
   144: invokestatic  #11         // org.graalvm.compiler.replacements.amd64.AMD64StringIndexOfNode.optimizedStringIndexPointer:(org.graalvm.word.Pointer, int, org.graalvm.word.Pointer, int)int
   147: istore        11
   149: iload         11
   151: iflt          160
   154: iload         11
   156: iload         8
   158: iadd          
   159: ireturn       
   160: iload         11
   162: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, in:0|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e3f8ebe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE in:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   62  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction r9|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r9|DWORD = AMD64_STRING_INDEX_OF (cnt1Value: rdx|DWORD, cnt2Value: rax|DWORD, ~charPtr1Value: r10|QWORD[.], ~charPtr2Value: r8|QWORD[.]) {cnt1ValueT: rdx|DWORD, cnt2ValueT: rax|DWORD, temp1: rcx|ILLEGAL, vectorTemp1: xmm0|ILLEGAL} intCnt2: -1 vmPageSize: 4096 <|@ <|@
      nr   96  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  118  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         6
     2: istore        7
     4: iload         7
     6: iload_2       
     7: if_icmplt     21
    10: iload         5
    12: ifne          19
    15: iload_2       
    16: goto          20
    19: iconst_m1     
    20: ireturn       
    21: iload         7
    23: ifge          29
    26: iconst_0      
    27: istore        7
    29: iload         5
    31: ifne          37
    34: iload         7
    36: ireturn       
    37: iload_1       
    38: iload         7
    40: iadd          
    41: istore        8
    43: iload_2       
    44: iload         7
    46: isub          
    47: iload         5
    49: if_icmpge     54
    52: iconst_m1     
    53: ireturn       
    54: getstatic     #4          // $assertionsDisabled:boolean
    57: ifne          80
    60: iload_2       
    61: iload         7
    63: isub          
    64: ifle          72
    67: iload         5
    69: ifgt          80
    72: new           #6          // java.lang.AssertionError
    75: dup           
    76: invokespecial #5          // java.lang.AssertionError.<init>:()void
    79: athrow        
    80: aload_0       
    81: invokestatic  #6          // org.graalvm.compiler.word.Word.objectToTrackedPointer:(java.lang.Object)org.graalvm.compiler.word.Word
    84: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
    87: invokestatic  #8          // charArrayBaseOffset:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
    90: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
    93: iload         8
    95: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
    98: invokestatic  #10         // charArrayIndexScale:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   101: imul          
   102: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   105: astore        9
   107: aload_3       
   108: invokestatic  #6          // org.graalvm.compiler.word.Word.objectToTrackedPointer:(java.lang.Object)org.graalvm.compiler.word.Word
   111: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
   114: invokestatic  #8          // charArrayBaseOffset:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   117: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   120: iload         4
   122: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
   125: invokestatic  #10         // charArrayIndexScale:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   128: imul          
   129: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   132: astore        10
   134: aload         9
   136: iload_2       
   137: iload         7
   139: isub          
   140: aload         10
   142: iload         5
   144: invokestatic  #11         // org.graalvm.compiler.replacements.amd64.AMD64StringIndexOfNode.optimizedStringIndexPointer:(org.graalvm.word.Pointer, int, org.graalvm.word.Pointer, int)int
   147: istore        11
   149: iload         11
   151: iflt          160
   154: iload         11
   156: iload         8
   158: iadd          
   159: ireturn       
   160: iload         11
   162: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, in:0|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e3f8ebe slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE in:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ instruction CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   62  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rdx|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction r9|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction r9|DWORD = AMD64_STRING_INDEX_OF (cnt1Value: rdx|DWORD, cnt2Value: rax|DWORD, ~charPtr1Value: r10|QWORD[.], ~charPtr2Value: r8|QWORD[.]) {cnt1ValueT: rdx|DWORD, cnt2ValueT: rax|DWORD, temp1: rcx|ILLEGAL, vectorTemp1: xmm0|ILLEGAL} intCnt2: -1 vmPageSize: 4096 <|@ <|@
      nr   96  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  118  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 4589168020290535424
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload         6
     2: istore        7
     4: iload         7
     6: iload_2       
     7: if_icmplt     21
    10: iload         5
    12: ifne          19
    15: iload_2       
    16: goto          20
    19: iconst_m1     
    20: ireturn       
    21: iload         7
    23: ifge          29
    26: iconst_0      
    27: istore        7
    29: iload         5
    31: ifne          37
    34: iload         7
    36: ireturn       
    37: iload_1       
    38: iload         7
    40: iadd          
    41: istore        8
    43: iload_2       
    44: iload         7
    46: isub          
    47: iload         5
    49: if_icmpge     54
    52: iconst_m1     
    53: ireturn       
    54: getstatic     #4          // $assertionsDisabled:boolean
    57: ifne          80
    60: iload_2       
    61: iload         7
    63: isub          
    64: ifle          72
    67: iload         5
    69: ifgt          80
    72: new           #6          // java.lang.AssertionError
    75: dup           
    76: invokespecial #5          // java.lang.AssertionError.<init>:()void
    79: athrow        
    80: aload_0       
    81: invokestatic  #6          // org.graalvm.compiler.word.Word.objectToTrackedPointer:(java.lang.Object)org.graalvm.compiler.word.Word
    84: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
    87: invokestatic  #8          // charArrayBaseOffset:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
    90: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
    93: iload         8
    95: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
    98: invokestatic  #10         // charArrayIndexScale:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   101: imul          
   102: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   105: astore        9
   107: aload_3       
   108: invokestatic  #6          // org.graalvm.compiler.word.Word.objectToTrackedPointer:(java.lang.Object)org.graalvm.compiler.word.Word
   111: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
   114: invokestatic  #8          // charArrayBaseOffset:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   117: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   120: iload         4
   122: getstatic     #7          // INJECTED:org.graalvm.compiler.core.common.spi.ArrayOffsetProvider
   125: invokestatic  #10         // charArrayIndexScale:(org.graalvm.compiler.core.common.spi.ArrayOffsetProvider)int
   128: imul          
   129: invokevirtual #9          // org.graalvm.compiler.word.Word.add:(int)org.graalvm.compiler.word.Word
   132: astore        10
   134: aload         9
   136: iload_2       
   137: iload         7
   139: isub          
   140: aload         10
   142: iload         5
   144: invokestatic  #11         // org.graalvm.compiler.replacements.amd64.AMD64StringIndexOfNode.optimizedStringIndexPointer:(org.graalvm.word.Pointer, int, org.graalvm.word.Pointer, int)int
   147: istore        11
   149: iload         11
   151: iflt          160
   154: iload         11
   156: iload         8
   158: iadd          
   159: ireturn       
   160: iload         11
   162: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec08448b542410413bca0f8f1b00000085ff0f84a1010000b8ffffffff4883c408850500000000c5f877c34585d20f8ca60100004103d2412bca448bda85ff0f84840100003bf90f8f9b010000488d5610418bc3d1e04863c04c8bd24c03d0498d501041d1e14963c14c8bc24c03c08bd18bc7488bcc83f808735f458bc84181e1ff0f00004181f9f00f000076194883ec1050450fb74c40fe6644894c4406ffc875f0584c8bc483fa08732e458bca4181e1ff0f00004181f9f00f0000761b4883ec10508bc2450fb74c42fe6644894c4406ffc875f0584c8bd4c4c17a6f005041504152514d8bcaeb224c8b4424108b442418c4c17a6f004d2bd141c1ea014103d2ffca3bd078304983c102c4c37961010d721e83ea087e1f3bd0781b4983c11083fa087de64d8d4c51f0ba08000000ebda2bd13bd07d0841b9ffffffffeb5b4d8d0c4903c883f9087e4983f8087ed14d8bd13bc87408c4c37961020d718b83e8087e2b4983c2104983c01083ea0883f8087d144d8d4440f04d8d5442f02bd0b80800000083c208c4c17a6f00ebc84c8b5424084d2bca41c1e9015c4585c90f8c560000004503cb418bc14883c408850500000000c5f877c38bc14883c408850500000000c5f877c3418bc24883c408850500000000c5f877c3448bda41ba00000000e955feffffb8ffffffff4883c408850500000000c5f877c3418bc14883c408850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, in:0|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e3f8ebe slotKind: QWORD  <||@
  Comment 11 -1 r10|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 16 20 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 19 22 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B11  <||@
  Comment 25 block B11 null  <||@
  Comment 25 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 25 26 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 27 28 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 33 block B13 null  <||@
  Comment 33 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 33 32 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 38 34 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 42 12  <||@
  Comment 52 block B1 null  <||@
  Comment 52 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 52 38 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 55 40 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 61 block B3 null  <||@
  Comment 61 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 44 rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 64 46 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 67 -1 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 70 48 JUMP ~[] destination: B3 -> B4  <||@
  Comment 70 block B4 null  <||@
  Comment 70 60 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 70 62 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 72 64 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 78 block B6 null  <||@
  Comment 78 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 68 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 80 70 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 86 block B8 null  <||@
  Comment 86 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 74 rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 90 76 rax|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 95 78 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 98 80 r10|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD  <||@
  Comment 104 82 rdx|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 108 84 r9|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 111 86 rax|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 114 88 r8|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD  <||@
  Comment 120 90 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 122 92 rax|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 124 94 r9|DWORD = AMD64_STRING_INDEX_OF (cnt1Value: rdx|DWORD, cnt2Value: rax|DWORD, ~charPtr1Value: r10|QWORD[.], ~charPtr2Value: r8|QWORD[.]) {cnt1ValueT: rdx|DWORD, cnt2ValueT: rax|DWORD, temp1: rcx|ILLEGAL, vectorTemp1: xmm0|ILLEGAL} intCnt2: -1 vmPageSize: 4096  <||@
  Comment 421 96 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 424 98 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 430 block B10 null  <||@
  Comment 430 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 102 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 433 104 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 436 106 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 440 12  <||@
  Comment 450 block B12 null  <||@
  Comment 450 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 52 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 452 54 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 456 12  <||@
  Comment 466 block B5 null  <||@
  Comment 466 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 466 110 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 469 112 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 473 12  <||@
  Comment 483 block B2 null  <||@
  Comment 483 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 483 -1 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 486 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 492 58 JUMP ~[] destination: B2 -> B4  <||@
  Comment 497 block B7 null  <||@
  Comment 497 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 116 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 502 118 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 506 12  <||@
  Comment 516 block B9 null  <||@
  Comment 516 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 122 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 519 124 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 523 12  <||@
  Comment 533 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 533 4  <||@
  Comment 539 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 539 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-639[java.lang.String.indexOf(char[], int, int, char[], int, int, int)]"
  method "HotSpotCompilation-639[java.lang.String.indexOf(char[], int, int, char[], int, int, int)]"
  date 1527005056399
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1070058a0 89842400c0feff4883ec08448b542410413bca0f8f1b00000085ff0f84a1010000b8ffffffff4883c4088505369788fdc5f877c34585d20f8ca60100004103d2412bca448bda85ff0f84840100003bf90f8f9b010000488d5610418bc3d1e04863c04c8bd24c03d0498d501041d1e14963c14c8bc24c03c08bd18bc7488bcc83f808735f458bc84181e1ff0f00004181f9f00f000076194883ec1050450fb74c40fe6644894c4406ffc875f0584c8bc483fa08732e458bca4181e1ff0f00004181f9f00f0000761b4883ec10508bc2450fb74c42fe6644894c4406ffc875f0584c8bd4c4c17a6f005041504152514d8bcaeb224c8b4424108b442418c4c17a6f004d2bd141c1ea014103d2ffca3bd078304983c102c4c37961010d721e83ea087e1f3bd0781b4983c11083fa087de64d8d4c51f0ba08000000ebda2bd13bd07d0841b9ffffffffeb5b4d8d0c4903c883f9087e4983f8087ed14d8bd13bc87408c4c37961020d718b83e8087e2b4983c2104983c01083ea0883f8087d144d8d4440f04d8d5442f02bd0b80800000083c208c4c17a6f00ebc84c8b5424084d2bca41c1e9015c4585c90f8c560000004503cb418bc14883c4088505a89588fdc5f877c38bc14883c4088505989588fdc5f877c3418bc24883c4088505879588fdc5f877c3448bda41ba00000000e955feffffb8ffffffff4883c4088505669588fdc5f877c3418bc14883c4088505559588fdc5f877c3e8664bc4ff90e8401a80ff90f4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|QWORD[.], r9|DWORD, rdi|DWORD, in:0|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e3f8ebe slotKind: QWORD  <||@
  Comment 11 -1 r10|DWORD = MOVE in:0|DWORD moveKind: DWORD  <||@
  Comment 16 20 CMP (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 19 22 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B11  <||@
  Comment 25 block B11 null  <||@
  Comment 25 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 25 26 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 27 28 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 33 block B13 null  <||@
  Comment 33 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 33 32 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 38 34 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 42 12  <||@
  Comment 52 block B1 null  <||@
  Comment 52 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 52 38 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 55 40 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 61 block B3 null  <||@
  Comment 61 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 44 rdx|DWORD = ADD (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 64 46 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 67 -1 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 70 48 JUMP ~[] destination: B3 -> B4  <||@
  Comment 70 block B4 null  <||@
  Comment 70 60 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 70 62 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 72 64 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 78 block B6 null  <||@
  Comment 78 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 68 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 80 70 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 86 block B8 null  <||@
  Comment 86 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 74 rdx|QWORD[.] = LEA [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 90 76 rax|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 95 78 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 98 80 r10|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD  <||@
  Comment 104 82 rdx|QWORD[.] = LEA [r8|QWORD[.] + 16] size: QWORD  <||@
  Comment 108 84 r9|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 111 86 rax|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 114 88 r8|QWORD[.] = ADD (x: rdx|QWORD[.], y: rax|QWORD) size: QWORD  <||@
  Comment 120 90 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 122 92 rax|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 124 94 r9|DWORD = AMD64_STRING_INDEX_OF (cnt1Value: rdx|DWORD, cnt2Value: rax|DWORD, ~charPtr1Value: r10|QWORD[.], ~charPtr2Value: r8|QWORD[.]) {cnt1ValueT: rdx|DWORD, cnt2ValueT: rax|DWORD, temp1: rcx|ILLEGAL, vectorTemp1: xmm0|ILLEGAL} intCnt2: -1 vmPageSize: 4096  <||@
  Comment 421 96 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 424 98 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 430 block B10 null  <||@
  Comment 430 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 102 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 433 104 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 436 106 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 440 12  <||@
  Comment 450 block B12 null  <||@
  Comment 450 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 52 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 452 54 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 456 12  <||@
  Comment 466 block B5 null  <||@
  Comment 466 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 466 110 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 469 112 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 473 12  <||@
  Comment 483 block B2 null  <||@
  Comment 483 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 483 -1 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 486 -1 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 492 58 JUMP ~[] destination: B2 -> B4  <||@
  Comment 497 block B7 null  <||@
  Comment 497 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 116 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 502 118 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 506 12  <||@
  Comment 516 block B9 null  <||@
  Comment 516 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 122 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 519 124 RETURN (savedRbp: rbp|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 523 12  <||@
  Comment 533 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 533 4  <||@
  Comment 539 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 539 5  <||@
  HexCodeFile>>> <|@
end_nmethod
