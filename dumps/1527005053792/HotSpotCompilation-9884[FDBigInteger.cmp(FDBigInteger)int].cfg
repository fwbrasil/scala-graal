begin_compilation
  name " HotSpotCompilation-9884[sun.misc.FDBigInteger.cmp(FDBigInteger)]"
  method "HotSpotCompilation-9884[sun.misc.FDBigInteger.cmp(FDBigInteger)]"
  date 1527005226508
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i278 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i278  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v298 v299 v305 ?29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v275 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 948
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a256 - - - - - - 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a256 - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v302 v300 ?29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v301 
=== Succesors ===
next: i279 
=== Usages ===
i9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v301 #next: i279  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
=== Succesors ===
next: i280 
=== Usages ===
i9 i28 
=== Predecessor ===
i278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v300 #next: i280  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v298 
=== Succesors ===
next: i281 
=== Usages ===
i6 i27 
=== Predecessor ===
i279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v298 #next: i281  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v299 
=== Succesors ===
next: v13 
=== Usages ===
i6 
=== Predecessor ===
i280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v299 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
stamp: i32
=== Inputs ===
x: i278 
y: i279 
=== Succesors ===
=== Usages ===
v10 v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i278 y: i279  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
stamp: i32
=== Inputs ===
x: i280 
y: i281 
=== Succesors ===
=== Usages ===
v10 v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i280 y: i281  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i6 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 v31 v75 i84 v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
stamp: void
trueSuccessorProbability: 0.23121607308354297
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
i281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4597498457255184332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 26]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605099809558855181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i9 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 i42 i45 i84 i95 v115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
stamp: void
trueSuccessorProbability: 4.951241039330423E-4
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4555657256003782409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 33]
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605096381027429604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:955) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a282 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a282  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v302 
=== Succesors ===
next: v25 
=== Usages ===
v303 a135 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v302 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a282 
=== Succesors ===
=== Usages ===
i283 i287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a282  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 135]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a282 
=== Succesors ===
=== Usages ===
v304 ?88 v308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a282  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
a282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B21" 
    successors "B6" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605147361799062091
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v26 
values: i280 i42 
=== Succesors ===
=== Usages ===
?29 v31 i42 j291 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v26 values: i280 i42  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v26 
values: i279 i45 
=== Succesors ===
=== Usages ===
?29 i87 v75 i45 j294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v26 values: i279 i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.00736592720224
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v25 
=== Succesors ===
next: v38 
=== Usages ===
i27 i28 v33 v50 v55 v227 v247 v237 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v25 #next: v38  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 957
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i27 i28 - - 
=== Succesors ===
=== Usages ===
v259 i286 i287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i27 i28 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i14 
=== Succesors ===
=== Usages ===
v213 v228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i14 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
stamp: void
trueSuccessorProbability: 0.007312067048661608
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v33 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:964) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v212 #falseSuccessor: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33555
stableDimension: 0
stamp: i32 [-33555] ⇊00000000ffff7ced ⇈00000000ffff7ced
stampKind: i32
value: int[-33555|0xffffffffffff7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4575350740512294146
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i28 i95 
=== Succesors ===
=== Usages ===
?88 v90 i95 j296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i28 i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3333333333333333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v94 
=== Usages ===
i87 v91 v98 v99 v222 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i14 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4570847140884923650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:928) [bci: 15]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i89 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i89 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 4]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i283 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i283  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 968
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.checkZeroTail(int[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 923
stackSize: 0
=== Inputs ===
outerFrameState: ?105 
values: a135 i87 
=== Succesors ===
=== Usages ===
v275 i283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a135 i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v303 
=== Succesors ===
next: v223 
=== Usages ===
v141 
=== Predecessor ===
v93 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v303 #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 5]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: i32
=== Inputs ===
x: i87 
y: i20 
=== Succesors ===
=== Usages ===
i87 v141 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i283 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i95 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
i283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v219 #falseSuccessor: v222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i284 
=== Usages ===
i284 
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i284  <|@  <|@
f <@~|@floating>@ <|@
tid j296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a135 
index: j296 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v219 
address: v304 
=== Succesors ===
next: v102 
=== Usages ===
v97 
=== Predecessor ===
v219 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v219 address: v304 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i89 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i284 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v101 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566343541257553154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4566343541257553154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:925) [bci: 13]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36379
stableDimension: 0
stamp: i32 [-36379] ⇊00000000ffff71e5 ⇈00000000ffff71e5
stampKind: i32
value: int[-36379|0xffffffffffff71e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?88 
actionAndReason: i277 
speculation: a256 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?88 actionAndReason: i277 speculation: a256  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v227 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38419
stableDimension: 0
stamp: i32 [-38419] ⇊00000000ffff69ed ⇈00000000ffff69ed
stampKind: i32
value: int[-38419|0xffffffffffff69ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: a285 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a285  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v305 
=== Succesors ===
next: i286 
=== Usages ===
a153 v306 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v305 #next: i286  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a285 
=== Succesors ===
=== Usages ===
i286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v306 
=== Succesors ===
next: v238 
=== Usages ===
v159 
=== Predecessor ===
a285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v306 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
stamp: i32
=== Inputs ===
x: i27 
y: i20 
=== Succesors ===
=== Usages ===
v159 i27 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i27 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i286 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i286  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
i286 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v234 #falseSuccessor: v237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i287 
=== Usages ===
i288 
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v303 
=== Succesors ===
next: v248 
=== Usages ===
v174 
=== Predecessor ===
v234 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v303 #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
stamp: i32
=== Inputs ===
x: i28 
y: i20 
=== Succesors ===
=== Usages ===
v174 i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i28 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i287 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i45 y: i287  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v247 
=== Usages ===
=== Predecessor ===
i287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v244 #falseSuccessor: v247  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i288 
=== Usages ===
i289 
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i288  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a285 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a285  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i27 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i27  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a153 
index: j291 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a153 index: j291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v234 
address: v307 
=== Succesors ===
next: i289 
=== Usages ===
v47 v83 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v234 address: v307 #next: i289  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a135 
index: j294 
=== Succesors ===
=== Usages ===
i289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: j294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v244 
address: v308 
=== Succesors ===
next: v54 
=== Usages ===
v47 v83 
=== Predecessor ===
i288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v244 address: v308 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i289 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i288 y: i289  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
stamp: void
trueSuccessorProbability: 0.007365927202239931
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v48 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573175560922641331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:963) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4605045400255797116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i289 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i288 y: i289  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
stamp: i32 [-1 - 1] ⇊0000000000000001
=== Inputs ===
condition: v83 
trueValue: i20 
falseValue: i14 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v83 trueValue: i20 falseValue: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 110]
stamp: void
=== Inputs ===
result: i84 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i84 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44827
stableDimension: 0
stamp: i32 [-44827] ⇊00000000ffff50e5 ⇈00000000ffff50e5
stampKind: i32
value: int[-44827|0xffffffffffff50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40987
stableDimension: 0
stamp: i32 [-40987] ⇊00000000ffff5fe5 ⇈00000000ffff5fe5
stampKind: i32
value: int[-40987|0xffffffffffff5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B7" "B17" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-44827 - -33555] ⇊00000000ffff40e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v253 
values: i255 i261 i265 i269 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v253 values: i255 i261 i265 i269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v260 v264 v268 
=== Succesors ===
next: v259 
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v260 v264 v268 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i257 
speculation: a256 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i257 speculation: a256  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i278 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i278  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v298 v299 v305 ?29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a256 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v275 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 948
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a256 - - - - - - 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a256 - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lsun/misc/FDBigInteger;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v302 v300 ?29 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i278 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v301 
=== Succesors ===
next: i279 
=== Usages ===
i9 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v301 #next: i279  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i279 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v300 
=== Succesors ===
next: i280 
=== Usages ===
i9 i28 
=== Predecessor ===
i278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v300 #next: i280  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v298 
=== Succesors ===
next: i281 
=== Usages ===
i6 i27 
=== Predecessor ===
i279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v298 #next: i281  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i281 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v299 
=== Succesors ===
next: v13 
=== Usages ===
i6 
=== Predecessor ===
i280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v299 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
stamp: i32
=== Inputs ===
x: i278 
y: i279 
=== Succesors ===
=== Usages ===
v10 v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i278 y: i279  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
stamp: i32
=== Inputs ===
x: i280 
y: i281 
=== Succesors ===
=== Usages ===
v10 v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i280 y: i281  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i6 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 v31 v75 i84 v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
stamp: void
trueSuccessorProbability: 0.23121607308354297
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
i281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1c9db766 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 0]
locals: v0|QWORD[.] Object[null] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v4|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23121607308354297 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4597498457255184332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 26]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605099809558855181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6 
y: i9 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 i42 i45 i84 i95 v115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
stamp: void
trueSuccessorProbability: 4.951241039330423E-4
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.951241039330423E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4555657256003782409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:953) [bci: 33]
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605096381027429604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:955) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a282 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a282  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a282 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v302 
=== Succesors ===
next: v25 
=== Usages ===
v303 a135 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v302 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a282 
=== Succesors ===
=== Usages ===
i283 i287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a282  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 135]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a282 
=== Succesors ===
=== Usages ===
v304 ?88 v308 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a282  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
a282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v3|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B21" 
    successors "B6" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605147361799062091
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i27 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v26 
values: i280 i42 
=== Succesors ===
=== Usages ===
?29 v31 i42 j291 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v26 values: i280 i42  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v26 
values: i279 i45 
=== Succesors ===
=== Usages ===
?29 i87 v75 i45 j294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v26 values: i279 i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.00736592720224
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v25 
=== Succesors ===
next: v38 
=== Usages ===
i27 i28 v33 v50 v55 v227 v247 v237 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v25 #next: v38  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 957
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - i27 i28 - - 
=== Succesors ===
=== Usages ===
v259 i286 i287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - i27 i28 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i14 
=== Succesors ===
=== Usages ===
v213 v228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i27 
y: i14 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i27 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
stamp: void
trueSuccessorProbability: 0.007312067048661608
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v33 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007312067048661608 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:964) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v212 #falseSuccessor: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid i255 <|@
result int[-33555|0xffffffffffff7ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33555
stableDimension: 0
stamp: i32 [-33555] ⇊00000000ffff7ced ⇈00000000ffff7ced
stampKind: i32
value: int[-33555|0xffffffffffff7ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33555|0xffffffffffff7ced]] destination: B7 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:967) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4575350740512294146
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i28 i95 
=== Succesors ===
=== Usages ===
?88 v90 i95 j296 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i28 i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3333333333333333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v94 
=== Usages ===
i87 v91 v98 v99 v222 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i14 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 v116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 1]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4570847140884923650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:928) [bci: 15]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i89 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i89 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 4]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i283 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i283  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<FDBigInteger.cmp(FDBigInteger)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 968
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FDBigInteger.checkZeroTail(int[], int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FDBigInteger.java
sourceLine: 923
stackSize: 0
=== Inputs ===
outerFrameState: ?105 
values: a135 i87 
=== Succesors ===
=== Usages ===
v275 i283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a135 i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i283 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v303 
=== Succesors ===
next: v223 
=== Usages ===
v141 
=== Predecessor ===
v93 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v303 #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 5]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: i32
=== Inputs ===
x: i87 
y: i20 
=== Succesors ===
=== Usages ===
i87 v141 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i95 
y: i283 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i95 y: i283  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
i283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v219 #falseSuccessor: v222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v8|QWORD[.] v11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction CMP (x: v12|DWORD, y: [v7|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i284 
=== Usages ===
i284 
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i284  <|@  <|@
f <@~|@floating>@ <|@
tid j296 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
result [v8|QWORD[.] + v13|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a135 
index: j296 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v219 
address: v304 
=== Succesors ===
next: v102 
=== Usages ===
v97 
=== Predecessor ===
v219 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v219 address: v304 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i89 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i284 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 10]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v101 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v8|QWORD[.] + v13|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566343541257553154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B13 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4566343541257553154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:925) [bci: 13]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i20 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i20 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:924) [bci: 9]
at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result int[-36379|0xffffffffffff71e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36379
stableDimension: 0
stamp: i32 [-36379] ⇊00000000ffff71e5 ⇈00000000ffff71e5
stampKind: i32
value: int[-36379|0xffffffffffff71e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?88 
actionAndReason: i277 
speculation: a256 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?88 actionAndReason: i277 speculation: a256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -36379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v8|QWORD[.] v11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0, 140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v227 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result int[-38419|0xffffffffffff69ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38419
stableDimension: 0
stamp: i32 [-38419] ⇊00000000ffff69ed ⇈00000000ffff69ed
stampKind: i32
value: int[-38419|0xffffffffffff69ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38419|0xffffffffffff69ed]] destination: B17 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: a285 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a285  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a285 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v305 
=== Succesors ===
next: i286 
=== Usages ===
a153 v306 
=== Predecessor ===
v224 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v305 #next: i286  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
result [v14|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a285 
=== Succesors ===
=== Usages ===
i286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i286 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v306 
=== Succesors ===
next: v238 
=== Usages ===
v159 
=== Predecessor ===
a285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v306 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
stamp: i32
=== Inputs ===
x: i27 
y: i20 
=== Succesors ===
=== Usages ===
v159 i27 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i27 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i286 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i286  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
i286 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v234 #falseSuccessor: v237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] - - v9|DWORD v10|DWORD - - 
>@ <|@ instruction CMP (x: v15|DWORD, y: [v14|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: i287 
=== Usages ===
i288 
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?29 
guard: - 
address: v303 
=== Succesors ===
next: v248 
=== Usages ===
v174 
=== Predecessor ===
v234 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?29 guard: - address: v303 #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
stamp: i32
=== Inputs ===
x: i28 
y: i20 
=== Succesors ===
=== Usages ===
v174 i28 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i28 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i287 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i45 y: i287  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v247 
=== Usages ===
=== Predecessor ===
i287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v244 #falseSuccessor: v247  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] - - v9|DWORD v10|DWORD - - 
>@ <|@ instruction CMP (x: v16|DWORD, y: [v7|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i288 
=== Usages ===
i289 
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i288  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a285 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a285  <|@  <|@
f <@~|@floating>@ <|@
tid j291 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i27 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i27  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
result [v17|QWORD[.] + v18|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a153 
index: j291 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a153 index: j291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i288 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v234 
address: v307 
=== Succesors ===
next: i289 
=== Usages ===
v47 v83 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v234 address: v307 #next: i289  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
result [v8|QWORD[.] + v20|QWORD * 4 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times4
stamp: void*
=== Inputs ===
base: a135 
index: j294 
=== Succesors ===
=== Usages ===
i289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: j294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i289 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v244 
address: v308 
=== Succesors ===
next: v54 
=== Usages ===
v47 v83 
=== Predecessor ===
i288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v244 address: v308 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i289 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i288 y: i289  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
stamp: void
trueSuccessorProbability: 0.007365927202239931
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i289 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v48 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v17|QWORD[.] + v18|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v8|QWORD[.] + v20|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007365927202239931 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573175560922641331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:963) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v16|DWORD] destination: B21 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4605045400255797116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i289 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i288 y: i289  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
stamp: i32 [-1 - 1] ⇊0000000000000001
=== Inputs ===
condition: v83 
trueValue: i20 
falseValue: i14 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v83 trueValue: i20 falseValue: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 110]
stamp: void
=== Inputs ===
result: i84 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i84 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v23|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result int[-44827|0xffffffffffff50e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -44827
stableDimension: 0
stamp: i32 [-44827] ⇊00000000ffff50e5 ⇈00000000ffff50e5
stampKind: i32
value: int[-44827|0xffffffffffff50e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44827|0xffffffffffff50e5]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v26 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v26 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result int[-40987|0xffffffffffff5fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40987
stableDimension: 0
stamp: i32 [-40987] ⇊00000000ffff5fe5 ⇈00000000ffff5fe5
stampKind: i32
value: int[-40987|0xffffffffffff5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40987|0xffffffffffff5fe5]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B7" "B17" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i257 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-44827 - -33555] ⇊00000000ffff40e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v253 
values: i255 i261 i265 i269 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v253 values: i255 i261 i265 i269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v260 v264 v268 
=== Succesors ===
next: v259 
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v260 v264 v268 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i257 
speculation: a256 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i257 speculation: a256  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] - - v9|DWORD v10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1c9db766 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 0]
locals: v0|QWORD[.] Object[null] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = ADD (x: v4|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23121607308354297 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605099809558855181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.951241039330423E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605096381027429604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v3|DWORD] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] - - v9|DWORD v10|DWORD - - 
>@ <|@ instruction CMP (x: v15|DWORD, y: [v14|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] - - v9|DWORD v10|DWORD - - 
>@ <|@ instruction CMP (x: v16|DWORD, y: [v7|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v17|QWORD[.] + v18|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v8|QWORD[.] + v20|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007365927202239931 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573175560922641331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v16|DWORD] destination: B21 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B21" 
    successors "B6" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605147361799062091
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007312067048661608 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4605045400255797116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: v23|DWORD) condition: |>| <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4597498457255184332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v8|QWORD[.] v11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction CMP (x: v12|DWORD, y: [v7|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP [v8|QWORD[.] + v13|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566343541257553154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B13 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4575350740512294146
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4570847140884923650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4566343541257553154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4555657256003782409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-44827|0xffffffffffff50e5]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B7" "B17" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: v0|QWORD[.] v1|QWORD[.] - - v9|DWORD v10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -36379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: v8|QWORD[.] v11|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0, 140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40987|0xffffffffffff5fe5]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33555|0xffffffffffff7ced]] destination: B7 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38419|0xffffffffffff69ed]] destination: B17 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // nWords:int
     4: aload_0       
     5: getfield      #3          // offset:int
     8: iadd          
     9: istore_2      
    10: aload_1       
    11: getfield      #4          // nWords:int
    14: aload_1       
    15: getfield      #3          // offset:int
    18: iadd          
    19: istore_3      
    20: iload_2       
    21: iload_3       
    22: if_icmple     27
    25: iconst_1      
    26: ireturn       
    27: iload_2       
    28: iload_3       
    29: if_icmpge     34
    32: iconst_m1     
    33: ireturn       
    34: aload_0       
    35: getfield      #4          // nWords:int
    38: istore        4
    40: aload_1       
    41: getfield      #4          // nWords:int
    44: istore        5
    46: iload         4
    48: ifle          114
    51: iload         5
    53: ifle          114
    56: aload_0       
    57: getfield      #2          // data:int[]
    60: iinc          
    63: iload         4
    65: iaload        
    66: istore        6
    68: aload_1       
    69: getfield      #2          // data:int[]
    72: iinc          
    75: iload         5
    77: iaload        
    78: istore        7
    80: iload         6
    82: iload         7
    84: if_icmpeq     111
    87: iload         6
    89: i2l           
    90: ldc2_w        #19         // 4294967295
    93: land          
    94: iload         7
    96: i2l           
    97: ldc2_w        #19         // 4294967295
   100: land          
   101: lcmp          
   102: ifge          109
   105: iconst_m1     
   106: goto          110
   109: iconst_1      
   110: ireturn       
   111: goto          46
   114: iload         4
   116: ifle          129
   119: aload_0       
   120: getfield      #2          // data:int[]
   123: iload         4
   125: invokestatic  #31         // checkZeroTail:(int[], int)int
   128: ireturn       
   129: iload         5
   131: ifle          145
   134: aload_1       
   135: getfield      #2          // data:int[]
   138: iload         5
   140: invokestatic  #31         // checkZeroTail:(int[], int)int
   143: ineg          
   144: ireturn       
   145: iconst_0      
   146: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1c9db766 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.23121607308354297 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605099809558855181
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 4.951241039330423E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605096381027429604
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  126  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r10|DWORD r11|DWORD - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rbx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r10|DWORD r11|DWORD - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr  162  <|@ instruction r10|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOV [r9|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.007365927202239931 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573175560922641331
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B21" 
    successors "B6" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605147361799062091
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.007312067048661608 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4605045400255797116
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  184  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: |>| <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4597498457255184332
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: r9|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140] <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  100  <|@ instruction CMP [r9|QWORD[.] + r10|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566343541257553154
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B13 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4575350740512294146
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4570847140884923650
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4566343541257553154
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4555657256003782409
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   36  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|DWORD = MOVE input: int[-44827|0xffffffffffff50e5] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B7" "B17" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r10|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV [r15|QWORD + 668] y: -36379 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: r9|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0, 140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r8|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[-33555|0xffffffffffff7ced] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r8|DWORD = MOVE input: int[-38419|0xffffffffffff69ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B17 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // nWords:int
     4: aload_0       
     5: getfield      #3          // offset:int
     8: iadd          
     9: istore_2      
    10: aload_1       
    11: getfield      #4          // nWords:int
    14: aload_1       
    15: getfield      #3          // offset:int
    18: iadd          
    19: istore_3      
    20: iload_2       
    21: iload_3       
    22: if_icmple     27
    25: iconst_1      
    26: ireturn       
    27: iload_2       
    28: iload_3       
    29: if_icmpge     34
    32: iconst_m1     
    33: ireturn       
    34: aload_0       
    35: getfield      #4          // nWords:int
    38: istore        4
    40: aload_1       
    41: getfield      #4          // nWords:int
    44: istore        5
    46: iload         4
    48: ifle          114
    51: iload         5
    53: ifle          114
    56: aload_0       
    57: getfield      #2          // data:int[]
    60: iinc          
    63: iload         4
    65: iaload        
    66: istore        6
    68: aload_1       
    69: getfield      #2          // data:int[]
    72: iinc          
    75: iload         5
    77: iaload        
    78: istore        7
    80: iload         6
    82: iload         7
    84: if_icmpeq     111
    87: iload         6
    89: i2l           
    90: ldc2_w        #19         // 4294967295
    93: land          
    94: iload         7
    96: i2l           
    97: ldc2_w        #19         // 4294967295
   100: land          
   101: lcmp          
   102: ifge          109
   105: iconst_m1     
   106: goto          110
   109: iconst_1      
   110: ireturn       
   111: goto          46
   114: iload         4
   116: ifle          129
   119: aload_0       
   120: getfield      #2          // data:int[]
   123: iload         4
   125: invokestatic  #31         // checkZeroTail:(int[], int)int
   128: ireturn       
   129: iload         5
   131: ifle          145
   134: aload_1       
   135: getfield      #2          // data:int[]
   138: iload         5
   140: invokestatic  #31         // checkZeroTail:(int[], int)int
   143: ineg          
   144: ireturn       
   145: iconst_0      
   146: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1c9db766 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 0]
locals: rsi|QWORD[.] Object[null] - - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.23121607308354297 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605099809558855181
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 4.951241039330423E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605096381027429604
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  126  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r10|DWORD r11|DWORD - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rbx|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r10|DWORD r11|DWORD - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:46] <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605096381027429603
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr  162  <|@ instruction r10|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOV [r9|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction BRANCH trueDestinationProbability: 0.007365927202239931 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4573175560922641331
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B21" 
    successors "B6" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4605147361799062091
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   54  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.007312067048661608 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4605045400255797116
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  184  <|@ instruction r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: |>| <|@ <|@
      nr  186  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4597498457255184332
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   24  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4573175560922641346
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B15" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: r9|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140] <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4570847140884923650
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  100  <|@ instruction CMP [r9|QWORD[.] + r10|QWORD * 4 + 12] y: 0 size: DWORD <|@ <|@
      nr  102  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4566343541257553154
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B13 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4575350740512294146
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 4570847140884923650
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 4566343541257553154
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  114  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4555657256003782409
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   36  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|DWORD = MOVE input: int[-44827|0xffffffffffff50e5] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B7" "B17" "B24" "B23" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46]
locals: rsi|QWORD[.] rdx|QWORD[.] - - r10|DWORD r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:46] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV [r15|QWORD + 668] y: -36379 size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [r9:0]
live-base-pointers: []
sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0]
locals: r9|QWORD[.] r10|DWORD 
sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140]
locals: - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0, 140] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r8|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[-33555|0xffffffffffff7ced] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B7 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r8|DWORD = MOVE input: int[-38419|0xffffffffffff69ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B17 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // nWords:int
     4: aload_0       
     5: getfield      #3          // offset:int
     8: iadd          
     9: istore_2      
    10: aload_1       
    11: getfield      #4          // nWords:int
    14: aload_1       
    15: getfield      #3          // offset:int
    18: iadd          
    19: istore_3      
    20: iload_2       
    21: iload_3       
    22: if_icmple     27
    25: iconst_1      
    26: ireturn       
    27: iload_2       
    28: iload_3       
    29: if_icmpge     34
    32: iconst_m1     
    33: ireturn       
    34: aload_0       
    35: getfield      #4          // nWords:int
    38: istore        4
    40: aload_1       
    41: getfield      #4          // nWords:int
    44: istore        5
    46: iload         4
    48: ifle          114
    51: iload         5
    53: ifle          114
    56: aload_0       
    57: getfield      #2          // data:int[]
    60: iinc          
    63: iload         4
    65: iaload        
    66: istore        6
    68: aload_1       
    69: getfield      #2          // data:int[]
    72: iinc          
    75: iload         5
    77: iaload        
    78: istore        7
    80: iload         6
    82: iload         7
    84: if_icmpeq     111
    87: iload         6
    89: i2l           
    90: ldc2_w        #19         // 4294967295
    93: land          
    94: iload         7
    96: i2l           
    97: ldc2_w        #19         // 4294967295
   100: land          
   101: lcmp          
   102: ifge          109
   105: iconst_m1     
   106: goto          110
   109: iconst_1      
   110: ireturn       
   111: goto          46
   114: iload         4
   116: ifle          129
   119: aload_0       
   120: getfield      #2          // data:int[]
   123: iload         4
   125: invokestatic  #31         // checkZeroTail:(int[], int)int
   128: ireturn       
   129: iload         5
   131: ifle          145
   134: aload_1       
   135: getfield      #2          // data:int[]
   138: iload         5
   140: invokestatic  #31         // checkZeroTail:(int[], int)int
   143: ineg          
   144: ireturn       
   145: iconst_0      
   146: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b420c448b5210448b5e104103c2458bc34403460c443bc00f8fba000000413bc00f8f44010000448b4218458bc849c1e10344895c2404458bda448b542404e961000000660f1f440000660f1f4400004183fb010f8c6b0100008b4618418bcaffc93b0cc50c0000000f8346010000418bdbffcb423b1cc50c0000000f830101000048c1e0034d63d2428b44900c4d63d3478b54910c443bd00f8511000000448bdb448bd14183fa017da5e940000000443bd0b8ffffffff41ba01000000440f47d0418bc2488b6c24104883c418850500000000c5f877c3b801000000488b6c24104883c418850500000000c5f877c34183fb010f8cc3000000458bd3e9330000000f1f80000000000f1f8000000000418bc2ffc8423b04c50c0000000f837a0000004d63d243837c910c000f8521000000448bd04183fa017dd5b800000000488b6c24104883c418850500000000c5f877c3b8ffffffff488b6c24104883c418850500000000c5f877c3b8ffffffff488b6c24104883c418850500000000c5f877c341b8e550ffff4589879c0200004d89a7a8020000e8000000009041c7879c020000e571ffff4d89a7a8020000e8000000009041b8e55fffffebcc41b8ed7cffffebc441b8ed69ffffebbce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1c9db766 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-  |-  |-  |-  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 59 12 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 62 14 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 69 16 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 0.23121607308354297 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 78 block B2 null  <||@
  Comment 78 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 28 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 81 30 BRANCH trueDestinationProbability: 4.951241039330423E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 87 block B4 null  <||@
  Comment 87 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 40 r8|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 91 42 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3  <||@
  Comment 98 44 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 103 46 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 106 48 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 111 50 JUMP ~[] destination: B4 -> B5  <||@
  Comment 116 block B16 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 116 124 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 126 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 132 128 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 138 block B18 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 138 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 138 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 141 140 rcx|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 146 142 CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 146 [rax:0, rdx:0, rsi:0, r8:0, r9:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r10|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 153 144 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24  <||@
  Comment 159 block B19 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 159 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 148 rbx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 164 150 CMP (x: rbx|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 164 [rax:0, rdx:0, rsi:0, r8:0, r9:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r10|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 164 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 152 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 178 block B20 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 178 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 178 156 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3  <||@
  Comment 182 158 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 185 160 rax|DWORD = MOV [rax|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD  <||@
  Comment 190 162 r10|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 193 164 r10|DWORD = MOV [r9|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD  <||@
  Comment 198 166 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 201 168 BRANCH trueDestinationProbability: 0.007365927202239931 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 207 block B21 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 207 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 172 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 210 174 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 213 176 JUMP ~[] destination: B21 -> B5  <||@
  Comment 213 block B5 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 213 52 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 213 54 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 217 56 BRANCH trueDestinationProbability: 0.007312067048661608 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16  <||@
  Comment 224 block B22 null  <||@
  Comment 224 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 180 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 227 182 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 232 184 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: |>|  <||@
  Comment 242 186 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 245 188 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 254 12  <||@
  Comment 264 block B1 null  <||@
  Comment 264 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 22 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 269 24 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 278 12  <||@
  Comment 288 block B6 null  <||@
  Comment 288 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 288 60 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 292 62 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 298 block B8 null  <||@
  Comment 298 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 72 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 301 74 JUMP ~[] destination: B8 -> B9  <||@
  Comment 306 block B11 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 306 88 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 320 90 rax|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 325 92 CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140]  <||@
  Comment 325 [r8:0, r9:0]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r9|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 325 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 333 94 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15  <||@
  Comment 339 block B12 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 339 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 339 98 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 342 100 CMP [r9|QWORD[.] + r10|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 348 102 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 354 block B13 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 354 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 106 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 357 108 JUMP ~[] destination: B13 -> B9  <||@
  Comment 357 block B9 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 357 76 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 357 78 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 361 80 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 363 block B10 null  <||@
  Comment 363 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 84 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 368 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 377 12  <||@
  Comment 387 block B14 null  <||@
  Comment 387 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 387 112 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 392 114 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 401 12  <||@
  Comment 411 block B3 null  <||@
  Comment 411 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 34 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 416 36 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 425 12  <||@
  Comment 435 block B23 null  <||@
  Comment 435 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 192 r8|DWORD = MOVE input: int[-44827|0xffffffffffff50e5]  <||@
  Comment 441 194 JUMP ~[] destination: B23 -> B25  <||@
  Comment 441 block B25 null  <||@
  Comment 441 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 441 204 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 448 206 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 455 208 DEOPT info [bci:46]  <||@
  Comment 455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 460 [rdx:0, rsi:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r10|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 461 block B15 null  <||@
  Comment 461 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 118 MOV [r15|QWORD + 668] y: -36379 size: DWORD  <||@
  Comment 472 120 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 479 122 DEOPT info [bci:0, 140]  <||@
  Comment 479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 484 [r9:0]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r9|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 485 block B24 null  <||@
  Comment 485 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 198 r8|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5]  <||@
  Comment 491 200 JUMP ~[] destination: B24 -> B25  <||@
  Comment 493 block B7 null  <||@
  Comment 493 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 66 r8|DWORD = MOVE input: int[-33555|0xffffffffffff7ced]  <||@
  Comment 499 68 JUMP ~[] destination: B7 -> B25  <||@
  Comment 501 block B17 null  <||@
  Comment 501 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 132 r8|DWORD = MOVE input: int[-38419|0xffffffffffff69ed]  <||@
  Comment 507 134 JUMP ~[] destination: B17 -> B25  <||@
  Comment 509 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 509 4  <||@
  Comment 515 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 515 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9884[sun.misc.FDBigInteger.cmp(FDBigInteger)]"
  method "HotSpotCompilation-9884[sun.misc.FDBigInteger.cmp(FDBigInteger)]"
  date 1527005226629
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c3f8e0 448b560849c1e203493bc20f856f65bcfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b420c448b5210448b5e104103c2458bc34403460c443bc00f8fba000000413bc00f8f44010000448b4218458bc849c1e10344895c2404458bda448b542404e961000000660f1f440000660f1f4400004183fb010f8c6b0100008b4618418bcaffc93b0cc50c0000000f8346010000418bdbffcb423b1cc50c0000000f830101000048c1e0034d63d2428b44900c4d63d3478b54910c443bd00f8511000000448bdb448bd14183fa017da5e940000000443bd0b8ffffffff41ba01000000440f47d0418bc2488b6c24104883c418850522f6c4fcc5f877c3b801000000488b6c24104883c41885050af6c4fcc5f877c34183fb010f8cc3000000458bd3e9330000000f1f80000000000f1f8000000000418bc2ffc8423b04c50c0000000f837a0000004d63d243837c910c000f8521000000448bd04183fa017dd5b800000000488b6c24104883c4188505a7f5c4fcc5f877c3b8ffffffff488b6c24104883c41885058ff5c4fcc5f877c3b8ffffffff488b6c24104883c418850577f5c4fcc5f877c341b8e550ffff4589879c0200004d89a7a8020000e8527bbcfe9041c7879c020000e571ffff4d89a7a8020000e83a7bbcfe9041b8e55fffffebcc41b8ed7cffffebc441b8ed69ffffebbce83eab00ff90e8187abcfe90f4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1c9db766 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |Object[null]  |-  |-  |-  |-  |-  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 59 12 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 62 14 r8|DWORD = ADD (x: r11|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 69 16 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 0.23121607308354297 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 78 block B2 null  <||@
  Comment 78 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 28 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 81 30 BRANCH trueDestinationProbability: 4.951241039330423E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 87 block B4 null  <||@
  Comment 87 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 40 r8|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 91 42 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3  <||@
  Comment 98 44 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 103 46 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 106 48 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 111 50 JUMP ~[] destination: B4 -> B5  <||@
  Comment 116 block B16 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 116 124 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 128 126 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 132 128 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 138 block B18 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 138 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 138 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 141 140 rcx|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 146 142 CMP (x: rcx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 146 [rax:0, rdx:0, rsi:0, r8:0, r9:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r10|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 153 144 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B24  <||@
  Comment 159 block B19 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 159 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 148 rbx|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 164 150 CMP (x: rbx|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:46]  <||@
  Comment 164 [rax:0, rdx:0, rsi:0, r8:0, r9:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r10|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 164 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 152 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 178 block B20 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 178 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 178 156 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58c518 encoding: base: 0 shift: 3  <||@
  Comment 182 158 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 185 160 rax|DWORD = MOV [rax|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD  <||@
  Comment 190 162 r10|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 193 164 r10|DWORD = MOV [r9|QWORD[.] + r10|QWORD * 4 + 12] size: DWORD  <||@
  Comment 198 166 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 201 168 BRANCH trueDestinationProbability: 0.007365927202239931 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 207 block B21 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 207 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 172 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 210 174 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 213 176 JUMP ~[] destination: B21 -> B5  <||@
  Comment 213 block B5 loop 0 depth 1 header:26|LoopBegin  <||@
  Comment 213 52 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 213 54 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 217 56 BRANCH trueDestinationProbability: 0.007312067048661608 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16  <||@
  Comment 224 block B22 null  <||@
  Comment 224 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 180 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 227 182 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 232 184 r10|DWORD = CMOVE (falseValue: int[1|0x1], ~trueValue: rax|DWORD) condition: |>|  <||@
  Comment 242 186 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 245 188 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 254 12  <||@
  Comment 264 block B1 null  <||@
  Comment 264 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 22 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 269 24 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 278 12  <||@
  Comment 288 block B6 null  <||@
  Comment 288 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 288 60 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 292 62 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 298 block B8 null  <||@
  Comment 298 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 72 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 301 74 JUMP ~[] destination: B8 -> B9  <||@
  Comment 306 block B11 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 306 88 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 320 90 rax|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 325 92 CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:0, 140]  <||@
  Comment 325 [r8:0, r9:0]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r9|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 325 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 333 94 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B15  <||@
  Comment 339 block B12 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 339 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 339 98 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 342 100 CMP [r9|QWORD[.] + r10|QWORD * 4 + 12] y: 0 size: DWORD  <||@
  Comment 348 102 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 354 block B13 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 354 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 354 106 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 357 108 JUMP ~[] destination: B13 -> B9  <||@
  Comment 357 block B9 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 357 76 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 357 78 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 361 80 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 363 block B10 null  <||@
  Comment 363 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 84 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 368 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 377 12  <||@
  Comment 387 block B14 null  <||@
  Comment 387 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 387 112 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 392 114 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 401 12  <||@
  Comment 411 block B3 null  <||@
  Comment 411 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 34 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 416 36 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 425 12  <||@
  Comment 435 block B23 null  <||@
  Comment 435 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 192 r8|DWORD = MOVE input: int[-44827|0xffffffffffff50e5]  <||@
  Comment 441 194 JUMP ~[] destination: B23 -> B25  <||@
  Comment 441 block B25 null  <||@
  Comment 441 202 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 441 204 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 448 206 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 455 208 DEOPT info [bci:46]  <||@
  Comment 455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 460 [rdx:0, rsi:0]at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 46, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |r10|DWORD  |r11|DWORD  |-  |-   <||@
  Comment 461 block B15 null  <||@
  Comment 461 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 118 MOV [r15|QWORD + 668] y: -36379 size: DWORD  <||@
  Comment 472 120 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 479 122 DEOPT info [bci:0, 140]  <||@
  Comment 479 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 484 [r9:0]at sun.misc.FDBigInteger.checkZeroTail(FDBigInteger.java:923) [bci: 0, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r9|QWORD[.]  |r10|DWORD 
  at sun.misc.FDBigInteger.cmp(FDBigInteger.java:968) [bci: 140, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 485 block B24 null  <||@
  Comment 485 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 198 r8|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5]  <||@
  Comment 491 200 JUMP ~[] destination: B24 -> B25  <||@
  Comment 493 block B7 null  <||@
  Comment 493 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 66 r8|DWORD = MOVE input: int[-33555|0xffffffffffff7ced]  <||@
  Comment 499 68 JUMP ~[] destination: B7 -> B25  <||@
  Comment 501 block B17 null  <||@
  Comment 501 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 501 132 r8|DWORD = MOVE input: int[-38419|0xffffffffffff69ed]  <||@
  Comment 507 134 JUMP ~[] destination: B17 -> B25  <||@
  Comment 509 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 509 4  <||@
  Comment 515 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 515 5  <||@
  HexCodeFile>>> <|@
end_nmethod
